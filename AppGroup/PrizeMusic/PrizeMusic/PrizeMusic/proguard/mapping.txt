android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT -> CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
    int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION -> CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
    int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int CAPABILITY_CAN_FILTER_KEY_EVENTS -> CAPABILITY_CAN_FILTER_KEY_EVENTS
    int FEEDBACK_BRAILLE -> FEEDBACK_BRAILLE
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    int DEFAULT -> DEFAULT
    int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS -> FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
    int FLAG_REQUEST_TOUCH_EXPLORATION_MODE -> FLAG_REQUEST_TOUCH_EXPLORATION_MODE
    int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int FLAG_REPORT_VIEW_IDS -> FLAG_REPORT_VIEW_IDS
    int FLAG_REQUEST_FILTER_KEY_EVENTS -> FLAG_REQUEST_FILTER_KEY_EVENTS
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String capabilityToString(int) -> capabilityToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    float TOGGLE_DRAWABLE_OFFSET -> TOGGLE_DRAWABLE_OFFSET
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    android.graphics.drawable.Drawable mThemeImage -> mThemeImage
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    void syncState() -> syncState
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.app.Activity access$400(android.support.v4.app.ActionBarDrawerToggle) -> access$400
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    boolean mHasMirroring -> mHasMirroring
    android.graphics.Rect mTmpRect -> mTmpRect
    float mPosition -> mPosition
    float mOffset -> mOffset
    android.support.v4.app.ActionBarDrawerToggle this$0 -> this$0
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    void setOffset(float) -> setOffset
    void draw(android.graphics.Canvas) -> draw
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
android.support.v4.app.ActionBarDrawerToggleJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggleJellybeanMR2:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    android.support.v4.util.SimpleArrayMap children -> children
    java.util.ArrayList fragments -> fragments
    android.support.v4.util.SimpleArrayMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void ensureHierarchy(android.content.Context) -> ensureHierarchy
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> access$000
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.util.ArrayList mActions -> mActions
    android.app.Notification mNotification -> mNotification
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatGingerbread -> android.support.v4.app.NotificationCompatGingerbread:
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> add
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    android.app.Notification$Builder b -> b
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.app.Notification build() -> build
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.lang.Object result -> result
    boolean waiting -> waiting
    java.util.concurrent.CountDownLatch done -> done
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled() -> onCancelled
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> access$000
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    java.lang.String DIR_ANDROID -> DIR_ANDROID
    java.lang.String DIR_DATA -> DIR_DATA
    java.lang.String DIR_OBB -> DIR_OBB
    java.lang.String DIR_FILES -> DIR_FILES
    java.lang.String DIR_CACHE -> DIR_CACHE
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
android.support.v4.content.ContextCompatFroyo -> android.support.v4.content.ContextCompatFroyo:
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    java.io.File getExternalFilesDir(android.content.Context,java.lang.String) -> getExternalFilesDir
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    java.io.File getObbDir(android.content.Context) -> getObbDir
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatKitKat -> android.support.v4.content.ContextCompatKitKat:
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    android.database.Cursor loadInBackground() -> loadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> COLUMNS
    java.lang.String META_DATA_FILE_PROVIDER_PATHS -> META_DATA_FILE_PROVIDER_PATHS
    java.lang.String TAG_ROOT_PATH -> TAG_ROOT_PATH
    java.lang.String TAG_FILES_PATH -> TAG_FILES_PATH
    java.lang.String TAG_CACHE_PATH -> TAG_CACHE_PATH
    java.lang.String TAG_EXTERNAL -> TAG_EXTERNAL
    java.lang.String ATTR_NAME -> ATTR_NAME
    java.lang.String ATTR_PATH -> ATTR_PATH
    java.io.File DEVICE_ROOT -> DEVICE_ROOT
    java.util.HashMap sCache -> sCache
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> mStrategy
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    int modeToMode(java.lang.String) -> modeToMode
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$PathStrategy:
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$SimplePathStrategy:
    java.lang.String mAuthority -> mAuthority
    java.util.HashMap mRoots -> mRoots
    void addRoot(java.lang.String,java.io.File) -> addRoot
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    boolean mProcessingChange -> mProcessingChange
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void commitContentChanged() -> commitContentChanged
    void rollbackContentChanged() -> rollbackContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    void init() -> init
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> access$200
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$300
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$400
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$500
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    java.lang.String EXTRA_WAKE_LOCK_ID -> EXTRA_WAKE_LOCK_ID
    android.util.SparseArray mActiveWakeLocks -> mActiveWakeLocks
    int mNextId -> mNextId
    android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
    boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> IMPL
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableCompatHoneycomb -> android.support.v4.graphics.drawable.DrawableCompatHoneycomb:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompatKitKat -> android.support.v4.graphics.drawable.DrawableCompatKitKat:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
android.support.v4.hardware.display.DisplayManagerCompat -> android.support.v4.hardware.display.DisplayManagerCompat:
    java.util.WeakHashMap sInstances -> sInstances
    java.lang.String DISPLAY_CATEGORY_PRESENTATION -> DISPLAY_CATEGORY_PRESENTATION
    android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl -> android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl:
    java.lang.Object mDisplayManagerObj -> mDisplayManagerObj
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl -> android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl:
    android.view.WindowManager mWindowManager -> mWindowManager
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerJellybeanMr1 -> android.support.v4.hardware.display.DisplayManagerJellybeanMr1:
    java.lang.Object getDisplayManager(android.content.Context) -> getDisplayManager
    android.view.Display getDisplay(java.lang.Object,int) -> getDisplay
    android.view.Display[] getDisplays(java.lang.Object) -> getDisplays
    android.view.Display[] getDisplays(java.lang.Object,java.lang.String) -> getDisplays
android.support.v4.internal.view.SupportMenu -> android.support.v4.internal.view.SupportMenu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.internal.view.SupportMenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.internal.view.SupportSubMenu:
android.support.v4.media.TransportController -> android.support.v4.media.TransportController:
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
android.support.v4.media.TransportMediator -> android.support.v4.media.TransportMediator:
    android.content.Context mContext -> mContext
    android.support.v4.media.TransportPerformer mCallbacks -> mCallbacks
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mView -> mView
    java.lang.Object mDispatcherState -> mDispatcherState
    android.support.v4.media.TransportMediatorJellybeanMR2 mController -> mController
    java.util.ArrayList mListeners -> mListeners
    android.support.v4.media.TransportMediatorCallback mTransportKeyCallback -> mTransportKeyCallback
    int KEYCODE_MEDIA_PLAY -> KEYCODE_MEDIA_PLAY
    int KEYCODE_MEDIA_PAUSE -> KEYCODE_MEDIA_PAUSE
    int KEYCODE_MEDIA_RECORD -> KEYCODE_MEDIA_RECORD
    int FLAG_KEY_MEDIA_PREVIOUS -> FLAG_KEY_MEDIA_PREVIOUS
    int FLAG_KEY_MEDIA_REWIND -> FLAG_KEY_MEDIA_REWIND
    int FLAG_KEY_MEDIA_PLAY -> FLAG_KEY_MEDIA_PLAY
    int FLAG_KEY_MEDIA_PLAY_PAUSE -> FLAG_KEY_MEDIA_PLAY_PAUSE
    int FLAG_KEY_MEDIA_PAUSE -> FLAG_KEY_MEDIA_PAUSE
    int FLAG_KEY_MEDIA_STOP -> FLAG_KEY_MEDIA_STOP
    int FLAG_KEY_MEDIA_FAST_FORWARD -> FLAG_KEY_MEDIA_FAST_FORWARD
    int FLAG_KEY_MEDIA_NEXT -> FLAG_KEY_MEDIA_NEXT
    android.view.KeyEvent$Callback mKeyEventCallback -> mKeyEventCallback
    boolean isMediaKey(int) -> isMediaKey
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    android.support.v4.media.TransportStateListener[] getListeners() -> getListeners
    void reportPlayingChanged() -> reportPlayingChanged
    void reportTransportControlsChanged() -> reportTransportControlsChanged
    void pushControllerState() -> pushControllerState
    void refreshState() -> refreshState
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
    void destroy() -> destroy
android.support.v4.media.TransportMediator$1 -> android.support.v4.media.TransportMediator$1:
    android.support.v4.media.TransportMediator this$0 -> this$0
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediator$2 -> android.support.v4.media.TransportMediator$2:
    android.support.v4.media.TransportMediator this$0 -> this$0
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
android.support.v4.media.TransportMediatorCallback -> android.support.v4.media.TransportMediatorCallback:
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediatorJellybeanMR2 -> android.support.v4.media.TransportMediatorJellybeanMR2:
    android.content.Context mContext -> mContext
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mTargetView -> mTargetView
    android.support.v4.media.TransportMediatorCallback mTransportCallback -> mTransportCallback
    java.lang.String mReceiverAction -> mReceiverAction
    android.content.IntentFilter mReceiverFilter -> mReceiverFilter
    android.content.Intent mIntent -> mIntent
    android.view.ViewTreeObserver$OnWindowAttachListener mWindowAttachListener -> mWindowAttachListener
    android.view.ViewTreeObserver$OnWindowFocusChangeListener mWindowFocusListener -> mWindowFocusListener
    android.content.BroadcastReceiver mMediaButtonReceiver -> mMediaButtonReceiver
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusChangeListener -> mAudioFocusChangeListener
    android.app.PendingIntent mPendingIntent -> mPendingIntent
    android.media.RemoteControlClient mRemoteControl -> mRemoteControl
    boolean mFocused -> mFocused
    int mPlayState -> mPlayState
    boolean mAudioFocused -> mAudioFocused
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    void destroy() -> destroy
    void windowAttached() -> windowAttached
    void gainFocus() -> gainFocus
    void takeAudioFocus() -> takeAudioFocus
    void startPlaying() -> startPlaying
    long onGetPlaybackPosition() -> onGetPlaybackPosition
    void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
    void refreshState(boolean,long,int) -> refreshState
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    void dropAudioFocus() -> dropAudioFocus
    void loseFocus() -> loseFocus
    void windowDetached() -> windowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$1 -> android.support.v4.media.TransportMediatorJellybeanMR2$1:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowAttached() -> onWindowAttached
    void onWindowDetached() -> onWindowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$2 -> android.support.v4.media.TransportMediatorJellybeanMR2$2:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
android.support.v4.media.TransportMediatorJellybeanMR2$3 -> android.support.v4.media.TransportMediatorJellybeanMR2$3:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.media.TransportMediatorJellybeanMR2$4 -> android.support.v4.media.TransportMediatorJellybeanMR2$4:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportPerformer -> android.support.v4.media.TransportPerformer:
    int AUDIOFOCUS_GAIN -> AUDIOFOCUS_GAIN
    int AUDIOFOCUS_GAIN_TRANSIENT -> AUDIOFOCUS_GAIN_TRANSIENT
    int AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK -> AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK
    int AUDIOFOCUS_LOSS -> AUDIOFOCUS_LOSS
    int AUDIOFOCUS_LOSS_TRANSIENT -> AUDIOFOCUS_LOSS_TRANSIENT
    int AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK -> AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK
    void onStart() -> onStart
    void onPause() -> onPause
    void onStop() -> onStop
    long onGetDuration() -> onGetDuration
    long onGetCurrentPosition() -> onGetCurrentPosition
    void onSeekTo(long) -> onSeekTo
    boolean onIsPlaying() -> onIsPlaying
    int onGetBufferPercentage() -> onGetBufferPercentage
    int onGetTransportControlFlags() -> onGetTransportControlFlags
    boolean onMediaButtonDown(int,android.view.KeyEvent) -> onMediaButtonDown
    boolean onMediaButtonUp(int,android.view.KeyEvent) -> onMediaButtonUp
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportStateListener -> android.support.v4.media.TransportStateListener:
    void onPlayingChanged(android.support.v4.media.TransportController) -> onPlayingChanged
    void onTransportControlsChanged(android.support.v4.media.TransportController) -> onTransportControlsChanged
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> mThreadSocketTags
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> this$0
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> statsTag
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.EnvironmentCompat -> android.support.v4.os.EnvironmentCompat:
    java.lang.String TAG -> TAG
    java.lang.String MEDIA_UNKNOWN -> MEDIA_UNKNOWN
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.EnvironmentCompatKitKat -> android.support.v4.os.EnvironmentCompatKitKat:
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
android.support.v4.print.PrintHelper -> android.support.v4.print.PrintHelper:
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    android.support.v4.print.PrintHelper$PrintHelperVersionImpl mImpl -> mImpl
    boolean systemSupportsPrint() -> systemSupportsPrint
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$1 -> android.support.v4.print.PrintHelper$1:
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl:
    android.support.v4.print.PrintHelperKitkat mPrintHelper -> mPrintHelper
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperStubImpl -> android.support.v4.print.PrintHelper$PrintHelperStubImpl:
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getColorMode() -> getColorMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getScaleMode() -> getScaleMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperVersionImpl -> android.support.v4.print.PrintHelper$PrintHelperVersionImpl:
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
android.support.v4.print.PrintHelperKitkat -> android.support.v4.print.PrintHelperKitkat:
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_PRINT_SIZE -> MAX_PRINT_SIZE
    android.content.Context mContext -> mContext
    android.graphics.BitmapFactory$Options mDecodeOptions -> mDecodeOptions
    java.lang.Object mLock -> mLock
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getColorMode() -> getColorMode
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    android.graphics.Matrix getMatrix(int,int,android.graphics.RectF,int) -> getMatrix
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
    android.graphics.Bitmap loadConstrainedBitmap(android.net.Uri,int) -> loadConstrainedBitmap
    android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options) -> loadBitmap
    android.graphics.Matrix access$000(android.support.v4.print.PrintHelperKitkat,int,int,android.graphics.RectF,int) -> access$000
    android.graphics.Bitmap access$200(android.support.v4.print.PrintHelperKitkat,android.net.Uri,int) -> access$200
    java.lang.Object access$300(android.support.v4.print.PrintHelperKitkat) -> access$300
android.support.v4.print.PrintHelperKitkat$1 -> android.support.v4.print.PrintHelperKitkat$1:
    android.print.PrintAttributes mAttributes -> mAttributes
    java.lang.String val$jobName -> val$jobName
    android.graphics.Bitmap val$bitmap -> val$bitmap
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
android.support.v4.print.PrintHelperKitkat$2 -> android.support.v4.print.PrintHelperKitkat$2:
    android.print.PrintAttributes mAttributes -> mAttributes
    android.os.AsyncTask loadBitmap -> loadBitmap
    android.graphics.Bitmap mBitmap -> mBitmap
    java.lang.String val$jobName -> val$jobName
    android.net.Uri val$imageFile -> val$imageFile
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void cancelLoad() -> cancelLoad
    void onFinish() -> onFinish
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
    void access$100(android.support.v4.print.PrintHelperKitkat$2) -> access$100
android.support.v4.print.PrintHelperKitkat$2$1 -> android.support.v4.print.PrintHelperKitkat$2$1:
    android.os.CancellationSignal val$cancellationSignal -> val$cancellationSignal
    android.print.PrintAttributes val$newPrintAttributes -> val$newPrintAttributes
    android.print.PrintAttributes val$oldPrintAttributes -> val$oldPrintAttributes
    android.print.PrintDocumentAdapter$LayoutResultCallback val$layoutResultCallback -> val$layoutResultCallback
    android.support.v4.print.PrintHelperKitkat$2 this$1 -> this$1
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground(android.net.Uri[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onCancelled(android.graphics.Bitmap) -> onCancelled
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v4.print.PrintHelperKitkat$2$1$1 -> android.support.v4.print.PrintHelperKitkat$2$1$1:
    android.support.v4.print.PrintHelperKitkat$2$1 this$2 -> this$2
    void onCancel() -> onCancel
android.support.v4.text.BidiFormatter -> android.support.v4.text.BidiFormatter:
    android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> DEFAULT_TEXT_DIRECTION_HEURISTIC
    char LRE -> LRE
    char RLE -> RLE
    char PDF -> PDF
    char LRM -> LRM
    char RLM -> RLM
    java.lang.String LRM_STRING -> LRM_STRING
    java.lang.String RLM_STRING -> RLM_STRING
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    int FLAG_STEREO_RESET -> FLAG_STEREO_RESET
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE -> DEFAULT_LTR_INSTANCE
    android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE -> DEFAULT_RTL_INSTANCE
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> mDefaultTextDirectionHeuristicCompat
    int DIR_LTR -> DIR_LTR
    int DIR_UNKNOWN -> DIR_UNKNOWN
    int DIR_RTL -> DIR_RTL
    android.support.v4.text.BidiFormatter getInstance() -> getInstance
    android.support.v4.text.BidiFormatter getInstance(boolean) -> getInstance
    android.support.v4.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    boolean isRtlContext() -> isRtlContext
    boolean getStereoReset() -> getStereoReset
    java.lang.String markAfter(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markAfter
    java.lang.String markBefore(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markBefore
    boolean isRtl(java.lang.String) -> isRtl
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    int getExitDir(java.lang.String) -> getExitDir
    int getEntryDir(java.lang.String) -> getEntryDir
    boolean access$000(java.util.Locale) -> access$000
    android.support.v4.text.TextDirectionHeuristicCompat access$100() -> access$100
    android.support.v4.text.BidiFormatter access$200() -> access$200
    android.support.v4.text.BidiFormatter access$300() -> access$300
android.support.v4.text.BidiFormatter$1 -> android.support.v4.text.BidiFormatter$1:
android.support.v4.text.BidiFormatter$Builder -> android.support.v4.text.BidiFormatter$Builder:
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> mTextDirectionHeuristicCompat
    void initialize(boolean) -> initialize
    android.support.v4.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
    android.support.v4.text.BidiFormatter$Builder setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    android.support.v4.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    android.support.v4.text.BidiFormatter build() -> build
android.support.v4.text.BidiFormatter$DirectionalityEstimator -> android.support.v4.text.BidiFormatter$DirectionalityEstimator:
    int DIR_TYPE_CACHE_SIZE -> DIR_TYPE_CACHE_SIZE
    byte[] DIR_TYPE_CACHE -> DIR_TYPE_CACHE
    java.lang.String text -> text
    boolean isHtml -> isHtml
    int length -> length
    int charIndex -> charIndex
    char lastChar -> lastChar
    int getEntryDir() -> getEntryDir
    int getExitDir() -> getExitDir
    byte getCachedDirectionality(char) -> getCachedDirectionality
    byte dirTypeForward() -> dirTypeForward
    byte dirTypeBackward() -> dirTypeBackward
    byte skipTagForward() -> skipTagForward
    byte skipTagBackward() -> skipTagBackward
    byte skipEntityForward() -> skipEntityForward
    byte skipEntityBackward() -> skipEntityBackward
android.support.v4.text.ICUCompat -> android.support.v4.text.ICUCompat:
    android.support.v4.text.ICUCompat$ICUCompatImpl IMPL -> IMPL
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImpl -> android.support.v4.text.ICUCompat$ICUCompatImpl:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplBase -> android.support.v4.text.ICUCompat$ICUCompatImplBase:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImplIcs -> android.support.v4.text.ICUCompat$ICUCompatImplIcs:
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompatIcs -> android.support.v4.text.ICUCompatIcs:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sGetScriptMethod -> sGetScriptMethod
    java.lang.reflect.Method sAddLikelySubtagsMethod -> sAddLikelySubtagsMethod
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.TextDirectionHeuristicCompat -> android.support.v4.text.TextDirectionHeuristicCompat:
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat -> android.support.v4.text.TextDirectionHeuristicsCompat:
    android.support.v4.text.TextDirectionHeuristicCompat LTR -> LTR
    android.support.v4.text.TextDirectionHeuristicCompat RTL -> RTL
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> FIRSTSTRONG_LTR
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> FIRSTSTRONG_RTL
    android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR -> ANYRTL_LTR
    android.support.v4.text.TextDirectionHeuristicCompat LOCALE -> LOCALE
    int STATE_TRUE -> STATE_TRUE
    int STATE_FALSE -> STATE_FALSE
    int STATE_UNKNOWN -> STATE_UNKNOWN
    int isRtlText(int) -> isRtlText
    int isRtlTextOrFormat(int) -> isRtlTextOrFormat
    int access$100(int) -> access$100
    int access$200(int) -> access$200
android.support.v4.text.TextDirectionHeuristicsCompat$1 -> android.support.v4.text.TextDirectionHeuristicsCompat$1:
android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong:
    boolean mLookForRtl -> mLookForRtl
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> INSTANCE_RTL
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR -> INSTANCE_LTR
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong:
    android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> INSTANCE
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm:
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> mAlgorithm
    boolean defaultIsRtl() -> defaultIsRtl
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
    boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    boolean mDefaultIsRtl -> mDefaultIsRtl
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> INSTANCE
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextUtilsCompat -> android.support.v4.text.TextUtilsCompat:
    java.util.Locale ROOT -> ROOT
    java.lang.String ARAB_SCRIPT_SUBTAG -> ARAB_SCRIPT_SUBTAG
    java.lang.String HEBR_SCRIPT_SUBTAG -> HEBR_SCRIPT_SUBTAG
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    android.support.v4.util.MapCollections mCollections -> mCollections
    android.support.v4.util.MapCollections getCollection() -> getCollection
    boolean containsAll(java.util.Collection) -> containsAll
    void putAll(java.util.Map) -> putAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.ArrayMap$1:
    android.support.v4.util.ArrayMap this$0 -> this$0
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> sync
android.support.v4.util.ContainerHelpers -> android.support.v4.util.ContainerHelpers:
    int[] EMPTY_INTS -> EMPTY_INTS
    long[] EMPTY_LONGS -> EMPTY_LONGS
    java.lang.Object[] EMPTY_OBJECTS -> EMPTY_OBJECTS
    int idealIntArraySize(int) -> idealIntArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    int idealByteArraySize(int) -> idealByteArraySize
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int binarySearch(int[],int,int) -> binarySearch
    int binarySearch(long[],int,long) -> binarySearch
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.util.MapCollections:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> mEntrySet
    android.support.v4.util.MapCollections$KeySet mKeySet -> mKeySet
    android.support.v4.util.MapCollections$ValuesCollection mValues -> mValues
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    java.util.Set getEntrySet() -> getEntrySet
    java.util.Set getKeySet() -> getKeySet
    java.util.Collection getValues() -> getValues
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.MapCollections$ArrayIterator:
    int mOffset -> mOffset
    int mSize -> mSize
    int mIndex -> mIndex
    boolean mCanRemove -> mCanRemove
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.MapCollections$EntrySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.util.Map$Entry) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.MapCollections$KeySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.MapCollections$MapIterator:
    int mEnd -> mEnd
    int mIndex -> mIndex
    boolean mEntryValid -> mEntryValid
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.MapCollections$ValuesCollection:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    int BASE_SIZE -> BASE_SIZE
    int CACHE_SIZE -> CACHE_SIZE
    java.lang.Object[] mBaseCache -> mBaseCache
    int mBaseCacheSize -> mBaseCacheSize
    java.lang.Object[] mTwiceBaseCache -> mTwiceBaseCache
    int mTwiceBaseCacheSize -> mTwiceBaseCacheSize
    int[] mHashes -> mHashes
    java.lang.Object[] mArray -> mArray
    int mSize -> mSize
    int indexOf(java.lang.Object,int) -> indexOf
    int indexOfNull() -> indexOfNull
    void allocArrays(int) -> allocArrays
    void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    void clear() -> clear
    void ensureCapacity(int) -> ensureCapacity
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(android.support.v4.util.SimpleArrayMap) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> removeAt
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.SparseArrayCompat clone() -> clone
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> mBridge
    java.lang.Object getBridge() -> getBridge
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> mSubUiVisibilityListener
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> mVisibilityListener
    android.content.Context getContext() -> getContext
    android.view.View onCreateActionView() -> onCreateActionView
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.ActionProvider$VisibilityListener:
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> mTouchSlopSquare
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int SHOW_PRESS -> SHOW_PRESS
    int LONG_PRESS -> LONG_PRESS
    int TAP -> TAP
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    boolean mStillDown -> mStillDown
    boolean mDeferConfirmSingleTap -> mDeferConfirmSingleTap
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mIsDoubleTapping -> mIsDoubleTapping
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void init(android.content.Context) -> init
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancel() -> cancel
    void cancelTaps() -> cancelTaps
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    void dispatchLongPress() -> dispatchLongPress
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$000
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$100
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$200
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$300
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$400
    boolean access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> access$502
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    android.view.GestureDetector mDetector -> mDetector
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> IMPL
    int RELATIVE_LAYOUT_DIRECTION -> RELATIVE_LAYOUT_DIRECTION
    int START -> START
    int END -> END
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> RELATIVE_HORIZONTAL_GRAVITY_MASK
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.GravityCompat$GravityCompatImpl:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.GravityCompat$GravityCompatImplBase:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.GravityCompatJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    int META_ALL_MASK -> META_ALL_MASK
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl:
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.KeyEventCompatEclair:
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl IMPL -> IMPL
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 -> android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    java.lang.String TAG -> TAG
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1 -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1:
    android.support.v4.view.MenuItemCompat$OnActionExpandListener val$listener -> val$listener
    android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl this$0 -> this$0
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.MenuItemCompat$OnActionExpandListener:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
android.support.v4.view.MenuItemCompatIcs -> android.support.v4.view.MenuItemCompatIcs:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper -> android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper:
    android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy mWrapped -> mWrapped
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy -> android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> updateTextPositions
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> mTextColor
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> access$100
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.lang.String TAG -> TAG
    java.util.Locale mLocale -> mLocale
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.ScaleGestureDetectorCompat -> android.support.v4.view.ScaleGestureDetectorCompat:
    android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl IMPL -> IMPL
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$1 -> android.support.v4.view.ScaleGestureDetectorCompat$1:
android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompatKitKat -> android.support.v4.view.ScaleGestureDetectorCompatKitKat:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS -> IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    int ACCESSIBILITY_LIVE_REGION_NONE -> ACCESSIBILITY_LIVE_REGION_NONE
    int ACCESSIBILITY_LIVE_REGION_POLITE -> ACCESSIBILITY_LIVE_REGION_POLITE
    int ACCESSIBILITY_LIVE_REGION_ASSERTIVE -> ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int LAYOUT_DIRECTION_LTR -> LAYOUT_DIRECTION_LTR
    int LAYOUT_DIRECTION_RTL -> LAYOUT_DIRECTION_RTL
    int LAYOUT_DIRECTION_INHERIT -> LAYOUT_DIRECTION_INHERIT
    int LAYOUT_DIRECTION_LOCALE -> LAYOUT_DIRECTION_LOCALE
    int MEASURED_SIZE_MASK -> MEASURED_SIZE_MASK
    int MEASURED_STATE_MASK -> MEASURED_STATE_MASK
    int MEASURED_HEIGHT_STATE_SHIFT -> MEASURED_HEIGHT_STATE_SHIFT
    int MEASURED_STATE_TOO_SMALL -> MEASURED_STATE_TOO_SMALL
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> getFrameTime
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl:
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.ViewCompat$KitKatViewCompatImpl:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ViewCompatEclairMr1:
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
android.support.v4.view.ViewCompatKitKat -> android.support.v4.view.ViewCompatKitKat:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    int LAYOUT_MODE_CLIP_BOUNDS -> LAYOUT_MODE_CLIP_BOUNDS
    int LAYOUT_MODE_OPTICAL_BOUNDS -> LAYOUT_MODE_OPTICAL_BOUNDS
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.ViewGroupCompatHC:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompatJellybeanMR2 -> android.support.v4.view.ViewGroupCompatJellybeanMR2:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mExpectedAdapterCount -> mExpectedAdapterCount
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    boolean mIgnoreGutter -> mIgnoreGutter
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void initViewPager() -> initViewPager
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    void populate(int) -> populate
    void sortChildDrawingOrder() -> sortChildDrawingOrder
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> access$000
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> access$200
    int access$300(android.support.v4.view.ViewPager) -> access$300
    int[] access$400() -> access$400
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    float offset -> offset
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> widthFactor
    boolean needsMeasure -> needsMeasure
    int position -> position
    int childIndex -> childIndex
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    boolean canScroll() -> canScroll
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> IMPL
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompatICS -> android.support.v4.view.ViewParentCompatICS:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.WindowCompat -> android.support.v4.view.WindowCompat:
    int FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    int FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    int FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> this$0
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    int ACTION_COPY -> ACTION_COPY
    int ACTION_PASTE -> ACTION_PASTE
    int ACTION_CUT -> ACTION_CUT
    int ACTION_SET_SELECTION -> ACTION_SET_SELECTION
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN -> ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    java.lang.String ACTION_ARGUMENT_SELECTION_START_INT -> ACTION_ARGUMENT_SELECTION_START_INT
    java.lang.String ACTION_ARGUMENT_SELECTION_END_INT -> ACTION_ARGUMENT_SELECTION_END_INT
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName() -> getViewIdResourceName
    int getLiveRegion() -> getLiveRegion
    void setLiveRegion(int) -> setLiveRegion
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl:
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2:
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.AutoScrollHelper:
    float RELATIVE_UNSPECIFIED -> RELATIVE_UNSPECIFIED
    float NO_MAX -> NO_MAX
    float NO_MIN -> NO_MIN
    int EDGE_TYPE_INSIDE -> EDGE_TYPE_INSIDE
    int EDGE_TYPE_INSIDE_EXTEND -> EDGE_TYPE_INSIDE_EXTEND
    int EDGE_TYPE_OUTSIDE -> EDGE_TYPE_OUTSIDE
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> mScroller
    android.view.animation.Interpolator mEdgeInterpolator -> mEdgeInterpolator
    android.view.View mTarget -> mTarget
    java.lang.Runnable mRunnable -> mRunnable
    float[] mRelativeEdges -> mRelativeEdges
    float[] mMaximumEdges -> mMaximumEdges
    int mEdgeType -> mEdgeType
    int mActivationDelay -> mActivationDelay
    float[] mRelativeVelocity -> mRelativeVelocity
    float[] mMinimumVelocity -> mMinimumVelocity
    float[] mMaximumVelocity -> mMaximumVelocity
    boolean mAlreadyDelayed -> mAlreadyDelayed
    boolean mNeedsReset -> mNeedsReset
    boolean mNeedsCancel -> mNeedsCancel
    boolean mAnimating -> mAnimating
    boolean mEnabled -> mEnabled
    boolean mExclusive -> mExclusive
    int DEFAULT_EDGE_TYPE -> DEFAULT_EDGE_TYPE
    int DEFAULT_MINIMUM_VELOCITY_DIPS -> DEFAULT_MINIMUM_VELOCITY_DIPS
    int DEFAULT_MAXIMUM_VELOCITY_DIPS -> DEFAULT_MAXIMUM_VELOCITY_DIPS
    float DEFAULT_MAXIMUM_EDGE -> DEFAULT_MAXIMUM_EDGE
    float DEFAULT_RELATIVE_EDGE -> DEFAULT_RELATIVE_EDGE
    float DEFAULT_RELATIVE_VELOCITY -> DEFAULT_RELATIVE_VELOCITY
    int DEFAULT_ACTIVATION_DELAY -> DEFAULT_ACTIVATION_DELAY
    int DEFAULT_RAMP_UP_DURATION -> DEFAULT_RAMP_UP_DURATION
    int DEFAULT_RAMP_DOWN_DURATION -> DEFAULT_RAMP_DOWN_DURATION
    android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    android.support.v4.widget.AutoScrollHelper setExclusive(boolean) -> setExclusive
    boolean isExclusive() -> isExclusive
    android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean shouldAnimate() -> shouldAnimate
    void startAnimating() -> startAnimating
    void requestStop() -> requestStop
    float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    float getEdgeValue(float,float,float,float) -> getEdgeValue
    float constrainEdgeValue(float,float) -> constrainEdgeValue
    int constrain(int,int,int) -> constrain
    float constrain(float,float,float) -> constrain
    void cancelTargetTouch() -> cancelTargetTouch
    boolean access$100(android.support.v4.widget.AutoScrollHelper) -> access$100
    boolean access$200(android.support.v4.widget.AutoScrollHelper) -> access$200
    boolean access$202(android.support.v4.widget.AutoScrollHelper,boolean) -> access$202
    android.support.v4.widget.AutoScrollHelper$ClampedScroller access$300(android.support.v4.widget.AutoScrollHelper) -> access$300
    boolean access$400(android.support.v4.widget.AutoScrollHelper) -> access$400
    boolean access$102(android.support.v4.widget.AutoScrollHelper,boolean) -> access$102
    boolean access$500(android.support.v4.widget.AutoScrollHelper) -> access$500
    boolean access$502(android.support.v4.widget.AutoScrollHelper,boolean) -> access$502
    void access$600(android.support.v4.widget.AutoScrollHelper) -> access$600
    android.view.View access$700(android.support.v4.widget.AutoScrollHelper) -> access$700
    int access$800(int,int,int) -> access$800
    float access$900(float,float,float) -> access$900
android.support.v4.widget.AutoScrollHelper$1 -> android.support.v4.widget.AutoScrollHelper$1:
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.AutoScrollHelper$ClampedScroller:
    int mRampUpDuration -> mRampUpDuration
    int mRampDownDuration -> mRampDownDuration
    float mTargetVelocityX -> mTargetVelocityX
    float mTargetVelocityY -> mTargetVelocityY
    long mStartTime -> mStartTime
    long mDeltaTime -> mDeltaTime
    int mDeltaX -> mDeltaX
    int mDeltaY -> mDeltaY
    long mStopTime -> mStopTime
    float mStopValue -> mStopValue
    int mEffectiveRampDown -> mEffectiveRampDown
    void setRampUpDuration(int) -> setRampUpDuration
    void setRampDownDuration(int) -> setRampDownDuration
    void start() -> start
    void requestStop() -> requestStop
    boolean isFinished() -> isFinished
    float getValueAt(long) -> getValueAt
    float interpolateValue(float) -> interpolateValue
    void computeScrollDelta() -> computeScrollDelta
    void setTargetVelocity(float,float) -> setTargetVelocity
    int getHorizontalDirection() -> getHorizontalDirection
    int getVerticalDirection() -> getVerticalDirection
    int getDeltaX() -> getDeltaX
    int getDeltaY() -> getDeltaY
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable:
    android.support.v4.widget.AutoScrollHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.BakedBezierInterpolator -> android.support.v4.widget.BakedBezierInterpolator:
    android.support.v4.widget.BakedBezierInterpolator INSTANCE -> INSTANCE
    float[] VALUES -> VALUES
    float STEP_SIZE -> STEP_SIZE
    android.support.v4.widget.BakedBezierInterpolator getInstance() -> getInstance
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    int MIN_SHOW_TIME -> MIN_SHOW_TIME
    int MIN_DELAY -> MIN_DELAY
    long mStartTime -> mStartTime
    boolean mPostedHide -> mPostedHide
    boolean mPostedShow -> mPostedShow
    boolean mDismissed -> mDismissed
    java.lang.Runnable mDelayedHide -> mDelayedHide
    java.lang.Runnable mDelayedShow -> mDelayedShow
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> removeCallbacks
    void hide() -> hide
    void show() -> show
    boolean access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$002
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> access$102
    boolean access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$202
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> access$300
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.ContentLoadingProgressBar$1:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.ContentLoadingProgressBar$2:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    java.lang.String TAG -> TAG
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int LOCK_MODE_UNLOCKED -> LOCK_MODE_UNLOCKED
    int LOCK_MODE_LOCKED_CLOSED -> LOCK_MODE_LOCKED_CLOSED
    int LOCK_MODE_LOCKED_OPEN -> LOCK_MODE_LOCKED_OPEN
    int MIN_DRAWER_MARGIN -> MIN_DRAWER_MARGIN
    int DEFAULT_SCRIM_COLOR -> DEFAULT_SCRIM_COLOR
    int PEEK_DELAY -> PEEK_DELAY
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    boolean ALLOW_EDGE_LOCK -> ALLOW_EDGE_LOCK
    boolean CHILDREN_DISALLOW_INTERCEPT -> CHILDREN_DISALLOW_INTERCEPT
    float TOUCH_SLOP_SENSITIVITY -> TOUCH_SLOP_SENSITIVITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mMinDrawerMargin -> mMinDrawerMargin
    int mScrimColor -> mScrimColor
    float mScrimOpacity -> mScrimOpacity
    android.graphics.Paint mScrimPaint -> mScrimPaint
    android.support.v4.widget.ViewDragHelper mLeftDragger -> mLeftDragger
    android.support.v4.widget.ViewDragHelper mRightDragger -> mRightDragger
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> mLeftCallback
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> mRightCallback
    int mDrawerState -> mDrawerState
    boolean mInLayout -> mInLayout
    boolean mFirstLayout -> mFirstLayout
    int mLockModeLeft -> mLockModeLeft
    int mLockModeRight -> mLockModeRight
    boolean mDisallowInterceptRequested -> mDisallowInterceptRequested
    boolean mChildrenCanceledTouch -> mChildrenCanceledTouch
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> mListener
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.graphics.drawable.Drawable mShadowLeft -> mShadowLeft
    android.graphics.drawable.Drawable mShadowRight -> mShadowRight
    java.lang.CharSequence mTitleLeft -> mTitleLeft
    java.lang.CharSequence mTitleRight -> mTitleRight
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(int) -> getDrawerLockMode
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    void updateDrawerState(int,int,android.view.View) -> updateDrawerState
    void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    android.view.View findOpenDrawer() -> findOpenDrawer
    void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    java.lang.String gravityToString(int) -> gravityToString
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> isContentView
    boolean isDrawerView(android.view.View) -> isDrawerView
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> closeDrawers
    void closeDrawers(boolean) -> closeDrawers
    void openDrawer(android.view.View) -> openDrawer
    void openDrawer(int) -> openDrawer
    void closeDrawer(android.view.View) -> closeDrawer
    void closeDrawer(int) -> closeDrawer
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    boolean isDrawerOpen(int) -> isDrawerOpen
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    boolean isDrawerVisible(int) -> isDrawerVisible
    boolean hasPeekingDrawer() -> hasPeekingDrawer
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> hasVisibleDrawer
    android.view.View findVisibleDrawer() -> findVisibleDrawer
    void cancelChildViewTouch() -> cancelChildViewTouch
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> access$100
    android.view.View access$200(android.support.v4.widget.DrawerLayout) -> access$200
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> gravity
    float onScreen -> onScreen
    boolean isPeeking -> isPeeking
    boolean knownOpen -> knownOpen
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> openDrawerGravity
    int lockModeLeft -> lockModeLeft
    int lockModeRight -> lockModeRight
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$ViewDragCallback:
    int mAbsGravity -> mAbsGravity
    android.support.v4.widget.ViewDragHelper mDragger -> mDragger
    java.lang.Runnable mPeekRunnable -> mPeekRunnable
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void setDragger(android.support.v4.widget.ViewDragHelper) -> setDragger
    void removeCallbacks() -> removeCallbacks
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void closeOtherDrawer() -> closeOtherDrawer
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    void peekDrawer() -> peekDrawer
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> access$000
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.DrawerLayout$ViewDragCallback$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> this$1
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.ExploreByTouchHelper -> android.support.v4.widget.ExploreByTouchHelper:
    int INVALID_ID -> INVALID_ID
    java.lang.String DEFAULT_CLASS_NAME -> DEFAULT_CLASS_NAME
    android.graphics.Rect mTempScreenRect -> mTempScreenRect
    android.graphics.Rect mTempParentRect -> mTempParentRect
    android.graphics.Rect mTempVisibleRect -> mTempVisibleRect
    int[] mTempGlobalRect -> mTempGlobalRect
    android.view.accessibility.AccessibilityManager mManager -> mManager
    android.view.View mView -> mView
    android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider mNodeProvider -> mNodeProvider
    int mFocusedVirtualViewId -> mFocusedVirtualViewId
    int mHoveredVirtualViewId -> mHoveredVirtualViewId
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    void invalidateRoot() -> invalidateRoot
    void invalidateVirtualView(int) -> invalidateVirtualView
    int getFocusedVirtualView() -> getFocusedVirtualView
    void updateHoveredVirtualView(int) -> updateHoveredVirtualView
    android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNode(int) -> createNode
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    boolean performAction(int,int,android.os.Bundle) -> performAction
    boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    boolean manageFocusForChild(int,int,android.os.Bundle) -> manageFocusForChild
    boolean intersectVisibleToUser(android.graphics.Rect) -> intersectVisibleToUser
    boolean isAccessibilityFocused(int) -> isAccessibilityFocused
    boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    int getVirtualViewAt(float,float) -> getVirtualViewAt
    void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    void onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat access$100(android.support.v4.widget.ExploreByTouchHelper,int) -> access$100
    boolean access$200(android.support.v4.widget.ExploreByTouchHelper,int,int,android.os.Bundle) -> access$200
android.support.v4.widget.ExploreByTouchHelper$1 -> android.support.v4.widget.ExploreByTouchHelper$1:
android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider -> android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider:
    android.support.v4.widget.ExploreByTouchHelper this$0 -> this$0
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.widget.ListPopupWindowCompat -> android.support.v4.widget.ListPopupWindowCompat:
    android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl IMPL -> IMPL
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompatKitKat -> android.support.v4.widget.ListPopupWindowCompatKitKat:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.ListViewAutoScrollHelper:
    android.widget.ListView mTarget -> mTarget
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
android.support.v4.widget.PopupMenuCompat -> android.support.v4.widget.PopupMenuCompat:
    android.support.v4.widget.PopupMenuCompat$PopupMenuImpl IMPL -> IMPL
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$PopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$PopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompatKitKat -> android.support.v4.widget.PopupMenuCompatKitKat:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    java.lang.Object mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> IMPL
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
    void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled() -> isOverScrolled
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.ScrollerCompatGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> access$000
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.SearchViewCompatHoneycomb$2:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> val$listener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge:
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    java.lang.String TAG -> TAG
    int DEFAULT_OVERHANG_SIZE -> DEFAULT_OVERHANG_SIZE
    int DEFAULT_FADE_COLOR -> DEFAULT_FADE_COLOR
    int mSliderFadeColor -> mSliderFadeColor
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int mCoveredFadeColor -> mCoveredFadeColor
    android.graphics.drawable.Drawable mShadowDrawable -> mShadowDrawable
    int mOverhangSize -> mOverhangSize
    boolean mCanSlide -> mCanSlide
    android.view.View mSlideableView -> mSlideableView
    float mSlideOffset -> mSlideOffset
    float mParallaxOffset -> mParallaxOffset
    int mSlideRange -> mSlideRange
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mParallaxBy -> mParallaxBy
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> mPanelSlideListener
    android.support.v4.widget.ViewDragHelper mDragHelper -> mDragHelper
    boolean mPreservedOpenState -> mPreservedOpenState
    boolean mFirstLayout -> mFirstLayout
    android.graphics.Rect mTmpRect -> mTmpRect
    java.util.ArrayList mPostedRunnables -> mPostedRunnables
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> IMPL
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    void setAllChildrenVisible() -> setAllChildrenVisible
    boolean viewIsOpaque(android.view.View) -> viewIsOpaque
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> closePane
    boolean openPane(android.view.View,int) -> openPane
    void smoothSlideOpen() -> smoothSlideOpen
    boolean openPane() -> openPane
    void smoothSlideClosed() -> smoothSlideClosed
    boolean closePane() -> closePane
    boolean isOpen() -> isOpen
    boolean canSlide() -> canSlide
    boolean isSlideable() -> isSlideable
    void onPanelDragged(int) -> onPanelDragged
    void dimChildView(android.view.View,float,int) -> dimChildView
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    boolean smoothSlideTo(float,int) -> smoothSlideTo
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> parallaxOtherViews
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean isDimmed(android.view.View) -> isDimmed
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> access$100
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> access$200
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> access$300
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> access$400
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> access$502
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> access$600
    int access$700(android.support.v4.widget.SlidingPaneLayout) -> access$700
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> access$900
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> access$1000
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.SlidingPaneLayout$1:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable:
    android.view.View mChildView -> mChildView
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$DragHelperCallback:
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> ATTRS
    float weight -> weight
    boolean slideable -> slideable
    boolean dimWhenOffset -> dimWhenOffset
    android.graphics.Paint dimPaint -> dimPaint
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> isOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB:
    java.lang.reflect.Method mGetDisplayList -> mGetDisplayList
    java.lang.reflect.Field mRecreateDisplayList -> mRecreateDisplayList
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SwipeProgressBar -> android.support.v4.widget.SwipeProgressBar:
    int COLOR1 -> COLOR1
    int COLOR2 -> COLOR2
    int COLOR3 -> COLOR3
    int COLOR4 -> COLOR4
    int ANIMATION_DURATION_MS -> ANIMATION_DURATION_MS
    int FINISH_ANIMATION_DURATION_MS -> FINISH_ANIMATION_DURATION_MS
    android.view.animation.Interpolator INTERPOLATOR -> INTERPOLATOR
    android.graphics.Paint mPaint -> mPaint
    android.graphics.RectF mClipRect -> mClipRect
    float mTriggerPercentage -> mTriggerPercentage
    long mStartTime -> mStartTime
    long mFinishTime -> mFinishTime
    boolean mRunning -> mRunning
    int mColor1 -> mColor1
    int mColor2 -> mColor2
    int mColor3 -> mColor3
    int mColor4 -> mColor4
    android.view.View mParent -> mParent
    android.graphics.Rect mBounds -> mBounds
    void setColorScheme(int,int,int,int) -> setColorScheme
    void setTriggerPercentage(float) -> setTriggerPercentage
    void start() -> start
    void stop() -> stop
    boolean isRunning() -> isRunning
    void draw(android.graphics.Canvas) -> draw
    void drawTrigger(android.graphics.Canvas,int,int) -> drawTrigger
    void drawCircle(android.graphics.Canvas,float,float,int,float) -> drawCircle
    void setBounds(int,int,int,int) -> setBounds
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    long RETURN_TO_ORIGINAL_POSITION_TIMEOUT -> RETURN_TO_ORIGINAL_POSITION_TIMEOUT
    float ACCELERATE_INTERPOLATION_FACTOR -> ACCELERATE_INTERPOLATION_FACTOR
    float DECELERATE_INTERPOLATION_FACTOR -> DECELERATE_INTERPOLATION_FACTOR
    float PROGRESS_BAR_HEIGHT -> PROGRESS_BAR_HEIGHT
    float MAX_SWIPE_DISTANCE_FACTOR -> MAX_SWIPE_DISTANCE_FACTOR
    int REFRESH_TRIGGER_DISTANCE -> REFRESH_TRIGGER_DISTANCE
    android.support.v4.widget.SwipeProgressBar mProgressBar -> mProgressBar
    android.view.View mTarget -> mTarget
    int mOriginalOffsetTop -> mOriginalOffsetTop
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener -> mListener
    android.view.MotionEvent mDownEvent -> mDownEvent
    int mFrom -> mFrom
    boolean mRefreshing -> mRefreshing
    int mTouchSlop -> mTouchSlop
    float mDistanceToTriggerSync -> mDistanceToTriggerSync
    float mPrevY -> mPrevY
    int mMediumAnimationDuration -> mMediumAnimationDuration
    float mFromPercentage -> mFromPercentage
    float mCurrPercentage -> mCurrPercentage
    int mProgressBarHeight -> mProgressBarHeight
    int mCurrentTargetOffsetTop -> mCurrentTargetOffsetTop
    boolean mReturningToStart -> mReturningToStart
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> mDecelerateInterpolator
    android.view.animation.AccelerateInterpolator mAccelerateInterpolator -> mAccelerateInterpolator
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    android.view.animation.Animation mAnimateToStartPosition -> mAnimateToStartPosition
    android.view.animation.Animation mShrinkTrigger -> mShrinkTrigger
    android.view.animation.Animation$AnimationListener mReturnToStartPositionListener -> mReturnToStartPositionListener
    android.view.animation.Animation$AnimationListener mShrinkAnimationListener -> mShrinkAnimationListener
    java.lang.Runnable mReturnToStartPosition -> mReturnToStartPosition
    java.lang.Runnable mCancel -> mCancel
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    void setTriggerPercentage(float) -> setTriggerPercentage
    void setRefreshing(boolean) -> setRefreshing
    void setColorScheme(int,int,int,int) -> setColorScheme
    boolean isRefreshing() -> isRefreshing
    void ensureTarget() -> ensureTarget
    void draw(android.graphics.Canvas) -> draw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    boolean canChildScrollUp() -> canChildScrollUp
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void startRefresh() -> startRefresh
    void updateContentOffsetTop(int) -> updateContentOffsetTop
    void setTargetOffsetTopAndBottom(int) -> setTargetOffsetTopAndBottom
    void updatePositionTimeout() -> updatePositionTimeout
    int access$000(android.support.v4.widget.SwipeRefreshLayout) -> access$000
    int access$100(android.support.v4.widget.SwipeRefreshLayout) -> access$100
    android.view.View access$200(android.support.v4.widget.SwipeRefreshLayout) -> access$200
    void access$300(android.support.v4.widget.SwipeRefreshLayout,int) -> access$300
    float access$400(android.support.v4.widget.SwipeRefreshLayout) -> access$400
    android.support.v4.widget.SwipeProgressBar access$500(android.support.v4.widget.SwipeRefreshLayout) -> access$500
    int access$702(android.support.v4.widget.SwipeRefreshLayout,int) -> access$702
    float access$802(android.support.v4.widget.SwipeRefreshLayout,float) -> access$802
    boolean access$902(android.support.v4.widget.SwipeRefreshLayout,boolean) -> access$902
    int access$700(android.support.v4.widget.SwipeRefreshLayout) -> access$700
    android.view.animation.Animation$AnimationListener access$1000(android.support.v4.widget.SwipeRefreshLayout) -> access$1000
    void access$1100(android.support.v4.widget.SwipeRefreshLayout,int,android.view.animation.Animation$AnimationListener) -> access$1100
    float access$402(android.support.v4.widget.SwipeRefreshLayout,float) -> access$402
    float access$800(android.support.v4.widget.SwipeRefreshLayout) -> access$800
    int access$1200(android.support.v4.widget.SwipeRefreshLayout) -> access$1200
    android.view.animation.Animation access$1300(android.support.v4.widget.SwipeRefreshLayout) -> access$1300
    android.view.animation.Animation$AnimationListener access$1400(android.support.v4.widget.SwipeRefreshLayout) -> access$1400
    android.view.animation.DecelerateInterpolator access$1500(android.support.v4.widget.SwipeRefreshLayout) -> access$1500
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.v4.widget.SwipeRefreshLayout$1:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.v4.widget.SwipeRefreshLayout$2:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.v4.widget.SwipeRefreshLayout$3:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$4 -> android.support.v4.widget.SwipeRefreshLayout$4:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.v4.widget.SwipeRefreshLayout$5:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.v4.widget.SwipeRefreshLayout$6:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SwipeRefreshLayout$BaseAnimationListener -> android.support.v4.widget.SwipeRefreshLayout$BaseAnimationListener:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -> android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener:
    void onRefresh() -> onRefresh
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    java.lang.String TAG -> TAG
    int INVALID_POINTER -> INVALID_POINTER
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_TOP -> EDGE_TOP
    int EDGE_BOTTOM -> EDGE_BOTTOM
    int EDGE_ALL -> EDGE_ALL
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int DIRECTION_ALL -> DIRECTION_ALL
    int EDGE_SIZE -> EDGE_SIZE
    int BASE_SETTLE_DURATION -> BASE_SETTLE_DURATION
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int mDragState -> mDragState
    int mTouchSlop -> mTouchSlop
    int mActivePointerId -> mActivePointerId
    float[] mInitialMotionX -> mInitialMotionX
    float[] mInitialMotionY -> mInitialMotionY
    float[] mLastMotionX -> mLastMotionX
    float[] mLastMotionY -> mLastMotionY
    int[] mInitialEdgesTouched -> mInitialEdgesTouched
    int[] mEdgeDragsInProgress -> mEdgeDragsInProgress
    int[] mEdgeDragsLocked -> mEdgeDragsLocked
    int mPointersDown -> mPointersDown
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float mMaxVelocity -> mMaxVelocity
    float mMinVelocity -> mMinVelocity
    int mEdgeSize -> mEdgeSize
    int mTrackingEdges -> mTrackingEdges
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> mCallback
    android.view.View mCapturedView -> mCapturedView
    boolean mReleaseInProgress -> mReleaseInProgress
    android.view.ViewGroup mParentView -> mParentView
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.lang.Runnable mSetIdleRunnable -> mSetIdleRunnable
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void setMinVelocity(float) -> setMinVelocity
    float getMinVelocity() -> getMinVelocity
    int getViewDragState() -> getViewDragState
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    int getEdgeSize() -> getEdgeSize
    void captureChildView(android.view.View,int) -> captureChildView
    android.view.View getCapturedView() -> getCapturedView
    int getActivePointerId() -> getActivePointerId
    int getTouchSlop() -> getTouchSlop
    void cancel() -> cancel
    void abort() -> abort
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    int computeAxisDuration(int,int,int) -> computeAxisDuration
    int clampMag(int,int,int) -> clampMag
    float clampMag(float,float,float) -> clampMag
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean continueSettling(boolean) -> continueSettling
    void dispatchViewReleased(float,float) -> dispatchViewReleased
    void clearMotionHistory() -> clearMotionHistory
    void clearMotionHistory(int) -> clearMotionHistory
    void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    void saveInitialMotion(float,float,int) -> saveInitialMotion
    void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    boolean isPointerDown(int) -> isPointerDown
    void setDragState(int) -> setDragState
    boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
    boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    boolean checkTouchSlop(int) -> checkTouchSlop
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    void releaseViewForPointerUp() -> releaseViewForPointerUp
    void dragTo(int,int,int,int) -> dragTo
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    int getEdgesTouched(int,int) -> getEdgesTouched
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ViewDragHelper$1:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ViewDragHelper$2:
    android.support.v4.widget.ViewDragHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
com.androidquery.AQuery -> com.androidquery.AQuery:
com.androidquery.AbstractAQuery -> com.androidquery.AbstractAQuery:
    android.view.View root -> root
    android.app.Activity act -> act
    android.content.Context context -> context
    android.view.View view -> view
    java.lang.Object progress -> progress
    com.androidquery.auth.AccountHandle ah -> ah
    com.androidquery.callback.Transformer trans -> trans
    java.lang.reflect.Constructor constructor -> constructor
    java.lang.Class[] ON_CLICK_SIG -> ON_CLICK_SIG
    java.lang.Class[] ON_ITEM_SIG -> ON_ITEM_SIG
    java.lang.Class[] ON_SCROLLED_STATE_SIG -> ON_SCROLLED_STATE_SIG
    java.lang.Class[] TEXT_CHANGE_SIG -> TEXT_CHANGE_SIG
    java.lang.Class[] PENDING_TRANSITION_SIG -> PENDING_TRANSITION_SIG
    java.lang.Class[] OVER_SCROLL_SIG -> OVER_SCROLL_SIG
    java.lang.Class[] LAYER_TYPE_SIG -> LAYER_TYPE_SIG
    java.util.WeakHashMap dialogs -> dialogs
    android.view.LayoutInflater inflater -> inflater
    com.androidquery.AbstractAQuery create(android.view.View) -> create
    java.lang.reflect.Constructor getConstructor() -> getConstructor
    android.view.View findView(int) -> findView
    android.view.View findView(int[]) -> findView
    com.androidquery.AbstractAQuery find(int) -> find
    com.androidquery.AbstractAQuery parent(int) -> parent
    com.androidquery.AbstractAQuery recycle(android.view.View) -> recycle
    com.androidquery.AbstractAQuery self() -> self
    android.view.View getView() -> getView
    com.androidquery.AbstractAQuery id(int) -> id
    com.androidquery.AbstractAQuery id(android.view.View) -> id
    com.androidquery.AbstractAQuery id(int[]) -> id
    com.androidquery.AbstractAQuery progress(int) -> progress
    com.androidquery.AbstractAQuery progress(android.view.View) -> progress
    com.androidquery.AbstractAQuery progress(android.app.Dialog) -> progress
    com.androidquery.AbstractAQuery auth(com.androidquery.auth.AccountHandle) -> auth
    com.androidquery.AbstractAQuery transformer(com.androidquery.callback.Transformer) -> transformer
    com.androidquery.AbstractAQuery rating(float) -> rating
    com.androidquery.AbstractAQuery text(int) -> text
    com.androidquery.AbstractAQuery text(int,java.lang.Object[]) -> text
    com.androidquery.AbstractAQuery text(java.lang.CharSequence) -> text
    com.androidquery.AbstractAQuery text(java.lang.CharSequence,boolean) -> text
    com.androidquery.AbstractAQuery text(android.text.Spanned) -> text
    com.androidquery.AbstractAQuery textColor(int) -> textColor
    com.androidquery.AbstractAQuery adapter(android.widget.Adapter) -> adapter
    com.androidquery.AbstractAQuery adapter(android.widget.ExpandableListAdapter) -> adapter
    com.androidquery.AbstractAQuery image(int) -> image
    com.androidquery.AbstractAQuery image(android.graphics.drawable.Drawable) -> image
    com.androidquery.AbstractAQuery image(android.graphics.Bitmap) -> image
    com.androidquery.AbstractAQuery image(java.lang.String) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean,int,int) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean,int,int,android.graphics.Bitmap,int) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean,int,int,android.graphics.Bitmap,int,float) -> image
    com.androidquery.AbstractAQuery image(com.androidquery.callback.BitmapAjaxCallback) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean,int,int,com.androidquery.callback.BitmapAjaxCallback) -> image
    com.androidquery.AbstractAQuery image(java.io.File,int) -> image
    com.androidquery.AbstractAQuery image(java.io.File,boolean,int,com.androidquery.callback.BitmapAjaxCallback) -> image
    com.androidquery.AbstractAQuery image(android.graphics.Bitmap,float) -> image
    com.androidquery.AbstractAQuery tag(java.lang.Object) -> tag
    com.androidquery.AbstractAQuery tag(int,java.lang.Object) -> tag
    com.androidquery.AbstractAQuery transparent(boolean) -> transparent
    com.androidquery.AbstractAQuery enabled(boolean) -> enabled
    com.androidquery.AbstractAQuery checked(boolean) -> checked
    boolean isChecked() -> isChecked
    com.androidquery.AbstractAQuery clickable(boolean) -> clickable
    com.androidquery.AbstractAQuery gone() -> gone
    com.androidquery.AbstractAQuery invisible() -> invisible
    com.androidquery.AbstractAQuery visible() -> visible
    com.androidquery.AbstractAQuery background(int) -> background
    com.androidquery.AbstractAQuery backgroundColor(int) -> backgroundColor
    com.androidquery.AbstractAQuery dataChanged() -> dataChanged
    boolean isExist() -> isExist
    java.lang.Object getTag() -> getTag
    java.lang.Object getTag(int) -> getTag
    android.widget.ImageView getImageView() -> getImageView
    android.widget.Gallery getGallery() -> getGallery
    android.widget.TextView getTextView() -> getTextView
    android.widget.EditText getEditText() -> getEditText
    android.widget.ProgressBar getProgressBar() -> getProgressBar
    android.widget.Button getButton() -> getButton
    android.widget.CheckBox getCheckBox() -> getCheckBox
    android.widget.ListView getListView() -> getListView
    android.widget.ExpandableListView getExpandableListView() -> getExpandableListView
    android.widget.GridView getGridView() -> getGridView
    android.widget.RatingBar getRatingBar() -> getRatingBar
    android.webkit.WebView getWebView() -> getWebView
    android.widget.Spinner getSpinner() -> getSpinner
    android.text.Editable getEditable() -> getEditable
    java.lang.CharSequence getText() -> getText
    java.lang.Object getSelectedItem() -> getSelectedItem
    com.androidquery.AbstractAQuery clicked(java.lang.Object,java.lang.String) -> clicked
    com.androidquery.AbstractAQuery clicked(android.view.View$OnClickListener) -> clicked
    com.androidquery.AbstractAQuery longClicked(java.lang.Object,java.lang.String) -> longClicked
    com.androidquery.AbstractAQuery longClicked(android.view.View$OnLongClickListener) -> longClicked
    com.androidquery.AbstractAQuery itemClicked(java.lang.Object,java.lang.String) -> itemClicked
    com.androidquery.AbstractAQuery itemClicked(android.widget.AdapterView$OnItemClickListener) -> itemClicked
    com.androidquery.AbstractAQuery itemSelected(java.lang.Object,java.lang.String) -> itemSelected
    com.androidquery.AbstractAQuery itemSelected(android.widget.AdapterView$OnItemSelectedListener) -> itemSelected
    com.androidquery.AbstractAQuery setSelection(int) -> setSelection
    com.androidquery.AbstractAQuery scrolledBottom(java.lang.Object,java.lang.String) -> scrolledBottom
    com.androidquery.util.Common setScrollListener() -> setScrollListener
    com.androidquery.AbstractAQuery scrolled(android.widget.AbsListView$OnScrollListener) -> scrolled
    com.androidquery.AbstractAQuery textChanged(java.lang.Object,java.lang.String) -> textChanged
    com.androidquery.AbstractAQuery overridePendingTransition5(int,int) -> overridePendingTransition5
    com.androidquery.AbstractAQuery setOverScrollMode9(int) -> setOverScrollMode9
    com.androidquery.AbstractAQuery setLayerType11(int,android.graphics.Paint) -> setLayerType11
    java.lang.Object invoke(java.lang.String,java.lang.Class[],java.lang.Object[]) -> invoke
    com.androidquery.AbstractAQuery hardwareAccelerated11() -> hardwareAccelerated11
    com.androidquery.AbstractAQuery clear() -> clear
    com.androidquery.AbstractAQuery margin(float,float,float,float) -> margin
    com.androidquery.AbstractAQuery width(int) -> width
    com.androidquery.AbstractAQuery height(int) -> height
    com.androidquery.AbstractAQuery width(int,boolean) -> width
    com.androidquery.AbstractAQuery height(int,boolean) -> height
    void size(boolean,int,boolean) -> size
    android.content.Context getContext() -> getContext
    com.androidquery.AbstractAQuery ajax(com.androidquery.callback.AjaxCallback) -> ajax
    com.androidquery.AbstractAQuery invoke(com.androidquery.callback.AbstractAjaxCallback) -> invoke
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.lang.Class,com.androidquery.callback.AjaxCallback) -> ajax
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.lang.Class,long,com.androidquery.callback.AjaxCallback) -> ajax
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.lang.Class,java.lang.Object,java.lang.String) -> ajax
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.lang.Class,long,java.lang.Object,java.lang.String) -> ajax
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.util.Map,java.lang.Class,com.androidquery.callback.AjaxCallback) -> ajax
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.util.Map,java.lang.Class,java.lang.Object,java.lang.String) -> ajax
    com.androidquery.AbstractAQuery sync(com.androidquery.callback.AjaxCallback) -> sync
    com.androidquery.AbstractAQuery cache(java.lang.String,long) -> cache
    com.androidquery.AbstractAQuery ajaxCancel() -> ajaxCancel
    java.io.File getCachedFile(java.lang.String) -> getCachedFile
    com.androidquery.AbstractAQuery invalidate(java.lang.String) -> invalidate
    android.graphics.Bitmap getCachedImage(java.lang.String) -> getCachedImage
    android.graphics.Bitmap getCachedImage(java.lang.String,int) -> getCachedImage
    android.graphics.Bitmap getCachedImage(int) -> getCachedImage
    boolean shouldDelay(android.view.View,android.view.ViewGroup,java.lang.String,float) -> shouldDelay
    boolean shouldDelay(android.view.View,android.view.ViewGroup,java.lang.String,float,boolean) -> shouldDelay
    boolean shouldDelay(int,boolean,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelay
    boolean shouldDelay(int,int,boolean,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelay
    boolean shouldDelay(int,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelay
    java.io.File makeSharedFile(java.lang.String,java.lang.String) -> makeSharedFile
    com.androidquery.AbstractAQuery animate(int) -> animate
    com.androidquery.AbstractAQuery animate(int,android.view.animation.Animation$AnimationListener) -> animate
    com.androidquery.AbstractAQuery animate(android.view.animation.Animation) -> animate
    com.androidquery.AbstractAQuery click() -> click
    com.androidquery.AbstractAQuery longClick() -> longClick
    com.androidquery.AbstractAQuery show(android.app.Dialog) -> show
    com.androidquery.AbstractAQuery dismiss(android.app.Dialog) -> dismiss
    com.androidquery.AbstractAQuery dismiss() -> dismiss
    com.androidquery.AbstractAQuery webImage(java.lang.String) -> webImage
    com.androidquery.AbstractAQuery webImage(java.lang.String,boolean,boolean,int) -> webImage
    android.view.View inflate(android.view.View,int,android.view.ViewGroup) -> inflate
    com.androidquery.AbstractAQuery expand(int,boolean) -> expand
    com.androidquery.AbstractAQuery expand(boolean) -> expand
com.androidquery.auth.AccountHandle -> com.androidquery.auth.AccountHandle:
    java.util.LinkedHashSet callbacks -> callbacks
    void auth(com.androidquery.callback.AbstractAjaxCallback) -> auth
    boolean authenticated() -> authenticated
    void success(android.content.Context) -> success
    void failure(android.content.Context,int,java.lang.String) -> failure
    void auth() -> auth
    boolean expired(com.androidquery.callback.AbstractAjaxCallback,com.androidquery.callback.AjaxStatus) -> expired
    boolean reauth(com.androidquery.callback.AbstractAjaxCallback) -> reauth
    void applyToken(com.androidquery.callback.AbstractAjaxCallback,org.apache.http.HttpRequest) -> applyToken
    java.lang.String getNetworkUrl(java.lang.String) -> getNetworkUrl
    java.lang.String getCacheUrl(java.lang.String) -> getCacheUrl
    void unauth() -> unauth
com.androidquery.auth.GoogleHandle -> com.androidquery.auth.GoogleHandle:
    android.accounts.AccountManager am -> am
    android.accounts.Account acc -> acc
    java.lang.String type -> type
    android.app.Activity act -> act
    java.lang.String email -> email
    android.accounts.Account[] accs -> accs
    java.lang.String token -> token
    void auth() -> auth
    boolean reauth(com.androidquery.callback.AbstractAjaxCallback) -> reauth
    java.lang.String getType() -> getType
    void accountDialog() -> accountDialog
    void onClick(android.content.DialogInterface,int) -> onClick
    void setActiveAccount(android.content.Context,java.lang.String) -> setActiveAccount
    java.lang.String getActiveAccount(android.content.Context) -> getActiveAccount
    void auth(android.accounts.Account) -> auth
    void onCancel(android.content.DialogInterface) -> onCancel
    boolean expired(com.androidquery.callback.AbstractAjaxCallback,com.androidquery.callback.AjaxStatus) -> expired
    void applyToken(com.androidquery.callback.AbstractAjaxCallback,org.apache.http.HttpRequest) -> applyToken
    java.lang.String getCacheUrl(java.lang.String) -> getCacheUrl
    boolean authenticated() -> authenticated
    android.accounts.AccountManager access$0(com.androidquery.auth.GoogleHandle) -> access$0
    android.accounts.Account access$1(com.androidquery.auth.GoogleHandle) -> access$1
    java.lang.String access$2(com.androidquery.auth.GoogleHandle) -> access$2
    android.app.Activity access$3(com.androidquery.auth.GoogleHandle) -> access$3
    void access$4(com.androidquery.auth.GoogleHandle,java.lang.String) -> access$4
com.androidquery.auth.GoogleHandle$Task -> com.androidquery.auth.GoogleHandle$Task:
    com.androidquery.auth.GoogleHandle this$0 -> this$0
    android.os.Bundle doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(android.os.Bundle) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.androidquery.callback.AbstractAjaxCallback -> com.androidquery.callback.AbstractAjaxCallback:
    int NET_TIMEOUT -> NET_TIMEOUT
    java.lang.String AGENT -> AGENT
    int NETWORK_POOL -> NETWORK_POOL
    boolean GZIP -> GZIP
    java.lang.Class type -> type
    java.lang.ref.Reference whandler -> whandler
    java.lang.Object handler -> handler
    java.lang.String callback -> callback
    java.lang.ref.WeakReference progress -> progress
    java.lang.String url -> url
    java.util.Map params -> params
    java.util.Map headers -> headers
    java.util.Map cookies -> cookies
    com.androidquery.callback.Transformer transformer -> transformer
    java.lang.Object result -> result
    java.io.File cacheDir -> cacheDir
    com.androidquery.auth.AccountHandle ah -> ah
    com.androidquery.callback.AjaxStatus status -> status
    boolean fileCache -> fileCache
    boolean memCache -> memCache
    boolean refresh -> refresh
    long expire -> expire
    java.lang.String encoding -> encoding
    java.lang.ref.WeakReference act -> act
    boolean uiCallback -> uiCallback
    com.androidquery.callback.Transformer st -> st
    java.lang.Class[] DEFAULT_SIG -> DEFAULT_SIG
    boolean completed -> completed
    boolean blocked -> blocked
    boolean reauth -> reauth
    java.util.concurrent.ExecutorService fetchExe -> fetchExe
    org.apache.http.conn.scheme.SocketFactory ssf -> ssf
    org.apache.http.impl.client.DefaultHttpClient client -> client
    int lastStatus -> lastStatus
    java.lang.String lineEnd -> lineEnd
    java.lang.String twoHyphens -> twoHyphens
    java.lang.String boundary -> boundary
    java.lang.Object self() -> self
    void clear() -> clear
    void setTimeout(int) -> setTimeout
    void setAgent(java.lang.String) -> setAgent
    void setGZip(boolean) -> setGZip
    void setTransformer(com.androidquery.callback.Transformer) -> setTransformer
    java.lang.Class getType() -> getType
    java.lang.Object weakHandler(java.lang.Object,java.lang.String) -> weakHandler
    java.lang.Object handler(java.lang.Object,java.lang.String) -> handler
    java.lang.Object url(java.lang.String) -> url
    java.lang.Object type(java.lang.Class) -> type
    java.lang.Object transformer(com.androidquery.callback.Transformer) -> transformer
    java.lang.Object fileCache(boolean) -> fileCache
    java.lang.Object memCache(boolean) -> memCache
    java.lang.Object refresh(boolean) -> refresh
    java.lang.Object uiCallback(boolean) -> uiCallback
    java.lang.Object expire(long) -> expire
    java.lang.Object header(java.lang.String,java.lang.String) -> header
    java.lang.Object cookie(java.lang.String,java.lang.String) -> cookie
    java.lang.Object encoding(java.lang.String) -> encoding
    java.lang.Object param(java.lang.String,java.lang.Object) -> param
    java.lang.Object params(java.util.Map) -> params
    java.lang.Object progress(android.view.View) -> progress
    java.lang.Object progress(android.app.Dialog) -> progress
    java.lang.Object progress(java.lang.Object) -> progress
    void callback() -> callback
    void wake() -> wake
    void block() -> block
    void callback(java.lang.String,java.lang.Object,com.androidquery.callback.AjaxStatus) -> callback
    java.lang.Object fileGet(java.lang.String,java.io.File,com.androidquery.callback.AjaxStatus) -> fileGet
    java.lang.Object datastoreGet(java.lang.String) -> datastoreGet
    void showProgress(boolean) -> showProgress
    java.lang.Object transform(java.lang.String,byte[],com.androidquery.callback.AjaxStatus) -> transform
    java.lang.Object memGet(java.lang.String) -> memGet
    void memPut(java.lang.String,java.lang.Object) -> memPut
    void filePut(java.lang.String,java.lang.Object,java.io.File,byte[]) -> filePut
    java.io.File accessFile(java.io.File,java.lang.String) -> accessFile
    void async(android.app.Activity) -> async
    void async(android.content.Context) -> async
    boolean isActive() -> isActive
    void failure(int,java.lang.String) -> failure
    void work(android.content.Context) -> work
    boolean cacheAvailable(android.content.Context) -> cacheAvailable
    void run() -> run
    void backgroundWork() -> backgroundWork
    java.lang.String getCacheUrl() -> getCacheUrl
    void fileWork() -> fileWork
    void datastoreWork() -> datastoreWork
    void networkWork() -> networkWork
    java.io.File getCacheFile() -> getCacheFile
    void filePut() -> filePut
    java.lang.String extractUrl(android.net.Uri) -> extractUrl
    java.util.Map extractParams(android.net.Uri) -> extractParams
    void network() -> network
    void afterWork() -> afterWork
    void execute(java.lang.Runnable) -> execute
    void setNetworkLimit(int) -> setNetworkLimit
    void cancel() -> cancel
    java.lang.String patchUrl(java.lang.String) -> patchUrl
    void httpGet(java.lang.String,java.util.Map,com.androidquery.callback.AjaxStatus) -> httpGet
    void httpPost(java.lang.String,java.util.Map,java.util.Map,com.androidquery.callback.AjaxStatus) -> httpPost
    void setSSF(org.apache.http.conn.scheme.SocketFactory) -> setSSF
    org.apache.http.impl.client.DefaultHttpClient getClient() -> getClient
    void httpDo(org.apache.http.client.methods.HttpUriRequest,java.lang.String,java.util.Map,com.androidquery.callback.AjaxStatus) -> httpDo
    java.lang.Object auth(android.app.Activity,java.lang.String,java.lang.String) -> auth
    java.lang.Object auth(com.androidquery.auth.AccountHandle) -> auth
    java.lang.String getUrl() -> getUrl
    java.lang.Object getHandler() -> getHandler
    java.lang.String getCallback() -> getCallback
    int getLastStatus() -> getLastStatus
    java.lang.Object getResult() -> getResult
    com.androidquery.callback.AjaxStatus getStatus() -> getStatus
    java.lang.String getEncoding() -> getEncoding
    boolean isMultiPart(java.util.Map) -> isMultiPart
    void httpMulti(java.lang.String,java.util.Map,java.util.Map,com.androidquery.callback.AjaxStatus) -> httpMulti
    void writeObject(java.io.DataOutputStream,java.lang.String,java.lang.Object) -> writeObject
    void writeData(java.io.DataOutputStream,java.lang.String,java.io.InputStream) -> writeData
    void writeField(java.io.DataOutputStream,java.lang.String,java.lang.String) -> writeField
    java.lang.String makeCookie() -> makeCookie
com.androidquery.callback.AjaxCallback -> com.androidquery.callback.AjaxCallback:
com.androidquery.callback.AjaxStatus -> com.androidquery.callback.AjaxStatus:
    int NETWORK -> NETWORK
    int DATASTORE -> DATASTORE
    int FILE -> FILE
    int MEMORY -> MEMORY
    int DEVICE -> DEVICE
    int NETWORK_ERROR -> NETWORK_ERROR
    int AUTH_ERROR -> AUTH_ERROR
    int TRANSFORM_ERROR -> TRANSFORM_ERROR
    int code -> code
    java.lang.String message -> message
    java.lang.String redirect -> redirect
    byte[] data -> data
    java.util.Date time -> time
    boolean refresh -> refresh
    org.apache.http.impl.client.DefaultHttpClient client -> client
    long duration -> duration
    int source -> source
    long start -> start
    boolean done -> done
    boolean invalid -> invalid
    boolean reauth -> reauth
    java.lang.String error -> error
    org.apache.http.protocol.HttpContext context -> context
    org.apache.http.Header[] headers -> headers
    com.androidquery.callback.AjaxStatus source(int) -> source
    com.androidquery.callback.AjaxStatus code(int) -> code
    com.androidquery.callback.AjaxStatus error(java.lang.String) -> error
    com.androidquery.callback.AjaxStatus message(java.lang.String) -> message
    com.androidquery.callback.AjaxStatus redirect(java.lang.String) -> redirect
    com.androidquery.callback.AjaxStatus context(org.apache.http.protocol.HttpContext) -> context
    com.androidquery.callback.AjaxStatus time(java.util.Date) -> time
    com.androidquery.callback.AjaxStatus refresh(boolean) -> refresh
    com.androidquery.callback.AjaxStatus reauth(boolean) -> reauth
    com.androidquery.callback.AjaxStatus client(org.apache.http.impl.client.DefaultHttpClient) -> client
    com.androidquery.callback.AjaxStatus headers(org.apache.http.Header[]) -> headers
    com.androidquery.callback.AjaxStatus done() -> done
    com.androidquery.callback.AjaxStatus data(byte[]) -> data
    com.androidquery.callback.AjaxStatus invalidate() -> invalidate
    boolean getDone() -> getDone
    boolean getReauth() -> getReauth
    boolean getInvalid() -> getInvalid
    int getCode() -> getCode
    java.lang.String getMessage() -> getMessage
    java.lang.String getRedirect() -> getRedirect
    byte[] getData() -> getData
    java.util.Date getTime() -> getTime
    boolean getRefresh() -> getRefresh
    org.apache.http.impl.client.DefaultHttpClient getClient() -> getClient
    long getDuration() -> getDuration
    int getSource() -> getSource
    java.lang.String getError() -> getError
    boolean expired(long) -> expired
    java.util.List getCookies() -> getCookies
    java.util.List getHeaders() -> getHeaders
com.androidquery.callback.BitmapAjaxCallback -> com.androidquery.callback.BitmapAjaxCallback:
    int SMALL_MAX -> SMALL_MAX
    int BIG_MAX -> BIG_MAX
    int SMALL_PIXELS -> SMALL_PIXELS
    int BIG_PIXELS -> BIG_PIXELS
    int BIG_TPIXELS -> BIG_TPIXELS
    java.util.Map smallCache -> smallCache
    java.util.Map bigCache -> bigCache
    java.util.Map invalidCache -> invalidCache
    java.util.HashMap queueMap -> queueMap
    java.lang.ref.WeakReference v -> v
    int targetWidth -> targetWidth
    int fallback -> fallback
    java.io.File imageFile -> imageFile
    android.graphics.Bitmap bm -> bm
    int animation -> animation
    android.graphics.Bitmap preset -> preset
    float ratio -> ratio
    boolean targetDim -> targetDim
    float anchor -> anchor
    boolean invalid -> invalid
    android.graphics.BitmapFactory$Options reuse -> reuse
    android.graphics.Bitmap empty -> empty
    android.graphics.Bitmap dummy -> dummy
    int FADE_DUR -> FADE_DUR
    com.androidquery.callback.BitmapAjaxCallback imageView(android.widget.ImageView) -> imageView
    com.androidquery.callback.BitmapAjaxCallback targetWidth(int) -> targetWidth
    com.androidquery.callback.BitmapAjaxCallback file(java.io.File) -> file
    com.androidquery.callback.BitmapAjaxCallback preset(android.graphics.Bitmap) -> preset
    com.androidquery.callback.BitmapAjaxCallback bitmap(android.graphics.Bitmap) -> bitmap
    com.androidquery.callback.BitmapAjaxCallback fallback(int) -> fallback
    com.androidquery.callback.BitmapAjaxCallback animation(int) -> animation
    com.androidquery.callback.BitmapAjaxCallback ratio(float) -> ratio
    com.androidquery.callback.BitmapAjaxCallback anchor(float) -> anchor
    com.androidquery.callback.BitmapAjaxCallback reuse(android.graphics.BitmapFactory$Options) -> reuse
    android.graphics.Bitmap decode(java.lang.String,byte[],android.graphics.BitmapFactory$Options) -> decode
    void setField(java.lang.Object,java.lang.String,java.lang.Object) -> setField
    android.graphics.Bitmap getResizedImage(java.lang.String,byte[],int,boolean,android.graphics.BitmapFactory$Options) -> getResizedImage
    int sampleSize(int,int) -> sampleSize
    android.graphics.Bitmap bmGet(java.lang.String,byte[]) -> bmGet
    java.io.File accessFile(java.io.File,java.lang.String) -> accessFile
    android.graphics.Bitmap fileGet(java.lang.String,java.io.File,com.androidquery.callback.AjaxStatus) -> fileGet
    android.graphics.Bitmap transform(java.lang.String,byte[],com.androidquery.callback.AjaxStatus) -> transform
    android.graphics.Bitmap getFallback() -> getFallback
    android.graphics.Bitmap getMemoryCached(android.content.Context,int) -> getMemoryCached
    android.graphics.Bitmap getEmptyBitmap() -> getEmptyBitmap
    void callback(java.lang.String,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> callback
    void checkCb(com.androidquery.callback.BitmapAjaxCallback,java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> checkCb
    void callback(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> callback
    void setIconCacheLimit(int) -> setIconCacheLimit
    void setCacheLimit(int) -> setCacheLimit
    void setPixelLimit(int) -> setPixelLimit
    void setSmallPixel(int) -> setSmallPixel
    void setMaxPixelLimit(int) -> setMaxPixelLimit
    void clearCache() -> clearCache
    void clearTasks() -> clearTasks
    java.util.Map getBCache() -> getBCache
    java.util.Map getSCache() -> getSCache
    java.util.Map getICache() -> getICache
    android.graphics.Bitmap memGet(java.lang.String) -> memGet
    android.graphics.Bitmap getMemoryCached(java.lang.String,int) -> getMemoryCached
    android.graphics.Bitmap memGet(java.lang.String,int) -> memGet
    java.lang.String getKey(java.lang.String,int) -> getKey
    void memPut(java.lang.String,int,android.graphics.Bitmap,boolean) -> memPut
    void memPut(java.lang.String,android.graphics.Bitmap) -> memPut
    android.graphics.Bitmap filter(android.view.View,android.graphics.Bitmap,int) -> filter
    void presetBitmap(java.lang.String,android.widget.ImageView) -> presetBitmap
    void setBitmap(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,boolean) -> setBitmap
    android.graphics.drawable.Drawable makeDrawable(android.widget.ImageView,android.graphics.Bitmap,float,float,java.io.File,android.graphics.BitmapFactory$Options) -> makeDrawable
    void setBmAnimate(android.widget.ImageView,android.graphics.Bitmap,android.graphics.Bitmap,int,int,float,float,int,java.io.File,android.graphics.BitmapFactory$Options) -> setBmAnimate
    boolean fadeIn(int,int) -> fadeIn
    void async(android.app.Activity,android.content.Context,android.widget.ImageView,java.lang.String,boolean,boolean,int,int,android.graphics.Bitmap,int,float,float,java.lang.Object,com.androidquery.auth.AccountHandle) -> async
    void async(android.content.Context) -> async
    void addQueue(java.lang.String,android.widget.ImageView) -> addQueue
    void memPut(java.lang.String,java.lang.Object) -> memPut
    java.lang.Object transform(java.lang.String,byte[],com.androidquery.callback.AjaxStatus) -> transform
    java.lang.Object memGet(java.lang.String) -> memGet
    void callback(java.lang.String,java.lang.Object,com.androidquery.callback.AjaxStatus) -> callback
    java.lang.Object fileGet(java.lang.String,java.io.File,com.androidquery.callback.AjaxStatus) -> fileGet
com.androidquery.callback.Transformer -> com.androidquery.callback.Transformer:
    java.lang.Object transform(java.lang.String,java.lang.Class,java.lang.String,byte[],com.androidquery.callback.AjaxStatus) -> transform
com.androidquery.service.MarketService -> com.androidquery.service.MarketService:
    android.app.Activity act -> act
    com.androidquery.AQuery aq -> aq
    com.androidquery.service.MarketService$Handler handler -> handler
    java.lang.String locale -> locale
    java.lang.String rateUrl -> rateUrl
    java.lang.String updateUrl -> updateUrl
    boolean force -> force
    int progress -> progress
    long expire -> expire
    java.lang.String version -> version
    boolean fetch -> fetch
    boolean completed -> completed
    int level -> level
    int REVISION -> REVISION
    int MINOR -> MINOR
    int MAJOR -> MAJOR
    android.content.pm.ApplicationInfo ai -> ai
    android.content.pm.PackageInfo pi -> pi
    java.lang.String SKIP_VERSION -> SKIP_VERSION
    java.lang.String BULLET -> BULLET
    com.androidquery.service.MarketService rateUrl(java.lang.String) -> rateUrl
    com.androidquery.service.MarketService level(int) -> level
    com.androidquery.service.MarketService updateUrl(java.lang.String) -> updateUrl
    com.androidquery.service.MarketService locale(java.lang.String) -> locale
    com.androidquery.service.MarketService progress(int) -> progress
    com.androidquery.service.MarketService force(boolean) -> force
    com.androidquery.service.MarketService expire(long) -> expire
    android.content.pm.ApplicationInfo getApplicationInfo() -> getApplicationInfo
    android.content.pm.PackageInfo getPackageInfo() -> getPackageInfo
    java.lang.String getHost() -> getHost
    java.lang.String getQueryUrl() -> getQueryUrl
    java.lang.String getAppId() -> getAppId
    android.graphics.drawable.Drawable getAppIcon() -> getAppIcon
    java.lang.String getVersion() -> getVersion
    int getVersionCode() -> getVersionCode
    void checkVersion() -> checkVersion
    boolean openUrl(android.app.Activity,java.lang.String) -> openUrl
    java.lang.String getMarketUrl() -> getMarketUrl
    void callback(java.lang.String,org.json.JSONObject,com.androidquery.callback.AjaxStatus) -> callback
    boolean outdated(java.lang.String,int) -> outdated
    boolean requireUpdate(java.lang.String,java.lang.String,int) -> requireUpdate
    void showUpdateDialog(org.json.JSONObject) -> showUpdateDialog
    java.lang.String patchBody(java.lang.String) -> patchBody
    void setSkipVersion(android.content.Context,java.lang.String) -> setSkipVersion
    java.lang.String getSkipVersion(android.content.Context) -> getSkipVersion
    boolean isActive() -> isActive
    android.app.Activity access$0(com.androidquery.service.MarketService) -> access$0
    boolean access$1(com.androidquery.service.MarketService) -> access$1
    void access$2(com.androidquery.service.MarketService,boolean) -> access$2
    com.androidquery.AQuery access$3(com.androidquery.service.MarketService) -> access$3
    int access$4(com.androidquery.service.MarketService) -> access$4
    boolean access$5(com.androidquery.service.MarketService) -> access$5
    void access$6(com.androidquery.service.MarketService,boolean) -> access$6
    void access$7(com.androidquery.service.MarketService,int) -> access$7
    java.lang.String access$8(com.androidquery.service.MarketService) -> access$8
    java.lang.String access$9(com.androidquery.service.MarketService) -> access$9
    boolean access$10(android.app.Activity,java.lang.String) -> access$10
    java.lang.String access$11(com.androidquery.service.MarketService) -> access$11
    java.lang.String access$12(com.androidquery.service.MarketService) -> access$12
    void access$13(android.content.Context,java.lang.String) -> access$13
com.androidquery.service.MarketService$Handler -> com.androidquery.service.MarketService$Handler:
    com.androidquery.service.MarketService this$0 -> this$0
    void marketCb(java.lang.String,org.json.JSONObject,com.androidquery.callback.AjaxStatus) -> marketCb
    void cb(java.lang.String,org.json.JSONObject,com.androidquery.callback.AjaxStatus) -> cb
    void detailCb(java.lang.String,java.lang.String,com.androidquery.callback.AjaxStatus) -> detailCb
    void onClick(android.content.DialogInterface,int) -> onClick
    void handleTag(boolean,java.lang.String,android.text.Editable,org.xml.sax.XMLReader) -> handleTag
com.androidquery.util.AQUtility -> com.androidquery.util.AQUtility:
    boolean debug -> debug
    java.lang.Object wait -> wait
    java.lang.Thread$UncaughtExceptionHandler eh -> eh
    java.util.Map times -> times
    android.os.Handler handler -> handler
    int IO_BUFFER_SIZE -> IO_BUFFER_SIZE
    java.util.concurrent.ScheduledExecutorService storeExe -> storeExe
    java.io.File cacheDir -> cacheDir
    android.content.Context context -> context
    void setDebug(boolean) -> setDebug
    void debugWait(long) -> debugWait
    void debugNotify() -> debugNotify
    void debug(java.lang.Object) -> debug
    void debug(java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.Throwable) -> debug
    void report(java.lang.Throwable) -> report
    void setExceptionHandler(java.lang.Thread$UncaughtExceptionHandler) -> setExceptionHandler
    void time(java.lang.String) -> time
    long timeEnd(java.lang.String,long) -> timeEnd
    java.lang.Object invokeHandler(java.lang.Object,java.lang.String,boolean,boolean,java.lang.Class[],java.lang.Object[]) -> invokeHandler
    java.lang.Object invokeHandler(java.lang.Object,java.lang.String,boolean,boolean,java.lang.Class[],java.lang.Class[],java.lang.Object[]) -> invokeHandler
    java.lang.Object invokeMethod(java.lang.Object,java.lang.String,boolean,java.lang.Class[],java.lang.Class[],java.lang.Object[]) -> invokeMethod
    void transparent(android.view.View,boolean) -> transparent
    void setAlpha(android.view.View,float) -> setAlpha
    void ensureUIThread() -> ensureUIThread
    boolean isUIThread() -> isUIThread
    android.os.Handler getHandler() -> getHandler
    void post(java.lang.Runnable) -> post
    void postDelayed(java.lang.Runnable,long) -> postDelayed
    java.lang.String getMD5Hex(java.lang.String) -> getMD5Hex
    byte[] getMD5(byte[]) -> getMD5
    void copy(java.io.InputStream,java.io.OutputStream) -> copy
    byte[] toBytes(java.io.InputStream) -> toBytes
    void write(java.io.File,byte[]) -> write
    void close(java.io.InputStream) -> close
    java.util.concurrent.ScheduledExecutorService getFileStoreExecutor() -> getFileStoreExecutor
    void storeAsync(java.io.File,byte[],long) -> storeAsync
    java.io.File getCacheDir(android.content.Context) -> getCacheDir
    void setCacheDir(java.io.File) -> setCacheDir
    java.io.File makeCacheFile(java.io.File,java.lang.String) -> makeCacheFile
    java.lang.String getCacheFileName(java.lang.String) -> getCacheFileName
    java.io.File getExistedCacheByUrl(android.content.Context,java.lang.String) -> getExistedCacheByUrl
    java.io.File getCacheFile(java.io.File,java.lang.String) -> getCacheFile
    java.io.File getExistedCacheByUrl(java.io.File,java.lang.String) -> getExistedCacheByUrl
    java.io.File getExistedCacheByUrlSetAccess(java.io.File,java.lang.String) -> getExistedCacheByUrlSetAccess
    void lastAccess(java.io.File) -> lastAccess
    void store(java.io.File,byte[]) -> store
    void cleanCacheAsync(android.content.Context) -> cleanCacheAsync
    void cleanCacheAsync(android.content.Context,long,long) -> cleanCacheAsync
    void cleanCache(java.io.File,long,long) -> cleanCache
    java.io.File getTempDir() -> getTempDir
    boolean testCleanNeeded(java.io.File[],long) -> testCleanNeeded
    void cleanCache(java.io.File[],long) -> cleanCache
    int dip2pixel(android.content.Context,float) -> dip2pixel
    void setContext(android.app.Application) -> setContext
    android.content.Context getContext() -> getContext
com.androidquery.util.BitmapCache -> com.androidquery.util.BitmapCache:
    long serialVersionUID -> serialVersionUID
    int maxCount -> maxCount
    int maxPixels -> maxPixels
    int maxTotalPixels -> maxTotalPixels
    int pixels -> pixels
    android.graphics.Bitmap put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap remove(java.lang.Object) -> remove
    void clear() -> clear
    int pixels(android.graphics.Bitmap) -> pixels
    void shrink() -> shrink
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.androidquery.util.Common -> com.androidquery.util.Common:
    java.lang.Object handler -> handler
    java.lang.String method -> method
    java.lang.Object[] params -> params
    boolean fallback -> fallback
    java.lang.Class[] sig -> sig
    int methodId -> methodId
    int STORE_FILE -> STORE_FILE
    int CLEAN_CACHE -> CLEAN_CACHE
    int scrollState -> scrollState
    android.widget.AbsListView$OnScrollListener osl -> osl
    int lastBottom -> lastBottom
    android.widget.AdapterView$OnItemSelectedListener galleryListener -> galleryListener
    boolean galleryListen -> galleryListen
    com.androidquery.util.Common forward(java.lang.Object,java.lang.String,boolean,java.lang.Class[]) -> forward
    com.androidquery.util.Common method(int,java.lang.Object[]) -> method
    java.lang.Object invoke(java.lang.Object[]) -> invoke
    int compare(java.io.File,java.io.File) -> compare
    void run() -> run
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    int getScrollState() -> getScrollState
    void forward(android.widget.AbsListView$OnScrollListener) -> forward
    void checkScrolledBottom(android.widget.AbsListView,int) -> checkScrolledBottom
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScrollStateChanged(android.widget.ExpandableListView,int) -> onScrollStateChanged
    void onScrollStateChanged2(android.widget.AbsListView,int) -> onScrollStateChanged2
    boolean shouldDelay(int,int,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelay
    boolean shouldDelay(int,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelay
    boolean shouldDelay(android.view.View,android.view.ViewGroup,java.lang.String,float,boolean) -> shouldDelay
    boolean shouldDelayGallery(int,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelayGallery
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void listen(android.widget.Gallery) -> listen
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    void showProgress(java.lang.Object,java.lang.String,boolean) -> showProgress
    int compare(java.lang.Object,java.lang.Object) -> compare
com.androidquery.util.Constants -> com.androidquery.util.Constants:
    java.lang.String VERSION -> VERSION
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int FLAG_HARDWARE_ACCELERATED -> FLAG_HARDWARE_ACCELERATED
    int FLAG_ACTIVITY_NO_ANIMATION -> FLAG_ACTIVITY_NO_ANIMATION
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    int INVISIBLE -> INVISIBLE
    int GONE -> GONE
    int FADE_IN -> FADE_IN
    int FADE_IN_NETWORK -> FADE_IN_NETWORK
    int FADE_IN_FILE -> FADE_IN_FILE
    int TAG_URL -> TAG_URL
    int TAG_SCROLL_LISTENER -> TAG_SCROLL_LISTENER
    int TAG_LAYOUT -> TAG_LAYOUT
    int TAG_NUM -> TAG_NUM
    float RATIO_PRESERVE -> RATIO_PRESERVE
    float ANCHOR_DYNAMIC -> ANCHOR_DYNAMIC
    java.lang.String ACTIVE_ACCOUNT -> ACTIVE_ACCOUNT
    java.lang.String AUTH_READER -> AUTH_READER
    java.lang.String AUTH_PICASA -> AUTH_PICASA
    java.lang.String AUTH_SPREADSHEETS -> AUTH_SPREADSHEETS
    java.lang.String AUTH_DOC_LIST -> AUTH_DOC_LIST
    java.lang.String AUTH_YOUTUBE -> AUTH_YOUTUBE
    java.lang.String AUTH_ANALYTICS -> AUTH_ANALYTICS
    java.lang.String AUTH_BLOGGER -> AUTH_BLOGGER
    java.lang.String AUTH_CALENDAR -> AUTH_CALENDAR
    java.lang.String AUTH_CONTACTS -> AUTH_CONTACTS
    java.lang.String AUTH_MAPS -> AUTH_MAPS
    java.lang.String POST_ENTITY -> POST_ENTITY
    int SDK_INT -> SDK_INT
com.androidquery.util.PredefinedBAOS -> com.androidquery.util.PredefinedBAOS:
    byte[] toByteArray() -> toByteArray
com.androidquery.util.RatioDrawable -> com.androidquery.util.RatioDrawable:
    float ratio -> ratio
    java.lang.ref.WeakReference ref -> ref
    boolean adjusted -> adjusted
    android.graphics.Matrix m -> m
    int w -> w
    float anchor -> anchor
    int version -> version
    boolean loading -> loading
    java.io.File file -> file
    android.graphics.BitmapFactory$Options reuse -> reuse
    int getGen(android.graphics.Bitmap) -> getGen
    int getWidth(android.widget.ImageView) -> getWidth
    void draw(android.graphics.Canvas) -> draw
    void run() -> run
    void draw(android.graphics.Canvas,android.widget.ImageView,android.graphics.Bitmap) -> draw
    void adjust(android.widget.ImageView,android.graphics.Bitmap,boolean) -> adjust
    int targetHeight(int,int,int) -> targetHeight
    android.graphics.Matrix getMatrix(android.widget.ImageView,android.graphics.Bitmap) -> getMatrix
    float getYOffset(int,int) -> getYOffset
com.androidquery.util.WebImage -> com.androidquery.util.WebImage:
    java.lang.Object progress -> progress
    android.webkit.WebView wv -> wv
    java.lang.String url -> url
    boolean zoom -> zoom
    boolean control -> control
    int color -> color
    java.lang.String template -> template
    java.lang.String PREF_FILE -> PREF_FILE
    java.lang.String DOUBLE_TAP_TOAST_COUNT -> DOUBLE_TAP_TOAST_COUNT
    java.lang.String getSource(android.content.Context) -> getSource
    void fixWebviewTip(android.content.Context) -> fixWebviewTip
    void load() -> load
    void delaySetup() -> delaySetup
    void setup() -> setup
    void done(android.webkit.WebView) -> done
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onScaleChanged(android.webkit.WebView,float,float) -> onScaleChanged
    void disableZoomControl(android.webkit.WebView) -> disableZoomControl
    android.webkit.WebView access$0(com.androidquery.util.WebImage) -> access$0
    void access$1(com.androidquery.util.WebImage) -> access$1
com.androidquery.util.WebImage$1 -> com.androidquery.util.WebImage$1:
    com.androidquery.util.WebImage this$0 -> this$0
    void onNewPicture(android.webkit.WebView,android.graphics.Picture) -> onNewPicture
com.androidquery.util.XmlDom -> com.androidquery.util.XmlDom:
    org.w3c.dom.Element root -> root
    org.w3c.dom.Element getElement() -> getElement
    com.androidquery.util.XmlDom tag(java.lang.String) -> tag
    com.androidquery.util.XmlDom tag(java.lang.String,java.lang.String,java.lang.String) -> tag
    java.util.List tags(java.lang.String) -> tags
    com.androidquery.util.XmlDom child(java.lang.String) -> child
    com.androidquery.util.XmlDom child(java.lang.String,java.lang.String,java.lang.String) -> child
    java.util.List children(java.lang.String) -> children
    java.util.List children(java.lang.String,java.lang.String,java.lang.String) -> children
    java.util.List tags(java.lang.String,java.lang.String,java.lang.String) -> tags
    java.util.List convert(org.w3c.dom.NodeList,java.lang.String,java.lang.String,java.lang.String) -> convert
    com.androidquery.util.XmlDom convert(org.w3c.dom.Node,java.lang.String,java.lang.String,java.lang.String) -> convert
    java.lang.String text(java.lang.String) -> text
    java.lang.String attr(java.lang.String) -> attr
    java.lang.String toString() -> toString
    java.lang.String toString(int) -> toString
    java.lang.String serialize(org.w3c.dom.Element,int) -> serialize
    void writeSpace(org.xmlpull.v1.XmlSerializer,int,java.lang.String) -> writeSpace
    java.lang.String text() -> text
    java.lang.String text(org.w3c.dom.Node) -> text
    void serialize(org.w3c.dom.Element,org.xmlpull.v1.XmlSerializer,int,java.lang.String) -> serialize
com.mobeta.android.dslv.DragSortController -> com.mobeta.android.dslv.DragSortController:
    int ON_DOWN -> ON_DOWN
    int ON_DRAG -> ON_DRAG
    int ON_LONG_PRESS -> ON_LONG_PRESS
    int mDragInitMode -> mDragInitMode
    boolean mSortEnabled -> mSortEnabled
    int CLICK_REMOVE -> CLICK_REMOVE
    int FLING_REMOVE -> FLING_REMOVE
    int mRemoveMode -> mRemoveMode
    boolean mRemoveEnabled -> mRemoveEnabled
    boolean mIsRemoving -> mIsRemoving
    android.view.GestureDetector mDetector -> mDetector
    android.view.GestureDetector mFlingRemoveDetector -> mFlingRemoveDetector
    int mTouchSlop -> mTouchSlop
    int MISS -> MISS
    int mHitPos -> mHitPos
    int mFlingHitPos -> mFlingHitPos
    int mClickRemoveHitPos -> mClickRemoveHitPos
    int[] mTempLoc -> mTempLoc
    int mItemX -> mItemX
    int mItemY -> mItemY
    int mCurrX -> mCurrX
    int mCurrY -> mCurrY
    boolean mDragging -> mDragging
    float mFlingSpeed -> mFlingSpeed
    int mDragHandleId -> mDragHandleId
    int mClickRemoveId -> mClickRemoveId
    int mFlingHandleId -> mFlingHandleId
    boolean mCanDrag -> mCanDrag
    com.mobeta.android.dslv.DragSortListView mDslv -> mDslv
    int mPositionX -> mPositionX
    android.view.GestureDetector$OnGestureListener mFlingRemoveListener -> mFlingRemoveListener
    int getDragInitMode() -> getDragInitMode
    void setDragInitMode(int) -> setDragInitMode
    void setSortEnabled(boolean) -> setSortEnabled
    boolean isSortEnabled() -> isSortEnabled
    void setRemoveMode(int) -> setRemoveMode
    int getRemoveMode() -> getRemoveMode
    void setRemoveEnabled(boolean) -> setRemoveEnabled
    boolean isRemoveEnabled() -> isRemoveEnabled
    void setDragHandleId(int) -> setDragHandleId
    void setFlingHandleId(int) -> setFlingHandleId
    void setClickRemoveId(int) -> setClickRemoveId
    boolean startDrag(int,int,int) -> startDrag
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onDragFloatView(android.view.View,android.graphics.Point,android.graphics.Point) -> onDragFloatView
    int startDragPosition(android.view.MotionEvent) -> startDragPosition
    int startFlingPosition(android.view.MotionEvent) -> startFlingPosition
    int dragHandleHitPosition(android.view.MotionEvent) -> dragHandleHitPosition
    int flingHandleHitPosition(android.view.MotionEvent) -> flingHandleHitPosition
    int viewIdHitPosition(android.view.MotionEvent,int) -> viewIdHitPosition
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean access$0(com.mobeta.android.dslv.DragSortController) -> access$0
    boolean access$1(com.mobeta.android.dslv.DragSortController) -> access$1
    com.mobeta.android.dslv.DragSortListView access$2(com.mobeta.android.dslv.DragSortController) -> access$2
    float access$3(com.mobeta.android.dslv.DragSortController) -> access$3
    int access$4(com.mobeta.android.dslv.DragSortController) -> access$4
    void access$5(com.mobeta.android.dslv.DragSortController,boolean) -> access$5
com.mobeta.android.dslv.DragSortController$1 -> com.mobeta.android.dslv.DragSortController$1:
    com.mobeta.android.dslv.DragSortController this$0 -> this$0
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.mobeta.android.dslv.DragSortCursorAdapter -> com.mobeta.android.dslv.DragSortCursorAdapter:
    int REMOVED -> REMOVED
    android.util.SparseIntArray mListMapping -> mListMapping
    java.util.ArrayList mRemovedCursorPositions -> mRemovedCursorPositions
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursor(android.database.Cursor) -> changeCursor
    void reset() -> reset
    void resetMappings() -> resetMappings
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void drop(int,int) -> drop
    void remove(int) -> remove
    void drag(int,int) -> drag
    void cleanMapping() -> cleanMapping
    int getCount() -> getCount
    int getCursorPosition(int) -> getCursorPosition
    java.util.ArrayList getCursorPositions() -> getCursorPositions
    int getListPosition(int) -> getListPosition
com.mobeta.android.dslv.DragSortItemView -> com.mobeta.android.dslv.DragSortItemView:
    int mGravity -> mGravity
    void setGravity(int) -> setGravity
    int getGravity() -> getGravity
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
com.mobeta.android.dslv.DragSortItemViewCheckable -> com.mobeta.android.dslv.DragSortItemViewCheckable:
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    void toggle() -> toggle
com.mobeta.android.dslv.DragSortListView -> com.mobeta.android.dslv.DragSortListView:
    android.view.View mFloatView -> mFloatView
    android.graphics.Point mFloatLoc -> mFloatLoc
    android.graphics.Point mTouchLoc -> mTouchLoc
    int mFloatViewMid -> mFloatViewMid
    boolean mFloatViewOnMeasured -> mFloatViewOnMeasured
    android.database.DataSetObserver mObserver -> mObserver
    float mFloatAlpha -> mFloatAlpha
    float mCurrFloatAlpha -> mCurrFloatAlpha
    int mFloatPos -> mFloatPos
    int mFirstExpPos -> mFirstExpPos
    int mSecondExpPos -> mSecondExpPos
    boolean mAnimate -> mAnimate
    int mSrcPos -> mSrcPos
    int mDragDeltaX -> mDragDeltaX
    int mDragDeltaY -> mDragDeltaY
    int mOffsetX -> mOffsetX
    int mOffsetY -> mOffsetY
    com.mobeta.android.dslv.DragSortListView$DragListener mDragListener -> mDragListener
    com.mobeta.android.dslv.DragSortListView$DropListener mDropListener -> mDropListener
    com.mobeta.android.dslv.DragSortListView$RemoveListener mRemoveListener -> mRemoveListener
    boolean mDragEnabled -> mDragEnabled
    int IDLE -> IDLE
    int REMOVING -> REMOVING
    int DROPPING -> DROPPING
    int STOPPED -> STOPPED
    int DRAGGING -> DRAGGING
    int mDragState -> mDragState
    int mItemHeightCollapsed -> mItemHeightCollapsed
    int mFloatViewHeight -> mFloatViewHeight
    int mFloatViewHeightHalf -> mFloatViewHeightHalf
    int mWidthMeasureSpec -> mWidthMeasureSpec
    android.view.View[] mSampleViewTypes -> mSampleViewTypes
    com.mobeta.android.dslv.DragSortListView$DragScroller mDragScroller -> mDragScroller
    float mDragUpScrollStartFrac -> mDragUpScrollStartFrac
    float mDragDownScrollStartFrac -> mDragDownScrollStartFrac
    int mUpScrollStartY -> mUpScrollStartY
    int mDownScrollStartY -> mDownScrollStartY
    float mDownScrollStartYF -> mDownScrollStartYF
    float mUpScrollStartYF -> mUpScrollStartYF
    float mDragUpScrollHeight -> mDragUpScrollHeight
    float mDragDownScrollHeight -> mDragDownScrollHeight
    float mMaxScrollSpeed -> mMaxScrollSpeed
    com.mobeta.android.dslv.DragSortListView$DragScrollProfile mScrollProfile -> mScrollProfile
    int mX -> mX
    int mY -> mY
    int mLastX -> mLastX
    int mLastY -> mLastY
    int mDragStartY -> mDragStartY
    int DRAG_POS_X -> DRAG_POS_X
    int DRAG_NEG_X -> DRAG_NEG_X
    int DRAG_POS_Y -> DRAG_POS_Y
    int DRAG_NEG_Y -> DRAG_NEG_Y
    int mDragFlags -> mDragFlags
    boolean mLastCallWasIntercept -> mLastCallWasIntercept
    boolean mInTouchEvent -> mInTouchEvent
    com.mobeta.android.dslv.DragSortListView$FloatViewManager mFloatViewManager -> mFloatViewManager
    android.view.MotionEvent mCancelEvent -> mCancelEvent
    int NO_CANCEL -> NO_CANCEL
    int ON_TOUCH_EVENT -> ON_TOUCH_EVENT
    int ON_INTERCEPT_TOUCH_EVENT -> ON_INTERCEPT_TOUCH_EVENT
    int mCancelMethod -> mCancelMethod
    float mSlideRegionFrac -> mSlideRegionFrac
    float mSlideFrac -> mSlideFrac
    com.mobeta.android.dslv.DragSortListView$AdapterWrapper mAdapterWrapper -> mAdapterWrapper
    boolean mTrackDragSort -> mTrackDragSort
    com.mobeta.android.dslv.DragSortListView$DragSortTracker mDragSortTracker -> mDragSortTracker
    boolean mBlockLayoutRequests -> mBlockLayoutRequests
    boolean mIgnoreTouchEvent -> mIgnoreTouchEvent
    int sCacheSize -> sCacheSize
    com.mobeta.android.dslv.DragSortListView$HeightCache mChildHeightCache -> mChildHeightCache
    com.mobeta.android.dslv.DragSortListView$RemoveAnimator mRemoveAnimator -> mRemoveAnimator
    com.mobeta.android.dslv.DragSortListView$LiftAnimator mLiftAnimator -> mLiftAnimator
    com.mobeta.android.dslv.DragSortListView$DropAnimator mDropAnimator -> mDropAnimator
    boolean mUseRemoveVelocity -> mUseRemoveVelocity
    float mRemoveVelocityX -> mRemoveVelocityX
    boolean mListViewIntercepted -> mListViewIntercepted
    boolean mFloatViewInvalidated -> mFloatViewInvalidated
    void setFloatAlpha(float) -> setFloatAlpha
    float getFloatAlpha() -> getFloatAlpha
    void setMaxScrollSpeed(float) -> setMaxScrollSpeed
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    android.widget.ListAdapter getInputAdapter() -> getInputAdapter
    void drawDivider(int,android.graphics.Canvas) -> drawDivider
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    int getItemHeight(int) -> getItemHeight
    void printPosData() -> printPosData
    int getShuffleEdge(int,int) -> getShuffleEdge
    boolean updatePositions() -> updatePositions
    void onDraw(android.graphics.Canvas) -> onDraw
    void removeItem(int) -> removeItem
    void removeItem(int,float) -> removeItem
    void moveItem(int,int) -> moveItem
    void cancelDrag() -> cancelDrag
    void clearPositions() -> clearPositions
    void dropFloatView() -> dropFloatView
    void doRemoveItem() -> doRemoveItem
    void doRemoveItem(int) -> doRemoveItem
    void adjustOnReorder() -> adjustOnReorder
    boolean stopDrag(boolean) -> stopDrag
    boolean stopDragWithVelocity(boolean,float) -> stopDragWithVelocity
    boolean stopDrag(boolean,float) -> stopDrag
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void doActionUpOrCancel() -> doActionUpOrCancel
    void saveTouchCoords(android.view.MotionEvent) -> saveTouchCoords
    boolean listViewIntercepted() -> listViewIntercepted
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void setDragScrollStart(float) -> setDragScrollStart
    void setDragScrollStarts(float,float) -> setDragScrollStarts
    void continueDrag(int,int) -> continueDrag
    void updateScrollStarts() -> updateScrollStarts
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void adjustAllItems() -> adjustAllItems
    void adjustItem(int) -> adjustItem
    void adjustItem(int,android.view.View,boolean) -> adjustItem
    int getChildHeight(int) -> getChildHeight
    int getChildHeight(int,android.view.View,boolean) -> getChildHeight
    int calcItemHeight(int,android.view.View,boolean) -> calcItemHeight
    int calcItemHeight(int,int) -> calcItemHeight
    void requestLayout() -> requestLayout
    int adjustScroll(int,android.view.View,int,int) -> adjustScroll
    void measureItem(android.view.View) -> measureItem
    void measureFloatView() -> measureFloatView
    void onMeasure(int,int) -> onMeasure
    void layoutChildren() -> layoutChildren
    boolean onDragTouchEvent(android.view.MotionEvent) -> onDragTouchEvent
    void invalidateFloatView() -> invalidateFloatView
    boolean startDrag(int,int,int,int) -> startDrag
    boolean startDrag(int,android.view.View,int,int,int) -> startDrag
    void doDragFloatView(boolean) -> doDragFloatView
    void doDragFloatView(int,android.view.View,boolean) -> doDragFloatView
    void updateFloatView() -> updateFloatView
    void destroyFloatView() -> destroyFloatView
    void setFloatViewManager(com.mobeta.android.dslv.DragSortListView$FloatViewManager) -> setFloatViewManager
    void setDragListener(com.mobeta.android.dslv.DragSortListView$DragListener) -> setDragListener
    void setDragEnabled(boolean) -> setDragEnabled
    boolean isDragEnabled() -> isDragEnabled
    void setDropListener(com.mobeta.android.dslv.DragSortListView$DropListener) -> setDropListener
    void setRemoveListener(com.mobeta.android.dslv.DragSortListView$RemoveListener) -> setRemoveListener
    void setDragSortListener(com.mobeta.android.dslv.DragSortListView$DragSortListener) -> setDragSortListener
    void setDragScrollProfile(com.mobeta.android.dslv.DragSortListView$DragScrollProfile) -> setDragScrollProfile
    void moveCheckState(int,int) -> moveCheckState
    void removeCheckState(int) -> removeCheckState
    int buildRunList(android.util.SparseBooleanArray,int,int,int[],int[]) -> buildRunList
    int rotate(int,int,int,int) -> rotate
    int findFirstSetIndex(android.util.SparseBooleanArray,int,int) -> findFirstSetIndex
    int insertionIndexForKey(android.util.SparseBooleanArray,int) -> insertionIndexForKey
    float access$0(com.mobeta.android.dslv.DragSortListView) -> access$0
    void access$1(com.mobeta.android.dslv.DragSortListView,int,android.view.View,boolean) -> access$1
    int access$2(com.mobeta.android.dslv.DragSortListView) -> access$2
    int access$3(com.mobeta.android.dslv.DragSortListView) -> access$3
    int access$4(com.mobeta.android.dslv.DragSortListView) -> access$4
    void access$5(com.mobeta.android.dslv.DragSortListView,int) -> access$5
    android.graphics.Point access$6(com.mobeta.android.dslv.DragSortListView) -> access$6
    int access$7(com.mobeta.android.dslv.DragSortListView) -> access$7
    void access$8(com.mobeta.android.dslv.DragSortListView,boolean) -> access$8
    int access$9(com.mobeta.android.dslv.DragSortListView) -> access$9
    int access$10(com.mobeta.android.dslv.DragSortListView) -> access$10
    void access$11(com.mobeta.android.dslv.DragSortListView,int) -> access$11
    int access$12(com.mobeta.android.dslv.DragSortListView) -> access$12
    int access$13(com.mobeta.android.dslv.DragSortListView) -> access$13
    void access$14(com.mobeta.android.dslv.DragSortListView) -> access$14
    int access$15(com.mobeta.android.dslv.DragSortListView) -> access$15
    int access$16(com.mobeta.android.dslv.DragSortListView) -> access$16
    boolean access$17(com.mobeta.android.dslv.DragSortListView) -> access$17
    float access$18(com.mobeta.android.dslv.DragSortListView) -> access$18
    void access$19(com.mobeta.android.dslv.DragSortListView,float) -> access$19
    void access$20(com.mobeta.android.dslv.DragSortListView) -> access$20
    int access$21(com.mobeta.android.dslv.DragSortListView,int,android.view.View,boolean) -> access$21
    void access$22(com.mobeta.android.dslv.DragSortListView) -> access$22
    int access$23(com.mobeta.android.dslv.DragSortListView) -> access$23
    com.mobeta.android.dslv.DragSortListView$DragScrollProfile access$24(com.mobeta.android.dslv.DragSortListView) -> access$24
    float access$25(com.mobeta.android.dslv.DragSortListView) -> access$25
    float access$26(com.mobeta.android.dslv.DragSortListView) -> access$26
    float access$27(com.mobeta.android.dslv.DragSortListView) -> access$27
    float access$28(com.mobeta.android.dslv.DragSortListView) -> access$28
    void access$29(com.mobeta.android.dslv.DragSortListView,boolean) -> access$29
    void access$30(com.mobeta.android.dslv.DragSortListView,int,android.view.View,boolean) -> access$30
    int access$31(com.mobeta.android.dslv.DragSortListView,int) -> access$31
    int access$32(com.mobeta.android.dslv.DragSortListView,int) -> access$32
    int access$33(com.mobeta.android.dslv.DragSortListView) -> access$33
    int access$34(com.mobeta.android.dslv.DragSortListView,int,int) -> access$34
com.mobeta.android.dslv.DragSortListView$1 -> com.mobeta.android.dslv.DragSortListView$1:
    com.mobeta.android.dslv.DragSortListView this$0 -> this$0
    float getSpeed(float,long) -> getSpeed
com.mobeta.android.dslv.DragSortListView$2 -> com.mobeta.android.dslv.DragSortListView$2:
    com.mobeta.android.dslv.DragSortListView this$0 -> this$0
    void cancel() -> cancel
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.mobeta.android.dslv.DragSortListView$AdapterWrapper -> com.mobeta.android.dslv.DragSortListView$AdapterWrapper:
    android.widget.ListAdapter mAdapter -> mAdapter
    com.mobeta.android.dslv.DragSortListView this$0 -> this$0
    android.widget.ListAdapter getAdapter() -> getAdapter
    long getItemId(int) -> getItemId
    java.lang.Object getItem(int) -> getItem
    int getCount() -> getCount
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean hasStableIds() -> hasStableIds
    boolean isEmpty() -> isEmpty
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.mobeta.android.dslv.DragSortListView$AdapterWrapper$1 -> com.mobeta.android.dslv.DragSortListView$AdapterWrapper$1:
    com.mobeta.android.dslv.DragSortListView$AdapterWrapper this$1 -> this$1
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.mobeta.android.dslv.DragSortListView$DragListener -> com.mobeta.android.dslv.DragSortListView$DragListener:
    void drag(int,int) -> drag
com.mobeta.android.dslv.DragSortListView$DragScrollProfile -> com.mobeta.android.dslv.DragSortListView$DragScrollProfile:
    float getSpeed(float,long) -> getSpeed
com.mobeta.android.dslv.DragSortListView$DragScroller -> com.mobeta.android.dslv.DragSortListView$DragScroller:
    boolean mAbort -> mAbort
    long mPrevTime -> mPrevTime
    long mCurrTime -> mCurrTime
    int dy -> dy
    float dt -> dt
    long tStart -> tStart
    int scrollDir -> scrollDir
    int STOP -> STOP
    int UP -> UP
    int DOWN -> DOWN
    float mScrollSpeed -> mScrollSpeed
    boolean mScrolling -> mScrolling
    int mLastHeader -> mLastHeader
    int mFirstFooter -> mFirstFooter
    com.mobeta.android.dslv.DragSortListView this$0 -> this$0
    boolean isScrolling() -> isScrolling
    int getScrollDir() -> getScrollDir
    void startScrolling(int) -> startScrolling
    void stopScrolling(boolean) -> stopScrolling
    void run() -> run
com.mobeta.android.dslv.DragSortListView$DragSortListener -> com.mobeta.android.dslv.DragSortListView$DragSortListener:
com.mobeta.android.dslv.DragSortListView$DragSortTracker -> com.mobeta.android.dslv.DragSortListView$DragSortTracker:
    java.lang.StringBuilder mBuilder -> mBuilder
    java.io.File mFile -> mFile
    int mNumInBuffer -> mNumInBuffer
    int mNumFlushes -> mNumFlushes
    boolean mTracking -> mTracking
    com.mobeta.android.dslv.DragSortListView this$0 -> this$0
    void startTracking() -> startTracking
    void appendState() -> appendState
    void flush() -> flush
    void stopTracking() -> stopTracking
com.mobeta.android.dslv.DragSortListView$DropAnimator -> com.mobeta.android.dslv.DragSortListView$DropAnimator:
    int mDropPos -> mDropPos
    int srcPos -> srcPos
    float mInitDeltaY -> mInitDeltaY
    float mInitDeltaX -> mInitDeltaX
    com.mobeta.android.dslv.DragSortListView this$0 -> this$0
    void onStart() -> onStart
    int getTargetY() -> getTargetY
    void onUpdate(float,float) -> onUpdate
    void onStop() -> onStop
com.mobeta.android.dslv.DragSortListView$DropListener -> com.mobeta.android.dslv.DragSortListView$DropListener:
    void drop(int,int) -> drop
com.mobeta.android.dslv.DragSortListView$FloatViewManager -> com.mobeta.android.dslv.DragSortListView$FloatViewManager:
    android.view.View onCreateFloatView(int) -> onCreateFloatView
    void onDragFloatView(android.view.View,android.graphics.Point,android.graphics.Point) -> onDragFloatView
    void onDestroyFloatView(android.view.View) -> onDestroyFloatView
com.mobeta.android.dslv.DragSortListView$HeightCache -> com.mobeta.android.dslv.DragSortListView$HeightCache:
    android.util.SparseIntArray mMap -> mMap
    java.util.ArrayList mOrder -> mOrder
    int mMaxSize -> mMaxSize
    com.mobeta.android.dslv.DragSortListView this$0 -> this$0
    void add(int,int) -> add
    int get(int) -> get
    void clear() -> clear
com.mobeta.android.dslv.DragSortListView$LiftAnimator -> com.mobeta.android.dslv.DragSortListView$LiftAnimator:
    float mInitDragDeltaY -> mInitDragDeltaY
    float mFinalDragDeltaY -> mFinalDragDeltaY
    com.mobeta.android.dslv.DragSortListView this$0 -> this$0
    void onStart() -> onStart
    void onUpdate(float,float) -> onUpdate
com.mobeta.android.dslv.DragSortListView$RemoveAnimator -> com.mobeta.android.dslv.DragSortListView$RemoveAnimator:
    float mFloatLocX -> mFloatLocX
    float mFirstStartBlank -> mFirstStartBlank
    float mSecondStartBlank -> mSecondStartBlank
    int mFirstChildHeight -> mFirstChildHeight
    int mSecondChildHeight -> mSecondChildHeight
    int mFirstPos -> mFirstPos
    int mSecondPos -> mSecondPos
    int srcPos -> srcPos
    com.mobeta.android.dslv.DragSortListView this$0 -> this$0
    void onStart() -> onStart
    void onUpdate(float,float) -> onUpdate
    void onStop() -> onStop
com.mobeta.android.dslv.DragSortListView$RemoveListener -> com.mobeta.android.dslv.DragSortListView$RemoveListener:
    void remove(int) -> remove
com.mobeta.android.dslv.DragSortListView$SmoothAnimator -> com.mobeta.android.dslv.DragSortListView$SmoothAnimator:
    long mStartTime -> mStartTime
    float mDurationF -> mDurationF
    float mAlpha -> mAlpha
    float mA -> mA
    float mB -> mB
    float mC -> mC
    float mD -> mD
    boolean mCanceled -> mCanceled
    com.mobeta.android.dslv.DragSortListView this$0 -> this$0
    float transform(float) -> transform
    void start() -> start
    void cancel() -> cancel
    void onStart() -> onStart
    void onUpdate(float,float) -> onUpdate
    void onStop() -> onStop
    void run() -> run
com.mobeta.android.dslv.R -> com.mobeta.android.dslv.R:
com.mobeta.android.dslv.R$attr -> com.mobeta.android.dslv.R$attr:
    int click_remove_id -> click_remove_id
    int collapsed_height -> collapsed_height
    int drag_enabled -> drag_enabled
    int drag_handle_id -> drag_handle_id
    int drag_scroll_start -> drag_scroll_start
    int drag_start_mode -> drag_start_mode
    int drop_animation_duration -> drop_animation_duration
    int fling_handle_id -> fling_handle_id
    int float_alpha -> float_alpha
    int float_background_color -> float_background_color
    int max_drag_scroll_speed -> max_drag_scroll_speed
    int remove_animation_duration -> remove_animation_duration
    int remove_enabled -> remove_enabled
    int remove_mode -> remove_mode
    int slide_shuffle_speed -> slide_shuffle_speed
    int sort_enabled -> sort_enabled
    int track_drag_sort -> track_drag_sort
    int umanoAnchorPoint -> umanoAnchorPoint
    int umanoClipPanel -> umanoClipPanel
    int umanoDragView -> umanoDragView
    int umanoFadeColor -> umanoFadeColor
    int umanoFlingVelocity -> umanoFlingVelocity
    int umanoInitialState -> umanoInitialState
    int umanoOverlay -> umanoOverlay
    int umanoPanelHeight -> umanoPanelHeight
    int umanoParalaxOffset -> umanoParalaxOffset
    int umanoShadowHeight -> umanoShadowHeight
    int use_default_controller -> use_default_controller
com.mobeta.android.dslv.R$drawable -> com.mobeta.android.dslv.R$drawable:
    int above_shadow -> above_shadow
    int below_shadow -> below_shadow
    int ic_launcher -> ic_launcher
com.mobeta.android.dslv.R$id -> com.mobeta.android.dslv.R$id:
    int anchored -> anchored
    int clickRemove -> clickRemove
    int collapsed -> collapsed
    int expanded -> expanded
    int flingRemove -> flingRemove
    int hidden -> hidden
    int onDown -> onDown
    int onLongPress -> onLongPress
    int onMove -> onMove
com.mobeta.android.dslv.R$string -> com.mobeta.android.dslv.R$string:
    int app_name -> app_name
com.mobeta.android.dslv.R$style -> com.mobeta.android.dslv.R$style:
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
com.mobeta.android.dslv.R$styleable -> com.mobeta.android.dslv.R$styleable:
    int[] DragSortListView -> DragSortListView
    int DragSortListView_click_remove_id -> DragSortListView_click_remove_id
    int DragSortListView_collapsed_height -> DragSortListView_collapsed_height
    int DragSortListView_drag_enabled -> DragSortListView_drag_enabled
    int DragSortListView_drag_handle_id -> DragSortListView_drag_handle_id
    int DragSortListView_drag_scroll_start -> DragSortListView_drag_scroll_start
    int DragSortListView_drag_start_mode -> DragSortListView_drag_start_mode
    int DragSortListView_drop_animation_duration -> DragSortListView_drop_animation_duration
    int DragSortListView_fling_handle_id -> DragSortListView_fling_handle_id
    int DragSortListView_float_alpha -> DragSortListView_float_alpha
    int DragSortListView_float_background_color -> DragSortListView_float_background_color
    int DragSortListView_max_drag_scroll_speed -> DragSortListView_max_drag_scroll_speed
    int DragSortListView_remove_animation_duration -> DragSortListView_remove_animation_duration
    int DragSortListView_remove_enabled -> DragSortListView_remove_enabled
    int DragSortListView_remove_mode -> DragSortListView_remove_mode
    int DragSortListView_slide_shuffle_speed -> DragSortListView_slide_shuffle_speed
    int DragSortListView_sort_enabled -> DragSortListView_sort_enabled
    int DragSortListView_track_drag_sort -> DragSortListView_track_drag_sort
    int DragSortListView_use_default_controller -> DragSortListView_use_default_controller
    int[] SlidingUpPanelLayout -> SlidingUpPanelLayout
    int SlidingUpPanelLayout_umanoAnchorPoint -> SlidingUpPanelLayout_umanoAnchorPoint
    int SlidingUpPanelLayout_umanoClipPanel -> SlidingUpPanelLayout_umanoClipPanel
    int SlidingUpPanelLayout_umanoDragView -> SlidingUpPanelLayout_umanoDragView
    int SlidingUpPanelLayout_umanoFadeColor -> SlidingUpPanelLayout_umanoFadeColor
    int SlidingUpPanelLayout_umanoFlingVelocity -> SlidingUpPanelLayout_umanoFlingVelocity
    int SlidingUpPanelLayout_umanoInitialState -> SlidingUpPanelLayout_umanoInitialState
    int SlidingUpPanelLayout_umanoOverlay -> SlidingUpPanelLayout_umanoOverlay
    int SlidingUpPanelLayout_umanoPanelHeight -> SlidingUpPanelLayout_umanoPanelHeight
    int SlidingUpPanelLayout_umanoParalaxOffset -> SlidingUpPanelLayout_umanoParalaxOffset
    int SlidingUpPanelLayout_umanoShadowHeight -> SlidingUpPanelLayout_umanoShadowHeight
com.mobeta.android.dslv.ResourceDragSortCursorAdapter -> com.mobeta.android.dslv.ResourceDragSortCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
com.mobeta.android.dslv.SimpleDragSortCursorAdapter -> com.mobeta.android.dslv.SimpleDragSortCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    com.mobeta.android.dslv.SimpleDragSortCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    com.mobeta.android.dslv.SimpleDragSortCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    com.mobeta.android.dslv.SimpleDragSortCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(com.mobeta.android.dslv.SimpleDragSortCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    com.mobeta.android.dslv.SimpleDragSortCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(com.mobeta.android.dslv.SimpleDragSortCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(android.database.Cursor,java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
com.mobeta.android.dslv.SimpleDragSortCursorAdapter$CursorToStringConverter -> com.mobeta.android.dslv.SimpleDragSortCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
com.mobeta.android.dslv.SimpleDragSortCursorAdapter$ViewBinder -> com.mobeta.android.dslv.SimpleDragSortCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
com.mobeta.android.dslv.SimpleFloatViewManager -> com.mobeta.android.dslv.SimpleFloatViewManager:
    android.graphics.Bitmap mFloatBitmap -> mFloatBitmap
    android.widget.ImageView mImageView -> mImageView
    int mFloatBGColor -> mFloatBGColor
    android.widget.ListView mListView -> mListView
    void setBackgroundColor(int) -> setBackgroundColor
    android.view.View onCreateFloatView(int) -> onCreateFloatView
    void onDragFloatView(android.view.View,android.graphics.Point,android.graphics.Point) -> onDragFloatView
    void onDestroyFloatView(android.view.View) -> onDestroyFloatView
com.nineoldandroids.view.animation.AnimatorProxy -> com.a.a.a.a:
    boolean NEEDS_PROXY -> a
    java.util.WeakHashMap PROXIES -> b
    java.lang.ref.WeakReference mView -> c
    android.graphics.Camera mCamera -> d
    boolean mHasPivot -> e
    float mAlpha -> f
    float mPivotX -> g
    float mPivotY -> h
    float mRotationX -> i
    float mRotationY -> j
    float mRotationZ -> k
    float mScaleX -> l
    float mScaleY -> m
    float mTranslationX -> n
    float mTranslationY -> o
    android.graphics.RectF mBefore -> p
    android.graphics.RectF mAfter -> q
    android.graphics.Matrix mTempMatrix -> r
    com.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View) -> a
    void setTranslationY(float) -> a
    void prepareForUpdate() -> a
    void invalidateAfterUpdate() -> b
    void computeRect(android.graphics.RectF,android.view.View) -> a
    void transformMatrix(android.graphics.Matrix,android.view.View) -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.prize.music.Constants -> com.prize.music.a:
    java.lang.String[] GENRES_DB -> a
    java.lang.String LYRIC_SAVE_PATH -> b
com.prize.music.IApolloService -> com.prize.music.b:
    void openFile(java.lang.String) -> a
    void open(long[],int) -> a
    long getIdFromPath(java.lang.String) -> b
    int getQueuePosition() -> a
    boolean isPlaying() -> b
    void stop() -> c
    void pause() -> d
    void play() -> e
    void prev() -> f
    void next() -> g
    long duration() -> h
    long position() -> i
    long seek(long) -> a
    java.lang.String getTrackName() -> j
    java.lang.String getAlbumName() -> k
    long getAlbumId() -> l
    android.graphics.Bitmap getAlbumBitmap() -> m
    java.lang.String getArtistName() -> n
    long getArtistId() -> o
    void enqueue(long[],int) -> b
    long[] getQueue() -> p
    void setQueuePosition(int) -> a
    java.lang.String getPath() -> q
    long getAudioId() -> r
    void setShuffleMode(int) -> b
    void notifyChange(java.lang.String) -> c
    int getShuffleMode() -> s
    int removeTracks(int,int) -> a
    void moveQueueItem(int,int) -> b
    int removeTrack(long) -> b
    void setRepeatMode(int) -> c
    int getRepeatMode() -> t
    int getMediaMountedCount() -> u
    int getAudioSessionId() -> v
    void addToFavorites(long) -> c
    void removeFromFavorites(long) -> d
    boolean isFavorite(long) -> e
    boolean toggleFavorite() -> w
com.prize.music.IApolloService$Stub -> com.prize.music.c:
    com.prize.music.IApolloService asInterface(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.prize.music.IApolloService$Stub$Proxy -> com.prize.music.d:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    void openFile(java.lang.String) -> a
    void open(long[],int) -> a
    long getIdFromPath(java.lang.String) -> b
    int getQueuePosition() -> a
    boolean isPlaying() -> b
    void stop() -> c
    void pause() -> d
    void play() -> e
    void prev() -> f
    void next() -> g
    long duration() -> h
    long position() -> i
    long seek(long) -> a
    java.lang.String getTrackName() -> j
    java.lang.String getAlbumName() -> k
    long getAlbumId() -> l
    android.graphics.Bitmap getAlbumBitmap() -> m
    java.lang.String getArtistName() -> n
    long getArtistId() -> o
    void enqueue(long[],int) -> b
    long[] getQueue() -> p
    void setQueuePosition(int) -> a
    java.lang.String getPath() -> q
    long getAudioId() -> r
    void setShuffleMode(int) -> b
    void notifyChange(java.lang.String) -> c
    int getShuffleMode() -> s
    int removeTracks(int,int) -> a
    void moveQueueItem(int,int) -> b
    int removeTrack(long) -> b
    void setRepeatMode(int) -> c
    int getRepeatMode() -> t
    int getMediaMountedCount() -> u
    int getAudioSessionId() -> v
    void addToFavorites(long) -> c
    void removeFromFavorites(long) -> d
    boolean isFavorite(long) -> e
    boolean toggleFavorite() -> w
com.prize.music.IfragToActivityLister -> com.prize.music.e:
    void countNum(int) -> a
    void processAction(java.lang.String) -> a
com.prize.music.MusicFloatView -> com.prize.music.MusicFloatView:
    android.content.Context mContext -> a
    android.widget.TextView mCurrentTime -> b
    android.widget.TextView mTotalTime -> c
    android.widget.SeekBar mProgress -> d
    android.widget.TextView mTrackName -> e
    android.widget.ImageButton mPrevButton -> f
    android.widget.ImageButton mPauseButton -> g
    android.widget.ImageButton mNextButton -> h
    android.widget.RelativeLayout mMusicFloatViewRl -> i
    android.widget.ImageButton mCloseButton -> j
    android.widget.ImageButton mJumpToListButton -> k
    int seekmethod -> l
    boolean mDeviceHasDpad -> m
    com.prize.music.IApolloService mService -> n
    long mPosOverride -> o
    boolean mFromTouch -> p
    int mRepeatCount -> q
    int mTouchSlop -> r
    boolean paused -> s
    long mDuration -> t
    boolean mSeeking -> u
    long mStartSeekPos -> v
    long mLastSeekEventTime -> w
    boolean mNeedUpdateDuration -> x
    java.lang.String mPerformanceTestString -> y
    com.prize.music.service.ServiceToken mToken -> z
    int statusBarHeight -> A
    float xInView -> B
    float yInView -> C
    boolean isPressed -> D
    float xDownInScreen -> E
    float yDownInScreen -> F
    float xInScreen -> G
    float yInScreen -> H
    float xMoveLastView -> I
    float yMoveLastView -> J
    android.view.WindowManager$LayoutParams mParams -> K
    android.view.WindowManager windowManager -> L
    android.os.Handler mHandler -> M
    android.content.ServiceConnection osc -> N
    android.view.View$OnClickListener mPauseListener -> O
    android.view.View$OnClickListener mPrevListener -> P
    android.view.View$OnClickListener mNextListener -> Q
    android.view.View$OnClickListener mOperationListener -> R
    com.prize.music.ui.widgets.RepeatingImageButton$RepeatListener mRewListener -> S
    com.prize.music.ui.widgets.RepeatingImageButton$RepeatListener mFfwdListener -> T
    android.widget.SeekBar$OnSeekBarChangeListener mSeekListener -> U
    void initUI() -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setParams(android.view.WindowManager$LayoutParams) -> setParams
    void updateViewPosition() -> b
    int getStatusBarHeight() -> getStatusBarHeight
    void startPlayback() -> c
    void updateTrackInfo() -> d
    void doPauseResume() -> e
    void setPauseButtonImage() -> f
    void queueNextRefresh(long) -> a
    void scanBackward(int,long) -> a
    void scanForward(int,long) -> b
    long refreshNow() -> g
    void updateDuration(long) -> b
    long access$0(com.prize.music.MusicFloatView) -> a
    void access$1(com.prize.music.MusicFloatView,long) -> a
    void access$2(com.prize.music.MusicFloatView) -> b
    com.prize.music.IApolloService access$3(com.prize.music.MusicFloatView) -> c
    android.widget.ImageButton access$4(com.prize.music.MusicFloatView) -> d
    void access$5(com.prize.music.MusicFloatView,long) -> b
    android.widget.TextView access$6(com.prize.music.MusicFloatView) -> e
    void access$7(com.prize.music.MusicFloatView,long) -> c
    android.widget.TextView access$8(com.prize.music.MusicFloatView) -> f
    android.content.Context access$9(com.prize.music.MusicFloatView) -> g
    long access$10(com.prize.music.MusicFloatView) -> h
    android.widget.ImageButton access$11(com.prize.music.MusicFloatView) -> i
    void access$12(com.prize.music.MusicFloatView,com.prize.music.IApolloService) -> a
    void access$13(com.prize.music.MusicFloatView) -> j
    void access$14(com.prize.music.MusicFloatView) -> k
    void access$15(com.prize.music.MusicFloatView,java.lang.String) -> a
    android.os.Handler access$16(com.prize.music.MusicFloatView) -> l
    void access$17(com.prize.music.MusicFloatView,int) -> a
    void access$18(com.prize.music.MusicFloatView,int,long) -> a
    void access$19(com.prize.music.MusicFloatView,int,long) -> b
    void access$20(com.prize.music.MusicFloatView,boolean) -> a
    boolean access$21(com.prize.music.MusicFloatView) -> m
    long access$22(com.prize.music.MusicFloatView) -> n
com.prize.music.MusicFloatView$1 -> com.prize.music.f:
    com.prize.music.MusicFloatView this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.prize.music.MusicFloatView$2 -> com.prize.music.g:
    com.prize.music.MusicFloatView this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.prize.music.MusicFloatView$3 -> com.prize.music.h:
    com.prize.music.MusicFloatView this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.MusicFloatView$4 -> com.prize.music.i:
    com.prize.music.MusicFloatView this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.MusicFloatView$5 -> com.prize.music.j:
    com.prize.music.MusicFloatView this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.MusicFloatView$6 -> com.prize.music.k:
    com.prize.music.MusicFloatView this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.MusicFloatView$7 -> com.prize.music.l:
    com.prize.music.MusicFloatView this$0 -> a
    void onRepeat(android.view.View,long,int) -> a
com.prize.music.MusicFloatView$8 -> com.prize.music.m:
    com.prize.music.MusicFloatView this$0 -> a
    void onRepeat(android.view.View,long,int) -> a
com.prize.music.MusicFloatView$9 -> com.prize.music.n:
    com.prize.music.MusicFloatView this$0 -> a
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
com.prize.music.MusicFloatWindowBroadcastReceiver -> com.prize.music.MusicFloatWindowBroadcastReceiver:
    java.lang.String intentAction -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.prize.music.MusicWindowManager -> com.prize.music.o:
    com.prize.music.MusicFloatView musicFloatView -> a
    android.view.WindowManager$LayoutParams musicViewWindowParams -> b
    android.view.WindowManager mWindowManager -> c
    void createBigWindow(android.content.Context) -> a
    void removeBigWindow(android.content.Context) -> b
    android.view.WindowManager getWindowManager(android.content.Context) -> c
    boolean isWindowShowing() -> a
com.prize.music.NowPlayingCursor -> com.prize.music.p:
    java.lang.String[] mProjection -> a
    android.database.Cursor mCurrentPlaylistCursor -> b
    int mSize -> c
    long[] mNowPlaying -> d
    long[] mCursorIdxs -> e
    android.content.Context context -> f
    com.prize.music.IApolloService mService -> g
    void makeNowPlayingCursor() -> a
    int getCount() -> getCount
    boolean onMove(int,int) -> onMove
    java.lang.String getString(int) -> getString
    short getShort(int) -> getShort
    int getInt(int) -> getInt
    long getLong(int) -> getLong
    float getFloat(int) -> getFloat
    double getDouble(int) -> getDouble
    int getType(int) -> getType
    boolean isNull(int) -> isNull
    java.lang.String[] getColumnNames() -> getColumnNames
    void deactivate() -> deactivate
    boolean requery() -> requery
com.prize.music.activities.AudioPlayerActivity -> com.prize.music.activities.AudioPlayerActivity:
    java.lang.String TAG -> g
    com.prize.music.service.ServiceToken mToken -> h
    android.support.v4.view.ViewPager viewPager -> i
    android.widget.ImageView dot_one_Iv -> j
    android.widget.ImageView dot_two_Iv -> k
    android.widget.ImageView dot_three_Iv -> l
    android.widget.ImageView action_back -> m
    android.widget.ImageView action_setSound -> n
    android.widget.ImageView action_add_love -> o
    android.widget.TextView mTotalTime -> a
    android.widget.TextView mCurrentTime -> b
    android.widget.TextView music_name_Tv -> p
    android.widget.TextView music_singer_Tv -> q
    android.widget.ImageButton mRepeat -> r
    android.widget.ImageButton mPlay -> s
    com.prize.music.ui.widgets.RepeatingImageButton mPrev -> c
    com.prize.music.ui.widgets.RepeatingImageButton mNext -> d
    android.widget.SeekBar mProgress -> e
    long mDuration -> t
    long mLastSeekEventTime -> u
    long mPosOverride -> v
    long mStartSeekPos -> w
    boolean mFromTouch -> x
    boolean paused -> y
    android.widget.ImageView background_image -> z
    android.net.Uri mUri -> A
    java.lang.String mSortOrder -> B
    android.widget.Toast mToast -> C
    android.widget.PopupWindow rightPopupWindow -> D
    android.widget.ListView listView -> E
    com.prize.music.ui.adapters.ShopRightPopAdapter optionsAdapter -> F
    java.util.ArrayList areaDatas -> G
    com.prize.music.ui.adapters.PagerAdapter mPagerAdapter -> H
    android.support.v4.app.DialogFragment df -> f
    android.widget.ImageView background_IV -> I
    int currentPosition -> J
    boolean isNeedRefesh -> K
    java.lang.String whereFrom -> L
    android.os.Handler mHandler -> M
    android.content.BroadcastReceiver mStatusListener -> N
    android.widget.SeekBar$OnSeekBarChangeListener mSeekListener -> O
    com.prize.music.ui.widgets.RepeatingImageButton$RepeatListener mRewListener -> P
    com.prize.music.ui.widgets.RepeatingImageButton$RepeatListener mFfwdListener -> Q
    android.view.View$OnClickListener mDeletePromptListener -> R
    void onCreate(android.os.Bundle) -> onCreate
    void iniPager() -> a
    void init() -> b
    void initPop() -> c
    android.os.Handler getPopWindowHandler() -> d
    void setListener() -> e
    void findViewById() -> f
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onStart() -> onStart
    void queueNextRefresh(long) -> a
    void updateMusicInfo() -> g
    void onStop() -> onStop
    long refreshNow() -> h
    void cycleRepeat() -> i
    void setShuffleButtonImage() -> j
    void setRepeatButtonImage() -> k
    void doPauseResume() -> l
    void setPauseButtonImage() -> m
    void scanBackward(int,long) -> a
    void scanForward(int,long) -> b
    void onDestroy() -> onDestroy
    void onClick(android.view.View) -> onClick
    void countNum(int) -> a
    void processAction(java.lang.String) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    long access$0(com.prize.music.activities.AudioPlayerActivity) -> a
    void access$1(com.prize.music.activities.AudioPlayerActivity,long) -> a
    void access$2(com.prize.music.activities.AudioPlayerActivity) -> b
    android.os.Handler access$3(com.prize.music.activities.AudioPlayerActivity) -> c
    void access$4(com.prize.music.activities.AudioPlayerActivity) -> d
    void access$5(com.prize.music.activities.AudioPlayerActivity) -> e
    boolean access$6(com.prize.music.activities.AudioPlayerActivity) -> f
    com.prize.music.ui.adapters.PagerAdapter access$7(com.prize.music.activities.AudioPlayerActivity) -> g
    void access$8(com.prize.music.activities.AudioPlayerActivity,boolean) -> a
    void access$9(com.prize.music.activities.AudioPlayerActivity,long) -> b
    void access$10(com.prize.music.activities.AudioPlayerActivity,boolean) -> b
    long access$11(com.prize.music.activities.AudioPlayerActivity) -> h
    long access$12(com.prize.music.activities.AudioPlayerActivity) -> i
    void access$13(com.prize.music.activities.AudioPlayerActivity,long) -> c
    long access$14(com.prize.music.activities.AudioPlayerActivity) -> j
    boolean access$15(com.prize.music.activities.AudioPlayerActivity) -> k
    void access$16(com.prize.music.activities.AudioPlayerActivity,int,long) -> a
    void access$17(com.prize.music.activities.AudioPlayerActivity,int,long) -> b
    android.widget.PopupWindow access$18(com.prize.music.activities.AudioPlayerActivity) -> l
    android.net.Uri access$19(com.prize.music.activities.AudioPlayerActivity) -> m
    java.lang.String access$20(com.prize.music.activities.AudioPlayerActivity) -> n
    android.view.View$OnClickListener access$21(com.prize.music.activities.AudioPlayerActivity) -> o
    android.widget.ImageView access$22(com.prize.music.activities.AudioPlayerActivity) -> p
    void access$23(com.prize.music.activities.AudioPlayerActivity,int) -> a
    android.widget.ImageView access$24(com.prize.music.activities.AudioPlayerActivity) -> q
    android.widget.ImageView access$25(com.prize.music.activities.AudioPlayerActivity) -> r
    android.widget.ImageView access$26(com.prize.music.activities.AudioPlayerActivity) -> s
    android.widget.ImageView access$27(com.prize.music.activities.AudioPlayerActivity) -> t
    int access$28(com.prize.music.activities.AudioPlayerActivity) -> u
    void access$29(com.prize.music.activities.AudioPlayerActivity) -> v
    void access$30(com.prize.music.activities.AudioPlayerActivity) -> w
com.prize.music.activities.AudioPlayerActivity$1 -> com.prize.music.activities.a:
    com.prize.music.activities.AudioPlayerActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.prize.music.activities.AudioPlayerActivity$10 -> com.prize.music.activities.b:
    com.prize.music.activities.AudioPlayerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.activities.AudioPlayerActivity$11 -> com.prize.music.activities.c:
    com.prize.music.activities.AudioPlayerActivity this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.prize.music.activities.AudioPlayerActivity$12 -> com.prize.music.activities.d:
    com.prize.music.activities.AudioPlayerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.activities.AudioPlayerActivity$13 -> com.prize.music.activities.e:
    com.prize.music.activities.AudioPlayerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.activities.AudioPlayerActivity$14 -> com.prize.music.activities.f:
    com.prize.music.activities.AudioPlayerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.activities.AudioPlayerActivity$15 -> com.prize.music.activities.g:
    com.prize.music.activities.AudioPlayerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.activities.AudioPlayerActivity$2 -> com.prize.music.activities.h:
    com.prize.music.activities.AudioPlayerActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.prize.music.activities.AudioPlayerActivity$3 -> com.prize.music.activities.i:
    com.prize.music.activities.AudioPlayerActivity this$0 -> a
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
com.prize.music.activities.AudioPlayerActivity$4 -> com.prize.music.activities.j:
    com.prize.music.activities.AudioPlayerActivity this$0 -> a
    void onRepeat(android.view.View,long,int) -> a
com.prize.music.activities.AudioPlayerActivity$5 -> com.prize.music.activities.k:
    com.prize.music.activities.AudioPlayerActivity this$0 -> a
    void onRepeat(android.view.View,long,int) -> a
com.prize.music.activities.AudioPlayerActivity$6 -> com.prize.music.activities.l:
    com.prize.music.activities.AudioPlayerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.activities.AudioPlayerActivity$7 -> com.prize.music.activities.m:
    com.prize.music.activities.AudioPlayerActivity this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.prize.music.activities.AudioPlayerActivity$8 -> com.prize.music.activities.n:
    com.prize.music.activities.AudioPlayerActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.prize.music.activities.AudioPlayerActivity$9 -> com.prize.music.activities.o:
    com.prize.music.activities.AudioPlayerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.activities.EditActivity -> com.prize.music.activities.EditActivity:
    com.prize.music.ui.adapters.list.EditActivityAdapter mAdapter -> a
    android.widget.GridView edit_grideView -> b
    android.database.Cursor mCursor -> c
    int PLAY_SELECTION -> d
    int USE_AS_RINGTONE -> e
    int ADD_TO_PLAYLIST -> f
    int SEARCH -> g
    int mFragmentGroupId -> h
    java.lang.String mSortOrder -> i
    java.lang.String mWhere -> j
    java.lang.String mType -> k
    java.lang.String mTitleColumn -> l
    java.lang.String[] mProjection -> m
    android.net.Uri mUri -> n
    java.util.List mData -> o
    android.widget.TextView edit_fg_all -> p
    android.widget.Button edit_sure -> q
    android.widget.Button edit_neg -> r
    android.widget.ImageView edit_fg_back -> s
    java.util.ArrayList myIds -> t
    android.widget.Button dia_edit_neg -> u
    android.widget.Button dia_edit_sure -> v
    android.app.AlertDialog alertDialog -> w
    int selectCount -> x
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> a
    void initListData(android.database.Cursor) -> a
    void onClick(android.view.View) -> onClick
    void initDialog() -> b
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    int access$1(com.prize.music.activities.EditActivity) -> a
    void access$2(com.prize.music.activities.EditActivity,int) -> a
    android.widget.TextView access$3(com.prize.music.activities.EditActivity) -> b
com.prize.music.activities.EditActivity$1 -> com.prize.music.activities.p:
    com.prize.music.activities.EditActivity this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
com.prize.music.activities.EditActivity$2 -> com.prize.music.activities.q:
    com.prize.music.activities.EditActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.prize.music.activities.MainActivity -> com.prize.music.activities.MainActivity:
    com.prize.music.IfragToActivityLister mIfragToActivity -> a
    com.prize.music.service.ServiceToken mToken -> c
    com.prize.music.ui.fragments.BottomActionBarFragment mBActionbar -> d
    android.widget.LinearLayout mLinearLayout -> b
    android.widget.TextView main_mEdit_delete -> e
    android.widget.TextView main_mEdit_add -> f
    android.widget.TextView main_mEdit_bell -> g
    android.widget.TextView main_mEdit_collection -> h
    java.lang.String TAG -> i
    com.prize.music.ui.fragments.MeFragment meFragment -> j
    com.prize.music.ui.fragments.MusicLibraryFragment mMusicLibraryFragment -> k
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void setListener() -> a
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    void findViewById() -> b
    void init() -> c
    void onClick(android.view.View) -> onClick
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onStart() -> onStart
    void onStop() -> onStop
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean hideOrShowBottonMenu() -> d
    void countNum(int) -> a
    void processAction(java.lang.String) -> a
    void onArticleSelected(int) -> b
    void onDestroy() -> onDestroy
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.prize.music.activities.MainActivity$1 -> com.prize.music.activities.r:
    com.prize.music.activities.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.activities.MyEditListActivity -> com.prize.music.activities.MyEditListActivity:
    com.prize.music.ui.adapters.list.NewListAdapter mAdapter -> a
    android.widget.ListView mListView -> b
    android.database.Cursor mCursor -> c
    long mSelectedId -> d
    int PLAY_SELECTION -> e
    int USE_AS_RINGTONE -> f
    int ADD_TO_PLAYLIST -> g
    int SEARCH -> h
    int mFragmentGroupId -> i
    java.lang.String mSortOrder -> j
    java.lang.String mWhere -> k
    java.lang.String mType -> l
    java.lang.String mTitleColumn -> m
    java.lang.String[] mProjection -> n
    android.net.Uri mUri -> o
    java.util.List mData -> p
    android.widget.TextView mEdit_all -> q
    android.widget.TextView mEdit_neg -> r
    android.widget.LinearLayout mEdit_add -> s
    android.widget.LinearLayout mEdit_delete -> t
    android.widget.LinearLayout mEdit_bell -> u
    android.widget.LinearLayout mEdit_collection -> v
    long[] mList -> w
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void initListData(android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onClick(android.view.View) -> onClick
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
com.prize.music.activities.MyEditListActivity$1 -> com.prize.music.activities.s:
    com.prize.music.activities.MyEditListActivity this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
com.prize.music.activities.MyEditListActivity$2 -> com.prize.music.activities.t:
    com.prize.music.activities.MyEditListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.prize.music.activities.NewListActivity -> com.prize.music.activities.NewListActivity:
    com.prize.music.ui.adapters.list.NewListAdapter mAdapter -> a
    android.widget.ListView mListView -> b
    android.database.Cursor mCursor -> c
    long mSelectedId -> d
    int PLAY_SELECTION -> e
    int USE_AS_RINGTONE -> f
    int ADD_TO_PLAYLIST -> g
    int SEARCH -> h
    int mFragmentGroupId -> i
    java.lang.String mSortOrder -> j
    java.lang.String mWhere -> k
    java.lang.String mType -> l
    java.lang.String mTitleColumn -> m
    java.lang.String[] mProjection -> n
    android.net.Uri mUri -> o
    java.util.List mData -> q
    android.widget.TextView add_fg_all -> r
    android.widget.Button add_sure -> s
    android.widget.Button add_neg -> t
    java.lang.Long new_id -> u
    android.widget.ImageView add_fg_back -> v
    com.prize.music.database.SQLUtils sqlite -> w
    long[] mList -> x
    android.os.Handler mHandler -> p
    int selectCount -> y
    void onCreate(android.os.Bundle) -> onCreate
    void initData() -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void initListData(android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onClick(android.view.View) -> onClick
    void finish() -> finish
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    java.util.List access$1(com.prize.music.activities.NewListActivity) -> a
    long[] access$2(com.prize.music.activities.NewListActivity) -> b
    java.lang.Long access$3(com.prize.music.activities.NewListActivity) -> c
    int access$4(com.prize.music.activities.NewListActivity) -> d
    void access$5(com.prize.music.activities.NewListActivity,int) -> a
    android.widget.TextView access$6(com.prize.music.activities.NewListActivity) -> e
com.prize.music.activities.NewListActivity$1 -> com.prize.music.activities.u:
    com.prize.music.activities.NewListActivity this$0 -> a
    boolean onLongClick(android.view.View) -> onLongClick
com.prize.music.activities.NewListActivity$2 -> com.prize.music.activities.v:
    com.prize.music.activities.NewListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.prize.music.activities.NewListActivity$AddAsyncTask -> com.prize.music.activities.w:
    int count -> a
    android.app.ProgressDialog dialog -> b
    com.prize.music.activities.NewListActivity this$0 -> c
    void onPreExecute() -> onPreExecute
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.prize.music.activities.PlayExternal -> com.prize.music.activities.PlayExternal:
    com.prize.music.service.ServiceToken mToken -> a
    android.net.Uri mUri -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onStart() -> onStart
    void onStop() -> onStop
    void sendBroadCasetToUpdateFile(android.net.Uri) -> a
    void play(android.net.Uri) -> b
    void onCancel(android.content.DialogInterface) -> onCancel
    void playOrEnqueuFile(java.lang.String,long,boolean) -> a
com.prize.music.activities.QuickQueue -> com.prize.music.activities.QuickQueue:
    void onCreate(android.os.Bundle) -> onCreate
com.prize.music.activities.Scroller -> com.prize.music.activities.x:
    void onScroll(int) -> b
com.prize.music.activities.SearchBrowserActivity -> com.prize.music.activities.SearchBrowserActivity:
    java.lang.String TAG -> a
    com.prize.music.activities.SearchBrowserActivity$QueryListAdapter mAdapter -> b
    boolean mAdapterSent -> c
    java.lang.String mFilterString -> d
    com.prize.music.service.ServiceToken mToken -> e
    android.widget.TextView action_back -> f
    android.widget.TextView action_searche -> g
    android.widget.EditText action_search_Edtv -> h
    android.widget.AdapterView$OnItemClickListener listener -> i
    android.graphics.drawable.AnimationDrawable mPeakTwoAnimation -> j
    android.widget.ListView mTrackList -> k
    android.database.Cursor mQueryCursor -> l
    void onCreate(android.os.Bundle) -> onCreate
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void search() -> c
    void onDestroy() -> onDestroy
    void init(android.database.Cursor) -> a
    android.database.Cursor getQueryCursor(android.content.AsyncQueryHandler,java.lang.String) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void hideInputMethod() -> a
    void showInputMethod(android.widget.EditText) -> a
    android.database.Cursor access$0(com.prize.music.activities.SearchBrowserActivity) -> a
    com.prize.music.activities.SearchBrowserActivity$QueryListAdapter access$1(com.prize.music.activities.SearchBrowserActivity) -> b
    void access$2(android.graphics.drawable.AnimationDrawable) -> a
    android.graphics.drawable.AnimationDrawable access$3() -> b
    void access$4(com.prize.music.activities.SearchBrowserActivity,android.database.Cursor) -> a
    android.database.Cursor access$5(com.prize.music.activities.SearchBrowserActivity,android.content.AsyncQueryHandler,java.lang.String) -> a
    void access$6(com.prize.music.activities.SearchBrowserActivity) -> c
com.prize.music.activities.SearchBrowserActivity$1 -> com.prize.music.activities.y:
    com.prize.music.activities.SearchBrowserActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.prize.music.activities.SearchBrowserActivity$2 -> com.prize.music.activities.z:
    com.prize.music.activities.SearchBrowserActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.activities.SearchBrowserActivity$3 -> com.prize.music.activities.aa:
    com.prize.music.activities.SearchBrowserActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.prize.music.activities.SearchBrowserActivity$4 -> com.prize.music.activities.ab:
    com.prize.music.activities.SearchBrowserActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.activities.SearchBrowserActivity$5 -> com.prize.music.activities.ac:
    com.prize.music.activities.SearchBrowserActivity this$0 -> a
    android.widget.EditText val$editText -> b
    void run() -> run
com.prize.music.activities.SearchBrowserActivity$QueryListAdapter -> com.prize.music.activities.ad:
    com.prize.music.activities.SearchBrowserActivity mActivity -> a
    android.content.AsyncQueryHandler mQueryHandler -> b
    java.lang.String mConstraint -> c
    boolean mConstraintIsValid -> d
    void setActivity(com.prize.music.activities.SearchBrowserActivity) -> a
    android.content.AsyncQueryHandler getQueryHandler() -> a
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    com.prize.music.activities.SearchBrowserActivity access$0(com.prize.music.activities.SearchBrowserActivity$QueryListAdapter) -> a
com.prize.music.activities.SearchBrowserActivity$QueryListAdapter$QueryHandler -> com.prize.music.activities.ae:
    com.prize.music.activities.SearchBrowserActivity$QueryListAdapter this$1 -> a
    void onQueryComplete(int,java.lang.Object,android.database.Cursor) -> onQueryComplete
com.prize.music.activities.SimpleEq -> com.prize.music.activities.SimpleEq:
    android.widget.SeekBar bBoost -> a
    android.widget.CheckBox bBoostEnable -> b
    android.widget.CheckBox eQEnable -> c
    com.prize.music.views.VerticalSeekBar[] SeekBars -> d
    android.widget.TextView[] SeekBarLabels -> e
    android.content.SharedPreferences mPreferences -> f
    void onCreate(android.os.Bundle) -> onCreate
    void initEqualizerValues() -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.prize.music.activities.TracksBrowser -> com.prize.music.activities.TracksBrowser:
    java.lang.String TAG -> b
    android.os.Bundle bundle -> c
    android.content.Intent intent -> d
    java.lang.String mimeType -> e
    com.prize.music.service.ServiceToken mToken -> f
    com.prize.music.cache.ImageProvider mImageProvider -> g
    android.support.v4.view.ViewPager mViewPager -> h
    com.prize.music.ui.fragments.BottomActionBarFragment mBActionbar -> a
    android.widget.TextView action_search -> i
    android.widget.TextView action_back -> j
    android.widget.TextView lineTwoView -> k
    android.widget.TextView half_artist_image_text -> l
    android.view.View mHeader -> m
    android.widget.ImageView imageView -> n
    com.prize.music.activities.TracksBrowser$AsyncLoader_GuessInfo mAsyncLoader_GuessInfo -> o
    android.content.BroadcastReceiver mMediaStatusReceiver -> p
    void onCreate(android.os.Bundle) -> onCreate
    void findViewById() -> e
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    void setListener() -> f
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onStart() -> onStart
    void onStop() -> onStop
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void whatBundle(android.os.Bundle) -> a
    void onToggleButton() -> g
    void initUpperHalf() -> h
    void initPager() -> i
    java.lang.String getArtist() -> a
    java.lang.String getAlbum() -> b
    java.lang.String getAlbumId() -> c
    java.lang.String getNumAlbums() -> d
    void onClick(android.view.View) -> onClick
    void countNum(int) -> a
    void processAction(java.lang.String) -> a
    void onScroll(int) -> b
    void onDestroy() -> onDestroy
    android.widget.TextView access$0(com.prize.music.activities.TracksBrowser) -> a
    android.widget.TextView access$1(com.prize.music.activities.TracksBrowser) -> b
    android.support.v4.view.ViewPager access$2(com.prize.music.activities.TracksBrowser) -> c
    android.view.View access$3(com.prize.music.activities.TracksBrowser) -> d
    com.prize.music.cache.ImageProvider access$4(com.prize.music.activities.TracksBrowser) -> e
    android.widget.ImageView access$5(com.prize.music.activities.TracksBrowser) -> f
com.prize.music.activities.TracksBrowser$1 -> com.prize.music.activities.af:
    com.prize.music.activities.TracksBrowser this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.prize.music.activities.TracksBrowser$2 -> com.prize.music.activities.ag:
    com.prize.music.activities.TracksBrowser this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.activities.TracksBrowser$3 -> com.prize.music.activities.ah:
    com.prize.music.activities.TracksBrowser this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.activities.TracksBrowser$AsyncLoader_GuessInfo -> com.prize.music.activities.ai:
    com.prize.music.activities.TracksBrowser this$0 -> a
    android.database.Cursor doInBackground(android.net.Uri[]) -> a
    void onPostExecute(android.database.Cursor) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.prize.music.activities.TracksBrowser$PageListener -> com.prize.music.activities.aj:
    com.prize.music.activities.TracksBrowser this$0 -> a
    void onPageSelected(int) -> onPageSelected
com.prize.music.app.widgets.AppWidget42 -> com.prize.music.app.widgets.AppWidget42:
    com.prize.music.app.widgets.AppWidget42 sInstance -> a
    com.prize.music.service.ApolloService mService -> b
    int[] appWidgetIds -> c
    android.widget.RemoteViews views -> d
    android.os.Handler mHandler -> e
    boolean paused -> f
    long mDuration -> g
    long mPosOverride -> h
    com.prize.music.app.widgets.AppWidget42 getInstance() -> a
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void defaultAppWidget(android.content.Context,int[]) -> a
    void pushUpdate(android.content.Context,int[],android.widget.RemoteViews) -> a
    boolean hasInstances(android.content.Context) -> a
    void notifyChange(com.prize.music.service.ApolloService,java.lang.String) -> a
    void performUpdate(com.prize.music.service.ApolloService,int[]) -> a
    void linkButtons(android.content.Context,android.widget.RemoteViews,boolean) -> a
    void queueNextRefresh(long) -> a
    long refreshNow() -> b
    void onDeleted(android.content.Context,int[]) -> onDeleted
    long access$0(com.prize.music.app.widgets.AppWidget42) -> a
    void access$1(com.prize.music.app.widgets.AppWidget42,long) -> a
com.prize.music.app.widgets.AppWidget42$1 -> com.prize.music.app.widgets.a:
    com.prize.music.app.widgets.AppWidget42 this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.prize.music.base.BaseFragment -> com.prize.music.a.a:
    java.lang.String TAG -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onStop() -> onStop
    void onPause() -> onPause
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void countNum(int) -> a
    void processAction(java.lang.String) -> a
com.prize.music.bean.PopBean -> com.prize.music.b.a:
    java.lang.String areaId -> a
    java.lang.String areaName -> b
    java.lang.String getAreaId() -> a
    java.lang.String getAreaName() -> b
com.prize.music.cache.ImageCache -> com.prize.music.c.a:
    java.lang.String TAG -> a
    android.util.LruCache mLruCache -> b
    com.prize.music.cache.ImageCache sInstance -> c
    com.prize.music.cache.ImageCache getInstance(android.content.Context) -> a
    void init(android.content.Context) -> b
    com.prize.music.cache.ImageCache findOrCreateCache(android.app.Activity) -> a
    void add(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap get(java.lang.String) -> a
    void remove(java.lang.String) -> b
    void clearMemCache() -> a
com.prize.music.cache.ImageCache$1 -> com.prize.music.c.b:
    com.prize.music.cache.ImageCache this$0 -> a
    int sizeOf(java.lang.String,android.graphics.Bitmap) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.prize.music.cache.ImageCache$RetainFragment -> com.prize.music.c.c:
    java.lang.Object mObject -> a
    void onCreate(android.os.Bundle) -> onCreate
    void setObject(java.lang.Object) -> a
    java.lang.Object getObject() -> a
com.prize.music.cache.ImageInfo -> com.prize.music.c.d:
    java.lang.String type -> a
    java.lang.String source -> b
    java.lang.String size -> c
    java.lang.String[] data -> d
com.prize.music.cache.ImageProvider -> com.prize.music.c.e:
    com.prize.music.cache.ImageCache memCache -> a
    java.util.Map pendingImagesMap -> b
    java.util.Set unavailable -> c
    android.content.Context mContext -> d
    int thumbSize -> e
    com.prize.music.cache.ImageProvider mInstance -> f
    com.prize.music.cache.ImageProvider getInstance(android.app.Activity) -> a
    void setImageCache(com.prize.music.cache.ImageCache) -> a
    void loadImage(android.widget.ImageView,com.prize.music.cache.ImageInfo) -> a
    boolean setCachedBitmap(android.widget.ImageView,java.lang.String) -> a
    void handleBitmapUnavailable(android.widget.ImageView,java.lang.String) -> b
    void setLoadedBitmap(android.widget.ImageView,android.graphics.Bitmap,java.lang.String) -> a
    void asyncLoad(java.lang.String,android.widget.ImageView,android.os.AsyncTask,java.lang.String) -> a
    void bitmapReady(android.graphics.Bitmap,java.lang.String) -> a
    void clearFromMemoryCache(java.lang.String) -> a
    void clearAllCaches() -> a
com.prize.music.database.DBUtils -> com.prize.music.d.a:
    com.prize.music.database.DBUtils instance -> a
    com.prize.music.database.DBUtils getInstance(android.content.Context) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.prize.music.database.SQLUtils -> com.prize.music.d.b:
    com.prize.music.database.DBUtils data -> a
    com.prize.music.database.SQLUtils instance -> b
    com.prize.music.database.SQLUtils getInstance(android.content.Context) -> a
com.prize.music.helpers.AddIdCursorLoader -> com.prize.music.e.a:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> a
    android.net.Uri mUri -> b
    java.lang.String[] mProjection -> c
    java.lang.String mSelection -> d
    java.lang.String[] mSelectionArgs -> e
    java.lang.String mSortOrder -> f
    android.database.Cursor mCursor -> g
    android.database.Cursor loadInBackground() -> a
    void registerContentObserver(android.database.Cursor,android.database.ContentObserver) -> a
    void deliverResult(android.database.Cursor) -> a
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> b
    void onReset() -> onReset
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
    java.lang.Object loadInBackground() -> loadInBackground
com.prize.music.helpers.GetBitmapTask -> com.prize.music.e.b:
    java.lang.String TAG -> a
    com.prize.music.helpers.GetBitmapTask$OnBitmapReadyListener mListenerReference -> b
    android.content.Context mContext -> c
    com.prize.music.cache.ImageInfo mImageInfo -> d
    int mThumbSize -> e
    android.graphics.Bitmap doInBackground(java.lang.String[]) -> a
    void onPostExecute(android.graphics.Bitmap) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.prize.music.helpers.GetBitmapTask$OnBitmapReadyListener -> com.prize.music.e.c:
    void bitmapReady(android.graphics.Bitmap,java.lang.String) -> a
com.prize.music.helpers.RefreshableFragment -> com.prize.music.e.d:
com.prize.music.helpers.utils.ApolloUtils -> com.prize.music.e.a.a:
    boolean isTablet(android.content.Context) -> a
    void showUpTitleOnly(android.app.ActionBar) -> a
    boolean isAlbum(java.lang.String) -> a
    boolean isArtist(java.lang.String) -> b
    void setArtistId(java.lang.String,long,java.lang.String,android.content.Context) -> a
    java.lang.Long getArtistId(java.lang.String,java.lang.String,android.content.Context) -> a
    java.lang.String escapeForFileSystem(java.lang.String) -> c
    void showToast(int,android.widget.Toast,android.content.Context) -> a
    void startTracksBrowser(java.lang.String,long,android.database.Cursor,android.content.Context) -> a
com.prize.music.helpers.utils.BlurPic -> com.prize.music.e.a.b:
    float hRadius -> b
    float vRadius -> c
    int iterations -> d
    int SCALE_VAL -> a
    android.graphics.Bitmap blurScale(android.graphics.Bitmap) -> a
    android.graphics.Bitmap doBlur(android.graphics.Bitmap,int,boolean) -> a
com.prize.music.helpers.utils.CommonClickUtils -> com.prize.music.e.a.c:
    long lastClickTime -> a
    boolean isFastDoubleClick() -> a
com.prize.music.helpers.utils.ImageUtils -> com.prize.music.e.a.d:
    java.lang.String TAG -> a
    java.io.File getFile(android.content.Context,com.prize.music.cache.ImageInfo) -> d
    android.graphics.Bitmap getNormalImageFromDisk(android.content.Context,com.prize.music.cache.ImageInfo) -> a
    android.graphics.Bitmap getThumbImageFromDisk(android.content.Context,com.prize.music.cache.ImageInfo,int) -> a
    android.graphics.Bitmap getThumbImageFromDisk(android.content.Context,java.io.File,int) -> a
    java.io.File getImageFromGallery(android.content.Context,com.prize.music.cache.ImageInfo) -> b
    java.io.File getImageFromMediaStore(android.content.Context,com.prize.music.cache.ImageInfo) -> c
    void deleteDiskCache(android.content.Context) -> a
    java.lang.String createShortTag(com.prize.music.cache.ImageInfo) -> a
com.prize.music.helpers.utils.LogUtils -> com.prize.music.e.a.e:
    boolean isDebug -> a
    void i(java.lang.String,java.lang.String) -> a
    void e(java.lang.String,java.lang.String) -> b
com.prize.music.helpers.utils.MusicUtils -> com.prize.music.e.a.f:
    java.lang.StringBuilder sFormatBuilder -> b
    java.util.Formatter sFormatter -> c
    com.prize.music.IApolloService mService -> a
    java.util.HashMap sConnectionMap -> d
    long[] sEmptyList -> e
    java.lang.Object[] sTimeArgs -> f
    android.content.ContentValues[] sContentValuesCache -> g
    android.media.audiofx.Equalizer mEqualizer -> h
    android.media.audiofx.BassBoost mBoost -> i
    java.lang.String TAG -> j
    com.prize.music.service.ServiceToken bindToService(android.content.Context,android.content.ServiceConnection) -> a
    void unbindFromService(com.prize.music.service.ServiceToken) -> a
    void releaseEqualizer() -> a
    void initEqualizer(android.media.MediaPlayer,android.content.Context) -> a
    int[] getEqualizerFrequencies() -> b
    void updateEqualizerSettings(android.content.Context) -> a
    java.lang.String makeAlbumsLabel(android.content.Context,int,int,boolean) -> a
    int getCardId(android.content.Context) -> b
    android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,int) -> a
    android.database.Cursor query(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> a
    void playAll(android.content.Context,android.database.Cursor,int) -> a
    void playAll(android.content.Context,long[],int) -> a
    void playAll(android.content.Context,android.database.Cursor,int,boolean) -> a
    void shuffleAll2(android.content.Context,android.database.Cursor) -> a
    long[] getSongListForCursor(android.database.Cursor) -> a
    void playAll(android.content.Context,long[],int,boolean) -> a
    long[] getQueue() -> c
    int getIntPref(android.content.Context,java.lang.String,int) -> a
    long createPlaylist(android.content.Context,java.lang.String) -> a
    long getFavoritesId(android.content.Context) -> c
    void setRingtone(android.content.Context,long) -> a
    void clearPlaylist(android.content.Context,int) -> a
    void addToPlaylist(android.content.Context,long[],long) -> a
    void makeInsertItems(long[],int,int,int) -> a
    void addToaddToFavorites(android.content.Context,long[]) -> a
    void addToFavorites(android.content.Context,long) -> b
    boolean isFavorite(android.content.Context,long) -> c
    void removeFromFavorites(android.content.Context,long) -> d
    void renamePlaylist(android.content.Context,long,java.lang.String) -> a
    void addToCurrentPlaylist(android.content.Context,long[]) -> b
    java.lang.String makeTimeString(android.content.Context,long) -> e
    long getCurrentAlbumId() -> d
    long getCurrentArtistId() -> e
    long getCurrentAudioId() -> f
    java.lang.String getArtistName() -> g
    java.lang.String getAlbumName() -> h
    java.lang.String getTrackName() -> i
    long getDuration() -> j
    void removeAllTracks() -> k
    int removeTrack(long) -> a
    void setQueuePosition(int) -> a
    java.lang.String getGenreName(android.content.Context,long,boolean) -> a
    java.lang.String parseGenreName(android.content.Context,java.lang.String) -> b
    boolean isPlaying() -> l
    int getQueuePosition() -> m
    void makePlaylistList(android.content.Context,boolean,java.util.List) -> a
    void notifyWidgets(java.lang.String) -> a
    boolean deleteFile(java.lang.String) -> b
    boolean deleteFiles(java.lang.String[]) -> a
    boolean removeTrackFromDatabase(android.content.ContentResolver,long[]) -> a
    boolean removeTrackFromPlaylist(android.content.ContentResolver,long,long[]) -> a
    boolean addTrackToPlaylist(android.content.Context,long,long[]) -> a
    boolean isIdInTheIntArray(long,long[]) -> a
    java.lang.String[] getAudioPaths(android.content.Context,long[]) -> c
    android.database.Cursor getAudioIDs(android.content.Context,long[]) -> d
    java.lang.String getAudioDisPlayName(android.content.Context,long) -> f
    java.util.List getTableList(android.content.Context) -> d
    boolean hasInstalledXiaMi(android.content.Context) -> e
com.prize.music.helpers.utils.StateBarUtils -> com.prize.music.e.a.g:
    void initStateBar(android.app.Activity) -> a
com.prize.music.helpers.utils.ToastUtils -> com.prize.music.e.a.h:
    android.widget.Toast toast -> a
    void showOnceToast(android.content.Context,java.lang.String) -> a
com.prize.music.helpers.utils.VisualizerUtils -> com.prize.music.e.a.i:
    android.media.audiofx.Visualizer mVisualizer -> a
    java.lang.ref.WeakReference mView -> b
    void updateVisualizerView(java.lang.ref.WeakReference) -> a
    void updateVisualizerFFT(byte[]) -> a
    void updateVisualizer(byte[]) -> b
    void releaseVisualizer() -> a
    void initVisualizer(android.media.MediaPlayer) -> a
com.prize.music.helpers.utils.VisualizerUtils$1 -> com.prize.music.e.a.j:
    void onWaveFormDataCapture(android.media.audiofx.Visualizer,byte[],int) -> onWaveFormDataCapture
    void onFftDataCapture(android.media.audiofx.Visualizer,byte[],int) -> onFftDataCapture
com.prize.music.helpers.visualizer.AudioData -> com.prize.music.e.b.a:
    byte[] bytes -> a
com.prize.music.helpers.visualizer.BarGraphRenderer -> com.prize.music.e.b.b:
    android.content.Context mContext -> c
    int[] mData -> d
    void onRender(android.graphics.Canvas,com.prize.music.helpers.visualizer.AudioData,android.graphics.Rect) -> a
    void onRender(android.graphics.Canvas,com.prize.music.helpers.visualizer.FFTData,android.graphics.Rect) -> a
com.prize.music.helpers.visualizer.FFTData -> com.prize.music.e.b.c:
    byte[] bytes -> a
com.prize.music.helpers.visualizer.Renderer -> com.prize.music.e.b.d:
    float[] mPoints -> a
    float[] mFFTPoints -> b
    void onRender(android.graphics.Canvas,com.prize.music.helpers.visualizer.AudioData,android.graphics.Rect) -> a
    void onRender(android.graphics.Canvas,com.prize.music.helpers.visualizer.FFTData,android.graphics.Rect) -> a
    void render(android.graphics.Canvas,com.prize.music.helpers.visualizer.AudioData,android.graphics.Rect) -> b
    void render(android.graphics.Canvas,com.prize.music.helpers.visualizer.FFTData,android.graphics.Rect) -> b
com.prize.music.helpers.visualizer.SolidBarGraphRenderer -> com.prize.music.e.b.e:
    android.content.Context mContext -> c
    int[] mData -> d
    void onRender(android.graphics.Canvas,com.prize.music.helpers.visualizer.AudioData,android.graphics.Rect) -> a
    void onRender(android.graphics.Canvas,com.prize.music.helpers.visualizer.FFTData,android.graphics.Rect) -> a
com.prize.music.helpers.visualizer.WaveformRenderer -> com.prize.music.e.b.f:
    float amplitude -> c
    android.content.Context mContext -> d
    android.graphics.Paint mBrightPaint -> e
    android.graphics.Paint paintBrightBlur -> f
    android.graphics.Paint mPaint -> g
    android.graphics.Paint paintBlur -> h
    void onRender(android.graphics.Canvas,com.prize.music.helpers.visualizer.AudioData,android.graphics.Rect) -> a
    void onRender(android.graphics.Canvas,com.prize.music.helpers.visualizer.FFTData,android.graphics.Rect) -> a
com.prize.music.history.HistoryDao -> com.prize.music.f.a:
    com.prize.music.history.HistoryDao mInstance -> a
    com.prize.music.database.DBUtils dbUtils -> b
    com.prize.music.history.HistoryDao getInstance(android.content.Context) -> a
    boolean insert(android.content.ContentValues) -> a
    boolean deleteByAudioId(long) -> a
    android.database.Cursor queryWithCursor() -> a
com.prize.music.lyric.LyricAdapter -> com.prize.music.g.a:
    java.util.List mLyricSentences -> a
    android.content.Context mContext -> b
    int mIndexOfCurrentSentence -> c
    void setLyric(java.util.List) -> a
    boolean isEmpty() -> isEmpty
    boolean isEnabled(int) -> isEnabled
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setCurrentSentenceIndex(int) -> a
com.prize.music.lyric.LyricAdapter$ViewHolder -> com.prize.music.g.b:
    android.widget.TextView lyric_line -> a
com.prize.music.lyric.LyricDownloadManager -> com.prize.music.g.c:
    int mTimeOut -> a
    com.prize.music.lyric.LyricXMLParser mLyricXMLParser -> b
    java.net.URL mUrl -> c
    int mDownloadLyricId -> d
com.prize.music.lyric.LyricFragment -> com.prize.music.g.d:
    java.lang.String TAG -> b
    android.view.View layoutView -> c
    android.widget.ListView mLrcListView -> d
    com.prize.music.lyric.LyricAdapter mLyricAdapter -> e
    com.prize.music.lyric.LyricLoadHelper mLyricLoadHelper -> f
    com.prize.music.lyric.LyricDownloadManager mLyricDownloadManager -> g
    java.lang.String albumName -> h
    com.prize.music.activities.AudioPlayerActivity activity -> i
    android.widget.TextView lyric_save_detail -> j
    android.widget.LinearLayout lyric_Llyt -> k
    java.lang.String endWith -> l
    java.lang.String displayName -> m
    com.prize.music.lyric.LyricLoadHelper$LyricListener mLyricListener -> n
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void findViewById() -> a
    void setListener() -> b
    void init() -> c
    void updatLyricInfo() -> d
    void loadLyricByHand(java.lang.String,java.lang.String,java.lang.String) -> a
    void refreshUI(int,int) -> a
    com.prize.music.lyric.LyricAdapter access$0(com.prize.music.lyric.LyricFragment) -> a
    android.widget.ListView access$1(com.prize.music.lyric.LyricFragment) -> b
com.prize.music.lyric.LyricFragment$1 -> com.prize.music.g.e:
    com.prize.music.lyric.LyricFragment this$0 -> a
    void onLyricLoaded(java.util.List,int) -> a
    void onLyricSentenceChanged(int) -> a
com.prize.music.lyric.LyricFragment$2 -> com.prize.music.g.f:
    com.prize.music.lyric.LyricFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.lyric.LyricLoadHelper -> com.prize.music.g.g:
    java.util.ArrayList mLyricSentences -> a
    com.prize.music.lyric.LyricLoadHelper$LyricListener mLyricListener -> b
    boolean mHasLyric -> c
    int mIndexOfCurrentSentence -> d
    java.util.regex.Pattern mBracketPattern -> e
    java.util.regex.Pattern mTimePattern -> f
    java.lang.String mEncoding -> g
    void setLyricListener(com.prize.music.lyric.LyricLoadHelper$LyricListener) -> a
    void notifyTime(long) -> a
    int seekSentenceIndex(long) -> b
    void parseLine(java.lang.String) -> b
    java.lang.String trimBracket(java.lang.String) -> c
    long parseTime(java.lang.String) -> d
    boolean loadLyric(java.lang.String) -> a
com.prize.music.lyric.LyricLoadHelper$2 -> com.prize.music.g.h:
    com.prize.music.lyric.LyricLoadHelper this$0 -> a
    int compare(com.prize.music.lyric.LyricSentence,com.prize.music.lyric.LyricSentence) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.prize.music.lyric.LyricLoadHelper$LyricListener -> com.prize.music.g.i:
    void onLyricLoaded(java.util.List,int) -> a
    void onLyricSentenceChanged(int) -> a
com.prize.music.lyric.LyricSentence -> com.prize.music.g.j:
    long startTime -> a
    long duringTime -> b
    java.lang.String contentText -> c
    long getStartTime() -> a
    java.lang.String getContentText() -> b
    void setDuringTime(long) -> a
com.prize.music.lyric.LyricXMLParser -> com.prize.music.g.k:
    java.lang.String ELEMENT_COUNT -> a
    java.lang.String ELEMENT_LRCID -> b
com.prize.music.menu.PlaylistDialog -> com.prize.music.menu.PlaylistDialog:
    android.app.AlertDialog mPlaylistDialog -> a
    java.lang.String action -> b
    android.widget.EditText mPlaylist -> c
    java.lang.String mDefaultName -> d
    java.lang.String mOriginalName -> e
    long mRenameId -> f
    long[] mList -> g
    android.content.DialogInterface$OnClickListener mRenamePlaylistListener -> h
    android.content.DialogInterface$OnClickListener mCreatePlaylistListener -> i
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onCancel(android.content.DialogInterface) -> onCancel
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onShow(android.content.DialogInterface) -> onShow
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    int idForplaylist(java.lang.String) -> a
    java.lang.String makePlaylistName() -> a
    java.lang.String nameForId(long) -> a
    void setSaveButton() -> b
    void onResume() -> onResume
    android.widget.EditText access$0(com.prize.music.menu.PlaylistDialog) -> a
    long access$1(com.prize.music.menu.PlaylistDialog) -> b
    int access$2(com.prize.music.menu.PlaylistDialog,java.lang.String) -> a
com.prize.music.menu.PlaylistDialog$1 -> com.prize.music.menu.a:
    com.prize.music.menu.PlaylistDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.prize.music.menu.PlaylistDialog$2 -> com.prize.music.menu.b:
    com.prize.music.menu.PlaylistDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.prize.music.menu.PlaylistDialog$3 -> com.prize.music.menu.c:
    com.prize.music.menu.PlaylistDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.prize.music.menu.PlaylistPicker -> com.prize.music.menu.PlaylistPicker:
    android.app.AlertDialog mPlayListPickerDialog -> d
    java.util.List mAllPlayLists -> a
    java.util.List mPlayListNames -> b
    long[] mList -> c
    void onCancel(android.content.DialogInterface) -> onCancel
    void onClick(android.content.DialogInterface,int) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onResume() -> onResume
com.prize.music.preferences.SettingsHolder -> com.prize.music.preferences.SettingsHolder:
    android.content.Context mContext -> a
    com.prize.music.service.ServiceToken mToken -> b
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void initChangeWidgetTheme() -> a
    void initAboutDialog() -> b
    void initDependencies() -> c
    void initDeleteCache() -> d
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onStart() -> onStart
    void onStop() -> onStop
com.prize.music.preferences.SettingsHolder$1 -> com.prize.music.preferences.a:
    com.prize.music.preferences.SettingsHolder this$0 -> a
    boolean onPreferenceChange(android.preference.Preference,java.lang.Object) -> onPreferenceChange
com.prize.music.preferences.SettingsHolder$2 -> com.prize.music.preferences.b:
    com.prize.music.preferences.SettingsHolder this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.prize.music.preferences.SettingsHolder$3 -> com.prize.music.preferences.c:
    com.prize.music.preferences.SettingsHolder this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.prize.music.preferences.SettingsHolder$4 -> com.prize.music.preferences.d:
    com.prize.music.preferences.SettingsHolder this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
    com.prize.music.preferences.SettingsHolder access$0(com.prize.music.preferences.SettingsHolder$4) -> a
com.prize.music.preferences.SettingsHolder$4$1 -> com.prize.music.preferences.e:
    com.prize.music.preferences.SettingsHolder$4 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.prize.music.preferences.SettingsHolder$4$2 -> com.prize.music.preferences.f:
    com.prize.music.preferences.SettingsHolder$4 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.prize.music.preferences.SharedPreferencesCompat -> com.prize.music.preferences.g:
    java.lang.reflect.Method sApplyMethod -> a
    java.lang.reflect.Method findApplyMethod() -> a
    void apply(android.content.SharedPreferences$Editor) -> a
com.prize.music.service.ApolloService -> com.prize.music.service.ApolloService:
    android.app.Notification status -> b
    com.prize.music.service.ApolloService$MultiPlayer mPlayer -> c
    java.lang.String mFileToPlay -> d
    int mShuffleMode -> e
    int mRepeatMode -> f
    int mMediaMountedCount -> g
    long[] mAutoShuffleList -> h
    long[] mPlayList -> i
    int mPlayListLen -> j
    java.util.Vector mHistory -> k
    android.database.Cursor mCursor -> l
    int mPlayPos -> m
    int mNextPlayPos -> n
    com.prize.music.service.ApolloService$Shuffler mRand -> o
    int mOpenFailedCounter -> p
    java.lang.String[] mCursorCols -> a
    android.content.BroadcastReceiver mUnmountReceiver -> q
    android.os.PowerManager$WakeLock mWakeLock -> r
    int mServiceStartId -> s
    boolean mServiceInUse -> t
    boolean mIsSupposedToBePlaying -> u
    boolean mQuietMode -> v
    android.media.AudioManager mAudioManager -> w
    boolean mQueueIsSaveable -> x
    boolean mPausedByTransientLossOfFocus -> y
    android.content.SharedPreferences mPreferences -> z
    int mCardId -> A
    com.prize.music.app.widgets.AppWidget42 mAppWidgetProvider4x2 -> B
    java.lang.String mAlbumBitmapTag -> C
    android.graphics.Bitmap mAlbumBitmap -> D
    com.prize.music.helpers.GetBitmapTask mAlbumBitmapTask -> E
    android.media.RemoteControlClient mRemoteControlClient -> F
    android.os.Handler mMediaplayerHandler -> G
    boolean mReceiverUnregistered -> H
    boolean isPause -> I
    android.content.BroadcastReceiver mIntentReceiver -> J
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusListener -> K
    char[] hexdigits -> L
    android.os.Handler mDelayedStopHandler -> M
    android.os.IBinder mBinder -> N
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void saveQueue(boolean) -> b
    void reloadQueue() -> C
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onRebind(android.content.Intent) -> onRebind
    boolean isEventFromMonkey() -> D
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    boolean onUnbind(android.content.Intent) -> onUnbind
    void closeExternalStorageFiles(java.lang.String) -> a
    void registerExternalStorageListener() -> a
    void notifyChange(java.lang.String) -> b
    void ensurePlayListCapacity(int) -> d
    void addToPlayList(long[],int) -> c
    void enqueue(long[],int) -> a
    void open(long[],int) -> b
    long[] getQueue() -> b
    android.database.Cursor getCursorForId(long) -> f
    void openCurrentAndNext() -> E
    void setNextTrack() -> F
    boolean open(java.lang.String) -> c
    void updateHistory() -> G
    long getIdFromPath(java.lang.String) -> d
    void play() -> c
    void updateNotification() -> H
    void stop(boolean) -> c
    void stop() -> d
    void pause() -> e
    boolean isPlaying() -> f
    int getZeroPrevShufflePosition() -> I
    void prev() -> g
    int getNextPosition(boolean) -> d
    void gotoNext(boolean) -> a
    void cycleRepeat() -> h
    void toggleShuffle() -> i
    void gotoIdleState() -> J
    void saveBookmarkIfNeeded() -> K
    void doAutoShuffleUpdate() -> L
    boolean wasRecentlyUsed(int,int) -> c
    boolean makeAutoShuffleList() -> M
    void makePlayList() -> N
    int removeTracks(int,int) -> a
    void moveQueueItem(int,int) -> b
    int removeTracksInternal(int,int) -> d
    void updateAlbumBitmap() -> O
    void bitmapReady(android.graphics.Bitmap,java.lang.String) -> a
    int removeTrack(long) -> a
    void setShuffleMode(int) -> a
    int getShuffleMode() -> j
    void setRepeatMode(int) -> b
    int getRepeatMode() -> k
    int getMediaMountedCount() -> l
    java.lang.String getPath() -> m
    long getAudioId() -> n
    int getQueuePosition() -> o
    void setQueuePosition(int) -> c
    java.lang.String getArtistName() -> p
    long getArtistId() -> q
    java.lang.String getAlbumName() -> r
    long getAlbumId() -> s
    android.graphics.Bitmap getAlbumBitmap() -> t
    java.lang.String getTrackName() -> u
    boolean isPodcast() -> P
    long getBookmark() -> Q
    long duration() -> v
    long position() -> w
    long seek(long) -> b
    int getAudioSessionId() -> x
    boolean toggleFavorite() -> y
    boolean isFavorite() -> z
    boolean isFavorite(long) -> c
    void removeFromFavorites() -> A
    void removeFromFavorites(long) -> d
    void addToFavorites() -> B
    void addToFavorites(long) -> e
    android.os.Handler access$0(com.prize.music.service.ApolloService) -> a
    com.prize.music.service.ApolloService$MultiPlayer access$1(com.prize.music.service.ApolloService) -> b
    boolean access$2(com.prize.music.service.ApolloService) -> c
    void access$3(com.prize.music.service.ApolloService) -> d
    int access$4(com.prize.music.service.ApolloService) -> e
    long[] access$5(com.prize.music.service.ApolloService) -> f
    void access$6(com.prize.music.service.ApolloService,int) -> a
    android.database.Cursor access$7(com.prize.music.service.ApolloService) -> g
    void access$8(com.prize.music.service.ApolloService,android.database.Cursor) -> a
    int access$9(com.prize.music.service.ApolloService) -> h
    android.database.Cursor access$10(com.prize.music.service.ApolloService,long) -> a
    void access$11(com.prize.music.service.ApolloService) -> i
    void access$12(com.prize.music.service.ApolloService) -> j
    void access$13(com.prize.music.service.ApolloService) -> k
    void access$14(com.prize.music.service.ApolloService) -> l
    int access$15(com.prize.music.service.ApolloService) -> m
    android.os.PowerManager$WakeLock access$16(com.prize.music.service.ApolloService) -> n
    void access$17(com.prize.music.service.ApolloService,boolean) -> a
    boolean access$18(com.prize.music.service.ApolloService) -> o
    boolean access$19(com.prize.music.service.ApolloService) -> p
    void access$20(com.prize.music.service.ApolloService,boolean) -> b
    boolean access$21(com.prize.music.service.ApolloService) -> q
    com.prize.music.app.widgets.AppWidget42 access$22(com.prize.music.service.ApolloService) -> r
    boolean access$23(com.prize.music.service.ApolloService) -> s
    void access$24(com.prize.music.service.ApolloService,boolean) -> c
    int access$25(com.prize.music.service.ApolloService) -> t
    void access$26(com.prize.music.service.ApolloService,boolean) -> d
    int access$27(com.prize.music.service.ApolloService) -> u
    void access$28(com.prize.music.service.ApolloService,int) -> b
    void access$29(com.prize.music.service.ApolloService,int) -> c
    void access$30(com.prize.music.service.ApolloService) -> v
com.prize.music.service.ApolloService$1 -> com.prize.music.service.a:
    float mCurrentVolume -> a
    com.prize.music.service.ApolloService this$0 -> b
    void handleMessage(android.os.Message) -> handleMessage
com.prize.music.service.ApolloService$2 -> com.prize.music.service.b:
    com.prize.music.service.ApolloService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.prize.music.service.ApolloService$3 -> com.prize.music.service.c:
    com.prize.music.service.ApolloService this$0 -> a
    void onAudioFocusChange(int) -> onAudioFocusChange
com.prize.music.service.ApolloService$4 -> com.prize.music.service.d:
    com.prize.music.service.ApolloService this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.prize.music.service.ApolloService$5 -> com.prize.music.service.e:
    com.prize.music.service.ApolloService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.prize.music.service.ApolloService$6 -> com.prize.music.service.f:
    com.prize.music.service.ApolloService this$0 -> a
    void run() -> run
com.prize.music.service.ApolloService$7 -> com.prize.music.service.g:
    com.prize.music.service.ApolloService this$0 -> a
    void run() -> run
com.prize.music.service.ApolloService$MultiPlayer -> com.prize.music.service.h:
    android.media.MediaPlayer mCurrentMediaPlayer -> d
    android.media.MediaPlayer mNextMediaPlayer -> e
    android.os.Handler mHandler -> f
    boolean mIsInitialized -> g
    android.media.MediaPlayer$OnCompletionListener listener -> a
    android.media.MediaPlayer$OnErrorListener errorListener -> b
    com.prize.music.service.ApolloService this$0 -> c
    void setDataSource(java.lang.String) -> a
    boolean setDataSourceImpl(android.media.MediaPlayer,java.lang.String) -> a
    void setNextDataSource(java.lang.String) -> b
    boolean isInitialized() -> a
    void start() -> b
    void stop() -> c
    void release() -> d
    void pause() -> e
    void setHandler(android.os.Handler) -> a
    long duration() -> f
    long position() -> g
    long seek(long) -> a
    void setVolume(float) -> a
    int getAudioSessionId() -> h
    android.media.MediaPlayer access$0(com.prize.music.service.ApolloService$MultiPlayer) -> a
    android.media.MediaPlayer access$1(com.prize.music.service.ApolloService$MultiPlayer) -> b
    void access$2(com.prize.music.service.ApolloService$MultiPlayer,android.media.MediaPlayer) -> a
    void access$3(com.prize.music.service.ApolloService$MultiPlayer,android.media.MediaPlayer) -> b
    android.os.Handler access$4(com.prize.music.service.ApolloService$MultiPlayer) -> c
    void access$5(com.prize.music.service.ApolloService$MultiPlayer,boolean) -> a
    com.prize.music.service.ApolloService access$6(com.prize.music.service.ApolloService$MultiPlayer) -> d
com.prize.music.service.ApolloService$MultiPlayer$1 -> com.prize.music.service.i:
    com.prize.music.service.ApolloService$MultiPlayer this$1 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.prize.music.service.ApolloService$MultiPlayer$2 -> com.prize.music.service.j:
    com.prize.music.service.ApolloService$MultiPlayer this$1 -> a
    boolean onError(android.media.MediaPlayer,int,int) -> onError
com.prize.music.service.ApolloService$ServiceStub -> com.prize.music.service.k:
    java.lang.ref.SoftReference mService -> a
    void openFile(java.lang.String) -> a
    void open(long[],int) -> a
    long getIdFromPath(java.lang.String) -> b
    int getQueuePosition() -> a
    void setQueuePosition(int) -> a
    boolean isPlaying() -> b
    void stop() -> c
    void pause() -> d
    void play() -> e
    void prev() -> f
    void next() -> g
    java.lang.String getTrackName() -> j
    java.lang.String getAlbumName() -> k
    android.graphics.Bitmap getAlbumBitmap() -> m
    long getAlbumId() -> l
    java.lang.String getArtistName() -> n
    long getArtistId() -> o
    void enqueue(long[],int) -> b
    long[] getQueue() -> p
    java.lang.String getPath() -> q
    long getAudioId() -> r
    long position() -> i
    long duration() -> h
    long seek(long) -> a
    void setShuffleMode(int) -> b
    int getShuffleMode() -> s
    int removeTracks(int,int) -> a
    void moveQueueItem(int,int) -> b
    int removeTrack(long) -> b
    void setRepeatMode(int) -> c
    int getRepeatMode() -> t
    int getMediaMountedCount() -> u
    int getAudioSessionId() -> v
    void addToFavorites(long) -> c
    void removeFromFavorites(long) -> d
    boolean isFavorite(long) -> e
    boolean toggleFavorite() -> w
    void notifyChange(java.lang.String) -> c
com.prize.music.service.ApolloService$Shuffler -> com.prize.music.service.l:
    int mPrevious -> a
    java.util.Random mRandom -> b
    int nextInt(int) -> a
com.prize.music.service.FloatWindowService -> com.prize.music.service.FloatWindowService:
    android.os.Handler handler -> a
    java.util.Timer timer -> b
    boolean isWindowShowing -> c
    android.os.IBinder onBind(android.content.Intent) -> onBind
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    boolean access$0(com.prize.music.service.FloatWindowService) -> a
    void access$1(com.prize.music.service.FloatWindowService,boolean) -> a
    android.os.Handler access$2(com.prize.music.service.FloatWindowService) -> b
com.prize.music.service.FloatWindowService$RefreshTask -> com.prize.music.service.m:
    com.prize.music.service.FloatWindowService this$0 -> a
    void run() -> run
    com.prize.music.service.FloatWindowService access$0(com.prize.music.service.FloatWindowService$RefreshTask) -> a
com.prize.music.service.FloatWindowService$RefreshTask$1 -> com.prize.music.service.n:
    com.prize.music.service.FloatWindowService$RefreshTask this$1 -> a
    void run() -> run
com.prize.music.service.MediaButtonIntentReceiver -> com.prize.music.service.MediaButtonIntentReceiver:
    long mLastClickTime -> a
    boolean mDown -> b
    boolean mLaunched -> c
    android.os.Handler mHandler -> d
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean access$0() -> a
    void access$1(boolean) -> a
com.prize.music.service.MediaButtonIntentReceiver$1 -> com.prize.music.service.o:
    void handleMessage(android.os.Message) -> handleMessage
com.prize.music.service.ServiceBinder -> com.prize.music.service.p:
    android.content.ServiceConnection mCallback -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.prize.music.service.ServiceToken -> com.prize.music.service.q:
    android.content.ContextWrapper mWrappedContext -> a
com.prize.music.ui.adapters.AlbumArtPagerAdapter -> com.prize.music.ui.a.a:
    java.util.ArrayList mFragments -> a
    void addFragment(android.support.v4.app.Fragment) -> a
    int getCount() -> getCount
    android.support.v4.app.Fragment getItem(int) -> getItem
    int getItemPosition(java.lang.Object) -> getItemPosition
com.prize.music.ui.adapters.MainPopAdapter -> com.prize.music.ui.a.b:
    java.util.ArrayList list -> a
    android.app.Activity activity -> b
    android.os.Handler handler -> c
    com.prize.music.ui.adapters.MainPopAdapter$OnItemClickListener mOnItemClickListener -> d
    android.view.View$OnClickListener onClickListener -> e
    int selectedPos -> f
    java.lang.String selectedText -> g
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    void init() -> a
    void setSelectedPosition(int) -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void access$0(com.prize.music.ui.adapters.MainPopAdapter,int) -> a
    int access$1(com.prize.music.ui.adapters.MainPopAdapter) -> a
    com.prize.music.ui.adapters.MainPopAdapter$OnItemClickListener access$2(com.prize.music.ui.adapters.MainPopAdapter) -> b
    java.util.ArrayList access$3(com.prize.music.ui.adapters.MainPopAdapter) -> c
    android.os.Handler access$4(com.prize.music.ui.adapters.MainPopAdapter) -> d
com.prize.music.ui.adapters.MainPopAdapter$1 -> com.prize.music.ui.a.c:
    com.prize.music.ui.adapters.MainPopAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.adapters.MainPopAdapter$OnItemClickListener -> com.prize.music.ui.a.d:
    void onItemClick(android.view.View,int) -> a
com.prize.music.ui.adapters.PagerAdapter -> com.prize.music.ui.a.e:
    java.util.ArrayList mFragments -> a
    void addFragment(android.support.v4.app.Fragment) -> a
    int getCount() -> getCount
    android.support.v4.app.Fragment getItem(int) -> getItem
com.prize.music.ui.adapters.QuickQueueAdapter -> com.prize.music.ui.a.f:
    java.lang.ref.WeakReference holderReference -> a
    android.content.Context mContext -> b
    com.prize.music.cache.ImageProvider mImageProvider -> c
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.prize.music.ui.adapters.ScrollingTabsAdapter -> com.prize.music.ui.a.g:
    android.app.Activity activity -> a
    android.view.View getView(int) -> a
com.prize.music.ui.adapters.ShopRightPopAdapter -> com.prize.music.ui.a.h:
    java.util.ArrayList list -> a
    android.app.Activity activity -> b
    android.os.Handler handler -> c
    com.prize.music.ui.adapters.ShopRightPopAdapter$OnItemClickListener mOnItemClickListener -> d
    android.view.View$OnClickListener onClickListener -> e
    int selectedPos -> f
    java.lang.String selectedText -> g
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    void init() -> a
    void setSelectedPosition(int) -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void access$0(com.prize.music.ui.adapters.ShopRightPopAdapter,int) -> a
    int access$1(com.prize.music.ui.adapters.ShopRightPopAdapter) -> a
    com.prize.music.ui.adapters.ShopRightPopAdapter$OnItemClickListener access$2(com.prize.music.ui.adapters.ShopRightPopAdapter) -> b
    java.util.ArrayList access$3(com.prize.music.ui.adapters.ShopRightPopAdapter) -> c
    android.os.Handler access$4(com.prize.music.ui.adapters.ShopRightPopAdapter) -> d
com.prize.music.ui.adapters.ShopRightPopAdapter$1 -> com.prize.music.ui.a.i:
    com.prize.music.ui.adapters.ShopRightPopAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.adapters.ShopRightPopAdapter$OnItemClickListener -> com.prize.music.ui.a.j:
    void onItemClick(android.view.View,int) -> a
com.prize.music.ui.adapters.TabAdapter -> com.prize.music.ui.a.k:
    android.view.View getView(int) -> a
com.prize.music.ui.adapters.base.AlbumGridViewAdapter -> com.prize.music.ui.a.a.a:
    java.lang.ref.WeakReference holderReference -> h
    android.content.Context mContext -> a
    com.prize.music.cache.ImageProvider mImageProvider -> i
    java.lang.String mGridType -> b
    java.lang.String mLineOneText -> c
    java.lang.String mLineTwoText -> d
    java.lang.String[] mImageData -> e
    long mPlayingId -> f
    long mCurrentId -> g
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setupViewData(android.database.Cursor) -> a
com.prize.music.ui.adapters.base.DragSortListViewAdapter -> com.prize.music.ui.a.a.b:
    android.graphics.drawable.AnimationDrawable mPeakTwoAnimation -> i
    java.lang.ref.WeakReference holderReference -> j
    android.content.Context mContext -> a
    com.prize.music.cache.ImageProvider mImageProvider -> k
    java.lang.String mLineOneText -> b
    java.lang.String mLineTwoText -> c
    java.lang.String[] mImageData -> d
    long mPlayingId -> e
    long mCurrentId -> f
    java.util.Map isSelected -> g
    boolean mode -> l
    java.util.ArrayList names -> h
    android.os.Handler mHandler -> m
    android.view.View$OnClickListener showContextMenu -> n
    void changeCursor(android.database.Cursor) -> changeCursor
    void setMode(boolean) -> a
    void setSelectAll(boolean) -> b
    void init(android.database.Cursor) -> b
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setupViewData(android.database.Cursor) -> a
    int[] getSelectedItemPositions() -> a
    long[] getSelectedAudioIds() -> b
    android.graphics.drawable.AnimationDrawable access$0(com.prize.music.ui.adapters.base.DragSortListViewAdapter) -> a
com.prize.music.ui.adapters.base.DragSortListViewAdapter$1 -> com.prize.music.ui.a.a.c:
    com.prize.music.ui.adapters.base.DragSortListViewAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.adapters.base.DragSortListViewAdapter$2 -> com.prize.music.ui.a.a.d:
    com.prize.music.ui.adapters.base.DragSortListViewAdapter this$0 -> a
    void run() -> run
com.prize.music.ui.adapters.base.GridViewAdapter -> com.prize.music.ui.a.a.e:
    android.graphics.drawable.AnimationDrawable mPeakTwoAnimation -> h
    android.content.Context mContext -> a
    com.prize.music.cache.ImageProvider mImageProvider -> i
    java.lang.String mGridType -> b
    java.lang.String mLineOneText -> c
    java.lang.String mLineTwoText -> d
    java.lang.String[] mImageData -> e
    long mPlayingId -> f
    long mCurrentId -> g
    boolean scrollState -> j
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setupViewData(android.database.Cursor) -> a
com.prize.music.ui.adapters.base.ListViewAdapter -> com.prize.music.ui.a.a.f:
    android.graphics.drawable.AnimationDrawable mPeakTwoAnimation -> i
    android.content.Context mContext -> a
    int left -> j
    int top -> k
    java.lang.String mListType -> b
    java.lang.String mLineOneText -> c
    java.lang.String mLineTwoText -> d
    java.lang.String[] mImageData -> e
    long mPlayingId -> f
    long mCurrentId -> g
    boolean showContextEnabled -> h
    android.util.SparseBooleanArray mCheckedStates -> l
    boolean isSelectMode -> m
    boolean isSelectAll -> n
    android.os.Handler mHandler -> o
    android.view.View oldView -> p
    boolean isSelectAll() -> a
    void setSelectMode(boolean) -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void play(android.view.View) -> a
    void showAnim(android.widget.ImageView) -> a
    void setupViewData(android.database.Cursor) -> a
    void selectAllItem(boolean) -> b
    void setIsSelectAll(boolean) -> c
    void toggleCheckedState(int) -> a
    int[] getSelectedItemPositions() -> b
    long[] getSelectedAudioIds() -> c
    android.graphics.drawable.AnimationDrawable access$0(com.prize.music.ui.adapters.base.ListViewAdapter) -> a
com.prize.music.ui.adapters.base.ListViewAdapter$1 -> com.prize.music.ui.a.a.g:
    com.prize.music.ui.adapters.base.ListViewAdapter this$0 -> a
    void run() -> run
com.prize.music.ui.adapters.base.ListViewAlbumAdapter -> com.prize.music.ui.a.a.h:
    android.graphics.drawable.AnimationDrawable mPeakTwoAnimation -> i
    java.lang.ref.WeakReference holderReference -> j
    android.content.Context mContext -> a
    com.prize.music.cache.ImageProvider mImageProvider -> k
    java.lang.String mGridType -> b
    java.lang.String mLineOneText -> c
    java.lang.String mLineTwoText -> d
    java.lang.String mLineThreeText -> e
    java.lang.String[] mImageData -> f
    long mPlayingId -> g
    long mCurrentId -> h
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setupViewData(android.database.Cursor) -> a
com.prize.music.ui.adapters.grid.AlbumAdapter -> com.prize.music.ui.a.b.a:
    void setupViewData(android.database.Cursor) -> a
com.prize.music.ui.adapters.grid.ArtistAdapter -> com.prize.music.ui.a.b.b:
    void setupViewData(android.database.Cursor) -> a
com.prize.music.ui.adapters.list.AlbumListAdapter -> com.prize.music.ui.a.c.a:
    void setupViewData(android.database.Cursor) -> a
com.prize.music.ui.adapters.list.ArtistAlbumAdapter -> com.prize.music.ui.a.c.b:
    void setupViewData(android.database.Cursor) -> a
com.prize.music.ui.adapters.list.ArtistListAdapter -> com.prize.music.ui.a.c.c:
    void setupViewData(android.database.Cursor) -> a
com.prize.music.ui.adapters.list.EditActivityAdapter -> com.prize.music.ui.a.c.d:
    android.view.LayoutInflater mInflater -> b
    java.util.List mData -> c
    java.util.Map isSelected -> a
    void init(java.lang.Boolean) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.prize.music.ui.adapters.list.EditActivityAdapter$EditViewHolder -> com.prize.music.ui.a.c.e:
    android.widget.TextView title -> a
    android.widget.ImageView img -> b
    android.widget.CheckBox cb -> c
    com.prize.music.ui.adapters.list.EditActivityAdapter this$0 -> d
com.prize.music.ui.adapters.list.GenreListAdapter -> com.prize.music.ui.a.c.f:
    void setupViewData(android.database.Cursor) -> a
com.prize.music.ui.adapters.list.MyGridViewAdapter -> com.prize.music.ui.a.c.g:
    android.content.Context mContext -> a
    java.lang.String mListType -> b
    java.lang.String mLineOneText -> c
    java.lang.String mLineTwoText -> d
    java.lang.String[] mImageData -> e
    long mPlayingId -> f
    long mCurrentId -> g
    boolean showContextEnabled -> h
    android.view.LayoutInflater inflater -> i
    android.support.v4.app.FragmentActivity mActivity -> j
    android.view.View$OnClickListener showContextMenu -> k
    long getItemId(int) -> getItemId
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    void changeCursor(android.database.Cursor) -> changeCursor
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void setupViewData(android.database.Cursor) -> a
com.prize.music.ui.adapters.list.MyGridViewAdapter$1 -> com.prize.music.ui.a.c.h:
    com.prize.music.ui.adapters.list.MyGridViewAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.adapters.list.MyGridViewAdapter$GridViewHolder -> com.prize.music.ui.a.c.i:
    android.widget.TextView title -> a
    android.widget.ImageView img -> b
    android.widget.CheckBox cb -> c
    com.prize.music.ui.adapters.list.MyGridViewAdapter this$0 -> d
com.prize.music.ui.adapters.list.NewListAdapter -> com.prize.music.ui.a.c.j:
    android.view.LayoutInflater mInflater -> b
    java.util.List mData -> c
    java.util.Map isSelected -> a
    void init(java.lang.Boolean) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.prize.music.ui.adapters.list.NewListAdapter$NewViewHolder -> com.prize.music.ui.a.c.k:
    android.widget.TextView title -> a
    android.widget.TextView artist -> b
    android.widget.CheckBox cb -> c
    com.prize.music.ui.adapters.list.NewListAdapter this$0 -> d
com.prize.music.ui.adapters.list.PlaylistListAdapter -> com.prize.music.ui.a.c.l:
    long mPlaylistId -> i
    void setupViewData(android.database.Cursor) -> a
    void drop(int,int) -> drop
    void remove(int) -> remove
com.prize.music.ui.adapters.list.PopupWindowAdapter -> com.prize.music.ui.a.c.m:
    android.view.LayoutInflater mInflater -> a
    java.util.List mLists -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.prize.music.ui.adapters.list.PopupWindowAdapter$ViewHlder -> com.prize.music.ui.a.c.n:
    android.widget.TextView title -> a
    com.prize.music.ui.adapters.list.PopupWindowAdapter this$0 -> b
com.prize.music.ui.adapters.list.RecentlyAddedAdapter -> com.prize.music.ui.a.c.o:
    void setupViewData(android.database.Cursor) -> a
com.prize.music.ui.adapters.list.RecentlyPlayAdapter -> com.prize.music.ui.a.c.p:
    void setupViewData(android.database.Cursor) -> a
com.prize.music.ui.adapters.list.SonglistAdapter -> com.prize.music.ui.a.c.q:
    void setupViewData(android.database.Cursor) -> a
com.prize.music.ui.fragments.AlbumArtFragment -> com.prize.music.ui.fragments.a:
    android.widget.ImageView albumArt -> a
    com.prize.music.service.ServiceToken mToken -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onStart() -> onStart
    void onStop() -> onStop
com.prize.music.ui.fragments.AudioPlayerFragment -> com.prize.music.ui.fragments.AudioPlayerFragment:
    android.widget.TextView mTotalTime -> b
    android.widget.TextView mCurrentTime -> c
    android.support.v4.view.ViewPager mAlbumArtPager -> d
    com.prize.music.ui.adapters.AlbumArtPagerAdapter mPagerAdapter -> e
    android.widget.ImageButton mRepeat -> f
    android.widget.ImageButton mPlay -> g
    android.widget.ImageButton mShuffle -> h
    com.prize.music.ui.widgets.RepeatingImageButton mPrev -> i
    com.prize.music.ui.widgets.RepeatingImageButton mNext -> j
    android.widget.SeekBar mProgress -> k
    long mDuration -> l
    long mLastSeekEventTime -> m
    long mPosOverride -> n
    long mStartSeekPos -> o
    boolean mFromTouch -> p
    boolean paused -> q
    android.view.View root -> a
    android.widget.Toast mToast -> r
    android.content.BroadcastReceiver mStatusListener -> s
    com.prize.music.ui.widgets.RepeatingImageButton$RepeatListener mRewListener -> t
    com.prize.music.ui.widgets.RepeatingImageButton$RepeatListener mFfwdListener -> u
    android.os.Handler mHandler -> v
    android.widget.SeekBar$OnSeekBarChangeListener mSeekListener -> w
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void init() -> a
    void setListener() -> b
    void findViewById() -> c
    void onStart() -> onStart
    void onDestroy() -> onDestroy
    void cycleRepeat() -> d
    void doPauseResume() -> e
    void toggleShuffle() -> f
    void scanBackward(int,long) -> a
    void scanForward(int,long) -> b
    void setRepeatButtonImage() -> g
    void setShuffleButtonImage() -> h
    void setPauseButtonImage() -> i
    void queueNextRefresh(long) -> a
    long refreshNow() -> j
    void updateMusicInfo() -> k
    android.os.Handler access$0(com.prize.music.ui.fragments.AudioPlayerFragment) -> a
    void access$1(com.prize.music.ui.fragments.AudioPlayerFragment) -> b
    void access$2(com.prize.music.ui.fragments.AudioPlayerFragment) -> c
    void access$3(com.prize.music.ui.fragments.AudioPlayerFragment) -> d
    void access$4(com.prize.music.ui.fragments.AudioPlayerFragment,int,long) -> a
    void access$5(com.prize.music.ui.fragments.AudioPlayerFragment,int,long) -> b
    long access$6(com.prize.music.ui.fragments.AudioPlayerFragment) -> e
    void access$7(com.prize.music.ui.fragments.AudioPlayerFragment,long) -> a
    void access$8(com.prize.music.ui.fragments.AudioPlayerFragment) -> f
    void access$9(com.prize.music.ui.fragments.AudioPlayerFragment,long) -> b
    void access$10(com.prize.music.ui.fragments.AudioPlayerFragment,boolean) -> a
    long access$11(com.prize.music.ui.fragments.AudioPlayerFragment) -> g
    long access$12(com.prize.music.ui.fragments.AudioPlayerFragment) -> h
    void access$13(com.prize.music.ui.fragments.AudioPlayerFragment,long) -> c
    long access$14(com.prize.music.ui.fragments.AudioPlayerFragment) -> i
    boolean access$15(com.prize.music.ui.fragments.AudioPlayerFragment) -> j
    void access$16(com.prize.music.ui.fragments.AudioPlayerFragment) -> k
    void access$17(com.prize.music.ui.fragments.AudioPlayerFragment) -> l
    void access$18(com.prize.music.ui.fragments.AudioPlayerFragment) -> m
com.prize.music.ui.fragments.AudioPlayerFragment$1 -> com.prize.music.ui.fragments.b:
    com.prize.music.ui.fragments.AudioPlayerFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.prize.music.ui.fragments.AudioPlayerFragment$10 -> com.prize.music.ui.fragments.c:
    com.prize.music.ui.fragments.AudioPlayerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.AudioPlayerFragment$2 -> com.prize.music.ui.fragments.d:
    com.prize.music.ui.fragments.AudioPlayerFragment this$0 -> a
    void onRepeat(android.view.View,long,int) -> a
com.prize.music.ui.fragments.AudioPlayerFragment$3 -> com.prize.music.ui.fragments.e:
    com.prize.music.ui.fragments.AudioPlayerFragment this$0 -> a
    void onRepeat(android.view.View,long,int) -> a
com.prize.music.ui.fragments.AudioPlayerFragment$4 -> com.prize.music.ui.fragments.f:
    com.prize.music.ui.fragments.AudioPlayerFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.prize.music.ui.fragments.AudioPlayerFragment$5 -> com.prize.music.ui.fragments.g:
    com.prize.music.ui.fragments.AudioPlayerFragment this$0 -> a
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
com.prize.music.ui.fragments.AudioPlayerFragment$6 -> com.prize.music.ui.fragments.h:
    com.prize.music.ui.fragments.AudioPlayerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.AudioPlayerFragment$7 -> com.prize.music.ui.fragments.i:
    com.prize.music.ui.fragments.AudioPlayerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.AudioPlayerFragment$8 -> com.prize.music.ui.fragments.j:
    com.prize.music.ui.fragments.AudioPlayerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.AudioPlayerFragment$9 -> com.prize.music.ui.fragments.k:
    com.prize.music.ui.fragments.AudioPlayerFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.BottomActionBarFragment -> com.prize.music.ui.fragments.BottomActionBarFragment:
    android.widget.ImageButton mPlay -> a
    android.widget.ImageButton mNext -> b
    com.prize.music.ui.widgets.BottomActionBar mBottomActionBar -> c
    android.widget.RelativeLayout bottom_action_bar_dragview -> d
    android.content.BroadcastReceiver mMediaStatusReceiver -> e
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.widget.RelativeLayout getBottom_action_bar_dragview() -> a
    void onStart() -> onStart
    void updateBottomActionBar() -> b
    void onStop() -> onStop
    void doPauseResume() -> c
    void setPauseButtonImage() -> d
    void access$0(com.prize.music.ui.fragments.BottomActionBarFragment) -> a
com.prize.music.ui.fragments.BottomActionBarFragment$1 -> com.prize.music.ui.fragments.l:
    com.prize.music.ui.fragments.BottomActionBarFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.prize.music.ui.fragments.BottomActionBarFragment$2 -> com.prize.music.ui.fragments.m:
    com.prize.music.ui.fragments.BottomActionBarFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.BottomActionBarFragment$3 -> com.prize.music.ui.fragments.n:
    com.prize.music.ui.fragments.BottomActionBarFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.MeFragment -> com.prize.music.ui.fragments.o:
    android.widget.GridView mGridView -> a
    android.widget.ListAdapter adapter -> p
    android.support.v4.widget.SimpleCursorAdapter meAdapter -> q
    int[] imageData -> r
    android.view.View layoutView -> s
    com.prize.music.activities.MainActivity mainActivity -> t
    android.widget.TextView search_Tv -> u
    com.prize.music.views.SongListGridView me_grideView -> v
    android.widget.TextView head_edit -> w
    android.database.Cursor mCursor -> b
    int PLAY_SELECTION -> c
    int USE_AS_RINGTONE -> d
    int ADD_TO_PLAYLIST -> e
    int SEARCH -> f
    int mFragmentGroupId -> g
    java.lang.String mSortOrder -> h
    java.lang.String mWhere -> i
    java.lang.String mType -> j
    java.lang.String mTitleColumn -> k
    java.lang.String[] mProjection -> l
    android.net.Uri mUri -> m
    long new_id -> x
    android.widget.EditText dia_edit -> y
    android.app.AlertDialog createDialog -> z
    int listCount -> n
    android.widget.ImageView mOnlineBtn -> o
    boolean hasInstalledXiaMi -> A
    android.widget.RelativeLayout mOnLineRelayout -> B
    android.widget.AdapterView$OnItemClickListener meGrideItemListener -> C
    android.widget.AdapterView$OnItemClickListener grideViewListener -> D
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void findViewById() -> f
    void setListener() -> g
    void init() -> h
    void onClick(android.view.View) -> onClick
    void initDialog() -> i
    void setupFragmentData() -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
    void startTracksBrowser2(java.lang.String,long,android.database.Cursor,android.content.Context,java.lang.Long,android.support.v4.app.FragmentTransaction,java.lang.String) -> a
    void createTbleDialog() -> b
    int getlistCount() -> c
    boolean isNum(java.lang.String) -> a
    void sure() -> d
    int idForplaylist(java.lang.String) -> b
    void refresh() -> e
    void dissmissDialog() -> j
    void isShowXiaMiOnLine(boolean) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    com.prize.music.activities.MainActivity access$1(com.prize.music.ui.fragments.MeFragment) -> a
    void access$2(com.prize.music.ui.fragments.MeFragment) -> b
    void access$3(com.prize.music.ui.fragments.MeFragment,long) -> a
    long access$4(com.prize.music.ui.fragments.MeFragment) -> c
com.prize.music.ui.fragments.MeFragment$1 -> com.prize.music.ui.fragments.p:
    com.prize.music.ui.fragments.MeFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.prize.music.ui.fragments.MeFragment$2 -> com.prize.music.ui.fragments.q:
    com.prize.music.ui.fragments.MusicLibraryFragment mMusicLibraryFragment -> b
    com.prize.music.ui.fragments.MeFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.prize.music.ui.fragments.MeFragment$3 -> com.prize.music.ui.fragments.r:
    com.prize.music.ui.fragments.MeFragment this$0 -> a
    void run() -> run
com.prize.music.ui.fragments.MusicLibraryFragment -> com.prize.music.ui.fragments.s:
    android.widget.TextView action_back -> e
    android.widget.TextView action_search -> f
    com.prize.music.activities.MainActivity mainActivity -> g
    android.view.View layoutView -> h
    android.support.v4.view.ViewPager mViewPager -> i
    android.widget.RelativeLayout action_back_Rlyt -> b
    android.widget.RelativeLayout select_Rlyt -> c
    com.prize.music.ui.adapters.PagerAdapter mPagerAdapter -> d
    android.widget.TextView action_cancel -> j
    android.widget.TextView action_sure -> k
    com.prize.music.IfragToActivityLister mIfragToActivity -> l
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void init() -> a
    void setListener() -> b
    void updateSelectState(boolean) -> a
    void updateViews(boolean) -> b
    void findViewById() -> c
    void initPager() -> d
    void initScrollableTabs(android.support.v4.view.ViewPager) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onDestroy() -> onDestroy
    void onAttach(android.app.Activity) -> onAttach
    void onPageSelected(int) -> b
    void onHiddenChanged(boolean) -> onHiddenChanged
    com.prize.music.activities.MainActivity access$0(com.prize.music.ui.fragments.MusicLibraryFragment) -> a
    android.widget.TextView access$1(com.prize.music.ui.fragments.MusicLibraryFragment) -> b
    com.prize.music.IfragToActivityLister access$2(com.prize.music.ui.fragments.MusicLibraryFragment) -> c
com.prize.music.ui.fragments.MusicLibraryFragment$1 -> com.prize.music.ui.fragments.t:
    com.prize.music.ui.fragments.MusicLibraryFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.MusicLibraryFragment$2 -> com.prize.music.ui.fragments.u:
    com.prize.music.ui.fragments.MusicLibraryFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.MusicLibraryFragment$3 -> com.prize.music.ui.fragments.v:
    com.prize.music.ui.fragments.MusicLibraryFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.MusicLibraryFragment$4 -> com.prize.music.ui.fragments.w:
    com.prize.music.ui.fragments.MusicLibraryFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.base.AlbumsListGridFragment -> com.prize.music.ui.fragments.a.a:
    android.widget.GridView mGridView -> a
    com.prize.music.ui.adapters.list.ArtistAlbumAdapter mAdapter -> b
    android.database.Cursor mCursor -> c
    int PLAY_SELECTION -> i
    int ADD_TO_PLAYLIST -> j
    int SEARCH -> k
    int mFragmentGroupId -> d
    java.lang.String mSortOrder -> e
    java.lang.String mType -> f
    java.lang.String[] mProjection -> g
    android.net.Uri mUri -> h
    android.content.BroadcastReceiver mMediaStatusReceiver -> l
    void setupFragmentData() -> a
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
com.prize.music.ui.fragments.base.AlbumsListGridFragment$1 -> com.prize.music.ui.fragments.a.b:
    com.prize.music.ui.fragments.base.AlbumsListGridFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.prize.music.ui.fragments.base.AlbumsListViewFragment -> com.prize.music.ui.fragments.a.c:
    android.widget.ListView mListView -> h
    com.prize.music.ui.adapters.grid.AlbumAdapter mAdapter -> a
    android.database.Cursor mCursor -> b
    int PLAY_SELECTION -> i
    int ADD_TO_PLAYLIST -> j
    int SEARCH -> k
    int mFragmentGroupId -> c
    java.lang.String mSortOrder -> d
    java.lang.String mType -> e
    java.lang.String[] mProjection -> f
    android.net.Uri mUri -> g
    android.content.BroadcastReceiver mMediaStatusReceiver -> l
    void setupFragmentData() -> a
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    android.widget.ListView access$1(com.prize.music.ui.fragments.base.AlbumsListViewFragment) -> a
com.prize.music.ui.fragments.base.AlbumsListViewFragment$1 -> com.prize.music.ui.fragments.a.d:
    com.prize.music.ui.fragments.base.AlbumsListViewFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.prize.music.ui.fragments.base.DragSortListViewFragment -> com.prize.music.ui.fragments.a.e:
    com.prize.music.ui.adapters.base.DragSortListViewAdapter mAdapter -> a
    android.widget.ListView mListView -> b
    android.database.Cursor mCursor -> c
    long mSelectedId -> d
    int PLAY_SELECTION -> e
    int USE_AS_RINGTONE -> f
    int ADD_TO_PLAYLIST -> g
    int SEARCH -> h
    int REMOVE -> i
    int mFragmentGroupId -> j
    java.lang.String mSortOrder -> k
    java.lang.String mWhere -> l
    java.lang.String mType -> m
    java.lang.String mMediaIdColumn -> n
    java.lang.String[] mProjection -> o
    android.net.Uri mUri -> p
    android.widget.RelativeLayout none_data -> S
    android.widget.TextView drog_new_songs -> T
    android.widget.TextView play_name -> q
    android.widget.TextView play_add -> r
    android.widget.TextView play_search -> s
    android.widget.ImageView play_fg_back -> t
    android.widget.PopupWindow myPopupWindow -> u
    java.lang.Long new_id -> v
    java.util.ArrayList mListData -> w
    java.util.List mData -> x
    com.prize.music.IfragToActivityLister mIfragToActivity -> y
    java.lang.Boolean sonFlag -> z
    android.widget.RelativeLayout drag_head_layout_edit -> A
    android.widget.RelativeLayout drag_head_layout_normaly -> B
    android.widget.TextView drag_mEdit_all -> C
    android.widget.TextView drag_mEdit_neg -> D
    android.widget.TextView popu_cancle -> E
    android.view.View bottomactionbar_new -> F
    android.view.View main_bottom_layout -> G
    long[] mList -> H
    java.lang.String name -> I
    android.widget.PopupWindow window -> J
    int count -> K
    android.app.AlertDialog renameDialog -> L
    android.app.AlertDialog deleteDialog -> M
    android.widget.EditText dia_rename_edit -> N
    long renameId -> O
    java.lang.String lastTableName -> P
    java.util.List lists -> Q
    com.prize.music.activities.MainActivity mainActivity -> R
    android.content.BroadcastReceiver mMediaStatusReceiver -> U
    void setupFragmentData() -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initData(android.view.View) -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void initListData(android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onStart() -> onStart
    void onStop() -> onStop
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean reSetView() -> b
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
com.prize.music.ui.fragments.base.DragSortListViewFragment$1 -> com.prize.music.ui.fragments.a.f:
    com.prize.music.ui.fragments.base.DragSortListViewFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.prize.music.ui.fragments.base.DragSortListViewFragment$2 -> com.prize.music.ui.fragments.a.g:
    com.prize.music.ui.fragments.base.DragSortListViewFragment this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.prize.music.ui.fragments.base.DragSortListViewFragment$3 -> com.prize.music.ui.fragments.a.h:
    com.prize.music.ui.fragments.base.DragSortListViewFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.base.GridViewFragment -> com.prize.music.ui.fragments.a.i:
    android.widget.ListView mGridView -> h
    com.prize.music.ui.adapters.base.GridViewAdapter mAdapter -> a
    android.database.Cursor mCursor -> b
    int PLAY_SELECTION -> i
    int ADD_TO_PLAYLIST -> j
    int SEARCH -> k
    int mFragmentGroupId -> c
    java.lang.String mSortOrder -> d
    java.lang.String mType -> e
    java.lang.String[] mProjection -> f
    android.net.Uri mUri -> g
    android.content.BroadcastReceiver mMediaStatusReceiver -> l
    void setupFragmentData() -> a
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void setLister() -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    android.widget.ListView access$1(com.prize.music.ui.fragments.base.GridViewFragment) -> a
com.prize.music.ui.fragments.base.GridViewFragment$1 -> com.prize.music.ui.fragments.a.j:
    com.prize.music.ui.fragments.base.GridViewFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.prize.music.ui.fragments.base.GridViewFragment$2 -> com.prize.music.ui.fragments.a.k:
    com.prize.music.ui.fragments.base.GridViewFragment this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.prize.music.ui.fragments.base.ListViewFragment -> com.prize.music.ui.fragments.a.l:
    java.lang.String TAG -> o
    com.prize.music.ui.adapters.base.ListViewAdapter mAdapter -> a
    com.prize.music.IfragToActivityLister mIfragToActivity -> p
    android.widget.ListView mListView -> b
    android.database.Cursor mCursor -> c
    int PLAY_SELECTION -> d
    int USE_AS_RINGTONE -> e
    int ADD_TO_PLAYLIST -> f
    int SEARCH -> g
    int mFragmentGroupId -> h
    java.lang.String mSortOrder -> i
    java.lang.String mWhere -> j
    java.lang.String mType -> k
    java.lang.String mTitleColumn -> l
    java.lang.String[] mProjection -> m
    android.net.Uri mUri -> n
    java.lang.String title -> q
    android.content.BroadcastReceiver mMediaStatusReceiver -> r
    boolean isSelectMode -> s
    void setupFragmentData() -> a
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void refresh() -> b
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void setListener() -> c
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onStart() -> onStart
    void onStop() -> onStop
    void onAttach(android.app.Activity) -> onAttach
    void countNum(int) -> a
    void processAction(java.lang.String) -> a
    void updateViews() -> d
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    void onResume() -> onResume
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
com.prize.music.ui.fragments.base.ListViewFragment$1 -> com.prize.music.ui.fragments.a.m:
    com.prize.music.ui.fragments.base.ListViewFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.prize.music.ui.fragments.base.ListViewFragment$2 -> com.prize.music.ui.fragments.a.n:
    com.prize.music.ui.fragments.base.ListViewFragment this$0 -> a
    int val$position -> b
    void run() -> run
com.prize.music.ui.fragments.base.PlayingListViewFragment -> com.prize.music.ui.fragments.a.o:
    java.lang.String TAG -> o
    com.prize.music.ui.adapters.base.ListViewAdapter mAdapter -> a
    com.prize.music.IfragToActivityLister mIfragToActivity -> p
    android.widget.ListView mListView -> b
    android.database.Cursor mCursor -> c
    int PLAY_SELECTION -> d
    int USE_AS_RINGTONE -> e
    int ADD_TO_PLAYLIST -> f
    int SEARCH -> g
    int mFragmentGroupId -> h
    java.lang.String mSortOrder -> i
    java.lang.String mWhere -> j
    java.lang.String mType -> k
    java.lang.String mTitleColumn -> l
    java.lang.String[] mProjection -> m
    android.net.Uri mUri -> n
    android.content.BroadcastReceiver mMediaStatusReceiver -> q
    void setupFragmentData() -> a
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void refresh() -> b
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void setListener() -> c
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onStart() -> onStart
    void onStop() -> onStop
    void onAttach(android.app.Activity) -> onAttach
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
com.prize.music.ui.fragments.base.PlayingListViewFragment$1 -> com.prize.music.ui.fragments.a.p:
    com.prize.music.ui.fragments.base.PlayingListViewFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.prize.music.ui.fragments.base.PlayingListViewFragment$2 -> com.prize.music.ui.fragments.a.q:
    com.prize.music.ui.fragments.base.PlayingListViewFragment this$0 -> a
    int val$position -> b
    void run() -> run
com.prize.music.ui.fragments.base.PromptDialogFragment -> com.prize.music.ui.fragments.a.r:
    android.app.Activity mMainActivity -> a
    android.view.View$OnClickListener mListener -> b
    android.widget.Button add_neg -> c
    android.widget.Button add_sure -> d
    com.prize.music.ui.fragments.base.PromptDialogFragment newInstance(java.lang.String,android.view.View$OnClickListener) -> a
    void onAttach(android.app.Activity) -> onAttach
    void onCreate(android.os.Bundle) -> onCreate
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onDestroy() -> onDestroy
com.prize.music.ui.fragments.base.PromptDialogFragment$1 -> com.prize.music.ui.fragments.a.s:
    com.prize.music.ui.fragments.base.PromptDialogFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment -> com.prize.music.ui.fragments.a.t:
    com.prize.music.IfragToActivityLister mIfragToActivity -> s
    java.lang.String TAG -> a
    com.prize.music.ui.adapters.base.ListViewAdapter mAdapter -> b
    android.widget.ListView mListView -> c
    android.database.Cursor mCursor -> d
    int PLAY_SELECTION -> e
    int USE_AS_RINGTONE -> f
    int ADD_TO_PLAYLIST -> g
    int SEARCH -> h
    int mFragmentGroupId -> i
    java.lang.String mSortOrder -> j
    java.lang.String mWhere -> k
    java.lang.String mType -> l
    java.lang.String mTitleColumn -> m
    java.lang.String[] mProjection -> n
    android.net.Uri mUri -> o
    android.widget.TextView action_back -> t
    android.widget.TextView search_Tv -> u
    android.support.v4.app.DialogFragment df -> p
    android.os.Handler handler -> v
    android.view.View$OnClickListener listener -> w
    android.widget.RelativeLayout select_Rlyt -> x
    android.widget.RelativeLayout action_back_Rlyt -> y
    android.widget.TextView action_cancel -> z
    android.widget.TextView action_sure -> A
    boolean isSelectMode -> q
    android.content.BroadcastReceiver mMediaStatusReceiver -> B
    android.view.View$OnClickListener mDeletePromptListener -> C
    java.util.ArrayList areaDatas -> D
    android.widget.TextView popu_cancle -> r
    android.widget.PopupWindow window -> E
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void setupFragmentData() -> a
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void setListener() -> c
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    void onResume() -> onResume
    void updateViews() -> d
    void onStart() -> onStart
    void onStop() -> onStop
    void countNum(int) -> a
    void processAction(java.lang.String) -> a
    void deleteMusicFromList(long[]) -> a
    void refresh() -> b
    android.os.Handler getPopWindowHandler() -> e
    void initAddPopu() -> f
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void access$1(com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment) -> a
    com.prize.music.IfragToActivityLister access$2(com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment) -> b
    void access$3(com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment,long[]) -> a
    android.widget.TextView access$4(com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment) -> c
    android.widget.PopupWindow access$5(com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment) -> d
    android.widget.RelativeLayout access$6(com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment) -> e
com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment$1 -> com.prize.music.ui.fragments.a.u:
    com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment$10 -> com.prize.music.ui.fragments.a.v:
    com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment$2 -> com.prize.music.ui.fragments.a.w:
    com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment$3 -> com.prize.music.ui.fragments.a.x:
    com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment$4 -> com.prize.music.ui.fragments.a.y:
    com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment$5 -> com.prize.music.ui.fragments.a.z:
    com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment$6 -> com.prize.music.ui.fragments.a.aa:
    com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment$7 -> com.prize.music.ui.fragments.a.ab:
    com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment this$0 -> a
    int val$position -> b
    void run() -> run
com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment$8 -> com.prize.music.ui.fragments.a.ac:
    com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment$9 -> com.prize.music.ui.fragments.a.ad:
    com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment$AsyncLoader_GuessInfo -> com.prize.music.ui.fragments.a.ae:
    java.lang.String action -> a
    android.app.ProgressDialog dialog -> b
    long[] ids -> c
    com.prize.music.ui.fragments.base.RecentPlayTopTitleListViewFragment this$0 -> d
    void onPreExecute() -> onPreExecute
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.prize.music.ui.fragments.base.SongsListViewFragment -> com.prize.music.ui.fragments.a.af:
    com.prize.music.ui.adapters.base.ListViewAdapter mAdapter -> a
    com.prize.music.IfragToActivityLister mIfragToActivity -> r
    android.widget.ListView mListView -> b
    android.database.Cursor mCursor -> c
    int PLAY_SELECTION -> d
    int USE_AS_RINGTONE -> e
    int ADD_TO_PLAYLIST -> f
    int SEARCH -> g
    int mFragmentGroupId -> h
    java.lang.String mSortOrder -> i
    java.lang.String mWhere -> j
    java.lang.String mType -> k
    java.lang.String mTitleColumn -> l
    java.lang.String[] mProjection -> m
    android.net.Uri mUri -> n
    com.prize.music.ui.fragments.MusicLibraryFragment mMusicLibraryFragment -> s
    com.prize.music.ui.fragments.base.SongsListViewFragment$OnHeadlineSelectedListener mCallback -> o
    android.content.BroadcastReceiver mMediaStatusReceiver -> t
    android.content.BroadcastReceiver installSdardReceiver -> u
    com.prize.music.ui.fragments.base.PromptDialogFragment df -> v
    android.view.View$OnClickListener mDeletePromptListener -> w
    boolean isSelectMode -> p
    android.widget.PopupWindow window -> x
    android.widget.TextView popu_cancle -> q
    java.util.ArrayList areaDatas -> y
    void setupFragmentData() -> a
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void refresh() -> b
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void setListener() -> c
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onStart() -> onStart
    void onStop() -> onStop
    void onAttach(android.app.Activity) -> onAttach
    void countNum(int) -> a
    void processAction(java.lang.String) -> a
    void updateViews() -> d
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    void initAddPopu() -> e
    android.os.Handler getPopWindowHandler() -> f
    void updateCoorentViews() -> g
    boolean onKeyDown(int,android.view.KeyEvent) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    com.prize.music.ui.fragments.base.PromptDialogFragment access$1(com.prize.music.ui.fragments.base.SongsListViewFragment) -> a
    void access$2(com.prize.music.ui.fragments.base.SongsListViewFragment) -> b
    void access$3(com.prize.music.ui.fragments.base.SongsListViewFragment) -> c
    android.widget.PopupWindow access$4(com.prize.music.ui.fragments.base.SongsListViewFragment) -> d
    com.prize.music.IfragToActivityLister access$5(com.prize.music.ui.fragments.base.SongsListViewFragment) -> e
com.prize.music.ui.fragments.base.SongsListViewFragment$1 -> com.prize.music.ui.fragments.a.ag:
    com.prize.music.ui.fragments.base.SongsListViewFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.prize.music.ui.fragments.base.SongsListViewFragment$2 -> com.prize.music.ui.fragments.a.ah:
    com.prize.music.ui.fragments.base.SongsListViewFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.prize.music.ui.fragments.base.SongsListViewFragment$3 -> com.prize.music.ui.fragments.a.ai:
    com.prize.music.ui.fragments.base.SongsListViewFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.base.SongsListViewFragment$4 -> com.prize.music.ui.fragments.a.aj:
    com.prize.music.ui.fragments.base.SongsListViewFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.base.SongsListViewFragment$5 -> com.prize.music.ui.fragments.a.ak:
    com.prize.music.ui.fragments.base.SongsListViewFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.prize.music.ui.fragments.base.SongsListViewFragment$AsyncLoader_GuessInfo -> com.prize.music.ui.fragments.a.al:
    java.lang.String action -> a
    android.app.ProgressDialog dialog -> b
    long[] ids -> c
    com.prize.music.ui.fragments.base.SongsListViewFragment this$0 -> d
    void onPreExecute() -> onPreExecute
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.prize.music.ui.fragments.base.SongsListViewFragment$OnHeadlineSelectedListener -> com.prize.music.ui.fragments.a.am:
    void onArticleSelected(int) -> b
com.prize.music.ui.fragments.base.TopTitleListViewFragment -> com.prize.music.ui.fragments.a.an:
    java.lang.String TAG -> a
    com.prize.music.ui.adapters.base.ListViewAdapter mAdapter -> b
    com.prize.music.IfragToActivityLister mIfragToActivity -> r
    android.widget.ListView mListView -> c
    android.database.Cursor mCursor -> d
    int PLAY_SELECTION -> e
    int USE_AS_RINGTONE -> f
    int ADD_TO_PLAYLIST -> g
    int SEARCH -> h
    int mFragmentGroupId -> i
    java.lang.String mSortOrder -> j
    java.lang.String mWhere -> k
    java.lang.String mType -> l
    java.lang.String mTitleColumn -> m
    java.lang.String[] mProjection -> n
    android.net.Uri mUri -> o
    android.widget.TextView action_back -> s
    android.widget.TextView search_Tv -> t
    java.lang.String title -> u
    android.view.View$OnClickListener listener -> v
    android.content.BroadcastReceiver mMediaStatusReceiver -> w
    android.widget.RelativeLayout select_Rlyt -> x
    android.widget.TextView action_cancel -> y
    android.widget.TextView action_sure -> z
    boolean isSelectMode -> p
    android.widget.RelativeLayout action_back_Rlyt -> A
    com.prize.music.ui.fragments.base.PromptDialogFragment df -> B
    java.util.ArrayList areaDatas -> C
    android.view.View$OnClickListener mDeletePromptListener -> D
    android.widget.TextView popu_cancle -> q
    android.widget.PopupWindow window -> E
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void setupFragmentData() -> a
    void refresh() -> b
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void setListener() -> c
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onStart() -> onStart
    void onStop() -> onStop
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    void onResume() -> onResume
    void processAction(java.lang.String) -> a
    void updateViews() -> d
    void countNum(int) -> a
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    android.os.Handler getPopWindowHandler() -> e
    void initAddPopu() -> f
    void updateCoorentViews() -> g
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    com.prize.music.ui.fragments.base.PromptDialogFragment access$1(com.prize.music.ui.fragments.base.TopTitleListViewFragment) -> a
    void access$2(com.prize.music.ui.fragments.base.TopTitleListViewFragment) -> b
    void access$3(com.prize.music.ui.fragments.base.TopTitleListViewFragment) -> c
    com.prize.music.IfragToActivityLister access$4(com.prize.music.ui.fragments.base.TopTitleListViewFragment) -> d
    android.widget.TextView access$5(com.prize.music.ui.fragments.base.TopTitleListViewFragment) -> e
    android.widget.PopupWindow access$6(com.prize.music.ui.fragments.base.TopTitleListViewFragment) -> f
    android.widget.RelativeLayout access$7(com.prize.music.ui.fragments.base.TopTitleListViewFragment) -> g
com.prize.music.ui.fragments.base.TopTitleListViewFragment$1 -> com.prize.music.ui.fragments.a.ao:
    com.prize.music.ui.fragments.base.TopTitleListViewFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.base.TopTitleListViewFragment$10 -> com.prize.music.ui.fragments.a.ap:
    com.prize.music.ui.fragments.base.TopTitleListViewFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.base.TopTitleListViewFragment$2 -> com.prize.music.ui.fragments.a.aq:
    com.prize.music.ui.fragments.base.TopTitleListViewFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.prize.music.ui.fragments.base.TopTitleListViewFragment$3 -> com.prize.music.ui.fragments.a.ar:
    com.prize.music.ui.fragments.base.TopTitleListViewFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.base.TopTitleListViewFragment$4 -> com.prize.music.ui.fragments.a.as:
    com.prize.music.ui.fragments.base.TopTitleListViewFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.base.TopTitleListViewFragment$5 -> com.prize.music.ui.fragments.a.at:
    com.prize.music.ui.fragments.base.TopTitleListViewFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.base.TopTitleListViewFragment$6 -> com.prize.music.ui.fragments.a.au:
    com.prize.music.ui.fragments.base.TopTitleListViewFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.base.TopTitleListViewFragment$7 -> com.prize.music.ui.fragments.a.av:
    com.prize.music.ui.fragments.base.TopTitleListViewFragment this$0 -> a
    int val$position -> b
    void run() -> run
com.prize.music.ui.fragments.base.TopTitleListViewFragment$8 -> com.prize.music.ui.fragments.a.aw:
    com.prize.music.ui.fragments.base.TopTitleListViewFragment this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.prize.music.ui.fragments.base.TopTitleListViewFragment$9 -> com.prize.music.ui.fragments.a.ax:
    com.prize.music.ui.fragments.base.TopTitleListViewFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.prize.music.ui.fragments.base.TopTitleListViewFragment$AsyncLoader_GuessInfo -> com.prize.music.ui.fragments.a.ay:
    java.lang.String action -> a
    android.app.ProgressDialog dialog -> b
    long[] ids -> c
    com.prize.music.ui.fragments.base.TopTitleListViewFragment this$0 -> d
    void onPreExecute() -> onPreExecute
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.prize.music.ui.fragments.grid.AlbumsFragment -> com.prize.music.ui.fragments.b.a:
    void setupFragmentData() -> a
com.prize.music.ui.fragments.grid.ArtistsFragment -> com.prize.music.ui.fragments.b.b:
    void setupFragmentData() -> a
com.prize.music.ui.fragments.grid.QuickQueueFragment -> com.prize.music.ui.fragments.b.c:
    com.prize.music.ui.adapters.QuickQueueAdapter mQuickQueueAdapter -> f
    android.widget.GridView mGridView -> g
    android.database.Cursor mCursor -> h
    int mSelectedPosition -> i
    int PLAY_SELECTION -> j
    int REMOVE -> k
    int mTitleIndex -> a
    int mAlbumIndex -> b
    int mArtistIndex -> c
    int mMediaIdIndex -> d
    int mAlbumIdIndex -> e
    android.content.BroadcastReceiver mMediaStatusReceiver -> l
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void removePlaylistItem(int) -> a
    void reloadQueueCursor() -> a
    void onStart() -> onStart
    void onStop() -> onStop
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    android.widget.GridView access$1(com.prize.music.ui.fragments.grid.QuickQueueFragment) -> a
    com.prize.music.ui.adapters.QuickQueueAdapter access$2(com.prize.music.ui.fragments.grid.QuickQueueFragment) -> b
com.prize.music.ui.fragments.grid.QuickQueueFragment$1 -> com.prize.music.ui.fragments.b.d:
    com.prize.music.ui.fragments.grid.QuickQueueFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    com.prize.music.ui.fragments.grid.QuickQueueFragment access$0(com.prize.music.ui.fragments.grid.QuickQueueFragment$1) -> a
com.prize.music.ui.fragments.grid.QuickQueueFragment$1$1 -> com.prize.music.ui.fragments.b.e:
    com.prize.music.ui.fragments.grid.QuickQueueFragment$1 this$1 -> a
    void run() -> run
com.prize.music.ui.fragments.list.AlbumListFragment -> com.prize.music.ui.fragments.c.a:
    void setupFragmentData() -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    android.database.Cursor access$0(com.prize.music.ui.fragments.list.AlbumListFragment) -> a
    android.widget.ListView access$1(com.prize.music.ui.fragments.list.AlbumListFragment) -> b
com.prize.music.ui.fragments.list.AlbumListFragment$1 -> com.prize.music.ui.fragments.c.b:
    com.prize.music.ui.fragments.list.AlbumListFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.list.AlbumListFragment$2 -> com.prize.music.ui.fragments.c.c:
    com.prize.music.ui.fragments.list.AlbumListFragment this$0 -> a
    int val$position -> b
    void run() -> run
com.prize.music.ui.fragments.list.ArtistAlbumsFragment -> com.prize.music.ui.fragments.c.d:
    com.prize.music.activities.Scroller mScroller -> i
    int mHeaderHeight -> j
    int mMinHeaderHeight -> k
    void setupFragmentData() -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    com.prize.music.ui.fragments.list.ArtistAlbumsFragment setScroller(com.prize.music.activities.Scroller) -> a
    void adjustScroll(int) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    int getScrollY(android.widget.AbsListView) -> a
    int access$0(com.prize.music.ui.fragments.list.ArtistAlbumsFragment,android.widget.AbsListView) -> a
    int access$1(com.prize.music.ui.fragments.list.ArtistAlbumsFragment) -> a
    android.widget.GridView access$2(com.prize.music.ui.fragments.list.ArtistAlbumsFragment) -> b
    com.prize.music.activities.Scroller access$3(com.prize.music.ui.fragments.list.ArtistAlbumsFragment) -> c
    int access$4(com.prize.music.ui.fragments.list.ArtistAlbumsFragment) -> d
com.prize.music.ui.fragments.list.ArtistAlbumsFragment$1 -> com.prize.music.ui.fragments.c.e:
    com.prize.music.ui.fragments.list.ArtistAlbumsFragment this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.prize.music.ui.fragments.list.ArtistListFragment -> com.prize.music.ui.fragments.c.f:
    java.lang.String TAG -> o
    void setupFragmentData() -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    android.database.Cursor access$0(com.prize.music.ui.fragments.list.ArtistListFragment) -> a
com.prize.music.ui.fragments.list.ArtistListFragment$1 -> com.prize.music.ui.fragments.c.g:
    com.prize.music.ui.fragments.list.ArtistListFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.list.ArtistListFragment$2 -> com.prize.music.ui.fragments.c.h:
    com.prize.music.ui.fragments.list.ArtistListFragment this$0 -> a
    int val$pos -> b
    void run() -> run
com.prize.music.ui.fragments.list.GenreListFragment -> com.prize.music.ui.fragments.c.i:
    void setupFragmentData() -> a
com.prize.music.ui.fragments.list.PlaylistListFragment -> com.prize.music.ui.fragments.c.j:
    long mPlaylistId -> S
    java.lang.String TAG -> T
    void onCreate(android.os.Bundle) -> onCreate
    void setupFragmentData() -> a
    boolean removePlaylistItem(int,java.lang.String) -> a
    void onClick(android.view.View) -> onClick
    void initAddPopu(java.util.List) -> a
    void showPopupWindow() -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onResume() -> onResume
    void renameTbleDialog(java.lang.String,java.util.List,long) -> a
    void rename() -> d
    int idForplaylist(java.lang.String) -> b
    void deleteListDialog(int) -> b
    void countNum(int) -> a
    void processAction(java.lang.String) -> a
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void dismissDialog() -> e
    void dismissPopuWindow() -> f
    void dismissMyPopuWindow() -> g
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void hideInputMethod() -> h
    com.prize.music.activities.MainActivity access$0(com.prize.music.ui.fragments.list.PlaylistListFragment) -> a
    com.prize.music.ui.adapters.base.DragSortListViewAdapter access$1(com.prize.music.ui.fragments.list.PlaylistListFragment) -> b
    java.lang.Boolean access$2(com.prize.music.ui.fragments.list.PlaylistListFragment) -> c
    android.database.Cursor access$3(com.prize.music.ui.fragments.list.PlaylistListFragment) -> d
    android.widget.PopupWindow access$4(com.prize.music.ui.fragments.list.PlaylistListFragment) -> e
com.prize.music.ui.fragments.list.PlaylistListFragment$1 -> com.prize.music.ui.fragments.c.k:
    com.prize.music.ui.fragments.list.PlaylistListFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.list.PlaylistListFragment$2 -> com.prize.music.ui.fragments.c.l:
    com.prize.music.ui.fragments.list.PlaylistListFragment this$0 -> a
    java.util.List val$mLists -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.prize.music.ui.fragments.list.PlaylistListFragment$3 -> com.prize.music.ui.fragments.c.m:
    com.prize.music.ui.fragments.list.PlaylistListFragment this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.prize.music.ui.fragments.list.PlaylistListFragment$4 -> com.prize.music.ui.fragments.c.n:
    com.prize.music.ui.fragments.list.PlaylistListFragment this$0 -> a
    void run() -> run
com.prize.music.ui.fragments.list.PlaylistListFragment$AddAsyncTask -> com.prize.music.ui.fragments.c.o:
    java.lang.String action -> a
    long[] ids -> b
    long new_id -> c
    android.app.ProgressDialog dialog -> d
    com.prize.music.ui.fragments.list.PlaylistListFragment this$0 -> e
    void onPreExecute() -> onPreExecute
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.prize.music.ui.fragments.list.RecentlyAddedFragment -> com.prize.music.ui.fragments.c.p:
    void setupFragmentData() -> a
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onDestroy() -> onDestroy
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    boolean access$0(com.prize.music.ui.fragments.list.RecentlyAddedFragment) -> a
    android.database.Cursor access$1(com.prize.music.ui.fragments.list.RecentlyAddedFragment) -> b
com.prize.music.ui.fragments.list.RecentlyAddedFragment$1 -> com.prize.music.ui.fragments.c.q:
    com.prize.music.ui.fragments.list.RecentlyAddedFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.list.RecentlyPlayFragment -> com.prize.music.ui.fragments.c.r:
    android.database.ContentObserver observer -> s
    void setupFragmentData() -> a
    void isSongsInDataBase() -> c
    void onDestroy() -> onDestroy
    void refresh() -> b
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onResume() -> onResume
    void onStop() -> onStop
    boolean access$0(com.prize.music.ui.fragments.list.RecentlyPlayFragment) -> a
    android.database.Cursor access$1(com.prize.music.ui.fragments.list.RecentlyPlayFragment) -> b
com.prize.music.ui.fragments.list.RecentlyPlayFragment$1 -> com.prize.music.ui.fragments.c.s:
    com.prize.music.ui.fragments.list.RecentlyPlayFragment this$0 -> a
    void onChange(boolean) -> onChange
com.prize.music.ui.fragments.list.RecentlyPlayFragment$2 -> com.prize.music.ui.fragments.c.t:
    com.prize.music.ui.fragments.list.RecentlyPlayFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.list.ScrollerFragment -> com.prize.music.ui.fragments.c.u:
    com.prize.music.activities.Scroller mScroller -> o
    int mHeaderHeight -> p
    int mMinHeaderHeight -> q
    android.view.View footer -> r
    com.prize.music.ui.fragments.list.ScrollerFragment setScroller(com.prize.music.activities.Scroller) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> a
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onScroll(int) -> b
    void adjustScroll(int) -> c
    int getScrollY(android.widget.AbsListView) -> a
    int access$0(com.prize.music.ui.fragments.list.ScrollerFragment,android.widget.AbsListView) -> a
    int access$1(com.prize.music.ui.fragments.list.ScrollerFragment) -> a
    android.widget.ListView access$2(com.prize.music.ui.fragments.list.ScrollerFragment) -> b
    android.database.Cursor access$3(com.prize.music.ui.fragments.list.ScrollerFragment) -> c
    com.prize.music.activities.Scroller access$4(com.prize.music.ui.fragments.list.ScrollerFragment) -> d
    int access$5(com.prize.music.ui.fragments.list.ScrollerFragment) -> e
com.prize.music.ui.fragments.list.ScrollerFragment$1 -> com.prize.music.ui.fragments.c.v:
    boolean isFromUser -> b
    com.prize.music.ui.fragments.list.ScrollerFragment this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void access$0(com.prize.music.ui.fragments.list.ScrollerFragment$1,boolean) -> a
    com.prize.music.ui.fragments.list.ScrollerFragment access$1(com.prize.music.ui.fragments.list.ScrollerFragment$1) -> a
com.prize.music.ui.fragments.list.ScrollerFragment$1$1 -> com.prize.music.ui.fragments.c.w:
    com.prize.music.ui.fragments.list.ScrollerFragment$1 this$1 -> a
    void run() -> run
com.prize.music.ui.fragments.list.SongsFragment -> com.prize.music.ui.fragments.c.x:
    void setupFragmentData() -> a
    void onDestroy() -> onDestroy
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    android.database.Cursor access$0(com.prize.music.ui.fragments.list.SongsFragment) -> a
com.prize.music.ui.fragments.list.SongsFragment$1 -> com.prize.music.ui.fragments.c.y:
    com.prize.music.ui.fragments.list.SongsFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.music.ui.fragments.list.SongsInPlayingFragment -> com.prize.music.ui.fragments.c.z:
    void setupFragmentData() -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    android.database.Cursor access$0(com.prize.music.ui.fragments.list.SongsInPlayingFragment) -> a
com.prize.music.ui.fragments.list.SongsInPlayingFragment$1 -> com.prize.music.ui.fragments.c.aa:
    com.prize.music.ui.fragments.list.SongsInPlayingFragment this$0 -> a
    int val$position -> b
    void run() -> run
com.prize.music.ui.widgets.BottomActionBar -> com.prize.music.ui.widgets.BottomActionBar:
    void updateBottomActionBar(android.app.Activity) -> a
    boolean onLongClick(android.view.View) -> onLongClick
com.prize.music.ui.widgets.GridViewWith -> com.prize.music.ui.widgets.GridViewWith:
    boolean DEBUG -> a
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> b
    android.widget.AdapterView$OnItemLongClickListener mOnItemLongClickListener -> c
    int mNumColumns -> d
    android.view.View mViewForMeasureRowHeight -> e
    int mRowHeight -> f
    java.util.ArrayList mHeaderViewInfos -> g
    java.util.ArrayList mFooterViewInfos -> h
    android.widget.ListAdapter mOriginalAdapter -> i
    com.prize.music.ui.widgets.GridViewWith$ItemClickHandler mItemClickHandler -> j
    void initHeaderGridView() -> b
    void onMeasure(int,int) -> onMeasure
    void setClipChildren(boolean) -> setClipChildren
    void setClipChildrenSupper(boolean) -> setClipChildrenSupper
    void addHeaderView(android.view.View) -> a
    void addHeaderView(android.view.View,java.lang.Object,boolean) -> a
    void addFooterView(android.view.View) -> b
    void addFooterView(android.view.View,java.lang.Object,boolean) -> b
    int getHeaderViewCount() -> getHeaderViewCount
    int getFooterViewCount() -> getFooterViewCount
    void removeFooterView() -> a
    int getNumColumnsCompatible() -> getNumColumnsCompatible
    int getColumnWidthCompatible() -> getColumnWidthCompatible
    void onDetachedFromWindow() -> onDetachedFromWindow
    int getVerticalSpacing() -> getVerticalSpacing
    int getHorizontalSpacing() -> getHorizontalSpacing
    int getRowHeight() -> getRowHeight
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    android.widget.ListAdapter getOriginalAdapter() -> getOriginalAdapter
    void setNumColumns(int) -> setNumColumns
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setOnItemLongClickListener(android.widget.AdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    com.prize.music.ui.widgets.GridViewWith$ItemClickHandler getItemClickHandler() -> getItemClickHandler
    android.widget.AdapterView$OnItemClickListener access$0(com.prize.music.ui.widgets.GridViewWith) -> a
    int access$1(com.prize.music.ui.widgets.GridViewWith) -> b
    android.widget.AdapterView$OnItemLongClickListener access$2(com.prize.music.ui.widgets.GridViewWith) -> c
com.prize.music.ui.widgets.GridViewWith$FixedViewInfo -> com.prize.music.ui.widgets.a:
    android.view.View view -> a
    android.view.ViewGroup viewContainer -> b
    java.lang.Object data -> c
    boolean isSelectable -> d
com.prize.music.ui.widgets.GridViewWith$FullWidthFixedViewLayout -> com.prize.music.ui.widgets.b:
    com.prize.music.ui.widgets.GridViewWith this$0 -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
com.prize.music.ui.widgets.GridViewWith$HeaderViewGridAdapter -> com.prize.music.ui.widgets.c:
    android.database.DataSetObservable mDataSetObservable -> e
    android.widget.ListAdapter mAdapter -> f
    java.util.ArrayList EMPTY_INFO_LIST -> a
    java.util.ArrayList mHeaderViewInfos -> b
    java.util.ArrayList mFooterViewInfos -> c
    int mNumColumns -> g
    int mRowHeight -> h
    boolean mAreAllFixedViewsSelectable -> d
    boolean mIsFilterable -> i
    boolean mCachePlaceHoldView -> j
    boolean mCacheFirstHeaderView -> k
    void setNumColumns(int) -> a
    void setRowHeight(int) -> b
    int getHeadersCount() -> a
    int getFootersCount() -> b
    boolean isEmpty() -> isEmpty
    boolean areAllListInfosSelectable(java.util.ArrayList) -> a
    int getCount() -> getCount
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    int getAdapterAndPlaceHolderCount() -> d
    boolean isEnabled(int) -> isEnabled
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    android.widget.Filter getFilter() -> getFilter
    android.widget.ListAdapter getWrappedAdapter() -> getWrappedAdapter
    void notifyDataSetChanged() -> c
com.prize.music.ui.widgets.GridViewWith$ItemClickHandler -> com.prize.music.ui.widgets.d:
    com.prize.music.ui.widgets.GridViewWith this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.prize.music.ui.widgets.RepeatingImageButton -> com.prize.music.ui.widgets.RepeatingImageButton:
    long mStartTime -> a
    int mRepeatCount -> b
    com.prize.music.ui.widgets.RepeatingImageButton$RepeatListener mListener -> c
    long mInterval -> d
    java.lang.Runnable mRepeater -> e
    void setRepeatListener(com.prize.music.ui.widgets.RepeatingImageButton$RepeatListener,long) -> a
    boolean performLongClick() -> performLongClick
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void doRepeat(boolean) -> a
    void access$0(com.prize.music.ui.widgets.RepeatingImageButton,boolean) -> a
    long access$1(com.prize.music.ui.widgets.RepeatingImageButton) -> a
com.prize.music.ui.widgets.RepeatingImageButton$1 -> com.prize.music.ui.widgets.e:
    com.prize.music.ui.widgets.RepeatingImageButton this$0 -> a
    void run() -> run
com.prize.music.ui.widgets.RepeatingImageButton$RepeatListener -> com.prize.music.ui.widgets.f:
    void onRepeat(android.view.View,long,int) -> a
com.prize.music.ui.widgets.RoundProgressBar -> com.prize.music.ui.widgets.RoundProgressBar:
    int loadState -> a
    android.graphics.Bitmap pauseBitmap -> b
    android.content.res.Resources res -> c
    float fontSize -> d
    android.graphics.Paint p -> e
    android.graphics.Paint$FontMetrics fm -> f
    float roundThickness -> g
    int viewH -> h
    int viewW -> i
    int viewTop -> j
    int viewLeft -> k
    float mSweep -> l
    float mStart -> m
    android.graphics.Paint pArc -> n
    android.graphics.RectF oval -> o
    void init() -> a
    void setLoadState(int) -> setLoadState
    void setProgress(int) -> setProgress
    void onDraw(android.graphics.Canvas) -> onDraw
com.prize.music.ui.widgets.ScrollableTabView -> com.prize.music.ui.widgets.ScrollableTabView:
    com.prize.music.ui.widgets.ScrollableTabView$OnPageSelectedListener mOnPageSelectedListener -> a
    android.support.v4.view.ViewPager mPager -> b
    com.prize.music.ui.adapters.TabAdapter mAdapter -> c
    android.widget.LinearLayout mContainer -> d
    java.util.ArrayList mTabs -> e
    void setAdapter(com.prize.music.ui.adapters.TabAdapter) -> setAdapter
    void setViewPager(android.support.v4.view.ViewPager) -> setViewPager
    void initTabs() -> a
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onLayout(boolean,int,int,int,int) -> onLayout
    void selectTab(int) -> a
    void setPagerSelectLister(com.prize.music.ui.widgets.ScrollableTabView$OnPageSelectedListener) -> setPagerSelectLister
    android.support.v4.view.ViewPager access$0(com.prize.music.ui.widgets.ScrollableTabView) -> a
    void access$1(com.prize.music.ui.widgets.ScrollableTabView,int) -> a
com.prize.music.ui.widgets.ScrollableTabView$1 -> com.prize.music.ui.widgets.g:
    com.prize.music.ui.widgets.ScrollableTabView this$0 -> a
    int val$index -> b
    void onClick(android.view.View) -> onClick
com.prize.music.ui.widgets.ScrollableTabView$OnPageSelectedListener -> com.prize.music.ui.widgets.h:
    void onPageSelected(int) -> b
com.prize.music.ui.widgets.VisualizerView -> com.prize.music.ui.widgets.VisualizerView:
    byte[] mBytes -> d
    byte[] mFFTBytes -> e
    android.graphics.Rect mRect -> f
    com.prize.music.helpers.visualizer.Renderer mRenderer -> g
    java.lang.String type -> a
    android.graphics.Bitmap mCanvasBitmap -> b
    android.graphics.Canvas mCanvas -> c
    void updateVisualizer(byte[]) -> a
    void updateVisualizerFFT(byte[]) -> b
    void onDraw(android.graphics.Canvas) -> onDraw
com.prize.music.views.Album_ViewHolderGrid -> com.prize.music.views.a:
    android.widget.ImageView mViewHolderImage -> a
    android.widget.TextView mViewHolderLineOne -> b
    android.widget.RelativeLayout mInfoHolder -> c
com.prize.music.views.SongListGridView -> com.prize.music.views.SongListGridView:
    void onMeasure(int,int) -> onMeasure
com.prize.music.views.TrackBrowserImageView -> com.prize.music.views.TrackBrowserImageView:
    void setup() -> a
    boolean setFrame(int,int,int,int) -> setFrame
com.prize.music.views.VerticalSeekBar -> com.prize.music.views.VerticalSeekBar:
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.prize.music.views.ViewHolderGrid -> com.prize.music.views.b:
    android.widget.ImageView mViewHolderImage -> a
    android.widget.ImageView mPeakOne -> b
    android.widget.ImageView mPeakTwo -> c
    android.widget.TextView mViewHolderLineOne -> d
    android.widget.TextView mViewHolderLineTwo -> e
    android.widget.LinearLayout mInfoHolder -> f
com.prize.music.views.ViewHolderList -> com.prize.music.views.c:
    android.widget.ImageView mPeakOne -> a
    android.widget.ImageView mPeakTwo -> b
    android.widget.ImageView mQuickContextDivider -> c
    android.widget.ImageView mQuickContextTip -> d
    android.widget.TextView mViewHolderLineOne -> e
    android.widget.TextView mViewHolderLineTwo -> f
    android.widget.FrameLayout mQuickContext -> g
    android.widget.CheckBox checkBox -> h
com.prize.music.views.ViewHolderListView -> com.prize.music.views.d:
    android.widget.ImageView mViewHolderImage -> a
    android.widget.ImageView mPeakOne -> b
    android.widget.ImageView mPeakTwo -> c
    android.widget.TextView mViewHolderLineOne -> d
    android.widget.TextView mViewHolderLineThree -> e
    android.widget.TextView mViewHolderLineTwo -> f
    android.widget.LinearLayout mInfoHolder -> g
com.prize.music.views.ViewHolderQueue -> com.prize.music.views.e:
    android.widget.ImageView mArtistImage -> a
    android.widget.ImageView mPeakOne -> b
    android.widget.ImageView mPeakTwo -> c
    android.widget.ImageView mAlbumArt -> d
    android.widget.TextView mTrackName -> e
com.sothree.slidinguppanel.R -> com.sothree.slidinguppanel.R:
com.sothree.slidinguppanel.R$attr -> com.sothree.slidinguppanel.R$attr:
    int umanoAnchorPoint -> umanoAnchorPoint
    int umanoClipPanel -> umanoClipPanel
    int umanoDragView -> umanoDragView
    int umanoFadeColor -> umanoFadeColor
    int umanoFlingVelocity -> umanoFlingVelocity
    int umanoInitialState -> umanoInitialState
    int umanoOverlay -> umanoOverlay
    int umanoPanelHeight -> umanoPanelHeight
    int umanoParalaxOffset -> umanoParalaxOffset
    int umanoShadowHeight -> umanoShadowHeight
com.sothree.slidinguppanel.R$drawable -> com.sothree.slidinguppanel.R$drawable:
    int above_shadow -> above_shadow
    int below_shadow -> below_shadow
    int ic_launcher -> ic_launcher
com.sothree.slidinguppanel.R$id -> com.sothree.slidinguppanel.R$id:
    int anchored -> anchored
    int collapsed -> collapsed
    int expanded -> expanded
    int hidden -> hidden
com.sothree.slidinguppanel.R$string -> com.sothree.slidinguppanel.R$string:
    int app_name -> app_name
com.sothree.slidinguppanel.R$style -> com.sothree.slidinguppanel.R$style:
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
com.sothree.slidinguppanel.R$styleable -> com.sothree.slidinguppanel.R$styleable:
    int[] SlidingUpPanelLayout -> SlidingUpPanelLayout
    int SlidingUpPanelLayout_umanoAnchorPoint -> SlidingUpPanelLayout_umanoAnchorPoint
    int SlidingUpPanelLayout_umanoClipPanel -> SlidingUpPanelLayout_umanoClipPanel
    int SlidingUpPanelLayout_umanoDragView -> SlidingUpPanelLayout_umanoDragView
    int SlidingUpPanelLayout_umanoFadeColor -> SlidingUpPanelLayout_umanoFadeColor
    int SlidingUpPanelLayout_umanoFlingVelocity -> SlidingUpPanelLayout_umanoFlingVelocity
    int SlidingUpPanelLayout_umanoInitialState -> SlidingUpPanelLayout_umanoInitialState
    int SlidingUpPanelLayout_umanoOverlay -> SlidingUpPanelLayout_umanoOverlay
    int SlidingUpPanelLayout_umanoPanelHeight -> SlidingUpPanelLayout_umanoPanelHeight
    int SlidingUpPanelLayout_umanoParalaxOffset -> SlidingUpPanelLayout_umanoParalaxOffset
    int SlidingUpPanelLayout_umanoShadowHeight -> SlidingUpPanelLayout_umanoShadowHeight
com.sothree.slidinguppanel.SlidingUpPanelLayout -> com.sothree.slidinguppanel.SlidingUpPanelLayout:
    java.lang.String TAG -> TAG
    int DEFAULT_PANEL_HEIGHT -> DEFAULT_PANEL_HEIGHT
    float DEFAULT_ANCHOR_POINT -> DEFAULT_ANCHOR_POINT
    com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState DEFAULT_SLIDE_STATE -> DEFAULT_SLIDE_STATE
    int DEFAULT_SHADOW_HEIGHT -> DEFAULT_SHADOW_HEIGHT
    int DEFAULT_FADE_COLOR -> DEFAULT_FADE_COLOR
    int DEFAULT_MIN_FLING_VELOCITY -> DEFAULT_MIN_FLING_VELOCITY
    boolean DEFAULT_OVERLAY_FLAG -> DEFAULT_OVERLAY_FLAG
    boolean DEFAULT_CLIP_PANEL_FLAG -> DEFAULT_CLIP_PANEL_FLAG
    int[] DEFAULT_ATTRS -> DEFAULT_ATTRS
    int mMinFlingVelocity -> mMinFlingVelocity
    int mCoveredFadeColor -> mCoveredFadeColor
    int DEFAULT_PARALAX_OFFSET -> DEFAULT_PARALAX_OFFSET
    android.graphics.Paint mCoveredFadePaint -> mCoveredFadePaint
    android.graphics.drawable.Drawable mShadowDrawable -> mShadowDrawable
    int mPanelHeight -> mPanelHeight
    int mShadowHeight -> mShadowHeight
    int mParallaxOffset -> mParallaxOffset
    boolean mIsSlidingUp -> mIsSlidingUp
    boolean mOverlayContent -> mOverlayContent
    boolean mClipPanel -> mClipPanel
    android.view.View mDragView -> mDragView
    int mDragViewResId -> mDragViewResId
    android.view.View mSlideableView -> mSlideableView
    android.view.View mMainView -> mMainView
    com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState mSlideState -> mSlideState
    com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState mLastNotDraggingSlideState -> mLastNotDraggingSlideState
    float mSlideOffset -> mSlideOffset
    int mSlideRange -> mSlideRange
    boolean mIsUnableToDrag -> mIsUnableToDrag
    boolean mIsTouchEnabled -> mIsTouchEnabled
    boolean mIsUsingDragViewTouchEvents -> mIsUsingDragViewTouchEvents
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    float mAnchorPoint -> mAnchorPoint
    com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelSlideListener mPanelSlideListener -> mPanelSlideListener
    com.sothree.slidinguppanel.ViewDragHelper mDragHelper -> mDragHelper
    boolean mFirstLayout -> mFirstLayout
    android.graphics.Rect mTmpRect -> mTmpRect
    int[] $SWITCH_TABLE$com$sothree$slidinguppanel$SlidingUpPanelLayout$PanelState -> $SWITCH_TABLE$com$sothree$slidinguppanel$SlidingUpPanelLayout$PanelState
    void onFinishInflate() -> onFinishInflate
    void setGravity(int) -> setGravity
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setTouchEnabled(boolean) -> setTouchEnabled
    boolean isTouchEnabled() -> isTouchEnabled
    void setPanelHeight(int) -> setPanelHeight
    void smoothToBottom() -> smoothToBottom
    int getShadowHeight() -> getShadowHeight
    void setShadowHeight(int) -> setShadowHeight
    int getPanelHeight() -> getPanelHeight
    int getCurrentParalaxOffset() -> getCurrentParalaxOffset
    void setParalaxOffset(int) -> setParalaxOffset
    int getMinFlingVelocity() -> getMinFlingVelocity
    void setMinFlingVelocity(int) -> setMinFlingVelocity
    void setPanelSlideListener(com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelSlideListener) -> setPanelSlideListener
    void setDragView(android.view.View) -> setDragView
    void setDragView(int) -> setDragView
    void setAnchorPoint(float) -> setAnchorPoint
    float getAnchorPoint() -> getAnchorPoint
    void setOverlayed(boolean) -> setOverlayed
    boolean isOverlayed() -> isOverlayed
    void setClipPanel(boolean) -> setClipPanel
    boolean isClipPanel() -> isClipPanel
    void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    void dispatchOnPanelExpanded(android.view.View) -> dispatchOnPanelExpanded
    void dispatchOnPanelCollapsed(android.view.View) -> dispatchOnPanelCollapsed
    void dispatchOnPanelAnchored(android.view.View) -> dispatchOnPanelAnchored
    void dispatchOnPanelHidden(android.view.View) -> dispatchOnPanelHidden
    void updateObscuredViewVisibility() -> updateObscuredViewVisibility
    void setAllChildrenVisible() -> setAllChildrenVisible
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void setEnableDragViewTouchEvents(boolean) -> setEnableDragViewTouchEvents
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean isDragViewUnder(int,int) -> isDragViewUnder
    int computePanelTopPosition(float) -> computePanelTopPosition
    float computeSlideOffset(int) -> computeSlideOffset
    com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState getPanelState() -> getPanelState
    void setPanelState(com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState) -> setPanelState
    void applyParallaxForCurrentSlideOffset() -> applyParallaxForCurrentSlideOffset
    void onPanelDragged(int) -> onPanelDragged
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean smoothSlideTo(float,int) -> smoothSlideTo
    void computeScroll() -> computeScroll
    void draw(android.graphics.Canvas) -> draw
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$0(com.sothree.slidinguppanel.SlidingUpPanelLayout) -> access$0
    android.view.View access$1(com.sothree.slidinguppanel.SlidingUpPanelLayout) -> access$1
    com.sothree.slidinguppanel.ViewDragHelper access$2(com.sothree.slidinguppanel.SlidingUpPanelLayout) -> access$2
    float access$3(com.sothree.slidinguppanel.SlidingUpPanelLayout,int) -> access$3
    void access$4(com.sothree.slidinguppanel.SlidingUpPanelLayout,float) -> access$4
    void access$5(com.sothree.slidinguppanel.SlidingUpPanelLayout) -> access$5
    float access$6(com.sothree.slidinguppanel.SlidingUpPanelLayout) -> access$6
    com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState access$7(com.sothree.slidinguppanel.SlidingUpPanelLayout) -> access$7
    void access$8(com.sothree.slidinguppanel.SlidingUpPanelLayout,com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState) -> access$8
    void access$9(com.sothree.slidinguppanel.SlidingUpPanelLayout,int) -> access$9
    boolean access$10(com.sothree.slidinguppanel.SlidingUpPanelLayout) -> access$10
    int access$11(com.sothree.slidinguppanel.SlidingUpPanelLayout,float) -> access$11
    float access$12(com.sothree.slidinguppanel.SlidingUpPanelLayout) -> access$12
    int access$13(com.sothree.slidinguppanel.SlidingUpPanelLayout) -> access$13
    int[] $SWITCH_TABLE$com$sothree$slidinguppanel$SlidingUpPanelLayout$PanelState() -> $SWITCH_TABLE$com$sothree$slidinguppanel$SlidingUpPanelLayout$PanelState
com.sothree.slidinguppanel.SlidingUpPanelLayout$1 -> com.sothree.slidinguppanel.SlidingUpPanelLayout$1:
    com.sothree.slidinguppanel.SlidingUpPanelLayout this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.sothree.slidinguppanel.SlidingUpPanelLayout$DragHelperCallback -> com.sothree.slidinguppanel.SlidingUpPanelLayout$DragHelperCallback:
    com.sothree.slidinguppanel.SlidingUpPanelLayout this$0 -> this$0
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
com.sothree.slidinguppanel.SlidingUpPanelLayout$LayoutParams -> com.sothree.slidinguppanel.SlidingUpPanelLayout$LayoutParams:
    int[] ATTRS -> ATTRS
com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelSlideListener -> com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelCollapsed(android.view.View) -> onPanelCollapsed
    void onPanelExpanded(android.view.View) -> onPanelExpanded
    void onPanelAnchored(android.view.View) -> onPanelAnchored
    void onPanelHidden(android.view.View) -> onPanelHidden
com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState -> com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState:
    com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState EXPANDED -> EXPANDED
    com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState COLLAPSED -> COLLAPSED
    com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState ANCHORED -> ANCHORED
    com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState HIDDEN -> HIDDEN
    com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState DRAGGING -> DRAGGING
    com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState[] ENUM$VALUES -> ENUM$VALUES
    com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState[] values() -> values
    com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState valueOf(java.lang.String) -> valueOf
com.sothree.slidinguppanel.SlidingUpPanelLayout$SavedState -> com.sothree.slidinguppanel.SlidingUpPanelLayout$SavedState:
    com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState mSlideState -> mSlideState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.sothree.slidinguppanel.SlidingUpPanelLayout$SavedState$1 -> com.sothree.slidinguppanel.SlidingUpPanelLayout$SavedState$1:
    com.sothree.slidinguppanel.SlidingUpPanelLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.sothree.slidinguppanel.SlidingUpPanelLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.sothree.slidinguppanel.SlidingUpPanelLayout$SimplePanelSlideListener -> com.sothree.slidinguppanel.SlidingUpPanelLayout$SimplePanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelCollapsed(android.view.View) -> onPanelCollapsed
    void onPanelExpanded(android.view.View) -> onPanelExpanded
    void onPanelAnchored(android.view.View) -> onPanelAnchored
    void onPanelHidden(android.view.View) -> onPanelHidden
com.sothree.slidinguppanel.ViewDragHelper -> com.sothree.slidinguppanel.ViewDragHelper:
    java.lang.String TAG -> TAG
    int INVALID_POINTER -> INVALID_POINTER
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_TOP -> EDGE_TOP
    int EDGE_BOTTOM -> EDGE_BOTTOM
    int EDGE_ALL -> EDGE_ALL
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int DIRECTION_ALL -> DIRECTION_ALL
    int EDGE_SIZE -> EDGE_SIZE
    int BASE_SETTLE_DURATION -> BASE_SETTLE_DURATION
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int mDragState -> mDragState
    int mTouchSlop -> mTouchSlop
    int mActivePointerId -> mActivePointerId
    float[] mInitialMotionX -> mInitialMotionX
    float[] mInitialMotionY -> mInitialMotionY
    float[] mLastMotionX -> mLastMotionX
    float[] mLastMotionY -> mLastMotionY
    int[] mInitialEdgesTouched -> mInitialEdgesTouched
    int[] mEdgeDragsInProgress -> mEdgeDragsInProgress
    int[] mEdgeDragsLocked -> mEdgeDragsLocked
    int mPointersDown -> mPointersDown
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float mMaxVelocity -> mMaxVelocity
    float mMinVelocity -> mMinVelocity
    int mEdgeSize -> mEdgeSize
    int mTrackingEdges -> mTrackingEdges
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    com.sothree.slidinguppanel.ViewDragHelper$Callback mCallback -> mCallback
    android.view.View mCapturedView -> mCapturedView
    boolean mReleaseInProgress -> mReleaseInProgress
    android.view.ViewGroup mParentView -> mParentView
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.lang.Runnable mSetIdleRunnable -> mSetIdleRunnable
    com.sothree.slidinguppanel.ViewDragHelper create(android.view.ViewGroup,com.sothree.slidinguppanel.ViewDragHelper$Callback) -> create
    com.sothree.slidinguppanel.ViewDragHelper create(android.view.ViewGroup,float,com.sothree.slidinguppanel.ViewDragHelper$Callback) -> create
    void setMinVelocity(float) -> setMinVelocity
    float getMinVelocity() -> getMinVelocity
    int getViewDragState() -> getViewDragState
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    int getEdgeSize() -> getEdgeSize
    void captureChildView(android.view.View,int) -> captureChildView
    android.view.View getCapturedView() -> getCapturedView
    int getActivePointerId() -> getActivePointerId
    int getTouchSlop() -> getTouchSlop
    void cancel() -> cancel
    void abort() -> abort
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    int computeAxisDuration(int,int,int) -> computeAxisDuration
    int clampMag(int,int,int) -> clampMag
    float clampMag(float,float,float) -> clampMag
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean continueSettling(boolean) -> continueSettling
    void dispatchViewReleased(float,float) -> dispatchViewReleased
    void clearMotionHistory() -> clearMotionHistory
    void clearMotionHistory(int) -> clearMotionHistory
    void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    void saveInitialMotion(float,float,int) -> saveInitialMotion
    void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    boolean isPointerDown(int) -> isPointerDown
    void setDragState(int) -> setDragState
    boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
    boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    boolean checkTouchSlop(int) -> checkTouchSlop
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    void releaseViewForPointerUp() -> releaseViewForPointerUp
    void dragTo(int,int,int,int) -> dragTo
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    int getEdgesTouched(int,int) -> getEdgesTouched
com.sothree.slidinguppanel.ViewDragHelper$1 -> com.sothree.slidinguppanel.ViewDragHelper$1:
    float getInterpolation(float) -> getInterpolation
com.sothree.slidinguppanel.ViewDragHelper$2 -> com.sothree.slidinguppanel.ViewDragHelper$2:
    com.sothree.slidinguppanel.ViewDragHelper this$0 -> this$0
    void run() -> run
com.sothree.slidinguppanel.ViewDragHelper$Callback -> com.sothree.slidinguppanel.ViewDragHelper$Callback:
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
