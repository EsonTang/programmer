android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> IMPL
    int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT -> CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
    int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION -> CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
    int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int CAPABILITY_CAN_FILTER_KEY_EVENTS -> CAPABILITY_CAN_FILTER_KEY_EVENTS
    int FEEDBACK_BRAILLE -> FEEDBACK_BRAILLE
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    int DEFAULT -> DEFAULT
    int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS -> FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
    int FLAG_REQUEST_TOUCH_EXPLORATION_MODE -> FLAG_REQUEST_TOUCH_EXPLORATION_MODE
    int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int FLAG_REPORT_VIEW_IDS -> FLAG_REPORT_VIEW_IDS
    int FLAG_REQUEST_FILTER_KEY_EVENTS -> FLAG_REQUEST_FILTER_KEY_EVENTS
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String capabilityToString(int) -> capabilityToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2 -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
android.support.v4.animation.AnimatorCompatHelper -> android.support.v4.animation.AnimatorCompatHelper:
    android.support.v4.animation.AnimatorProvider IMPL -> IMPL
    android.support.v4.animation.ValueAnimatorCompat emptyValueAnimator() -> emptyValueAnimator
    void clearInterpolator(android.view.View) -> clearInterpolator
android.support.v4.animation.AnimatorListenerCompat -> android.support.v4.animation.AnimatorListenerCompat:
    void onAnimationStart(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationStart
    void onAnimationEnd(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationEnd
    void onAnimationCancel(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationCancel
    void onAnimationRepeat(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationRepeat
android.support.v4.animation.AnimatorProvider -> android.support.v4.animation.AnimatorProvider:
    android.support.v4.animation.ValueAnimatorCompat emptyValueAnimator() -> emptyValueAnimator
    void clearInterpolator(android.view.View) -> clearInterpolator
android.support.v4.animation.AnimatorUpdateListenerCompat -> android.support.v4.animation.AnimatorUpdateListenerCompat:
    void onAnimationUpdate(android.support.v4.animation.ValueAnimatorCompat) -> onAnimationUpdate
android.support.v4.animation.DonutAnimatorCompatProvider -> android.support.v4.animation.DonutAnimatorCompatProvider:
    android.support.v4.animation.ValueAnimatorCompat emptyValueAnimator() -> emptyValueAnimator
    void clearInterpolator(android.view.View) -> clearInterpolator
android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator -> android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator:
    java.util.List mListeners -> mListeners
    java.util.List mUpdateListeners -> mUpdateListeners
    android.view.View mTarget -> mTarget
    long mStartTime -> mStartTime
    long mDuration -> mDuration
    float mFraction -> mFraction
    boolean mStarted -> mStarted
    boolean mEnded -> mEnded
    java.lang.Runnable mLoopRunnable -> mLoopRunnable
    void notifyUpdateListeners() -> notifyUpdateListeners
    void setTarget(android.view.View) -> setTarget
    void addListener(android.support.v4.animation.AnimatorListenerCompat) -> addListener
    void setDuration(long) -> setDuration
    void start() -> start
    long getTime() -> getTime
    void dispatchStart() -> dispatchStart
    void dispatchEnd() -> dispatchEnd
    void dispatchCancel() -> dispatchCancel
    void cancel() -> cancel
    void addUpdateListener(android.support.v4.animation.AnimatorUpdateListenerCompat) -> addUpdateListener
    float getAnimatedFraction() -> getAnimatedFraction
    long access$000(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> access$000
    long access$100(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> access$100
    long access$200(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> access$200
    float access$302(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator,float) -> access$302
    void access$400(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> access$400
    float access$300(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> access$300
    void access$500(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> access$500
    java.lang.Runnable access$600(android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator) -> access$600
android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator$1 -> android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator$1:
    android.support.v4.animation.DonutAnimatorCompatProvider$DonutFloatValueAnimator this$0 -> this$0
    void run() -> run
android.support.v4.animation.HoneycombMr1AnimatorCompatProvider -> android.support.v4.animation.HoneycombMr1AnimatorCompatProvider:
    android.animation.TimeInterpolator mDefaultInterpolator -> mDefaultInterpolator
    android.support.v4.animation.ValueAnimatorCompat emptyValueAnimator() -> emptyValueAnimator
    void clearInterpolator(android.view.View) -> clearInterpolator
android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$AnimatorListenerCompatWrapper -> android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$AnimatorListenerCompatWrapper:
    android.support.v4.animation.AnimatorListenerCompat mWrapped -> mWrapped
    android.support.v4.animation.ValueAnimatorCompat mValueAnimatorCompat -> mValueAnimatorCompat
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat -> android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat:
    android.animation.Animator mWrapped -> mWrapped
    void setTarget(android.view.View) -> setTarget
    void addListener(android.support.v4.animation.AnimatorListenerCompat) -> addListener
    void setDuration(long) -> setDuration
    void start() -> start
    void cancel() -> cancel
    void addUpdateListener(android.support.v4.animation.AnimatorUpdateListenerCompat) -> addUpdateListener
    float getAnimatedFraction() -> getAnimatedFraction
android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat$1 -> android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat$1:
    android.support.v4.animation.AnimatorUpdateListenerCompat val$animatorUpdateListener -> val$animatorUpdateListener
    android.support.v4.animation.HoneycombMr1AnimatorCompatProvider$HoneycombValueAnimatorCompat this$0 -> this$0
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v4.animation.ValueAnimatorCompat -> android.support.v4.animation.ValueAnimatorCompat:
    void setTarget(android.view.View) -> setTarget
    void addListener(android.support.v4.animation.AnimatorListenerCompat) -> addListener
    void setDuration(long) -> setDuration
    void start() -> start
    void cancel() -> cancel
    void addUpdateListener(android.support.v4.animation.AnimatorUpdateListenerCompat) -> addUpdateListener
    float getAnimatedFraction() -> getAnimatedFraction
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    float TOGGLE_DRAWABLE_OFFSET -> TOGGLE_DRAWABLE_OFFSET
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    boolean mHasCustomUpIndicator -> mHasCustomUpIndicator
    android.graphics.drawable.Drawable mHomeAsUpIndicator -> mHomeAsUpIndicator
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    boolean assumeMaterial(android.content.Context) -> assumeMaterial
    void syncState() -> syncState
    void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
    android.app.Activity access$400(android.support.v4.app.ActionBarDrawerToggle) -> access$400
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplJellybeanMR2:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    boolean mHasMirroring -> mHasMirroring
    android.graphics.Rect mTmpRect -> mTmpRect
    float mPosition -> mPosition
    float mOffset -> mOffset
    android.support.v4.app.ActionBarDrawerToggle this$0 -> this$0
    void setPosition(float) -> setPosition
    float getPosition() -> getPosition
    void setOffset(float) -> setOffset
    void draw(android.graphics.Canvas) -> draw
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
android.support.v4.app.ActionBarDrawerToggleJellybeanMR2 -> android.support.v4.app.ActionBarDrawerToggleJellybeanMR2:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
    void finishAfterTransition(android.app.Activity) -> finishAfterTransition
    android.net.Uri getReferrer(android.app.Activity) -> getReferrer
    void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void postponeEnterTransition(android.app.Activity) -> postponeEnterTransition
    void startPostponedEnterTransition(android.app.Activity) -> startPostponedEnterTransition
    void requestPermissions(android.app.Activity,java.lang.String[],int) -> requestPermissions
    boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String) -> shouldShowRequestPermissionRationale
    android.support.v4.app.ActivityCompat21$SharedElementCallback21 createCallback(android.support.v4.app.SharedElementCallback) -> createCallback
android.support.v4.app.ActivityCompat$1 -> android.support.v4.app.ActivityCompat$1:
    java.lang.String[] val$permissions -> val$permissions
    android.app.Activity val$activity -> val$activity
    int val$requestCode -> val$requestCode
    void run() -> run
android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback -> android.support.v4.app.ActivityCompat$OnRequestPermissionsResultCallback:
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
android.support.v4.app.ActivityCompat$SharedElementCallback21Impl -> android.support.v4.app.ActivityCompat$SharedElementCallback21Impl:
    android.support.v4.app.SharedElementCallback mCallback -> mCallback
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.ActivityCompat21 -> android.support.v4.app.ActivityCompat21:
    void finishAfterTransition(android.app.Activity) -> finishAfterTransition
    void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> setExitSharedElementCallback
    void postponeEnterTransition(android.app.Activity) -> postponeEnterTransition
    void startPostponedEnterTransition(android.app.Activity) -> startPostponedEnterTransition
    android.app.SharedElementCallback createCallback(android.support.v4.app.ActivityCompat21$SharedElementCallback21) -> createCallback
android.support.v4.app.ActivityCompat21$SharedElementCallback21 -> android.support.v4.app.ActivityCompat21$SharedElementCallback21:
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.ActivityCompat21$SharedElementCallbackImpl -> android.support.v4.app.ActivityCompat21$SharedElementCallbackImpl:
    android.support.v4.app.ActivityCompat21$SharedElementCallback21 mCallback -> mCallback
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.ActivityCompat22 -> android.support.v4.app.ActivityCompat22:
    android.net.Uri getReferrer(android.app.Activity) -> getReferrer
android.support.v4.app.ActivityCompatApi23 -> android.support.v4.app.ActivityCompatApi23:
    void requestPermissions(android.app.Activity,java.lang.String[],int) -> requestPermissions
    boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String) -> shouldShowRequestPermissionRationale
android.support.v4.app.ActivityCompatApi23$RequestPermissionsRequestCodeValidator -> android.support.v4.app.ActivityCompatApi23$RequestPermissionsRequestCodeValidator:
    void validateRequestPermissionsRequestCode(int) -> validateRequestPermissionsRequestCode
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityManagerCompat -> android.support.v4.app.ActivityManagerCompat:
    boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
android.support.v4.app.ActivityManagerCompatKitKat -> android.support.v4.app.ActivityManagerCompatKitKat:
    boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> makeSceneTransitionAnimation
    android.support.v4.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.support.v4.util.Pair[]) -> makeSceneTransitionAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImpl21 -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImpl21:
    android.support.v4.app.ActivityOptionsCompat21 mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat21 -> android.support.v4.app.ActivityOptionsCompat21:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompat21 makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> makeSceneTransitionAnimation
    android.support.v4.app.ActivityOptionsCompat21 makeSceneTransitionAnimation(android.app.Activity,android.view.View[],java.lang.String[]) -> makeSceneTransitionAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat21) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.AppOpsManagerCompat -> android.support.v4.app.AppOpsManagerCompat:
    int MODE_ALLOWED -> MODE_ALLOWED
    int MODE_IGNORED -> MODE_IGNORED
    int MODE_DEFAULT -> MODE_DEFAULT
    android.support.v4.app.AppOpsManagerCompat$AppOpsManagerImpl IMPL -> IMPL
    java.lang.String permissionToOp(java.lang.String) -> permissionToOp
    int noteOp(android.content.Context,java.lang.String,int,java.lang.String) -> noteOp
    int noteProxyOp(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOp
android.support.v4.app.AppOpsManagerCompat$1 -> android.support.v4.app.AppOpsManagerCompat$1:
android.support.v4.app.AppOpsManagerCompat$AppOpsManager23 -> android.support.v4.app.AppOpsManagerCompat$AppOpsManager23:
    java.lang.String permissionToOp(java.lang.String) -> permissionToOp
    int noteOp(android.content.Context,java.lang.String,int,java.lang.String) -> noteOp
    int noteProxyOp(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOp
android.support.v4.app.AppOpsManagerCompat$AppOpsManagerImpl -> android.support.v4.app.AppOpsManagerCompat$AppOpsManagerImpl:
    java.lang.String permissionToOp(java.lang.String) -> permissionToOp
    int noteOp(android.content.Context,java.lang.String,int,java.lang.String) -> noteOp
    int noteProxyOp(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOp
android.support.v4.app.AppOpsManagerCompat23 -> android.support.v4.app.AppOpsManagerCompat23:
    java.lang.String permissionToOp(java.lang.String) -> permissionToOp
    int noteOp(android.content.Context,java.lang.String,int,java.lang.String) -> noteOp
    int noteProxyOp(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOp
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    boolean SUPPORTS_TRANSITIONS -> SUPPORTS_TRANSITIONS
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.util.ArrayList mSharedElementSourceNames -> mSharedElementSourceNames
    java.util.ArrayList mSharedElementTargetNames -> mSharedElementTargetNames
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String) -> addSharedElement
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void setFirstOut(android.util.SparseArray,android.support.v4.app.Fragment) -> setFirstOut
    void setLastIn(android.util.SparseArray,android.support.v4.app.Fragment) -> setLastIn
    void calculateFragments(android.util.SparseArray,android.util.SparseArray) -> calculateFragments
    void calculateBackFragments(android.util.SparseArray,android.util.SparseArray) -> calculateBackFragments
    android.support.v4.app.BackStackRecord$TransitionState popFromBackStack(boolean,android.support.v4.app.BackStackRecord$TransitionState,android.util.SparseArray,android.util.SparseArray) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
    android.support.v4.app.BackStackRecord$TransitionState beginTransition(android.util.SparseArray,android.util.SparseArray,boolean) -> beginTransition
    java.lang.Object getEnterTransition(android.support.v4.app.Fragment,boolean) -> getEnterTransition
    java.lang.Object getExitTransition(android.support.v4.app.Fragment,boolean) -> getExitTransition
    java.lang.Object getSharedElementTransition(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean) -> getSharedElementTransition
    java.lang.Object captureExitingViews(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.support.v4.util.ArrayMap,android.view.View) -> captureExitingViews
    android.support.v4.util.ArrayMap remapSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> remapSharedElements
    boolean configureTransitions(int,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.util.SparseArray,android.util.SparseArray) -> configureTransitions
    void prepareSharedElementTransition(android.support.v4.app.BackStackRecord$TransitionState,android.view.View,java.lang.Object,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,java.util.ArrayList) -> prepareSharedElementTransition
    void callSharedElementEnd(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> callSharedElementEnd
    void setEpicenterIn(android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> setEpicenterIn
    android.support.v4.util.ArrayMap mapSharedElementsIn(android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> mapSharedElementsIn
    android.support.v4.util.ArrayMap remapNames(java.util.ArrayList,java.util.ArrayList,android.support.v4.util.ArrayMap) -> remapNames
    android.support.v4.util.ArrayMap mapEnteringSharedElements(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,boolean) -> mapEnteringSharedElements
    void excludeHiddenFragmentsAfterEnter(android.view.View,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> excludeHiddenFragmentsAfterEnter
    void excludeHiddenFragments(android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> excludeHiddenFragments
    void setNameOverride(android.support.v4.util.ArrayMap,java.lang.String,java.lang.String) -> setNameOverride
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,java.util.ArrayList,java.util.ArrayList) -> setNameOverrides
    void setBackNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> setBackNameOverrides
    void setNameOverrides(android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.util.ArrayMap,boolean) -> setNameOverrides
    android.support.v4.util.ArrayMap access$000(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,boolean,android.support.v4.app.Fragment) -> access$000
    void access$100(android.support.v4.app.BackStackRecord,android.support.v4.util.ArrayMap,android.support.v4.app.BackStackRecord$TransitionState) -> access$100
    void access$200(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap) -> access$200
    void access$300(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$TransitionState,int,java.lang.Object) -> access$300
android.support.v4.app.BackStackRecord$1 -> android.support.v4.app.BackStackRecord$1:
    android.support.v4.app.Fragment val$inFragment -> val$inFragment
    android.support.v4.app.BackStackRecord this$0 -> this$0
    android.view.View getView() -> getView
android.support.v4.app.BackStackRecord$2 -> android.support.v4.app.BackStackRecord$2:
    android.view.View val$sceneRoot -> val$sceneRoot
    java.lang.Object val$sharedElementTransition -> val$sharedElementTransition
    java.util.ArrayList val$sharedElementTargets -> val$sharedElementTargets
    android.support.v4.app.BackStackRecord$TransitionState val$state -> val$state
    boolean val$isBack -> val$isBack
    android.support.v4.app.Fragment val$inFragment -> val$inFragment
    android.support.v4.app.Fragment val$outFragment -> val$outFragment
    android.support.v4.app.BackStackRecord this$0 -> this$0
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$3 -> android.support.v4.app.BackStackRecord$3:
    android.view.View val$sceneRoot -> val$sceneRoot
    android.support.v4.app.BackStackRecord$TransitionState val$state -> val$state
    int val$containerId -> val$containerId
    java.lang.Object val$transition -> val$transition
    android.support.v4.app.BackStackRecord this$0 -> this$0
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackRecord$TransitionState -> android.support.v4.app.BackStackRecord$TransitionState:
    android.support.v4.util.ArrayMap nameOverrides -> nameOverrides
    java.util.ArrayList hiddenFragmentViews -> hiddenFragmentViews
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView enteringEpicenterView -> enteringEpicenterView
    android.view.View nonExistentView -> nonExistentView
    android.support.v4.app.BackStackRecord this$0 -> this$0
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.util.ArrayList mSharedElementSourceNames -> mSharedElementSourceNames
    java.util.ArrayList mSharedElementTargetNames -> mSharedElementTargetNames
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.BaseFragmentActivityDonut -> android.support.v4.app.BaseFragmentActivityDonut:
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> dispatchFragmentsOnCreateView
android.support.v4.app.BaseFragmentActivityHoneycomb -> android.support.v4.app.BaseFragmentActivityHoneycomb:
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
android.support.v4.app.BundleCompat -> android.support.v4.app.BundleCompat:
    android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
    void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder) -> putBinder
android.support.v4.app.BundleCompatDonut -> android.support.v4.app.BundleCompatDonut:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sGetIBinderMethod -> sGetIBinderMethod
    boolean sGetIBinderMethodFetched -> sGetIBinderMethodFetched
    java.lang.reflect.Method sPutIBinderMethod -> sPutIBinderMethod
    boolean sPutIBinderMethodFetched -> sPutIBinderMethodFetched
    android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
    void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder) -> putBinder
android.support.v4.app.BundleCompatJellybeanMR2 -> android.support.v4.app.BundleCompatJellybeanMR2:
    android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
    void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder) -> putBinder
android.support.v4.app.BundleUtil -> android.support.v4.app.BundleUtil:
    android.os.Bundle[] getBundleArrayFromBundle(android.os.Bundle,java.lang.String) -> getBundleArrayFromBundle
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void setupDialog(android.app.Dialog,int) -> setupDialog
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.DialogFragment$DialogStyle -> android.support.v4.app.DialogFragment$DialogStyle:
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> sClassMap
    java.lang.Object USE_DEFAULT_TRANSITION -> USE_DEFAULT_TRANSITION
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentHostCallback mHost -> mHost
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    java.lang.Object mEnterTransition -> mEnterTransition
    java.lang.Object mReturnTransition -> mReturnTransition
    java.lang.Object mExitTransition -> mExitTransition
    java.lang.Object mReenterTransition -> mReenterTransition
    java.lang.Object mSharedElementEnterTransition -> mSharedElementEnterTransition
    java.lang.Object mSharedElementReturnTransition -> mSharedElementReturnTransition
    java.lang.Boolean mAllowReturnTransitionOverlap -> mAllowReturnTransitionOverlap
    java.lang.Boolean mAllowEnterTransitionOverlap -> mAllowEnterTransitionOverlap
    android.support.v4.app.SharedElementCallback mEnterTransitionCallback -> mEnterTransitionCallback
    android.support.v4.app.SharedElementCallback mExitTransitionCallback -> mExitTransitionCallback
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.content.Context getContext() -> getContext
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    java.lang.Object getHost() -> getHost
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void requestPermissions(java.lang.String[],int) -> requestPermissions
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    boolean shouldShowRequestPermissionRationale(java.lang.String) -> shouldShowRequestPermissionRationale
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.content.Context) -> onAttach
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void setEnterTransition(java.lang.Object) -> setEnterTransition
    java.lang.Object getEnterTransition() -> getEnterTransition
    void setReturnTransition(java.lang.Object) -> setReturnTransition
    java.lang.Object getReturnTransition() -> getReturnTransition
    void setExitTransition(java.lang.Object) -> setExitTransition
    java.lang.Object getExitTransition() -> getExitTransition
    void setReenterTransition(java.lang.Object) -> setReenterTransition
    java.lang.Object getReenterTransition() -> getReenterTransition
    void setSharedElementEnterTransition(java.lang.Object) -> setSharedElementEnterTransition
    java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    void setSharedElementReturnTransition(java.lang.Object) -> setSharedElementReturnTransition
    java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    void setAllowEnterTransitionOverlap(boolean) -> setAllowEnterTransitionOverlap
    boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    void setAllowReturnTransitionOverlap(boolean) -> setAllowReturnTransitionOverlap
    boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View onFindViewById(int) -> onFindViewById
    boolean onHasView() -> onHasView
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentController mFragments -> mFragments
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mRequestedPermissionsFromFragment -> mRequestedPermissionsFromFragment
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void supportFinishAfterTransition() -> supportFinishAfterTransition
    void setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setEnterSharedElementCallback
    void setExitSharedElementCallback(android.support.v4.app.SharedElementCallback) -> setExitSharedElementCallback
    void supportPostponeEnterTransition() -> supportPostponeEnterTransition
    void supportStartPostponedEnterTransition() -> supportStartPostponedEnterTransition
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> dispatchFragmentsOnCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStateNotSaved() -> onStateNotSaved
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void validateRequestPermissionsRequestCode(int) -> validateRequestPermissionsRequestCode
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void requestPermissionsFromFragment(android.support.v4.app.Fragment,java.lang.String[],int) -> requestPermissionsFromFragment
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void access$000(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment,java.lang.String[],int) -> access$000
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$HostCallbacks -> android.support.v4.app.FragmentActivity$HostCallbacks:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> onDump
    boolean onShouldSaveFragmentState(android.support.v4.app.Fragment) -> onShouldSaveFragmentState
    android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    android.support.v4.app.FragmentActivity onGetHost() -> onGetHost
    void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
    void onStartActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> onStartActivityFromFragment
    void onRequestPermissionsFromFragment(android.support.v4.app.Fragment,java.lang.String[],int) -> onRequestPermissionsFromFragment
    boolean onShouldShowRequestPermissionRationale(java.lang.String) -> onShouldShowRequestPermissionRationale
    boolean onHasWindowAnimations() -> onHasWindowAnimations
    int onGetWindowAnimations() -> onGetWindowAnimations
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.view.View onFindViewById(int) -> onFindViewById
    boolean onHasView() -> onHasView
    java.lang.Object onGetHost() -> onGetHost
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object custom -> custom
    java.util.List fragments -> fragments
    android.support.v4.util.SimpleArrayMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View onFindViewById(int) -> onFindViewById
    boolean onHasView() -> onHasView
android.support.v4.app.FragmentController -> android.support.v4.app.FragmentController:
    android.support.v4.app.FragmentHostCallback mHost -> mHost
    android.support.v4.app.FragmentController createController(android.support.v4.app.FragmentHostCallback) -> createController
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    int getActiveFragmentsCount() -> getActiveFragmentsCount
    java.util.List getActiveFragments(java.util.List) -> getActiveFragments
    void attachHost(android.support.v4.app.Fragment) -> attachHost
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void noteStateNotSaved() -> noteStateNotSaved
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.List) -> restoreAllState
    java.util.List retainNonConfig() -> retainNonConfig
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    boolean execPendingActions() -> execPendingActions
    void doLoaderStart() -> doLoaderStart
    void doLoaderStop(boolean) -> doLoaderStop
    void doLoaderRetain() -> doLoaderRetain
    void doLoaderDestroy() -> doLoaderDestroy
    void reportLoaderStart() -> reportLoaderStart
    android.support.v4.util.SimpleArrayMap retainLoaderNonConfig() -> retainLoaderNonConfig
    void restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap) -> restoreLoaderNonConfig
    void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dumpLoaders
android.support.v4.app.FragmentHostCallback -> android.support.v4.app.FragmentHostCallback:
    android.app.Activity mActivity -> mActivity
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    int mWindowAnimations -> mWindowAnimations
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> onDump
    boolean onShouldSaveFragmentState(android.support.v4.app.Fragment) -> onShouldSaveFragmentState
    android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    java.lang.Object onGetHost() -> onGetHost
    void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
    void onStartActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> onStartActivityFromFragment
    void onRequestPermissionsFromFragment(android.support.v4.app.Fragment,java.lang.String[],int) -> onRequestPermissionsFromFragment
    boolean onShouldShowRequestPermissionRationale(java.lang.String) -> onShouldShowRequestPermissionRationale
    boolean onHasWindowAnimations() -> onHasWindowAnimations
    int onGetWindowAnimations() -> onGetWindowAnimations
    android.view.View onFindViewById(int) -> onFindViewById
    boolean onHasView() -> onHasView
    android.app.Activity getActivity() -> getActivity
    android.content.Context getContext() -> getContext
    android.os.Handler getHandler() -> getHandler
    android.support.v4.app.FragmentManagerImpl getFragmentManagerImpl() -> getFragmentManagerImpl
    android.support.v4.app.LoaderManagerImpl getLoaderManagerImpl() -> getLoaderManagerImpl
    void inactivateFragment(java.lang.String) -> inactivateFragment
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    void doLoaderStart() -> doLoaderStart
    void doLoaderStop(boolean) -> doLoaderStop
    void doLoaderRetain() -> doLoaderRetain
    void doLoaderDestroy() -> doLoaderDestroy
    void reportLoaderStart() -> reportLoaderStart
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
    android.support.v4.util.SimpleArrayMap retainLoaderNonConfig() -> retainLoaderNonConfig
    void restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap) -> restoreLoaderNonConfig
    void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dumpLoaders
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentHostCallback mHost -> mHost
    android.support.v4.app.FragmentController mController -> mController
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    boolean modifiesAlpha(android.view.animation.Animation) -> modifiesAlpha
    boolean shouldRunOnHWLayer(android.view.View,android.view.animation.Animation) -> shouldRunOnHWLayer
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    boolean isDestroyed() -> isDestroyed
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void setHWLayerAnimListenerIfAlpha(android.view.View,android.view.animation.Animation) -> setHWLayerAnimListenerIfAlpha
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.List) -> restoreAllState
    void attachController(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachController
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.support.v4.view.LayoutInflaterFactory getLayoutInflaterFactory() -> getLayoutInflaterFactory
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener -> android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener:
    boolean mShouldRunOnHWLayer -> mShouldRunOnHWLayer
    android.view.View mView -> mView
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    android.view.View access$000(android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener) -> access$000
android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1 -> android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1:
    android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$2 -> android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$2:
    android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$FragmentTag -> android.support.v4.app.FragmentManagerImpl$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentHostCallback,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void ensureHierarchy(android.content.Context) -> ensureHierarchy
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String) -> addSharedElement
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.FragmentTransaction$Transit -> android.support.v4.app.FragmentTransaction$Transit:
android.support.v4.app.FragmentTransitionCompat21 -> android.support.v4.app.FragmentTransitionCompat21:
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    java.lang.Object captureExitingViews(java.lang.Object,android.view.View,java.util.ArrayList,java.util.Map,android.view.View) -> captureExitingViews
    void excludeTarget(java.lang.Object,android.view.View,boolean) -> excludeTarget
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    java.lang.Object wrapSharedElementTransition(java.lang.Object) -> wrapSharedElementTransition
    void addTransitionTargets(java.lang.Object,java.lang.Object,android.view.View,android.support.v4.app.FragmentTransitionCompat21$ViewRetriever,android.view.View,android.support.v4.app.FragmentTransitionCompat21$EpicenterView,java.util.Map,java.util.ArrayList,java.util.Map,java.util.Map,java.util.ArrayList) -> addTransitionTargets
    java.lang.Object mergeTransitions(java.lang.Object,java.lang.Object,java.lang.Object,boolean) -> mergeTransitions
    void setSharedElementTargets(java.lang.Object,android.view.View,java.util.Map,java.util.ArrayList) -> setSharedElementTargets
    void bfsAddViewChildren(java.util.List,android.view.View) -> bfsAddViewChildren
    boolean containedBeforeIndex(java.util.List,android.view.View,int) -> containedBeforeIndex
    void setSharedElementEpicenter(android.transition.Transition,android.support.v4.app.FragmentTransitionCompat21$EpicenterView) -> setSharedElementEpicenter
    android.graphics.Rect getBoundsOnScreen(android.view.View) -> getBoundsOnScreen
    void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    void cleanupTransitions(android.view.View,android.view.View,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.util.Map) -> cleanupTransitions
    void removeTargets(java.lang.Object,java.util.ArrayList) -> removeTargets
    void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    boolean hasSimpleTarget(android.transition.Transition) -> hasSimpleTarget
    boolean isNullOrEmpty(java.util.List) -> isNullOrEmpty
    void access$000(java.util.ArrayList,android.view.View) -> access$000
    android.graphics.Rect access$100(android.view.View) -> access$100
android.support.v4.app.FragmentTransitionCompat21$1 -> android.support.v4.app.FragmentTransitionCompat21$1:
    android.graphics.Rect val$epicenter -> val$epicenter
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$2 -> android.support.v4.app.FragmentTransitionCompat21$2:
    android.view.View val$container -> val$container
    android.transition.Transition val$enterTransition -> val$enterTransition
    android.view.View val$nonExistentView -> val$nonExistentView
    android.support.v4.app.FragmentTransitionCompat21$ViewRetriever val$inFragment -> val$inFragment
    java.util.Map val$nameOverrides -> val$nameOverrides
    java.util.Map val$renamedViews -> val$renamedViews
    java.util.ArrayList val$enteringViews -> val$enteringViews
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$3 -> android.support.v4.app.FragmentTransitionCompat21$3:
    android.graphics.Rect mEpicenter -> mEpicenter
    android.support.v4.app.FragmentTransitionCompat21$EpicenterView val$epicenterView -> val$epicenterView
    android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
android.support.v4.app.FragmentTransitionCompat21$4 -> android.support.v4.app.FragmentTransitionCompat21$4:
    android.view.View val$sceneRoot -> val$sceneRoot
    android.transition.Transition val$enterTransition -> val$enterTransition
    java.util.ArrayList val$enteringViews -> val$enteringViews
    android.transition.Transition val$exitTransition -> val$exitTransition
    java.util.ArrayList val$exitingViews -> val$exitingViews
    android.transition.Transition val$sharedElementTransition -> val$sharedElementTransition
    java.util.ArrayList val$sharedElementTargets -> val$sharedElementTargets
    java.util.Map val$renamedViews -> val$renamedViews
    java.util.ArrayList val$hiddenViews -> val$hiddenViews
    android.transition.Transition val$overallTransition -> val$overallTransition
    android.view.View val$nonExistentView -> val$nonExistentView
    boolean onPreDraw() -> onPreDraw
android.support.v4.app.FragmentTransitionCompat21$EpicenterView -> android.support.v4.app.FragmentTransitionCompat21$EpicenterView:
    android.view.View epicenter -> epicenter
android.support.v4.app.FragmentTransitionCompat21$ViewRetriever -> android.support.v4.app.FragmentTransitionCompat21$ViewRetriever:
    android.view.View getView() -> getView
android.support.v4.app.INotificationSideChannel -> android.support.v4.app.INotificationSideChannel:
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.INotificationSideChannel$Stub -> android.support.v4.app.INotificationSideChannel$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_notify -> TRANSACTION_notify
    int TRANSACTION_cancel -> TRANSACTION_cancel
    int TRANSACTION_cancelAll -> TRANSACTION_cancelAll
    android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.app.INotificationSideChannel$Stub$Proxy -> android.support.v4.app.INotificationSideChannel$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    android.support.v4.app.FragmentHostCallback mHost -> mHost
    void updateHostController(android.support.v4.app.FragmentHostCallback) -> updateHostController
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
    android.support.v4.app.FragmentHostCallback access$000(android.support.v4.app.LoaderManagerImpl) -> access$000
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void cancel() -> cancel
    void destroy() -> destroy
    void onLoadCanceled(android.support.v4.content.Loader) -> onLoadCanceled
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationBuilderWithActions -> android.support.v4.app.NotificationBuilderWithActions:
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
android.support.v4.app.NotificationBuilderWithBuilderAccessor -> android.support.v4.app.NotificationBuilderWithBuilderAccessor:
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int DEFAULT_ALL -> DEFAULT_ALL
    int DEFAULT_SOUND -> DEFAULT_SOUND
    int DEFAULT_VIBRATE -> DEFAULT_VIBRATE
    int DEFAULT_LIGHTS -> DEFAULT_LIGHTS
    int STREAM_DEFAULT -> STREAM_DEFAULT
    int FLAG_SHOW_LIGHTS -> FLAG_SHOW_LIGHTS
    int FLAG_ONGOING_EVENT -> FLAG_ONGOING_EVENT
    int FLAG_INSISTENT -> FLAG_INSISTENT
    int FLAG_ONLY_ALERT_ONCE -> FLAG_ONLY_ALERT_ONCE
    int FLAG_AUTO_CANCEL -> FLAG_AUTO_CANCEL
    int FLAG_NO_CLEAR -> FLAG_NO_CLEAR
    int FLAG_FOREGROUND_SERVICE -> FLAG_FOREGROUND_SERVICE
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int FLAG_LOCAL_ONLY -> FLAG_LOCAL_ONLY
    int FLAG_GROUP_SUMMARY -> FLAG_GROUP_SUMMARY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    java.lang.String EXTRA_TITLE -> EXTRA_TITLE
    java.lang.String EXTRA_TITLE_BIG -> EXTRA_TITLE_BIG
    java.lang.String EXTRA_TEXT -> EXTRA_TEXT
    java.lang.String EXTRA_SUB_TEXT -> EXTRA_SUB_TEXT
    java.lang.String EXTRA_INFO_TEXT -> EXTRA_INFO_TEXT
    java.lang.String EXTRA_SUMMARY_TEXT -> EXTRA_SUMMARY_TEXT
    java.lang.String EXTRA_BIG_TEXT -> EXTRA_BIG_TEXT
    java.lang.String EXTRA_SMALL_ICON -> EXTRA_SMALL_ICON
    java.lang.String EXTRA_LARGE_ICON -> EXTRA_LARGE_ICON
    java.lang.String EXTRA_LARGE_ICON_BIG -> EXTRA_LARGE_ICON_BIG
    java.lang.String EXTRA_PROGRESS -> EXTRA_PROGRESS
    java.lang.String EXTRA_PROGRESS_MAX -> EXTRA_PROGRESS_MAX
    java.lang.String EXTRA_PROGRESS_INDETERMINATE -> EXTRA_PROGRESS_INDETERMINATE
    java.lang.String EXTRA_SHOW_CHRONOMETER -> EXTRA_SHOW_CHRONOMETER
    java.lang.String EXTRA_SHOW_WHEN -> EXTRA_SHOW_WHEN
    java.lang.String EXTRA_PICTURE -> EXTRA_PICTURE
    java.lang.String EXTRA_TEXT_LINES -> EXTRA_TEXT_LINES
    java.lang.String EXTRA_TEMPLATE -> EXTRA_TEMPLATE
    java.lang.String EXTRA_PEOPLE -> EXTRA_PEOPLE
    java.lang.String EXTRA_BACKGROUND_IMAGE_URI -> EXTRA_BACKGROUND_IMAGE_URI
    java.lang.String EXTRA_MEDIA_SESSION -> EXTRA_MEDIA_SESSION
    java.lang.String EXTRA_COMPACT_ACTIONS -> EXTRA_COMPACT_ACTIONS
    int COLOR_DEFAULT -> COLOR_DEFAULT
    int VISIBILITY_PUBLIC -> VISIBILITY_PUBLIC
    int VISIBILITY_PRIVATE -> VISIBILITY_PRIVATE
    int VISIBILITY_SECRET -> VISIBILITY_SECRET
    java.lang.String CATEGORY_CALL -> CATEGORY_CALL
    java.lang.String CATEGORY_MESSAGE -> CATEGORY_MESSAGE
    java.lang.String CATEGORY_EMAIL -> CATEGORY_EMAIL
    java.lang.String CATEGORY_EVENT -> CATEGORY_EVENT
    java.lang.String CATEGORY_PROMO -> CATEGORY_PROMO
    java.lang.String CATEGORY_ALARM -> CATEGORY_ALARM
    java.lang.String CATEGORY_PROGRESS -> CATEGORY_PROGRESS
    java.lang.String CATEGORY_SOCIAL -> CATEGORY_SOCIAL
    java.lang.String CATEGORY_ERROR -> CATEGORY_ERROR
    java.lang.String CATEGORY_TRANSPORT -> CATEGORY_TRANSPORT
    java.lang.String CATEGORY_SYSTEM -> CATEGORY_SYSTEM
    java.lang.String CATEGORY_SERVICE -> CATEGORY_SERVICE
    java.lang.String CATEGORY_RECOMMENDATION -> CATEGORY_RECOMMENDATION
    java.lang.String CATEGORY_STATUS -> CATEGORY_STATUS
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    void addActionsToBuilder(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> addActionsToBuilder
    void addStyleToBuilderJellybean(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> addStyleToBuilderJellybean
    android.app.Notification[] getNotificationArrayFromBundle(android.os.Bundle,java.lang.String) -> getNotificationArrayFromBundle
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    java.lang.String getCategory(android.app.Notification) -> getCategory
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    void access$000(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList) -> access$000
    void access$100(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style) -> access$100
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$200() -> access$200
    android.app.Notification[] access$500(android.os.Bundle,java.lang.String) -> access$500
android.support.v4.app.NotificationCompat$1 -> android.support.v4.app.NotificationCompat$1:
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput[] mRemoteInputs -> mRemoteInputs
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
    android.support.v4.app.NotificationCompatBase$Action$Factory FACTORY -> FACTORY
    int getIcon() -> getIcon
    java.lang.CharSequence getTitle() -> getTitle
    android.app.PendingIntent getActionIntent() -> getActionIntent
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
    android.os.Bundle access$300(android.support.v4.app.NotificationCompat$Action) -> access$300
android.support.v4.app.NotificationCompat$Action$1 -> android.support.v4.app.NotificationCompat$Action$1:
    android.support.v4.app.NotificationCompat$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompat$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
android.support.v4.app.NotificationCompat$Action$Builder -> android.support.v4.app.NotificationCompat$Action$Builder:
    int mIcon -> mIcon
    java.lang.CharSequence mTitle -> mTitle
    android.app.PendingIntent mIntent -> mIntent
    android.os.Bundle mExtras -> mExtras
    java.util.ArrayList mRemoteInputs -> mRemoteInputs
    android.support.v4.app.NotificationCompat$Action$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Action$Builder addRemoteInput(android.support.v4.app.RemoteInput) -> addRemoteInput
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Extender) -> extend
    android.support.v4.app.NotificationCompat$Action build() -> build
android.support.v4.app.NotificationCompat$Action$Extender -> android.support.v4.app.NotificationCompat$Action$Extender:
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
android.support.v4.app.NotificationCompat$Action$WearableExtender -> android.support.v4.app.NotificationCompat$Action$WearableExtender:
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> EXTRA_WEARABLE_EXTENSIONS
    java.lang.String KEY_FLAGS -> KEY_FLAGS
    java.lang.String KEY_IN_PROGRESS_LABEL -> KEY_IN_PROGRESS_LABEL
    java.lang.String KEY_CONFIRM_LABEL -> KEY_CONFIRM_LABEL
    java.lang.String KEY_CANCEL_LABEL -> KEY_CANCEL_LABEL
    int FLAG_AVAILABLE_OFFLINE -> FLAG_AVAILABLE_OFFLINE
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    int mFlags -> mFlags
    java.lang.CharSequence mInProgressLabel -> mInProgressLabel
    java.lang.CharSequence mConfirmLabel -> mConfirmLabel
    java.lang.CharSequence mCancelLabel -> mCancelLabel
    android.support.v4.app.NotificationCompat$Action$Builder extend(android.support.v4.app.NotificationCompat$Action$Builder) -> extend
    android.support.v4.app.NotificationCompat$Action$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$Action$WearableExtender setAvailableOffline(boolean) -> setAvailableOffline
    boolean isAvailableOffline() -> isAvailableOffline
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Action$WearableExtender setInProgressLabel(java.lang.CharSequence) -> setInProgressLabel
    java.lang.CharSequence getInProgressLabel() -> getInProgressLabel
    android.support.v4.app.NotificationCompat$Action$WearableExtender setConfirmLabel(java.lang.CharSequence) -> setConfirmLabel
    java.lang.CharSequence getConfirmLabel() -> getConfirmLabel
    android.support.v4.app.NotificationCompat$Action$WearableExtender setCancelLabel(java.lang.CharSequence) -> setCancelLabel
    java.lang.CharSequence getCancelLabel() -> getCancelLabel
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    int MAX_CHARSEQUENCE_LENGTH -> MAX_CHARSEQUENCE_LENGTH
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mShowWhen -> mShowWhen
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.lang.String mGroupKey -> mGroupKey
    boolean mGroupSummary -> mGroupSummary
    java.lang.String mSortKey -> mSortKey
    java.util.ArrayList mActions -> mActions
    boolean mLocalOnly -> mLocalOnly
    java.lang.String mCategory -> mCategory
    android.os.Bundle mExtras -> mExtras
    int mColor -> mColor
    int mVisibility -> mVisibility
    android.app.Notification mPublicVersion -> mPublicVersion
    android.app.Notification mNotification -> mNotification
    java.util.ArrayList mPeople -> mPeople
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setShowWhen(boolean) -> setShowWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setLocalOnly(boolean) -> setLocalOnly
    android.support.v4.app.NotificationCompat$Builder setCategory(java.lang.String) -> setCategory
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addPerson(java.lang.String) -> addPerson
    android.support.v4.app.NotificationCompat$Builder setGroup(java.lang.String) -> setGroup
    android.support.v4.app.NotificationCompat$Builder setGroupSummary(boolean) -> setGroupSummary
    android.support.v4.app.NotificationCompat$Builder setSortKey(java.lang.String) -> setSortKey
    android.support.v4.app.NotificationCompat$Builder addExtras(android.os.Bundle) -> addExtras
    android.support.v4.app.NotificationCompat$Builder setExtras(android.os.Bundle) -> setExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.support.v4.app.NotificationCompat$Builder setColor(int) -> setColor
    android.support.v4.app.NotificationCompat$Builder setVisibility(int) -> setVisibility
    android.support.v4.app.NotificationCompat$Builder setPublicVersion(android.app.Notification) -> setPublicVersion
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Extender) -> extend
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
    android.support.v4.app.NotificationCompat$BuilderExtender getExtender() -> getExtender
    java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> limitCharSequenceLength
android.support.v4.app.NotificationCompat$BuilderExtender -> android.support.v4.app.NotificationCompat$BuilderExtender:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationBuilderWithBuilderAccessor) -> build
android.support.v4.app.NotificationCompat$CarExtender -> android.support.v4.app.NotificationCompat$CarExtender:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_CAR_EXTENDER -> EXTRA_CAR_EXTENDER
    java.lang.String EXTRA_LARGE_ICON -> EXTRA_LARGE_ICON
    java.lang.String EXTRA_CONVERSATION -> EXTRA_CONVERSATION
    java.lang.String EXTRA_COLOR -> EXTRA_COLOR
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation mUnreadConversation -> mUnreadConversation
    int mColor -> mColor
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
    android.support.v4.app.NotificationCompat$CarExtender setColor(int) -> setColor
    int getColor() -> getColor
    android.support.v4.app.NotificationCompat$CarExtender setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.graphics.Bitmap getLargeIcon() -> getLargeIcon
    android.support.v4.app.NotificationCompat$CarExtender setUnreadConversation(android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation) -> setUnreadConversation
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversation() -> getUnreadConversation
android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation -> android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation:
    java.lang.String[] mMessages -> mMessages
    android.support.v4.app.RemoteInput mRemoteInput -> mRemoteInput
    android.app.PendingIntent mReplyPendingIntent -> mReplyPendingIntent
    android.app.PendingIntent mReadPendingIntent -> mReadPendingIntent
    java.lang.String[] mParticipants -> mParticipants
    long mLatestTimestamp -> mLatestTimestamp
    android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory FACTORY -> FACTORY
    java.lang.String[] getMessages() -> getMessages
    android.support.v4.app.RemoteInput getRemoteInput() -> getRemoteInput
    android.app.PendingIntent getReplyPendingIntent() -> getReplyPendingIntent
    android.app.PendingIntent getReadPendingIntent() -> getReadPendingIntent
    java.lang.String[] getParticipants() -> getParticipants
    java.lang.String getParticipant() -> getParticipant
    long getLatestTimestamp() -> getLatestTimestamp
    android.support.v4.app.RemoteInputCompatBase$RemoteInput getRemoteInput() -> getRemoteInput
android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$1 -> android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$1:
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation build(java.lang.String[],android.support.v4.app.RemoteInputCompatBase$RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> build
    android.support.v4.app.NotificationCompatBase$UnreadConversation build(java.lang.String[],android.support.v4.app.RemoteInputCompatBase$RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> build
android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder -> android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder:
    java.util.List mMessages -> mMessages
    java.lang.String mParticipant -> mParticipant
    android.support.v4.app.RemoteInput mRemoteInput -> mRemoteInput
    android.app.PendingIntent mReadPendingIntent -> mReadPendingIntent
    android.app.PendingIntent mReplyPendingIntent -> mReplyPendingIntent
    long mLatestTimestamp -> mLatestTimestamp
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder addMessage(java.lang.String) -> addMessage
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReplyAction(android.app.PendingIntent,android.support.v4.app.RemoteInput) -> setReplyAction
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReadPendingIntent(android.app.PendingIntent) -> setReadPendingIntent
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation$Builder setLatestTimestamp(long) -> setLatestTimestamp
    android.support.v4.app.NotificationCompat$CarExtender$UnreadConversation build() -> build
android.support.v4.app.NotificationCompat$Extender -> android.support.v4.app.NotificationCompat$Extender:
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    java.lang.String getCategory(android.app.Notification) -> getCategory
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 -> android.support.v4.app.NotificationCompat$NotificationCompatImplApi20:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplApi21 -> android.support.v4.app.NotificationCompat$NotificationCompatImplApi21:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    java.lang.String getCategory(android.app.Notification) -> getCategory
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    java.lang.String getCategory(android.app.Notification) -> getCategory
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread -> android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    android.support.v4.app.NotificationCompat$Action[] getActionsFromParcelableArrayList(java.util.ArrayList) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat -> android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender) -> build
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$WearableExtender -> android.support.v4.app.NotificationCompat$WearableExtender:
    int UNSET_ACTION_INDEX -> UNSET_ACTION_INDEX
    int SIZE_DEFAULT -> SIZE_DEFAULT
    int SIZE_XSMALL -> SIZE_XSMALL
    int SIZE_SMALL -> SIZE_SMALL
    int SIZE_MEDIUM -> SIZE_MEDIUM
    int SIZE_LARGE -> SIZE_LARGE
    int SIZE_FULL_SCREEN -> SIZE_FULL_SCREEN
    int SCREEN_TIMEOUT_SHORT -> SCREEN_TIMEOUT_SHORT
    int SCREEN_TIMEOUT_LONG -> SCREEN_TIMEOUT_LONG
    java.lang.String EXTRA_WEARABLE_EXTENSIONS -> EXTRA_WEARABLE_EXTENSIONS
    java.lang.String KEY_ACTIONS -> KEY_ACTIONS
    java.lang.String KEY_FLAGS -> KEY_FLAGS
    java.lang.String KEY_DISPLAY_INTENT -> KEY_DISPLAY_INTENT
    java.lang.String KEY_PAGES -> KEY_PAGES
    java.lang.String KEY_BACKGROUND -> KEY_BACKGROUND
    java.lang.String KEY_CONTENT_ICON -> KEY_CONTENT_ICON
    java.lang.String KEY_CONTENT_ICON_GRAVITY -> KEY_CONTENT_ICON_GRAVITY
    java.lang.String KEY_CONTENT_ACTION_INDEX -> KEY_CONTENT_ACTION_INDEX
    java.lang.String KEY_CUSTOM_SIZE_PRESET -> KEY_CUSTOM_SIZE_PRESET
    java.lang.String KEY_CUSTOM_CONTENT_HEIGHT -> KEY_CUSTOM_CONTENT_HEIGHT
    java.lang.String KEY_GRAVITY -> KEY_GRAVITY
    java.lang.String KEY_HINT_SCREEN_TIMEOUT -> KEY_HINT_SCREEN_TIMEOUT
    int FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE -> FLAG_CONTENT_INTENT_AVAILABLE_OFFLINE
    int FLAG_HINT_HIDE_ICON -> FLAG_HINT_HIDE_ICON
    int FLAG_HINT_SHOW_BACKGROUND_ONLY -> FLAG_HINT_SHOW_BACKGROUND_ONLY
    int FLAG_START_SCROLL_BOTTOM -> FLAG_START_SCROLL_BOTTOM
    int FLAG_HINT_AVOID_BACKGROUND_CLIPPING -> FLAG_HINT_AVOID_BACKGROUND_CLIPPING
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    int DEFAULT_CONTENT_ICON_GRAVITY -> DEFAULT_CONTENT_ICON_GRAVITY
    int DEFAULT_GRAVITY -> DEFAULT_GRAVITY
    java.util.ArrayList mActions -> mActions
    int mFlags -> mFlags
    android.app.PendingIntent mDisplayIntent -> mDisplayIntent
    java.util.ArrayList mPages -> mPages
    android.graphics.Bitmap mBackground -> mBackground
    int mContentIcon -> mContentIcon
    int mContentIconGravity -> mContentIconGravity
    int mContentActionIndex -> mContentActionIndex
    int mCustomSizePreset -> mCustomSizePreset
    int mCustomContentHeight -> mCustomContentHeight
    int mGravity -> mGravity
    int mHintScreenTimeout -> mHintScreenTimeout
    android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder) -> extend
    android.support.v4.app.NotificationCompat$WearableExtender clone() -> clone
    android.support.v4.app.NotificationCompat$WearableExtender addAction(android.support.v4.app.NotificationCompat$Action) -> addAction
    android.support.v4.app.NotificationCompat$WearableExtender addActions(java.util.List) -> addActions
    android.support.v4.app.NotificationCompat$WearableExtender clearActions() -> clearActions
    java.util.List getActions() -> getActions
    android.support.v4.app.NotificationCompat$WearableExtender setDisplayIntent(android.app.PendingIntent) -> setDisplayIntent
    android.app.PendingIntent getDisplayIntent() -> getDisplayIntent
    android.support.v4.app.NotificationCompat$WearableExtender addPage(android.app.Notification) -> addPage
    android.support.v4.app.NotificationCompat$WearableExtender addPages(java.util.List) -> addPages
    android.support.v4.app.NotificationCompat$WearableExtender clearPages() -> clearPages
    java.util.List getPages() -> getPages
    android.support.v4.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap) -> setBackground
    android.graphics.Bitmap getBackground() -> getBackground
    android.support.v4.app.NotificationCompat$WearableExtender setContentIcon(int) -> setContentIcon
    int getContentIcon() -> getContentIcon
    android.support.v4.app.NotificationCompat$WearableExtender setContentIconGravity(int) -> setContentIconGravity
    int getContentIconGravity() -> getContentIconGravity
    android.support.v4.app.NotificationCompat$WearableExtender setContentAction(int) -> setContentAction
    int getContentAction() -> getContentAction
    android.support.v4.app.NotificationCompat$WearableExtender setGravity(int) -> setGravity
    int getGravity() -> getGravity
    android.support.v4.app.NotificationCompat$WearableExtender setCustomSizePreset(int) -> setCustomSizePreset
    int getCustomSizePreset() -> getCustomSizePreset
    android.support.v4.app.NotificationCompat$WearableExtender setCustomContentHeight(int) -> setCustomContentHeight
    int getCustomContentHeight() -> getCustomContentHeight
    android.support.v4.app.NotificationCompat$WearableExtender setStartScrollBottom(boolean) -> setStartScrollBottom
    boolean getStartScrollBottom() -> getStartScrollBottom
    android.support.v4.app.NotificationCompat$WearableExtender setContentIntentAvailableOffline(boolean) -> setContentIntentAvailableOffline
    boolean getContentIntentAvailableOffline() -> getContentIntentAvailableOffline
    android.support.v4.app.NotificationCompat$WearableExtender setHintHideIcon(boolean) -> setHintHideIcon
    boolean getHintHideIcon() -> getHintHideIcon
    android.support.v4.app.NotificationCompat$WearableExtender setHintShowBackgroundOnly(boolean) -> setHintShowBackgroundOnly
    boolean getHintShowBackgroundOnly() -> getHintShowBackgroundOnly
    android.support.v4.app.NotificationCompat$WearableExtender setHintAvoidBackgroundClipping(boolean) -> setHintAvoidBackgroundClipping
    boolean getHintAvoidBackgroundClipping() -> getHintAvoidBackgroundClipping
    android.support.v4.app.NotificationCompat$WearableExtender setHintScreenTimeout(int) -> setHintScreenTimeout
    int getHintScreenTimeout() -> getHintScreenTimeout
    void setFlag(int,boolean) -> setFlag
    java.lang.Object clone() -> clone
android.support.v4.app.NotificationCompatApi20 -> android.support.v4.app.NotificationCompatApi20:
    void addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    android.support.v4.app.NotificationCompatBase$Action getActionCompatFromAction(android.app.Notification$Action,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionCompatFromAction
    android.app.Notification$Action getActionFromActionCompat(android.support.v4.app.NotificationCompatBase$Action) -> getActionFromActionCompat
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatApi20$Builder -> android.support.v4.app.NotificationCompatApi20$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatApi21 -> android.support.v4.app.NotificationCompatApi21:
    java.lang.String CATEGORY_CALL -> CATEGORY_CALL
    java.lang.String CATEGORY_MESSAGE -> CATEGORY_MESSAGE
    java.lang.String CATEGORY_EMAIL -> CATEGORY_EMAIL
    java.lang.String CATEGORY_EVENT -> CATEGORY_EVENT
    java.lang.String CATEGORY_PROMO -> CATEGORY_PROMO
    java.lang.String CATEGORY_ALARM -> CATEGORY_ALARM
    java.lang.String CATEGORY_PROGRESS -> CATEGORY_PROGRESS
    java.lang.String CATEGORY_SOCIAL -> CATEGORY_SOCIAL
    java.lang.String CATEGORY_ERROR -> CATEGORY_ERROR
    java.lang.String CATEGORY_TRANSPORT -> CATEGORY_TRANSPORT
    java.lang.String CATEGORY_SYSTEM -> CATEGORY_SYSTEM
    java.lang.String CATEGORY_SERVICE -> CATEGORY_SERVICE
    java.lang.String CATEGORY_RECOMMENDATION -> CATEGORY_RECOMMENDATION
    java.lang.String CATEGORY_STATUS -> CATEGORY_STATUS
    java.lang.String KEY_AUTHOR -> KEY_AUTHOR
    java.lang.String KEY_TEXT -> KEY_TEXT
    java.lang.String KEY_MESSAGES -> KEY_MESSAGES
    java.lang.String KEY_REMOTE_INPUT -> KEY_REMOTE_INPUT
    java.lang.String KEY_ON_REPLY -> KEY_ON_REPLY
    java.lang.String KEY_ON_READ -> KEY_ON_READ
    java.lang.String KEY_PARTICIPANTS -> KEY_PARTICIPANTS
    java.lang.String KEY_TIMESTAMP -> KEY_TIMESTAMP
    java.lang.String getCategory(android.app.Notification) -> getCategory
    android.os.Bundle getBundleForUnreadConversation(android.support.v4.app.NotificationCompatBase$UnreadConversation) -> getBundleForUnreadConversation
    android.support.v4.app.NotificationCompatBase$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getUnreadConversationFromBundle
    android.app.RemoteInput fromCompatRemoteInput(android.support.v4.app.RemoteInputCompatBase$RemoteInput) -> fromCompatRemoteInput
    android.support.v4.app.RemoteInputCompatBase$RemoteInput toCompatRemoteInput(android.app.RemoteInput,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> toCompatRemoteInput
android.support.v4.app.NotificationCompatApi21$Builder -> android.support.v4.app.NotificationCompatApi21$Builder:
    android.app.Notification$Builder b -> b
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatBase -> android.support.v4.app.NotificationCompatBase:
android.support.v4.app.NotificationCompatBase$Action -> android.support.v4.app.NotificationCompatBase$Action:
    int getIcon() -> getIcon
    java.lang.CharSequence getTitle() -> getTitle
    android.app.PendingIntent getActionIntent() -> getActionIntent
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs() -> getRemoteInputs
android.support.v4.app.NotificationCompatBase$Action$Factory -> android.support.v4.app.NotificationCompatBase$Action$Factory:
    android.support.v4.app.NotificationCompatBase$Action build(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> build
    android.support.v4.app.NotificationCompatBase$Action[] newArray(int) -> newArray
android.support.v4.app.NotificationCompatBase$UnreadConversation -> android.support.v4.app.NotificationCompatBase$UnreadConversation:
    java.lang.String[] getParticipants() -> getParticipants
    java.lang.String getParticipant() -> getParticipant
    java.lang.String[] getMessages() -> getMessages
    android.support.v4.app.RemoteInputCompatBase$RemoteInput getRemoteInput() -> getRemoteInput
    android.app.PendingIntent getReplyPendingIntent() -> getReplyPendingIntent
    android.app.PendingIntent getReadPendingIntent() -> getReadPendingIntent
    long getLatestTimestamp() -> getLatestTimestamp
android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory -> android.support.v4.app.NotificationCompatBase$UnreadConversation$Factory:
    android.support.v4.app.NotificationCompatBase$UnreadConversation build(java.lang.String[],android.support.v4.app.RemoteInputCompatBase$RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> build
android.support.v4.app.NotificationCompatExtras -> android.support.v4.app.NotificationCompatExtras:
    java.lang.String EXTRA_LOCAL_ONLY -> EXTRA_LOCAL_ONLY
    java.lang.String EXTRA_GROUP_KEY -> EXTRA_GROUP_KEY
    java.lang.String EXTRA_GROUP_SUMMARY -> EXTRA_GROUP_SUMMARY
    java.lang.String EXTRA_SORT_KEY -> EXTRA_SORT_KEY
    java.lang.String EXTRA_ACTION_EXTRAS -> EXTRA_ACTION_EXTRAS
    java.lang.String EXTRA_REMOTE_INPUTS -> EXTRA_REMOTE_INPUTS
android.support.v4.app.NotificationCompatGingerbread -> android.support.v4.app.NotificationCompatGingerbread:
    android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent) -> add
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
android.support.v4.app.NotificationCompatIceCreamSandwich$Builder -> android.support.v4.app.NotificationCompatIceCreamSandwich$Builder:
    android.app.Notification$Builder b -> b
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_LOCAL_ONLY -> EXTRA_LOCAL_ONLY
    java.lang.String EXTRA_ACTION_EXTRAS -> EXTRA_ACTION_EXTRAS
    java.lang.String EXTRA_REMOTE_INPUTS -> EXTRA_REMOTE_INPUTS
    java.lang.String EXTRA_GROUP_KEY -> EXTRA_GROUP_KEY
    java.lang.String EXTRA_GROUP_SUMMARY -> EXTRA_GROUP_SUMMARY
    java.lang.String EXTRA_SORT_KEY -> EXTRA_SORT_KEY
    java.lang.String EXTRA_USE_SIDE_CHANNEL -> EXTRA_USE_SIDE_CHANNEL
    java.lang.String KEY_ICON -> KEY_ICON
    java.lang.String KEY_TITLE -> KEY_TITLE
    java.lang.String KEY_ACTION_INTENT -> KEY_ACTION_INTENT
    java.lang.String KEY_EXTRAS -> KEY_EXTRAS
    java.lang.String KEY_REMOTE_INPUTS -> KEY_REMOTE_INPUTS
    java.lang.Object sExtrasLock -> sExtrasLock
    java.lang.reflect.Field sExtrasField -> sExtrasField
    boolean sExtrasFieldAccessFailed -> sExtrasFieldAccessFailed
    java.lang.Object sActionsLock -> sActionsLock
    java.lang.Class sActionClass -> sActionClass
    java.lang.reflect.Field sActionsField -> sActionsField
    java.lang.reflect.Field sActionIconField -> sActionIconField
    java.lang.reflect.Field sActionTitleField -> sActionTitleField
    java.lang.reflect.Field sActionIntentField -> sActionIntentField
    boolean sActionsAccessFailed -> sActionsAccessFailed
    void addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.util.SparseArray buildActionExtrasMap(java.util.List) -> buildActionExtrasMap
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    android.support.v4.app.NotificationCompatBase$Action readAction(android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory,int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle) -> readAction
    android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action) -> writeActionAndGetExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    java.lang.Object[] getActionObjectsLocked(android.app.Notification) -> getActionObjectsLocked
    boolean ensureActionReflectionReadyLocked() -> ensureActionReflectionReadyLocked
    android.support.v4.app.NotificationCompatBase$Action[] getActionsFromParcelableArrayList(java.util.ArrayList,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionsFromParcelableArrayList
    android.support.v4.app.NotificationCompatBase$Action getActionFromBundle(android.os.Bundle,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getActionFromBundle
    java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]) -> getParcelableArrayListForActions
    android.os.Bundle getBundleForAction(android.support.v4.app.NotificationCompatBase$Action) -> getBundleForAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatJellybean$Builder -> android.support.v4.app.NotificationCompatJellybean$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    java.util.List mActionExtrasList -> mActionExtrasList
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatKitKat -> android.support.v4.app.NotificationCompatKitKat:
    android.os.Bundle getExtras(android.app.Notification) -> getExtras
    int getActionCount(android.app.Notification) -> getActionCount
    android.support.v4.app.NotificationCompatBase$Action getAction(android.app.Notification,int,android.support.v4.app.NotificationCompatBase$Action$Factory,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> getAction
    boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    java.lang.String getGroup(android.app.Notification) -> getGroup
    boolean isGroupSummary(android.app.Notification) -> isGroupSummary
    java.lang.String getSortKey(android.app.Notification) -> getSortKey
android.support.v4.app.NotificationCompatKitKat$Builder -> android.support.v4.app.NotificationCompatKitKat$Builder:
    android.app.Notification$Builder b -> b
    android.os.Bundle mExtras -> mExtras
    java.util.List mActionExtrasList -> mActionExtrasList
    void addAction(android.support.v4.app.NotificationCompatBase$Action) -> addAction
    android.app.Notification$Builder getBuilder() -> getBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatSideChannelService -> android.support.v4.app.NotificationCompatSideChannelService:
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
    void checkPermission(int,java.lang.String) -> checkPermission
    void access$100(android.support.v4.app.NotificationCompatSideChannelService,int,java.lang.String) -> access$100
android.support.v4.app.NotificationCompatSideChannelService$1 -> android.support.v4.app.NotificationCompatSideChannelService$1:
android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub -> android.support.v4.app.NotificationCompatSideChannelService$NotificationSideChannelStub:
    android.support.v4.app.NotificationCompatSideChannelService this$0 -> this$0
    void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
    void cancel(java.lang.String,int,java.lang.String) -> cancel
    void cancelAll(java.lang.String) -> cancelAll
android.support.v4.app.NotificationManagerCompat -> android.support.v4.app.NotificationManagerCompat:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_USE_SIDE_CHANNEL -> EXTRA_USE_SIDE_CHANNEL
    java.lang.String ACTION_BIND_SIDE_CHANNEL -> ACTION_BIND_SIDE_CHANNEL
    int MAX_SIDE_CHANNEL_SDK_VERSION -> MAX_SIDE_CHANNEL_SDK_VERSION
    int SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS -> SIDE_CHANNEL_RETRY_BASE_INTERVAL_MS
    int SIDE_CHANNEL_RETRY_MAX_COUNT -> SIDE_CHANNEL_RETRY_MAX_COUNT
    java.lang.String SETTING_ENABLED_NOTIFICATION_LISTENERS -> SETTING_ENABLED_NOTIFICATION_LISTENERS
    int SIDE_CHANNEL_BIND_FLAGS -> SIDE_CHANNEL_BIND_FLAGS
    java.lang.Object sEnabledNotificationListenersLock -> sEnabledNotificationListenersLock
    java.lang.String sEnabledNotificationListeners -> sEnabledNotificationListeners
    java.util.Set sEnabledNotificationListenerPackages -> sEnabledNotificationListenerPackages
    android.content.Context mContext -> mContext
    android.app.NotificationManager mNotificationManager -> mNotificationManager
    java.lang.Object sLock -> sLock
    android.support.v4.app.NotificationManagerCompat$SideChannelManager sSideChannelManager -> sSideChannelManager
    android.support.v4.app.NotificationManagerCompat$Impl IMPL -> IMPL
    android.support.v4.app.NotificationManagerCompat from(android.content.Context) -> from
    void cancel(int) -> cancel
    void cancel(java.lang.String,int) -> cancel
    void cancelAll() -> cancelAll
    void notify(int,android.app.Notification) -> notify
    void notify(java.lang.String,int,android.app.Notification) -> notify
    java.util.Set getEnabledListenerPackages(android.content.Context) -> getEnabledListenerPackages
    boolean useSideChannelForNotification(android.app.Notification) -> useSideChannelForNotification
    void pushSideChannelQueue(android.support.v4.app.NotificationManagerCompat$Task) -> pushSideChannelQueue
    int access$000() -> access$000
android.support.v4.app.NotificationManagerCompat$CancelTask -> android.support.v4.app.NotificationManagerCompat$CancelTask:
    java.lang.String packageName -> packageName
    int id -> id
    java.lang.String tag -> tag
    boolean all -> all
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$Impl -> android.support.v4.app.NotificationManagerCompat$Impl:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$ImplBase -> android.support.v4.app.NotificationManagerCompat$ImplBase:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$ImplEclair -> android.support.v4.app.NotificationManagerCompat$ImplEclair:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich -> android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich:
    int getSideChannelBindFlags() -> getSideChannelBindFlags
android.support.v4.app.NotificationManagerCompat$NotifyTask -> android.support.v4.app.NotificationManagerCompat$NotifyTask:
    java.lang.String packageName -> packageName
    int id -> id
    java.lang.String tag -> tag
    android.app.Notification notif -> notif
    void send(android.support.v4.app.INotificationSideChannel) -> send
    java.lang.String toString() -> toString
android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent -> android.support.v4.app.NotificationManagerCompat$ServiceConnectedEvent:
    android.content.ComponentName componentName -> componentName
    android.os.IBinder iBinder -> iBinder
android.support.v4.app.NotificationManagerCompat$SideChannelManager -> android.support.v4.app.NotificationManagerCompat$SideChannelManager:
    int MSG_QUEUE_TASK -> MSG_QUEUE_TASK
    int MSG_SERVICE_CONNECTED -> MSG_SERVICE_CONNECTED
    int MSG_SERVICE_DISCONNECTED -> MSG_SERVICE_DISCONNECTED
    int MSG_RETRY_LISTENER_QUEUE -> MSG_RETRY_LISTENER_QUEUE
    java.lang.String KEY_BINDER -> KEY_BINDER
    android.content.Context mContext -> mContext
    android.os.HandlerThread mHandlerThread -> mHandlerThread
    android.os.Handler mHandler -> mHandler
    java.util.Map mRecordMap -> mRecordMap
    java.util.Set mCachedEnabledPackages -> mCachedEnabledPackages
    void queueTask(android.support.v4.app.NotificationManagerCompat$Task) -> queueTask
    boolean handleMessage(android.os.Message) -> handleMessage
    void handleQueueTask(android.support.v4.app.NotificationManagerCompat$Task) -> handleQueueTask
    void handleServiceConnected(android.content.ComponentName,android.os.IBinder) -> handleServiceConnected
    void handleServiceDisconnected(android.content.ComponentName) -> handleServiceDisconnected
    void handleRetryListenerQueue(android.content.ComponentName) -> handleRetryListenerQueue
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void updateListenerMap() -> updateListenerMap
    boolean ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceBound
    void ensureServiceUnbound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceUnbound
    void scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> scheduleListenerRetry
    void processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> processListenerQueue
android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord -> android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord:
    android.content.ComponentName componentName -> componentName
    boolean bound -> bound
    android.support.v4.app.INotificationSideChannel service -> service
    java.util.LinkedList taskQueue -> taskQueue
    int retryCount -> retryCount
android.support.v4.app.NotificationManagerCompat$Task -> android.support.v4.app.NotificationManagerCompat$Task:
    void send(android.support.v4.app.INotificationSideChannel) -> send
android.support.v4.app.NotificationManagerCompatEclair -> android.support.v4.app.NotificationManagerCompatEclair:
    void cancelNotification(android.app.NotificationManager,java.lang.String,int) -> cancelNotification
    void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification) -> postNotification
android.support.v4.app.NotificationManagerCompatIceCreamSandwich -> android.support.v4.app.NotificationManagerCompatIceCreamSandwich:
    int SIDE_CHANNEL_BIND_FLAGS -> SIDE_CHANNEL_BIND_FLAGS
android.support.v4.app.RemoteInput -> android.support.v4.app.RemoteInput:
    java.lang.String TAG -> TAG
    java.lang.String RESULTS_CLIP_LABEL -> RESULTS_CLIP_LABEL
    java.lang.String EXTRA_RESULTS_DATA -> EXTRA_RESULTS_DATA
    java.lang.String mResultKey -> mResultKey
    java.lang.CharSequence mLabel -> mLabel
    java.lang.CharSequence[] mChoices -> mChoices
    boolean mAllowFreeFormInput -> mAllowFreeFormInput
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput$Impl IMPL -> IMPL
    android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory FACTORY -> FACTORY
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$1 -> android.support.v4.app.RemoteInput$1:
    android.support.v4.app.RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
android.support.v4.app.RemoteInput$Builder -> android.support.v4.app.RemoteInput$Builder:
    java.lang.String mResultKey -> mResultKey
    java.lang.CharSequence mLabel -> mLabel
    java.lang.CharSequence[] mChoices -> mChoices
    boolean mAllowFreeFormInput -> mAllowFreeFormInput
    android.os.Bundle mExtras -> mExtras
    android.support.v4.app.RemoteInput$Builder setLabel(java.lang.CharSequence) -> setLabel
    android.support.v4.app.RemoteInput$Builder setChoices(java.lang.CharSequence[]) -> setChoices
    android.support.v4.app.RemoteInput$Builder setAllowFreeFormInput(boolean) -> setAllowFreeFormInput
    android.support.v4.app.RemoteInput$Builder addExtras(android.os.Bundle) -> addExtras
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.app.RemoteInput build() -> build
android.support.v4.app.RemoteInput$Impl -> android.support.v4.app.RemoteInput$Impl:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplApi20 -> android.support.v4.app.RemoteInput$ImplApi20:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplBase -> android.support.v4.app.RemoteInput$ImplBase:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInput$ImplJellybean -> android.support.v4.app.RemoteInput$ImplJellybean:
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInputCompatApi20 -> android.support.v4.app.RemoteInputCompatApi20:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] toCompat(android.app.RemoteInput[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> toCompat
    android.app.RemoteInput[] fromCompat(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> fromCompat
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.RemoteInputCompatBase -> android.support.v4.app.RemoteInputCompatBase:
android.support.v4.app.RemoteInputCompatBase$RemoteInput -> android.support.v4.app.RemoteInputCompatBase$RemoteInput:
    java.lang.String getResultKey() -> getResultKey
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.CharSequence[] getChoices() -> getChoices
    boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    android.os.Bundle getExtras() -> getExtras
android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory -> android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory:
    android.support.v4.app.RemoteInputCompatBase$RemoteInput build(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle) -> build
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] newArray(int) -> newArray
android.support.v4.app.RemoteInputCompatJellybean -> android.support.v4.app.RemoteInputCompatJellybean:
    java.lang.String RESULTS_CLIP_LABEL -> RESULTS_CLIP_LABEL
    java.lang.String EXTRA_RESULTS_DATA -> EXTRA_RESULTS_DATA
    java.lang.String KEY_RESULT_KEY -> KEY_RESULT_KEY
    java.lang.String KEY_LABEL -> KEY_LABEL
    java.lang.String KEY_CHOICES -> KEY_CHOICES
    java.lang.String KEY_ALLOW_FREE_FORM_INPUT -> KEY_ALLOW_FREE_FORM_INPUT
    java.lang.String KEY_EXTRAS -> KEY_EXTRAS
    android.support.v4.app.RemoteInputCompatBase$RemoteInput fromBundle(android.os.Bundle,android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> fromBundle
    android.os.Bundle toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput) -> toBundle
    android.support.v4.app.RemoteInputCompatBase$RemoteInput[] fromBundleArray(android.os.Bundle[],android.support.v4.app.RemoteInputCompatBase$RemoteInput$Factory) -> fromBundleArray
    android.os.Bundle[] toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]) -> toBundleArray
    android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    void addResultsToIntent(android.support.v4.app.RemoteInputCompatBase$RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SharedElementCallback -> android.support.v4.app.SharedElementCallback:
    android.graphics.Matrix mTempMatrix -> mTempMatrix
    int MAX_IMAGE_SIZE -> MAX_IMAGE_SIZE
    java.lang.String BUNDLE_SNAPSHOT_BITMAP -> BUNDLE_SNAPSHOT_BITMAP
    java.lang.String BUNDLE_SNAPSHOT_IMAGE_SCALETYPE -> BUNDLE_SNAPSHOT_IMAGE_SCALETYPE
    java.lang.String BUNDLE_SNAPSHOT_IMAGE_MATRIX -> BUNDLE_SNAPSHOT_IMAGE_MATRIX
    void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable) -> createDrawableBitmap
    android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    java.util.concurrent.Executor mExecutor -> mExecutor
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean onCancelLoad() -> onCancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> executePendingTask
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void cancelLoadInBackground() -> cancelLoadInBackground
    boolean isLoadInBackgroundCanceled() -> isLoadInBackgroundCanceled
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.content.AsyncTaskLoader$LoadTask:
    java.util.concurrent.CountDownLatch mDone -> mDone
    boolean waiting -> waiting
    android.support.v4.content.AsyncTaskLoader this$0 -> this$0
    java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onCancelled(java.lang.Object) -> onCancelled
    void run() -> run
    void waitForLoader() -> waitForLoader
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v4.content.ContentResolverCompat -> android.support.v4.content.ContentResolverCompat:
    android.support.v4.content.ContentResolverCompat$ContentResolverCompatImpl IMPL -> IMPL
    android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.support.v4.os.CancellationSignal) -> query
android.support.v4.content.ContentResolverCompat$ContentResolverCompatImpl -> android.support.v4.content.ContentResolverCompat$ContentResolverCompatImpl:
    android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.support.v4.os.CancellationSignal) -> query
android.support.v4.content.ContentResolverCompat$ContentResolverCompatImplBase -> android.support.v4.content.ContentResolverCompat$ContentResolverCompatImplBase:
    android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.support.v4.os.CancellationSignal) -> query
android.support.v4.content.ContentResolverCompat$ContentResolverCompatImplJB -> android.support.v4.content.ContentResolverCompat$ContentResolverCompatImplJB:
    android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.support.v4.os.CancellationSignal) -> query
android.support.v4.content.ContentResolverCompatJellybean -> android.support.v4.content.ContentResolverCompatJellybean:
    android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object) -> query
    boolean isFrameworkOperationCanceledException(java.lang.Exception) -> isFrameworkOperationCanceledException
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    java.lang.String TAG -> TAG
    java.lang.String DIR_ANDROID -> DIR_ANDROID
    java.lang.String DIR_DATA -> DIR_DATA
    java.lang.String DIR_OBB -> DIR_OBB
    java.lang.String DIR_FILES -> DIR_FILES
    java.lang.String DIR_CACHE -> DIR_CACHE
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    int getColor(android.content.Context,int) -> getColor
    int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
    java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
    java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
    java.io.File createFilesDir(java.io.File) -> createFilesDir
android.support.v4.content.ContextCompatApi21 -> android.support.v4.content.ContextCompatApi21:
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
    java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
android.support.v4.content.ContextCompatApi23 -> android.support.v4.content.ContextCompatApi23:
    android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    int getColor(android.content.Context,int) -> getColor
android.support.v4.content.ContextCompatFroyo -> android.support.v4.content.ContextCompatFroyo:
    java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    java.io.File getExternalFilesDir(android.content.Context,java.lang.String) -> getExternalFilesDir
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.ContextCompatHoneycomb:
    void startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    java.io.File getObbDir(android.content.Context) -> getObbDir
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.ContextCompatJellybean:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatKitKat -> android.support.v4.content.ContextCompatKitKat:
    java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> mObserver
    android.net.Uri mUri -> mUri
    java.lang.String[] mProjection -> mProjection
    java.lang.String mSelection -> mSelection
    java.lang.String[] mSelectionArgs -> mSelectionArgs
    java.lang.String mSortOrder -> mSortOrder
    android.database.Cursor mCursor -> mCursor
    android.support.v4.os.CancellationSignal mCancellationSignal -> mCancellationSignal
    android.database.Cursor loadInBackground() -> loadInBackground
    void cancelLoadInBackground() -> cancelLoadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.EditorCompatGingerbread -> android.support.v4.content.EditorCompatGingerbread:
    void apply(android.content.SharedPreferences$Editor) -> apply
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> COLUMNS
    java.lang.String META_DATA_FILE_PROVIDER_PATHS -> META_DATA_FILE_PROVIDER_PATHS
    java.lang.String TAG_ROOT_PATH -> TAG_ROOT_PATH
    java.lang.String TAG_FILES_PATH -> TAG_FILES_PATH
    java.lang.String TAG_CACHE_PATH -> TAG_CACHE_PATH
    java.lang.String TAG_EXTERNAL -> TAG_EXTERNAL
    java.lang.String ATTR_NAME -> ATTR_NAME
    java.lang.String ATTR_PATH -> ATTR_PATH
    java.io.File DEVICE_ROOT -> DEVICE_ROOT
    java.util.HashMap sCache -> sCache
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> mStrategy
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    int modeToMode(java.lang.String) -> modeToMode
    java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$PathStrategy:
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$SimplePathStrategy:
    java.lang.String mAuthority -> mAuthority
    java.util.HashMap mRoots -> mRoots
    void addRoot(java.lang.String,java.io.File) -> addRoot
    android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> IMPL
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.IntentCompat$IntentCompatImpl:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.IntentCompat$IntentCompatImplBase:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.IntentCompat$IntentCompatImplHC:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.IntentCompatHoneycomb:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompatIcsMr1 -> android.support.v4.content.IntentCompatIcsMr1:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.support.v4.content.Loader$OnLoadCanceledListener mOnLoadCanceledListener -> mOnLoadCanceledListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    boolean mProcessingChange -> mProcessingChange
    void deliverResult(java.lang.Object) -> deliverResult
    void deliverCancellation() -> deliverCancellation
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    void registerOnLoadCanceledListener(android.support.v4.content.Loader$OnLoadCanceledListener) -> registerOnLoadCanceledListener
    void unregisterOnLoadCanceledListener(android.support.v4.content.Loader$OnLoadCanceledListener) -> unregisterOnLoadCanceledListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    boolean cancelLoad() -> cancelLoad
    boolean onCancelLoad() -> onCancelLoad
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void commitContentChanged() -> commitContentChanged
    void rollbackContentChanged() -> rollbackContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCanceledListener -> android.support.v4.content.Loader$OnLoadCanceledListener:
    void onLoadCanceled(android.support.v4.content.Loader) -> onLoadCanceled
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.content.Context mAppContext -> mAppContext
    java.util.HashMap mReceivers -> mReceivers
    java.util.HashMap mActions -> mActions
    java.util.ArrayList mPendingBroadcasts -> mPendingBroadcasts
    int MSG_EXEC_PENDING_BROADCASTS -> MSG_EXEC_PENDING_BROADCASTS
    android.os.Handler mHandler -> mHandler
    java.lang.Object mLock -> mLock
    android.support.v4.content.LocalBroadcastManager mInstance -> mInstance
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> executePendingBroadcasts
    void access$000(android.support.v4.content.LocalBroadcastManager) -> access$000
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.content.LocalBroadcastManager$1:
    android.support.v4.content.LocalBroadcastManager this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.content.LocalBroadcastManager$BroadcastRecord:
    android.content.Intent intent -> intent
    java.util.ArrayList receivers -> receivers
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.content.LocalBroadcastManager$ReceiverRecord:
    android.content.IntentFilter filter -> filter
    android.content.BroadcastReceiver receiver -> receiver
    boolean broadcasting -> broadcasting
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.lang.String LOG_TAG -> LOG_TAG
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAXIMUM_POOL_SIZE -> MAXIMUM_POOL_SIZE
    int KEEP_ALIVE -> KEEP_ALIVE
    java.util.concurrent.ThreadFactory sThreadFactory -> sThreadFactory
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> sPoolWorkQueue
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> THREAD_POOL_EXECUTOR
    int MESSAGE_POST_RESULT -> MESSAGE_POST_RESULT
    int MESSAGE_POST_PROGRESS -> MESSAGE_POST_PROGRESS
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> sHandler
    java.util.concurrent.Executor sDefaultExecutor -> sDefaultExecutor
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> mWorker
    java.util.concurrent.FutureTask mFuture -> mFuture
    android.support.v4.content.ModernAsyncTask$Status mStatus -> mStatus
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> mTaskInvoked
    android.os.Handler getHandler() -> getHandler
    void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
    void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    java.lang.Object postResult(java.lang.Object) -> postResult
    android.support.v4.content.ModernAsyncTask$Status getStatus() -> getStatus
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onCancelled(java.lang.Object) -> onCancelled
    void onCancelled() -> onCancelled
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    void execute(java.lang.Runnable) -> execute
    void publishProgress(java.lang.Object[]) -> publishProgress
    void finish(java.lang.Object) -> finish
    java.util.concurrent.atomic.AtomicBoolean access$100(android.support.v4.content.ModernAsyncTask) -> access$100
    java.lang.Object access$200(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$200
    void access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$300
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> access$400
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.content.ModernAsyncTask$1:
    java.util.concurrent.atomic.AtomicInteger mCount -> mCount
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.content.ModernAsyncTask$2:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.content.ModernAsyncTask$3:
    android.support.v4.content.ModernAsyncTask this$0 -> this$0
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.content.ModernAsyncTask$4:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> $SwitchMap$android$support$v4$content$ModernAsyncTask$Status
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.content.ModernAsyncTask$AsyncTaskResult:
    android.support.v4.content.ModernAsyncTask mTask -> mTask
    java.lang.Object[] mData -> mData
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.content.ModernAsyncTask$InternalHandler:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> $VALUES
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.content.ModernAsyncTask$WorkerRunnable:
    java.lang.Object[] mParams -> mParams
android.support.v4.content.PermissionChecker -> android.support.v4.content.PermissionChecker:
    int PERMISSION_GRANTED -> PERMISSION_GRANTED
    int PERMISSION_DENIED -> PERMISSION_DENIED
    int PERMISSION_DENIED_APP_OP -> PERMISSION_DENIED_APP_OP
    int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String) -> checkPermission
    int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
    int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String) -> checkCallingPermission
    int checkCallingOrSelfPermission(android.content.Context,java.lang.String) -> checkCallingOrSelfPermission
android.support.v4.content.PermissionChecker$PermissionResult -> android.support.v4.content.PermissionChecker$PermissionResult:
android.support.v4.content.SharedPreferencesCompat -> android.support.v4.content.SharedPreferencesCompat:
android.support.v4.content.SharedPreferencesCompat$1 -> android.support.v4.content.SharedPreferencesCompat$1:
android.support.v4.content.SharedPreferencesCompat$EditorCompat -> android.support.v4.content.SharedPreferencesCompat$EditorCompat:
    android.support.v4.content.SharedPreferencesCompat$EditorCompat sInstance -> sInstance
    android.support.v4.content.SharedPreferencesCompat$EditorCompat$Helper mHelper -> mHelper
    android.support.v4.content.SharedPreferencesCompat$EditorCompat getInstance() -> getInstance
    void apply(android.content.SharedPreferences$Editor) -> apply
android.support.v4.content.SharedPreferencesCompat$EditorCompat$EditorHelperApi9Impl -> android.support.v4.content.SharedPreferencesCompat$EditorCompat$EditorHelperApi9Impl:
    void apply(android.content.SharedPreferences$Editor) -> apply
android.support.v4.content.SharedPreferencesCompat$EditorCompat$EditorHelperBaseImpl -> android.support.v4.content.SharedPreferencesCompat$EditorCompat$EditorHelperBaseImpl:
    void apply(android.content.SharedPreferences$Editor) -> apply
android.support.v4.content.SharedPreferencesCompat$EditorCompat$Helper -> android.support.v4.content.SharedPreferencesCompat$EditorCompat$Helper:
    void apply(android.content.SharedPreferences$Editor) -> apply
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    java.lang.String EXTRA_WAKE_LOCK_ID -> EXTRA_WAKE_LOCK_ID
    android.util.SparseArray mActiveWakeLocks -> mActiveWakeLocks
    int mNextId -> mNextId
    android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
    boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.content.res.ResourcesCompat -> android.support.v4.content.res.ResourcesCompat:
    android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
android.support.v4.content.res.ResourcesCompatApi21 -> android.support.v4.content.res.ResourcesCompatApi21:
    android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
android.support.v4.content.res.ResourcesCompatIcsMr1 -> android.support.v4.content.res.ResourcesCompatIcsMr1:
    android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int) -> getDrawableForDensity
android.support.v4.content.res.TypedArrayUtils -> android.support.v4.content.res.TypedArrayUtils:
    boolean getBoolean(android.content.res.TypedArray,int,int,boolean) -> getBoolean
    android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int) -> getDrawable
    int getInt(android.content.res.TypedArray,int,int,int) -> getInt
    int getResourceId(android.content.res.TypedArray,int,int,int) -> getResourceId
    java.lang.String getString(android.content.res.TypedArray,int,int) -> getString
    java.lang.CharSequence[] getTextArray(android.content.res.TypedArray,int,int) -> getTextArray
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.graphics.BitmapCompat -> android.support.v4.graphics.BitmapCompat:
    android.support.v4.graphics.BitmapCompat$BitmapImpl IMPL -> IMPL
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompat$BaseBitmapImpl -> android.support.v4.graphics.BitmapCompat$BaseBitmapImpl:
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompat$BitmapImpl -> android.support.v4.graphics.BitmapCompat$BitmapImpl:
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompat$HcMr1BitmapCompatImpl -> android.support.v4.graphics.BitmapCompat$HcMr1BitmapCompatImpl:
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompat$JbMr2BitmapCompatImpl -> android.support.v4.graphics.BitmapCompat$JbMr2BitmapCompatImpl:
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
android.support.v4.graphics.BitmapCompat$KitKatBitmapCompatImpl -> android.support.v4.graphics.BitmapCompat$KitKatBitmapCompatImpl:
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompatHoneycombMr1 -> android.support.v4.graphics.BitmapCompatHoneycombMr1:
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.BitmapCompatJellybeanMR2 -> android.support.v4.graphics.BitmapCompatJellybeanMR2:
    boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
android.support.v4.graphics.BitmapCompatKitKat -> android.support.v4.graphics.BitmapCompatKitKat:
    int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
android.support.v4.graphics.ColorUtils -> android.support.v4.graphics.ColorUtils:
    int MIN_ALPHA_SEARCH_MAX_ITERATIONS -> MIN_ALPHA_SEARCH_MAX_ITERATIONS
    int MIN_ALPHA_SEARCH_PRECISION -> MIN_ALPHA_SEARCH_PRECISION
    int compositeColors(int,int) -> compositeColors
    int compositeAlpha(int,int) -> compositeAlpha
    int compositeComponent(int,int,int,int,int) -> compositeComponent
    double calculateLuminance(int) -> calculateLuminance
    double calculateContrast(int,int) -> calculateContrast
    int calculateMinimumAlpha(int,int,float) -> calculateMinimumAlpha
    void RGBToHSL(int,int,int,float[]) -> RGBToHSL
    void colorToHSL(int,float[]) -> colorToHSL
    int HSLToColor(float[]) -> HSLToColor
    int setAlphaComponent(int,int) -> setAlphaComponent
    float constrain(float,float,float) -> constrain
    int constrain(int,int,int) -> constrain
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> IMPL
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
    android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable) -> unwrap
    void setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
    void setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
    void setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
android.support.v4.graphics.drawable.DrawableCompat$JellybeanMr1DrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$JellybeanMr1DrawableImpl:
    void setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl:
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
android.support.v4.graphics.drawable.DrawableCompat$LollipopMr1DrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$LollipopMr1DrawableImpl:
    android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
android.support.v4.graphics.drawable.DrawableCompat$MDrawableImpl -> android.support.v4.graphics.drawable.DrawableCompat$MDrawableImpl:
    void setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
android.support.v4.graphics.drawable.DrawableCompatApi22 -> android.support.v4.graphics.drawable.DrawableCompatApi22:
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> wrapForTinting
android.support.v4.graphics.drawable.DrawableCompatApi23 -> android.support.v4.graphics.drawable.DrawableCompatApi23:
    void setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
android.support.v4.graphics.drawable.DrawableCompatBase -> android.support.v4.graphics.drawable.DrawableCompatBase:
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> wrapForTinting
android.support.v4.graphics.drawable.DrawableCompatHoneycomb -> android.support.v4.graphics.drawable.DrawableCompatHoneycomb:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> wrapForTinting
android.support.v4.graphics.drawable.DrawableCompatJellybeanMr1 -> android.support.v4.graphics.drawable.DrawableCompatJellybeanMr1:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sSetLayoutDirectionMethod -> sSetLayoutDirectionMethod
    boolean sSetLayoutDirectionMethodFetched -> sSetLayoutDirectionMethodFetched
    java.lang.reflect.Method sGetLayoutDirectionMethod -> sGetLayoutDirectionMethod
    boolean sGetLayoutDirectionMethodFetched -> sGetLayoutDirectionMethodFetched
    void setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
android.support.v4.graphics.drawable.DrawableCompatKitKat -> android.support.v4.graphics.drawable.DrawableCompatKitKat:
    void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> wrapForTinting
android.support.v4.graphics.drawable.DrawableCompatLollipop -> android.support.v4.graphics.drawable.DrawableCompatLollipop:
    void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    void setTint(android.graphics.drawable.Drawable,int) -> setTint
    void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable) -> wrapForTinting
android.support.v4.graphics.drawable.DrawableWrapper -> android.support.v4.graphics.drawable.DrawableWrapper:
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
android.support.v4.graphics.drawable.DrawableWrapperDonut -> android.support.v4.graphics.drawable.DrawableWrapperDonut:
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> DEFAULT_MODE
    android.content.res.ColorStateList mTintList -> mTintList
    android.graphics.PorterDuff$Mode mTintMode -> mTintMode
    int mCurrentColor -> mCurrentColor
    android.graphics.PorterDuff$Mode mCurrentMode -> mCurrentMode
    boolean mColorFilterSet -> mColorFilterSet
    android.graphics.drawable.Drawable mDrawable -> mDrawable
    void draw(android.graphics.Canvas) -> draw
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    int getOpacity() -> getOpacity
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    android.graphics.drawable.Drawable mutate() -> mutate
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    boolean onLevelChange(int) -> onLevelChange
    void setTint(int) -> setTint
    void setTintList(android.content.res.ColorStateList) -> setTintList
    void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    boolean updateTint(int[]) -> updateTint
    android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
android.support.v4.graphics.drawable.DrawableWrapperHoneycomb -> android.support.v4.graphics.drawable.DrawableWrapperHoneycomb:
    void jumpToCurrentState() -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableWrapperKitKat -> android.support.v4.graphics.drawable.DrawableWrapperKitKat:
    void setAutoMirrored(boolean) -> setAutoMirrored
    boolean isAutoMirrored() -> isAutoMirrored
android.support.v4.graphics.drawable.DrawableWrapperLollipop -> android.support.v4.graphics.drawable.DrawableWrapperLollipop:
    void setHotspot(float,float) -> setHotspot
    void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    void getOutline(android.graphics.Outline) -> getOutline
    void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    boolean canApplyTheme() -> canApplyTheme
    android.graphics.Rect getDirtyBounds() -> getDirtyBounds
android.support.v4.graphics.drawable.RoundedBitmapDrawable -> android.support.v4.graphics.drawable.RoundedBitmapDrawable:
    int DEFAULT_PAINT_FLAGS -> DEFAULT_PAINT_FLAGS
    android.graphics.Bitmap mBitmap -> mBitmap
    int mTargetDensity -> mTargetDensity
    int mGravity -> mGravity
    android.graphics.Paint mPaint -> mPaint
    android.graphics.BitmapShader mBitmapShader -> mBitmapShader
    android.graphics.Matrix mShaderMatrix -> mShaderMatrix
    float mCornerRadius -> mCornerRadius
    android.graphics.Rect mDstRect -> mDstRect
    android.graphics.RectF mDstRectF -> mDstRectF
    boolean mApplyGravity -> mApplyGravity
    boolean mIsCircular -> mIsCircular
    int mBitmapWidth -> mBitmapWidth
    int mBitmapHeight -> mBitmapHeight
    android.graphics.Paint getPaint() -> getPaint
    android.graphics.Bitmap getBitmap() -> getBitmap
    void computeBitmapSize() -> computeBitmapSize
    void setTargetDensity(android.graphics.Canvas) -> setTargetDensity
    void setTargetDensity(android.util.DisplayMetrics) -> setTargetDensity
    void setTargetDensity(int) -> setTargetDensity
    int getGravity() -> getGravity
    void setGravity(int) -> setGravity
    void setMipMap(boolean) -> setMipMap
    boolean hasMipMap() -> hasMipMap
    void setAntiAlias(boolean) -> setAntiAlias
    boolean hasAntiAlias() -> hasAntiAlias
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setDither(boolean) -> setDither
    void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
    void updateDstRect() -> updateDstRect
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    android.graphics.ColorFilter getColorFilter() -> getColorFilter
    void setCircular(boolean) -> setCircular
    void updateCircularCornerRadius() -> updateCircularCornerRadius
    boolean isCircular() -> isCircular
    void setCornerRadius(float) -> setCornerRadius
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    float getCornerRadius() -> getCornerRadius
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getOpacity() -> getOpacity
    boolean isGreaterThanZero(float) -> isGreaterThanZero
android.support.v4.graphics.drawable.RoundedBitmapDrawable21 -> android.support.v4.graphics.drawable.RoundedBitmapDrawable21:
    void getOutline(android.graphics.Outline) -> getOutline
    void setMipMap(boolean) -> setMipMap
    boolean hasMipMap() -> hasMipMap
    void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory -> android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory:
    java.lang.String TAG -> TAG
    android.support.v4.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,android.graphics.Bitmap) -> create
    android.support.v4.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.lang.String) -> create
    android.support.v4.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.io.InputStream) -> create
android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable -> android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable:
    void setMipMap(boolean) -> setMipMap
    boolean hasMipMap() -> hasMipMap
    void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
android.support.v4.hardware.display.DisplayManagerCompat -> android.support.v4.hardware.display.DisplayManagerCompat:
    java.util.WeakHashMap sInstances -> sInstances
    java.lang.String DISPLAY_CATEGORY_PRESENTATION -> DISPLAY_CATEGORY_PRESENTATION
    android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl -> android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl:
    java.lang.Object mDisplayManagerObj -> mDisplayManagerObj
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl -> android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl:
    android.view.WindowManager mWindowManager -> mWindowManager
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerJellybeanMr1 -> android.support.v4.hardware.display.DisplayManagerJellybeanMr1:
    java.lang.Object getDisplayManager(android.content.Context) -> getDisplayManager
    android.view.Display getDisplay(java.lang.Object,int) -> getDisplay
    android.view.Display[] getDisplays(java.lang.Object) -> getDisplays
    android.view.Display[] getDisplays(java.lang.Object,java.lang.String) -> getDisplays
android.support.v4.hardware.fingerprint.FingerprintManagerCompat -> android.support.v4.hardware.fingerprint.FingerprintManagerCompat:
    android.content.Context mContext -> mContext
    android.support.v4.hardware.fingerprint.FingerprintManagerCompat$FingerprintManagerCompatImpl IMPL -> IMPL
    android.support.v4.hardware.fingerprint.FingerprintManagerCompat from(android.content.Context) -> from
    boolean hasEnrolledFingerprints() -> hasEnrolledFingerprints
    boolean isHardwareDetected() -> isHardwareDetected
    void authenticate(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,android.support.v4.os.CancellationSignal,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler) -> authenticate
android.support.v4.hardware.fingerprint.FingerprintManagerCompat$Api23FingerprintManagerCompatImpl -> android.support.v4.hardware.fingerprint.FingerprintManagerCompat$Api23FingerprintManagerCompatImpl:
    boolean hasEnrolledFingerprints(android.content.Context) -> hasEnrolledFingerprints
    boolean isHardwareDetected(android.content.Context) -> isHardwareDetected
    void authenticate(android.content.Context,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,android.support.v4.os.CancellationSignal,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler) -> authenticate
    android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject wrapCryptoObject(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject) -> wrapCryptoObject
    android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject) -> unwrapCryptoObject
    android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationCallback wrapCallback(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback) -> wrapCallback
    android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject access$000(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject) -> access$000
android.support.v4.hardware.fingerprint.FingerprintManagerCompat$Api23FingerprintManagerCompatImpl$1 -> android.support.v4.hardware.fingerprint.FingerprintManagerCompat$Api23FingerprintManagerCompatImpl$1:
    android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback val$callback -> val$callback
    void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    void onAuthenticationHelp(int,java.lang.CharSequence) -> onAuthenticationHelp
    void onAuthenticationSucceeded(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationResultInternal) -> onAuthenticationSucceeded
    void onAuthenticationFailed() -> onAuthenticationFailed
android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback -> android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback:
    void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    void onAuthenticationHelp(int,java.lang.CharSequence) -> onAuthenticationHelp
    void onAuthenticationSucceeded(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult) -> onAuthenticationSucceeded
    void onAuthenticationFailed() -> onAuthenticationFailed
android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult -> android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult:
    android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject mCryptoObject -> mCryptoObject
    android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject getCryptoObject() -> getCryptoObject
android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject -> android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject:
    java.security.Signature mSignature -> mSignature
    javax.crypto.Cipher mCipher -> mCipher
    javax.crypto.Mac mMac -> mMac
    java.security.Signature getSignature() -> getSignature
    javax.crypto.Cipher getCipher() -> getCipher
    javax.crypto.Mac getMac() -> getMac
android.support.v4.hardware.fingerprint.FingerprintManagerCompat$FingerprintManagerCompatImpl -> android.support.v4.hardware.fingerprint.FingerprintManagerCompat$FingerprintManagerCompatImpl:
    boolean hasEnrolledFingerprints(android.content.Context) -> hasEnrolledFingerprints
    boolean isHardwareDetected(android.content.Context) -> isHardwareDetected
    void authenticate(android.content.Context,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,android.support.v4.os.CancellationSignal,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler) -> authenticate
android.support.v4.hardware.fingerprint.FingerprintManagerCompat$LegacyFingerprintManagerCompatImpl -> android.support.v4.hardware.fingerprint.FingerprintManagerCompat$LegacyFingerprintManagerCompatImpl:
    boolean hasEnrolledFingerprints(android.content.Context) -> hasEnrolledFingerprints
    boolean isHardwareDetected(android.content.Context) -> isHardwareDetected
    void authenticate(android.content.Context,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,android.support.v4.os.CancellationSignal,android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler) -> authenticate
android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23 -> android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23:
    android.hardware.fingerprint.FingerprintManager getFingerprintManager(android.content.Context) -> getFingerprintManager
    boolean hasEnrolledFingerprints(android.content.Context) -> hasEnrolledFingerprints
    boolean isHardwareDetected(android.content.Context) -> isHardwareDetected
    void authenticate(android.content.Context,android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject,int,java.lang.Object,android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationCallback,android.os.Handler) -> authenticate
    android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject) -> wrapCryptoObject
    android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject) -> unwrapCryptoObject
    android.hardware.fingerprint.FingerprintManager$AuthenticationCallback wrapCallback(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationCallback) -> wrapCallback
    android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject access$000(android.hardware.fingerprint.FingerprintManager$CryptoObject) -> access$000
android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$1 -> android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$1:
    android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationCallback val$callback -> val$callback
    void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    void onAuthenticationHelp(int,java.lang.CharSequence) -> onAuthenticationHelp
    void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager$AuthenticationResult) -> onAuthenticationSucceeded
    void onAuthenticationFailed() -> onAuthenticationFailed
android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationCallback -> android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationCallback:
    void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    void onAuthenticationHelp(int,java.lang.CharSequence) -> onAuthenticationHelp
    void onAuthenticationSucceeded(android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationResultInternal) -> onAuthenticationSucceeded
    void onAuthenticationFailed() -> onAuthenticationFailed
android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationResultInternal -> android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$AuthenticationResultInternal:
    android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject mCryptoObject -> mCryptoObject
    android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject getCryptoObject() -> getCryptoObject
android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject -> android.support.v4.hardware.fingerprint.FingerprintManagerCompatApi23$CryptoObject:
    java.security.Signature mSignature -> mSignature
    javax.crypto.Cipher mCipher -> mCipher
    javax.crypto.Mac mMac -> mMac
    java.security.Signature getSignature() -> getSignature
    javax.crypto.Cipher getCipher() -> getCipher
    javax.crypto.Mac getMac() -> getMac
android.support.v4.internal.view.SupportMenu -> android.support.v4.internal.view.SupportMenu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.internal.view.SupportMenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.internal.view.SupportSubMenu:
android.support.v4.media.MediaDescriptionCompat -> android.support.v4.media.MediaDescriptionCompat:
    java.lang.String mMediaId -> mMediaId
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mSubtitle -> mSubtitle
    java.lang.CharSequence mDescription -> mDescription
    android.graphics.Bitmap mIcon -> mIcon
    android.net.Uri mIconUri -> mIconUri
    android.os.Bundle mExtras -> mExtras
    android.net.Uri mMediaUri -> mMediaUri
    java.lang.Object mDescriptionObj -> mDescriptionObj
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getMediaId() -> getMediaId
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    java.lang.CharSequence getDescription() -> getDescription
    android.graphics.Bitmap getIconBitmap() -> getIconBitmap
    android.net.Uri getIconUri() -> getIconUri
    android.os.Bundle getExtras() -> getExtras
    android.net.Uri getMediaUri() -> getMediaUri
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
    java.lang.Object getMediaDescription() -> getMediaDescription
    android.support.v4.media.MediaDescriptionCompat fromMediaDescription(java.lang.Object) -> fromMediaDescription
android.support.v4.media.MediaDescriptionCompat$1 -> android.support.v4.media.MediaDescriptionCompat$1:
    android.support.v4.media.MediaDescriptionCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.MediaDescriptionCompat[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.MediaDescriptionCompat$Builder -> android.support.v4.media.MediaDescriptionCompat$Builder:
    java.lang.String mMediaId -> mMediaId
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mSubtitle -> mSubtitle
    java.lang.CharSequence mDescription -> mDescription
    android.graphics.Bitmap mIcon -> mIcon
    android.net.Uri mIconUri -> mIconUri
    android.os.Bundle mExtras -> mExtras
    android.net.Uri mMediaUri -> mMediaUri
    android.support.v4.media.MediaDescriptionCompat$Builder setMediaId(java.lang.String) -> setMediaId
    android.support.v4.media.MediaDescriptionCompat$Builder setTitle(java.lang.CharSequence) -> setTitle
    android.support.v4.media.MediaDescriptionCompat$Builder setSubtitle(java.lang.CharSequence) -> setSubtitle
    android.support.v4.media.MediaDescriptionCompat$Builder setDescription(java.lang.CharSequence) -> setDescription
    android.support.v4.media.MediaDescriptionCompat$Builder setIconBitmap(android.graphics.Bitmap) -> setIconBitmap
    android.support.v4.media.MediaDescriptionCompat$Builder setIconUri(android.net.Uri) -> setIconUri
    android.support.v4.media.MediaDescriptionCompat$Builder setExtras(android.os.Bundle) -> setExtras
    android.support.v4.media.MediaDescriptionCompat$Builder setMediaUri(android.net.Uri) -> setMediaUri
    android.support.v4.media.MediaDescriptionCompat build() -> build
android.support.v4.media.MediaDescriptionCompatApi21 -> android.support.v4.media.MediaDescriptionCompatApi21:
    java.lang.String getMediaId(java.lang.Object) -> getMediaId
    java.lang.CharSequence getTitle(java.lang.Object) -> getTitle
    java.lang.CharSequence getSubtitle(java.lang.Object) -> getSubtitle
    java.lang.CharSequence getDescription(java.lang.Object) -> getDescription
    android.graphics.Bitmap getIconBitmap(java.lang.Object) -> getIconBitmap
    android.net.Uri getIconUri(java.lang.Object) -> getIconUri
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    void writeToParcel(java.lang.Object,android.os.Parcel,int) -> writeToParcel
    java.lang.Object fromParcel(android.os.Parcel) -> fromParcel
android.support.v4.media.MediaDescriptionCompatApi21$Builder -> android.support.v4.media.MediaDescriptionCompatApi21$Builder:
    java.lang.Object newInstance() -> newInstance
    void setMediaId(java.lang.Object,java.lang.String) -> setMediaId
    void setTitle(java.lang.Object,java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.Object,java.lang.CharSequence) -> setSubtitle
    void setDescription(java.lang.Object,java.lang.CharSequence) -> setDescription
    void setIconBitmap(java.lang.Object,android.graphics.Bitmap) -> setIconBitmap
    void setIconUri(java.lang.Object,android.net.Uri) -> setIconUri
    void setExtras(java.lang.Object,android.os.Bundle) -> setExtras
    java.lang.Object build(java.lang.Object) -> build
android.support.v4.media.MediaDescriptionCompatApi23 -> android.support.v4.media.MediaDescriptionCompatApi23:
    android.net.Uri getMediaUri(java.lang.Object) -> getMediaUri
android.support.v4.media.MediaDescriptionCompatApi23$Builder -> android.support.v4.media.MediaDescriptionCompatApi23$Builder:
    void setMediaUri(java.lang.Object,android.net.Uri) -> setMediaUri
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    java.lang.String TAG -> TAG
    java.lang.String METADATA_KEY_TITLE -> METADATA_KEY_TITLE
    java.lang.String METADATA_KEY_ARTIST -> METADATA_KEY_ARTIST
    java.lang.String METADATA_KEY_DURATION -> METADATA_KEY_DURATION
    java.lang.String METADATA_KEY_ALBUM -> METADATA_KEY_ALBUM
    java.lang.String METADATA_KEY_AUTHOR -> METADATA_KEY_AUTHOR
    java.lang.String METADATA_KEY_WRITER -> METADATA_KEY_WRITER
    java.lang.String METADATA_KEY_COMPOSER -> METADATA_KEY_COMPOSER
    java.lang.String METADATA_KEY_COMPILATION -> METADATA_KEY_COMPILATION
    java.lang.String METADATA_KEY_DATE -> METADATA_KEY_DATE
    java.lang.String METADATA_KEY_YEAR -> METADATA_KEY_YEAR
    java.lang.String METADATA_KEY_GENRE -> METADATA_KEY_GENRE
    java.lang.String METADATA_KEY_TRACK_NUMBER -> METADATA_KEY_TRACK_NUMBER
    java.lang.String METADATA_KEY_NUM_TRACKS -> METADATA_KEY_NUM_TRACKS
    java.lang.String METADATA_KEY_DISC_NUMBER -> METADATA_KEY_DISC_NUMBER
    java.lang.String METADATA_KEY_ALBUM_ARTIST -> METADATA_KEY_ALBUM_ARTIST
    java.lang.String METADATA_KEY_ART -> METADATA_KEY_ART
    java.lang.String METADATA_KEY_ART_URI -> METADATA_KEY_ART_URI
    java.lang.String METADATA_KEY_ALBUM_ART -> METADATA_KEY_ALBUM_ART
    java.lang.String METADATA_KEY_ALBUM_ART_URI -> METADATA_KEY_ALBUM_ART_URI
    java.lang.String METADATA_KEY_USER_RATING -> METADATA_KEY_USER_RATING
    java.lang.String METADATA_KEY_RATING -> METADATA_KEY_RATING
    java.lang.String METADATA_KEY_DISPLAY_TITLE -> METADATA_KEY_DISPLAY_TITLE
    java.lang.String METADATA_KEY_DISPLAY_SUBTITLE -> METADATA_KEY_DISPLAY_SUBTITLE
    java.lang.String METADATA_KEY_DISPLAY_DESCRIPTION -> METADATA_KEY_DISPLAY_DESCRIPTION
    java.lang.String METADATA_KEY_DISPLAY_ICON -> METADATA_KEY_DISPLAY_ICON
    java.lang.String METADATA_KEY_DISPLAY_ICON_URI -> METADATA_KEY_DISPLAY_ICON_URI
    java.lang.String METADATA_KEY_MEDIA_ID -> METADATA_KEY_MEDIA_ID
    int METADATA_TYPE_LONG -> METADATA_TYPE_LONG
    int METADATA_TYPE_TEXT -> METADATA_TYPE_TEXT
    int METADATA_TYPE_BITMAP -> METADATA_TYPE_BITMAP
    int METADATA_TYPE_RATING -> METADATA_TYPE_RATING
    android.support.v4.util.ArrayMap METADATA_KEYS_TYPE -> METADATA_KEYS_TYPE
    java.lang.String[] PREFERRED_DESCRIPTION_ORDER -> PREFERRED_DESCRIPTION_ORDER
    java.lang.String[] PREFERRED_BITMAP_ORDER -> PREFERRED_BITMAP_ORDER
    java.lang.String[] PREFERRED_URI_ORDER -> PREFERRED_URI_ORDER
    android.os.Bundle mBundle -> mBundle
    java.lang.Object mMetadataObj -> mMetadataObj
    android.support.v4.media.MediaDescriptionCompat mDescription -> mDescription
    android.os.Parcelable$Creator CREATOR -> CREATOR
    boolean containsKey(java.lang.String) -> containsKey
    java.lang.CharSequence getText(java.lang.String) -> getText
    java.lang.String getString(java.lang.String) -> getString
    long getLong(java.lang.String) -> getLong
    android.support.v4.media.RatingCompat getRating(java.lang.String) -> getRating
    android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    android.support.v4.media.MediaDescriptionCompat getDescription() -> getDescription
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int size() -> size
    java.util.Set keySet() -> keySet
    android.os.Bundle getBundle() -> getBundle
    android.support.v4.media.MediaMetadataCompat fromMediaMetadata(java.lang.Object) -> fromMediaMetadata
    java.lang.Object getMediaMetadata() -> getMediaMetadata
    android.os.Bundle access$100(android.support.v4.media.MediaMetadataCompat) -> access$100
    android.support.v4.util.ArrayMap access$200() -> access$200
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.MediaMetadataCompat$1:
    android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.MediaMetadataCompat[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.MediaMetadataCompat$BitmapKey -> android.support.v4.media.MediaMetadataCompat$BitmapKey:
android.support.v4.media.MediaMetadataCompat$Builder -> android.support.v4.media.MediaMetadataCompat$Builder:
    android.os.Bundle mBundle -> mBundle
    android.support.v4.media.MediaMetadataCompat$Builder putText(java.lang.String,java.lang.CharSequence) -> putText
    android.support.v4.media.MediaMetadataCompat$Builder putString(java.lang.String,java.lang.String) -> putString
    android.support.v4.media.MediaMetadataCompat$Builder putLong(java.lang.String,long) -> putLong
    android.support.v4.media.MediaMetadataCompat$Builder putRating(java.lang.String,android.support.v4.media.RatingCompat) -> putRating
    android.support.v4.media.MediaMetadataCompat$Builder putBitmap(java.lang.String,android.graphics.Bitmap) -> putBitmap
    android.support.v4.media.MediaMetadataCompat build() -> build
android.support.v4.media.MediaMetadataCompat$LongKey -> android.support.v4.media.MediaMetadataCompat$LongKey:
android.support.v4.media.MediaMetadataCompat$RatingKey -> android.support.v4.media.MediaMetadataCompat$RatingKey:
android.support.v4.media.MediaMetadataCompat$TextKey -> android.support.v4.media.MediaMetadataCompat$TextKey:
android.support.v4.media.MediaMetadataCompatApi21 -> android.support.v4.media.MediaMetadataCompatApi21:
    java.util.Set keySet(java.lang.Object) -> keySet
    android.graphics.Bitmap getBitmap(java.lang.Object,java.lang.String) -> getBitmap
    long getLong(java.lang.Object,java.lang.String) -> getLong
    java.lang.Object getRating(java.lang.Object,java.lang.String) -> getRating
    java.lang.CharSequence getText(java.lang.Object,java.lang.String) -> getText
android.support.v4.media.MediaMetadataCompatApi21$Builder -> android.support.v4.media.MediaMetadataCompatApi21$Builder:
    java.lang.Object newInstance() -> newInstance
    void putBitmap(java.lang.Object,java.lang.String,android.graphics.Bitmap) -> putBitmap
    void putLong(java.lang.Object,java.lang.String,long) -> putLong
    void putRating(java.lang.Object,java.lang.String,java.lang.Object) -> putRating
    void putText(java.lang.Object,java.lang.String,java.lang.CharSequence) -> putText
    void putString(java.lang.Object,java.lang.String,java.lang.String) -> putString
    java.lang.Object build(java.lang.Object) -> build
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    java.lang.String TAG -> TAG
    int RATING_NONE -> RATING_NONE
    int RATING_HEART -> RATING_HEART
    int RATING_THUMB_UP_DOWN -> RATING_THUMB_UP_DOWN
    int RATING_3_STARS -> RATING_3_STARS
    int RATING_4_STARS -> RATING_4_STARS
    int RATING_5_STARS -> RATING_5_STARS
    int RATING_PERCENTAGE -> RATING_PERCENTAGE
    float RATING_NOT_RATED -> RATING_NOT_RATED
    int mRatingStyle -> mRatingStyle
    float mRatingValue -> mRatingValue
    java.lang.Object mRatingObj -> mRatingObj
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    android.support.v4.media.RatingCompat newUnratedRating(int) -> newUnratedRating
    android.support.v4.media.RatingCompat newHeartRating(boolean) -> newHeartRating
    android.support.v4.media.RatingCompat newThumbRating(boolean) -> newThumbRating
    android.support.v4.media.RatingCompat newStarRating(int,float) -> newStarRating
    android.support.v4.media.RatingCompat newPercentageRating(float) -> newPercentageRating
    boolean isRated() -> isRated
    int getRatingStyle() -> getRatingStyle
    boolean hasHeart() -> hasHeart
    boolean isThumbUp() -> isThumbUp
    float getStarRating() -> getStarRating
    float getPercentRating() -> getPercentRating
    android.support.v4.media.RatingCompat fromRating(java.lang.Object) -> fromRating
    java.lang.Object getRating() -> getRating
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.RatingCompat$1:
    android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.RatingCompat[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.RatingCompat$StarStyle -> android.support.v4.media.RatingCompat$StarStyle:
android.support.v4.media.RatingCompat$Style -> android.support.v4.media.RatingCompat$Style:
android.support.v4.media.RatingCompatApi21 -> android.support.v4.media.RatingCompatApi21:
    java.lang.Object newUnratedRating(int) -> newUnratedRating
    java.lang.Object newHeartRating(boolean) -> newHeartRating
    java.lang.Object newThumbRating(boolean) -> newThumbRating
    java.lang.Object newStarRating(int,float) -> newStarRating
    java.lang.Object newPercentageRating(float) -> newPercentageRating
    boolean isRated(java.lang.Object) -> isRated
    int getRatingStyle(java.lang.Object) -> getRatingStyle
    boolean hasHeart(java.lang.Object) -> hasHeart
    boolean isThumbUp(java.lang.Object) -> isThumbUp
    float getStarRating(java.lang.Object) -> getStarRating
    float getPercentRating(java.lang.Object) -> getPercentRating
android.support.v4.media.TransportController -> android.support.v4.media.TransportController:
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
android.support.v4.media.TransportMediator -> android.support.v4.media.TransportMediator:
    android.content.Context mContext -> mContext
    android.support.v4.media.TransportPerformer mCallbacks -> mCallbacks
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mView -> mView
    java.lang.Object mDispatcherState -> mDispatcherState
    android.support.v4.media.TransportMediatorJellybeanMR2 mController -> mController
    java.util.ArrayList mListeners -> mListeners
    android.support.v4.media.TransportMediatorCallback mTransportKeyCallback -> mTransportKeyCallback
    int KEYCODE_MEDIA_PLAY -> KEYCODE_MEDIA_PLAY
    int KEYCODE_MEDIA_PAUSE -> KEYCODE_MEDIA_PAUSE
    int KEYCODE_MEDIA_RECORD -> KEYCODE_MEDIA_RECORD
    int FLAG_KEY_MEDIA_PREVIOUS -> FLAG_KEY_MEDIA_PREVIOUS
    int FLAG_KEY_MEDIA_REWIND -> FLAG_KEY_MEDIA_REWIND
    int FLAG_KEY_MEDIA_PLAY -> FLAG_KEY_MEDIA_PLAY
    int FLAG_KEY_MEDIA_PLAY_PAUSE -> FLAG_KEY_MEDIA_PLAY_PAUSE
    int FLAG_KEY_MEDIA_PAUSE -> FLAG_KEY_MEDIA_PAUSE
    int FLAG_KEY_MEDIA_STOP -> FLAG_KEY_MEDIA_STOP
    int FLAG_KEY_MEDIA_FAST_FORWARD -> FLAG_KEY_MEDIA_FAST_FORWARD
    int FLAG_KEY_MEDIA_NEXT -> FLAG_KEY_MEDIA_NEXT
    android.view.KeyEvent$Callback mKeyEventCallback -> mKeyEventCallback
    boolean isMediaKey(int) -> isMediaKey
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    android.support.v4.media.TransportStateListener[] getListeners() -> getListeners
    void reportPlayingChanged() -> reportPlayingChanged
    void reportTransportControlsChanged() -> reportTransportControlsChanged
    void pushControllerState() -> pushControllerState
    void refreshState() -> refreshState
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
    void destroy() -> destroy
android.support.v4.media.TransportMediator$1 -> android.support.v4.media.TransportMediator$1:
    android.support.v4.media.TransportMediator this$0 -> this$0
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediator$2 -> android.support.v4.media.TransportMediator$2:
    android.support.v4.media.TransportMediator this$0 -> this$0
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
android.support.v4.media.TransportMediatorCallback -> android.support.v4.media.TransportMediatorCallback:
    void handleKey(android.view.KeyEvent) -> handleKey
    void handleAudioFocusChange(int) -> handleAudioFocusChange
    long getPlaybackPosition() -> getPlaybackPosition
    void playbackPositionUpdate(long) -> playbackPositionUpdate
android.support.v4.media.TransportMediatorJellybeanMR2 -> android.support.v4.media.TransportMediatorJellybeanMR2:
    android.content.Context mContext -> mContext
    android.media.AudioManager mAudioManager -> mAudioManager
    android.view.View mTargetView -> mTargetView
    android.support.v4.media.TransportMediatorCallback mTransportCallback -> mTransportCallback
    java.lang.String mReceiverAction -> mReceiverAction
    android.content.IntentFilter mReceiverFilter -> mReceiverFilter
    android.content.Intent mIntent -> mIntent
    android.view.ViewTreeObserver$OnWindowAttachListener mWindowAttachListener -> mWindowAttachListener
    android.view.ViewTreeObserver$OnWindowFocusChangeListener mWindowFocusListener -> mWindowFocusListener
    android.content.BroadcastReceiver mMediaButtonReceiver -> mMediaButtonReceiver
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusChangeListener -> mAudioFocusChangeListener
    android.app.PendingIntent mPendingIntent -> mPendingIntent
    android.media.RemoteControlClient mRemoteControl -> mRemoteControl
    boolean mFocused -> mFocused
    int mPlayState -> mPlayState
    boolean mAudioFocused -> mAudioFocused
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    void destroy() -> destroy
    void windowAttached() -> windowAttached
    void gainFocus() -> gainFocus
    void takeAudioFocus() -> takeAudioFocus
    void startPlaying() -> startPlaying
    long onGetPlaybackPosition() -> onGetPlaybackPosition
    void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
    void refreshState(boolean,long,int) -> refreshState
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    void dropAudioFocus() -> dropAudioFocus
    void loseFocus() -> loseFocus
    void windowDetached() -> windowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$1 -> android.support.v4.media.TransportMediatorJellybeanMR2$1:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowAttached() -> onWindowAttached
    void onWindowDetached() -> onWindowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$2 -> android.support.v4.media.TransportMediatorJellybeanMR2$2:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
android.support.v4.media.TransportMediatorJellybeanMR2$3 -> android.support.v4.media.TransportMediatorJellybeanMR2$3:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.media.TransportMediatorJellybeanMR2$4 -> android.support.v4.media.TransportMediatorJellybeanMR2$4:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> this$0
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportPerformer -> android.support.v4.media.TransportPerformer:
    int AUDIOFOCUS_GAIN -> AUDIOFOCUS_GAIN
    int AUDIOFOCUS_GAIN_TRANSIENT -> AUDIOFOCUS_GAIN_TRANSIENT
    int AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK -> AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK
    int AUDIOFOCUS_LOSS -> AUDIOFOCUS_LOSS
    int AUDIOFOCUS_LOSS_TRANSIENT -> AUDIOFOCUS_LOSS_TRANSIENT
    int AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK -> AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK
    void onStart() -> onStart
    void onPause() -> onPause
    void onStop() -> onStop
    long onGetDuration() -> onGetDuration
    long onGetCurrentPosition() -> onGetCurrentPosition
    void onSeekTo(long) -> onSeekTo
    boolean onIsPlaying() -> onIsPlaying
    int onGetBufferPercentage() -> onGetBufferPercentage
    int onGetTransportControlFlags() -> onGetTransportControlFlags
    boolean onMediaButtonDown(int,android.view.KeyEvent) -> onMediaButtonDown
    boolean onMediaButtonUp(int,android.view.KeyEvent) -> onMediaButtonUp
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportStateListener -> android.support.v4.media.TransportStateListener:
    void onPlayingChanged(android.support.v4.media.TransportController) -> onPlayingChanged
    void onTransportControlsChanged(android.support.v4.media.TransportController) -> onTransportControlsChanged
android.support.v4.media.VolumeProviderCompat -> android.support.v4.media.VolumeProviderCompat:
    int VOLUME_CONTROL_FIXED -> VOLUME_CONTROL_FIXED
    int VOLUME_CONTROL_RELATIVE -> VOLUME_CONTROL_RELATIVE
    int VOLUME_CONTROL_ABSOLUTE -> VOLUME_CONTROL_ABSOLUTE
    int mControlType -> mControlType
    int mMaxVolume -> mMaxVolume
    int mCurrentVolume -> mCurrentVolume
    android.support.v4.media.VolumeProviderCompat$Callback mCallback -> mCallback
    java.lang.Object mVolumeProviderObj -> mVolumeProviderObj
    int getCurrentVolume() -> getCurrentVolume
    int getVolumeControl() -> getVolumeControl
    int getMaxVolume() -> getMaxVolume
    void setCurrentVolume(int) -> setCurrentVolume
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
    void setCallback(android.support.v4.media.VolumeProviderCompat$Callback) -> setCallback
    java.lang.Object getVolumeProvider() -> getVolumeProvider
android.support.v4.media.VolumeProviderCompat$1 -> android.support.v4.media.VolumeProviderCompat$1:
    android.support.v4.media.VolumeProviderCompat this$0 -> this$0
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
android.support.v4.media.VolumeProviderCompat$Callback -> android.support.v4.media.VolumeProviderCompat$Callback:
    void onVolumeChanged(android.support.v4.media.VolumeProviderCompat) -> onVolumeChanged
android.support.v4.media.VolumeProviderCompat$ControlType -> android.support.v4.media.VolumeProviderCompat$ControlType:
android.support.v4.media.VolumeProviderCompatApi21 -> android.support.v4.media.VolumeProviderCompatApi21:
    java.lang.Object createVolumeProvider(int,int,int,android.support.v4.media.VolumeProviderCompatApi21$Delegate) -> createVolumeProvider
    void setCurrentVolume(java.lang.Object,int) -> setCurrentVolume
android.support.v4.media.VolumeProviderCompatApi21$1 -> android.support.v4.media.VolumeProviderCompatApi21$1:
    android.support.v4.media.VolumeProviderCompatApi21$Delegate val$delegate -> val$delegate
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
android.support.v4.media.VolumeProviderCompatApi21$Delegate -> android.support.v4.media.VolumeProviderCompatApi21$Delegate:
    void onSetVolumeTo(int) -> onSetVolumeTo
    void onAdjustVolume(int) -> onAdjustVolume
android.support.v4.media.routing.MediaRouterJellybean -> android.support.v4.media.routing.MediaRouterJellybean:
    java.lang.String TAG -> TAG
    int ROUTE_TYPE_LIVE_AUDIO -> ROUTE_TYPE_LIVE_AUDIO
    int ROUTE_TYPE_LIVE_VIDEO -> ROUTE_TYPE_LIVE_VIDEO
    int ROUTE_TYPE_USER -> ROUTE_TYPE_USER
    int ALL_ROUTE_TYPES -> ALL_ROUTE_TYPES
    java.lang.Object getMediaRouter(android.content.Context) -> getMediaRouter
    java.util.List getRoutes(java.lang.Object) -> getRoutes
    java.util.List getCategories(java.lang.Object) -> getCategories
    java.lang.Object getSelectedRoute(java.lang.Object,int) -> getSelectedRoute
    void selectRoute(java.lang.Object,int,java.lang.Object) -> selectRoute
    void addCallback(java.lang.Object,int,java.lang.Object) -> addCallback
    void removeCallback(java.lang.Object,java.lang.Object) -> removeCallback
    java.lang.Object createRouteCategory(java.lang.Object,java.lang.String,boolean) -> createRouteCategory
    java.lang.Object createUserRoute(java.lang.Object,java.lang.Object) -> createUserRoute
    void addUserRoute(java.lang.Object,java.lang.Object) -> addUserRoute
    void removeUserRoute(java.lang.Object,java.lang.Object) -> removeUserRoute
    java.lang.Object createCallback(android.support.v4.media.routing.MediaRouterJellybean$Callback) -> createCallback
    java.lang.Object createVolumeCallback(android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback) -> createVolumeCallback
android.support.v4.media.routing.MediaRouterJellybean$Callback -> android.support.v4.media.routing.MediaRouterJellybean$Callback:
    void onRouteSelected(int,java.lang.Object) -> onRouteSelected
    void onRouteUnselected(int,java.lang.Object) -> onRouteUnselected
    void onRouteAdded(java.lang.Object) -> onRouteAdded
    void onRouteRemoved(java.lang.Object) -> onRouteRemoved
    void onRouteChanged(java.lang.Object) -> onRouteChanged
    void onRouteGrouped(java.lang.Object,java.lang.Object,int) -> onRouteGrouped
    void onRouteUngrouped(java.lang.Object,java.lang.Object) -> onRouteUngrouped
    void onRouteVolumeChanged(java.lang.Object) -> onRouteVolumeChanged
android.support.v4.media.routing.MediaRouterJellybean$CallbackProxy -> android.support.v4.media.routing.MediaRouterJellybean$CallbackProxy:
    android.support.v4.media.routing.MediaRouterJellybean$Callback mCallback -> mCallback
    void onRouteSelected(android.media.MediaRouter,int,android.media.MediaRouter$RouteInfo) -> onRouteSelected
    void onRouteUnselected(android.media.MediaRouter,int,android.media.MediaRouter$RouteInfo) -> onRouteUnselected
    void onRouteAdded(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteAdded
    void onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteRemoved
    void onRouteChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteChanged
    void onRouteGrouped(android.media.MediaRouter,android.media.MediaRouter$RouteInfo,android.media.MediaRouter$RouteGroup,int) -> onRouteGrouped
    void onRouteUngrouped(android.media.MediaRouter,android.media.MediaRouter$RouteInfo,android.media.MediaRouter$RouteGroup) -> onRouteUngrouped
    void onRouteVolumeChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRouteVolumeChanged
android.support.v4.media.routing.MediaRouterJellybean$GetDefaultRouteWorkaround -> android.support.v4.media.routing.MediaRouterJellybean$GetDefaultRouteWorkaround:
    java.lang.reflect.Method mGetSystemAudioRouteMethod -> mGetSystemAudioRouteMethod
    java.lang.Object getDefaultRoute(java.lang.Object) -> getDefaultRoute
android.support.v4.media.routing.MediaRouterJellybean$RouteCategory -> android.support.v4.media.routing.MediaRouterJellybean$RouteCategory:
    java.lang.CharSequence getName(java.lang.Object,android.content.Context) -> getName
    java.util.List getRoutes(java.lang.Object) -> getRoutes
    int getSupportedTypes(java.lang.Object) -> getSupportedTypes
    boolean isGroupable(java.lang.Object) -> isGroupable
android.support.v4.media.routing.MediaRouterJellybean$RouteGroup -> android.support.v4.media.routing.MediaRouterJellybean$RouteGroup:
    java.util.List getGroupedRoutes(java.lang.Object) -> getGroupedRoutes
android.support.v4.media.routing.MediaRouterJellybean$RouteInfo -> android.support.v4.media.routing.MediaRouterJellybean$RouteInfo:
    java.lang.CharSequence getName(java.lang.Object,android.content.Context) -> getName
    java.lang.CharSequence getStatus(java.lang.Object) -> getStatus
    int getSupportedTypes(java.lang.Object) -> getSupportedTypes
    java.lang.Object getCategory(java.lang.Object) -> getCategory
    android.graphics.drawable.Drawable getIconDrawable(java.lang.Object) -> getIconDrawable
    int getPlaybackType(java.lang.Object) -> getPlaybackType
    int getPlaybackStream(java.lang.Object) -> getPlaybackStream
    int getVolume(java.lang.Object) -> getVolume
    int getVolumeMax(java.lang.Object) -> getVolumeMax
    int getVolumeHandling(java.lang.Object) -> getVolumeHandling
    java.lang.Object getTag(java.lang.Object) -> getTag
    void setTag(java.lang.Object,java.lang.Object) -> setTag
    void requestSetVolume(java.lang.Object,int) -> requestSetVolume
    void requestUpdateVolume(java.lang.Object,int) -> requestUpdateVolume
    java.lang.Object getGroup(java.lang.Object) -> getGroup
    boolean isGroup(java.lang.Object) -> isGroup
android.support.v4.media.routing.MediaRouterJellybean$SelectRouteWorkaround -> android.support.v4.media.routing.MediaRouterJellybean$SelectRouteWorkaround:
    java.lang.reflect.Method mSelectRouteIntMethod -> mSelectRouteIntMethod
    void selectRoute(java.lang.Object,int,java.lang.Object) -> selectRoute
android.support.v4.media.routing.MediaRouterJellybean$UserRouteInfo -> android.support.v4.media.routing.MediaRouterJellybean$UserRouteInfo:
    void setName(java.lang.Object,java.lang.CharSequence) -> setName
    void setStatus(java.lang.Object,java.lang.CharSequence) -> setStatus
    void setIconDrawable(java.lang.Object,android.graphics.drawable.Drawable) -> setIconDrawable
    void setPlaybackType(java.lang.Object,int) -> setPlaybackType
    void setPlaybackStream(java.lang.Object,int) -> setPlaybackStream
    void setVolume(java.lang.Object,int) -> setVolume
    void setVolumeMax(java.lang.Object,int) -> setVolumeMax
    void setVolumeHandling(java.lang.Object,int) -> setVolumeHandling
    void setVolumeCallback(java.lang.Object,java.lang.Object) -> setVolumeCallback
    void setRemoteControlClient(java.lang.Object,java.lang.Object) -> setRemoteControlClient
android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback -> android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback:
    void onVolumeSetRequest(java.lang.Object,int) -> onVolumeSetRequest
    void onVolumeUpdateRequest(java.lang.Object,int) -> onVolumeUpdateRequest
android.support.v4.media.routing.MediaRouterJellybean$VolumeCallbackProxy -> android.support.v4.media.routing.MediaRouterJellybean$VolumeCallbackProxy:
    android.support.v4.media.routing.MediaRouterJellybean$VolumeCallback mCallback -> mCallback
    void onVolumeSetRequest(android.media.MediaRouter$RouteInfo,int) -> onVolumeSetRequest
    void onVolumeUpdateRequest(android.media.MediaRouter$RouteInfo,int) -> onVolumeUpdateRequest
android.support.v4.media.routing.MediaRouterJellybeanMr1 -> android.support.v4.media.routing.MediaRouterJellybeanMr1:
    java.lang.String TAG -> TAG
    java.lang.Object createCallback(android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback) -> createCallback
android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround -> android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround:
    int WIFI_DISPLAY_SCAN_INTERVAL -> WIFI_DISPLAY_SCAN_INTERVAL
    android.hardware.display.DisplayManager mDisplayManager -> mDisplayManager
    android.os.Handler mHandler -> mHandler
    java.lang.reflect.Method mScanWifiDisplaysMethod -> mScanWifiDisplaysMethod
    boolean mActivelyScanningWifiDisplays -> mActivelyScanningWifiDisplays
    void setActiveScanRouteTypes(int) -> setActiveScanRouteTypes
    void run() -> run
android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback -> android.support.v4.media.routing.MediaRouterJellybeanMr1$Callback:
    void onRoutePresentationDisplayChanged(java.lang.Object) -> onRoutePresentationDisplayChanged
android.support.v4.media.routing.MediaRouterJellybeanMr1$CallbackProxy -> android.support.v4.media.routing.MediaRouterJellybeanMr1$CallbackProxy:
    void onRoutePresentationDisplayChanged(android.media.MediaRouter,android.media.MediaRouter$RouteInfo) -> onRoutePresentationDisplayChanged
android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround -> android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround:
    java.lang.reflect.Method mGetStatusCodeMethod -> mGetStatusCodeMethod
    int mStatusConnecting -> mStatusConnecting
    boolean isConnecting(java.lang.Object) -> isConnecting
android.support.v4.media.routing.MediaRouterJellybeanMr1$RouteInfo -> android.support.v4.media.routing.MediaRouterJellybeanMr1$RouteInfo:
    boolean isEnabled(java.lang.Object) -> isEnabled
    android.view.Display getPresentationDisplay(java.lang.Object) -> getPresentationDisplay
android.support.v4.media.routing.MediaRouterJellybeanMr2 -> android.support.v4.media.routing.MediaRouterJellybeanMr2:
    java.lang.Object getDefaultRoute(java.lang.Object) -> getDefaultRoute
    void addCallback(java.lang.Object,int,java.lang.Object,int) -> addCallback
android.support.v4.media.routing.MediaRouterJellybeanMr2$RouteInfo -> android.support.v4.media.routing.MediaRouterJellybeanMr2$RouteInfo:
    java.lang.CharSequence getDescription(java.lang.Object) -> getDescription
    boolean isConnecting(java.lang.Object) -> isConnecting
android.support.v4.media.routing.MediaRouterJellybeanMr2$UserRouteInfo -> android.support.v4.media.routing.MediaRouterJellybeanMr2$UserRouteInfo:
    void setDescription(java.lang.Object,java.lang.CharSequence) -> setDescription
android.support.v4.media.session.IMediaControllerCallback -> android.support.v4.media.session.IMediaControllerCallback:
    void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    void onSessionDestroyed() -> onSessionDestroyed
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.IMediaControllerCallback$Stub -> android.support.v4.media.session.IMediaControllerCallback$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_onEvent -> TRANSACTION_onEvent
    int TRANSACTION_onSessionDestroyed -> TRANSACTION_onSessionDestroyed
    int TRANSACTION_onPlaybackStateChanged -> TRANSACTION_onPlaybackStateChanged
    int TRANSACTION_onMetadataChanged -> TRANSACTION_onMetadataChanged
    int TRANSACTION_onQueueChanged -> TRANSACTION_onQueueChanged
    int TRANSACTION_onQueueTitleChanged -> TRANSACTION_onQueueTitleChanged
    int TRANSACTION_onExtrasChanged -> TRANSACTION_onExtrasChanged
    int TRANSACTION_onVolumeInfoChanged -> TRANSACTION_onVolumeInfoChanged
    android.support.v4.media.session.IMediaControllerCallback asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy -> android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    void onSessionDestroyed() -> onSessionDestroyed
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.IMediaSession -> android.support.v4.media.session.IMediaSession:
    void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
    void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
    boolean isTransportControlEnabled() -> isTransportControlEnabled
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getTag() -> getTag
    android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    long getFlags() -> getFlags
    android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    void adjustVolume(int,int,java.lang.String) -> adjustVolume
    void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    void skipToQueueItem(long) -> skipToQueueItem
    void pause() -> pause
    void stop() -> stop
    void next() -> next
    void previous() -> previous
    void fastForward() -> fastForward
    void rewind() -> rewind
    void seekTo(long) -> seekTo
    void rate(android.support.v4.media.RatingCompat) -> rate
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
android.support.v4.media.session.IMediaSession$Stub -> android.support.v4.media.session.IMediaSession$Stub:
    java.lang.String DESCRIPTOR -> DESCRIPTOR
    int TRANSACTION_sendCommand -> TRANSACTION_sendCommand
    int TRANSACTION_sendMediaButton -> TRANSACTION_sendMediaButton
    int TRANSACTION_registerCallbackListener -> TRANSACTION_registerCallbackListener
    int TRANSACTION_unregisterCallbackListener -> TRANSACTION_unregisterCallbackListener
    int TRANSACTION_isTransportControlEnabled -> TRANSACTION_isTransportControlEnabled
    int TRANSACTION_getPackageName -> TRANSACTION_getPackageName
    int TRANSACTION_getTag -> TRANSACTION_getTag
    int TRANSACTION_getLaunchPendingIntent -> TRANSACTION_getLaunchPendingIntent
    int TRANSACTION_getFlags -> TRANSACTION_getFlags
    int TRANSACTION_getVolumeAttributes -> TRANSACTION_getVolumeAttributes
    int TRANSACTION_adjustVolume -> TRANSACTION_adjustVolume
    int TRANSACTION_setVolumeTo -> TRANSACTION_setVolumeTo
    int TRANSACTION_play -> TRANSACTION_play
    int TRANSACTION_playFromMediaId -> TRANSACTION_playFromMediaId
    int TRANSACTION_playFromSearch -> TRANSACTION_playFromSearch
    int TRANSACTION_playFromUri -> TRANSACTION_playFromUri
    int TRANSACTION_skipToQueueItem -> TRANSACTION_skipToQueueItem
    int TRANSACTION_pause -> TRANSACTION_pause
    int TRANSACTION_stop -> TRANSACTION_stop
    int TRANSACTION_next -> TRANSACTION_next
    int TRANSACTION_previous -> TRANSACTION_previous
    int TRANSACTION_fastForward -> TRANSACTION_fastForward
    int TRANSACTION_rewind -> TRANSACTION_rewind
    int TRANSACTION_seekTo -> TRANSACTION_seekTo
    int TRANSACTION_rate -> TRANSACTION_rate
    int TRANSACTION_sendCustomAction -> TRANSACTION_sendCustomAction
    int TRANSACTION_getMetadata -> TRANSACTION_getMetadata
    int TRANSACTION_getPlaybackState -> TRANSACTION_getPlaybackState
    int TRANSACTION_getQueue -> TRANSACTION_getQueue
    int TRANSACTION_getQueueTitle -> TRANSACTION_getQueueTitle
    int TRANSACTION_getExtras -> TRANSACTION_getExtras
    int TRANSACTION_getRatingType -> TRANSACTION_getRatingType
    android.support.v4.media.session.IMediaSession asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.media.session.IMediaSession$Stub$Proxy -> android.support.v4.media.session.IMediaSession$Stub$Proxy:
    android.os.IBinder mRemote -> mRemote
    android.os.IBinder asBinder() -> asBinder
    java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
    void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
    boolean isTransportControlEnabled() -> isTransportControlEnabled
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getTag() -> getTag
    android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    long getFlags() -> getFlags
    android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    void adjustVolume(int,int,java.lang.String) -> adjustVolume
    void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    void skipToQueueItem(long) -> skipToQueueItem
    void pause() -> pause
    void stop() -> stop
    void next() -> next
    void previous() -> previous
    void fastForward() -> fastForward
    void rewind() -> rewind
    void seekTo(long) -> seekTo
    void rate(android.support.v4.media.RatingCompat) -> rate
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
android.support.v4.media.session.MediaControllerCompat -> android.support.v4.media.session.MediaControllerCompat:
    java.lang.String TAG -> TAG
    android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl -> mImpl
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> mToken
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
    long getFlags() -> getFlags
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    android.app.PendingIntent getSessionActivity() -> getSessionActivity
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setVolumeTo(int,int) -> setVolumeTo
    void adjustVolume(int,int) -> adjustVolume
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> registerCallback
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.String getPackageName() -> getPackageName
    java.lang.Object getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$1 -> android.support.v4.media.session.MediaControllerCompat$1:
android.support.v4.media.session.MediaControllerCompat$Callback -> android.support.v4.media.session.MediaControllerCompat$Callback:
    java.lang.Object mCallbackObj -> mCallbackObj
    android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler mHandler -> mHandler
    boolean mRegistered -> mRegistered
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onAudioInfoChanged(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo) -> onAudioInfoChanged
    void binderDied() -> binderDied
    void setHandler(android.os.Handler) -> setHandler
    android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler access$200(android.support.v4.media.session.MediaControllerCompat$Callback) -> access$200
    boolean access$300(android.support.v4.media.session.MediaControllerCompat$Callback) -> access$300
    java.lang.Object access$400(android.support.v4.media.session.MediaControllerCompat$Callback) -> access$400
    void access$500(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> access$500
    boolean access$302(android.support.v4.media.session.MediaControllerCompat$Callback,boolean) -> access$302
android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler -> android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler:
    int MSG_EVENT -> MSG_EVENT
    int MSG_UPDATE_PLAYBACK_STATE -> MSG_UPDATE_PLAYBACK_STATE
    int MSG_UPDATE_METADATA -> MSG_UPDATE_METADATA
    int MSG_UPDATE_VOLUME -> MSG_UPDATE_VOLUME
    int MSG_UPDATE_QUEUE -> MSG_UPDATE_QUEUE
    int MSG_UPDATE_QUEUE_TITLE -> MSG_UPDATE_QUEUE_TITLE
    int MSG_UPDATE_EXTRAS -> MSG_UPDATE_EXTRAS
    int MSG_DESTROYED -> MSG_DESTROYED
    android.support.v4.media.session.MediaControllerCompat$Callback this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
    void post(int,java.lang.Object,android.os.Bundle) -> post
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21 -> android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21:
    android.support.v4.media.session.MediaControllerCompat$Callback this$0 -> this$0
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(java.lang.Object) -> onPlaybackStateChanged
    void onMetadataChanged(java.lang.Object) -> onMetadataChanged
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat -> android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat:
    android.support.v4.media.session.MediaControllerCompat$Callback this$0 -> this$0
    void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    void onSessionDestroyed() -> onSessionDestroyed
    void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    void onQueueChanged(java.util.List) -> onQueueChanged
    void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl:
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
    long getFlags() -> getFlags
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    android.app.PendingIntent getSessionActivity() -> getSessionActivity
    void setVolumeTo(int,int) -> setVolumeTo
    void adjustVolume(int,int) -> adjustVolume
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.String getPackageName() -> getPackageName
    java.lang.Object getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21:
    java.lang.Object mControllerObj -> mControllerObj
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
    long getFlags() -> getFlags
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    android.app.PendingIntent getSessionActivity() -> getSessionActivity
    void setVolumeTo(int,int) -> setVolumeTo
    void adjustVolume(int,int) -> adjustVolume
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.String getPackageName() -> getPackageName
    java.lang.Object getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23:
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase:
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> mToken
    android.support.v4.media.session.IMediaSession mBinder -> mBinder
    android.support.v4.media.session.MediaControllerCompat$TransportControls mTransportControls -> mTransportControls
    void registerCallback(android.support.v4.media.session.MediaControllerCompat$Callback,android.os.Handler) -> registerCallback
    void unregisterCallback(android.support.v4.media.session.MediaControllerCompat$Callback) -> unregisterCallback
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> dispatchMediaButtonEvent
    android.support.v4.media.session.MediaControllerCompat$TransportControls getTransportControls() -> getTransportControls
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
    long getFlags() -> getFlags
    android.support.v4.media.session.MediaControllerCompat$PlaybackInfo getPlaybackInfo() -> getPlaybackInfo
    android.app.PendingIntent getSessionActivity() -> getSessionActivity
    void setVolumeTo(int,int) -> setVolumeTo
    void adjustVolume(int,int) -> adjustVolume
    void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.String getPackageName() -> getPackageName
    java.lang.Object getMediaController() -> getMediaController
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompat$PlaybackInfo:
    int PLAYBACK_TYPE_LOCAL -> PLAYBACK_TYPE_LOCAL
    int PLAYBACK_TYPE_REMOTE -> PLAYBACK_TYPE_REMOTE
    int mPlaybackType -> mPlaybackType
    int mAudioStream -> mAudioStream
    int mVolumeControl -> mVolumeControl
    int mMaxVolume -> mMaxVolume
    int mCurrentVolume -> mCurrentVolume
    int getPlaybackType() -> getPlaybackType
    int getAudioStream() -> getAudioStream
    int getVolumeControl() -> getVolumeControl
    int getMaxVolume() -> getMaxVolume
    int getCurrentVolume() -> getCurrentVolume
android.support.v4.media.session.MediaControllerCompat$TransportControls -> android.support.v4.media.session.MediaControllerCompat$TransportControls:
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    void skipToQueueItem(long) -> skipToQueueItem
    void pause() -> pause
    void stop() -> stop
    void seekTo(long) -> seekTo
    void fastForward() -> fastForward
    void skipToNext() -> skipToNext
    void rewind() -> rewind
    void skipToPrevious() -> skipToPrevious
    void setRating(android.support.v4.media.RatingCompat) -> setRating
    void sendCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction,android.os.Bundle) -> sendCustomAction
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21 -> android.support.v4.media.session.MediaControllerCompat$TransportControlsApi21:
    java.lang.Object mControlsObj -> mControlsObj
    void play() -> play
    void pause() -> pause
    void stop() -> stop
    void seekTo(long) -> seekTo
    void fastForward() -> fastForward
    void rewind() -> rewind
    void skipToNext() -> skipToNext
    void skipToPrevious() -> skipToPrevious
    void setRating(android.support.v4.media.RatingCompat) -> setRating
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    void skipToQueueItem(long) -> skipToQueueItem
    void sendCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction,android.os.Bundle) -> sendCustomAction
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
android.support.v4.media.session.MediaControllerCompat$TransportControlsApi23 -> android.support.v4.media.session.MediaControllerCompat$TransportControlsApi23:
    void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
android.support.v4.media.session.MediaControllerCompat$TransportControlsBase -> android.support.v4.media.session.MediaControllerCompat$TransportControlsBase:
    android.support.v4.media.session.IMediaSession mBinder -> mBinder
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    void skipToQueueItem(long) -> skipToQueueItem
    void pause() -> pause
    void stop() -> stop
    void seekTo(long) -> seekTo
    void fastForward() -> fastForward
    void skipToNext() -> skipToNext
    void rewind() -> rewind
    void skipToPrevious() -> skipToPrevious
    void setRating(android.support.v4.media.RatingCompat) -> setRating
    void sendCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction,android.os.Bundle) -> sendCustomAction
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
android.support.v4.media.session.MediaControllerCompatApi21 -> android.support.v4.media.session.MediaControllerCompatApi21:
    java.lang.Object fromToken(android.content.Context,java.lang.Object) -> fromToken
    java.lang.Object createCallback(android.support.v4.media.session.MediaControllerCompatApi21$Callback) -> createCallback
    void registerCallback(java.lang.Object,java.lang.Object,android.os.Handler) -> registerCallback
    void unregisterCallback(java.lang.Object,java.lang.Object) -> unregisterCallback
    java.lang.Object getTransportControls(java.lang.Object) -> getTransportControls
    java.lang.Object getPlaybackState(java.lang.Object) -> getPlaybackState
    java.lang.Object getMetadata(java.lang.Object) -> getMetadata
    java.util.List getQueue(java.lang.Object) -> getQueue
    java.lang.CharSequence getQueueTitle(java.lang.Object) -> getQueueTitle
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    int getRatingType(java.lang.Object) -> getRatingType
    long getFlags(java.lang.Object) -> getFlags
    java.lang.Object getPlaybackInfo(java.lang.Object) -> getPlaybackInfo
    android.app.PendingIntent getSessionActivity(java.lang.Object) -> getSessionActivity
    boolean dispatchMediaButtonEvent(java.lang.Object,android.view.KeyEvent) -> dispatchMediaButtonEvent
    void setVolumeTo(java.lang.Object,int,int) -> setVolumeTo
    void adjustVolume(java.lang.Object,int,int) -> adjustVolume
    void sendCommand(java.lang.Object,java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> sendCommand
    java.lang.String getPackageName(java.lang.Object) -> getPackageName
android.support.v4.media.session.MediaControllerCompatApi21$Callback -> android.support.v4.media.session.MediaControllerCompatApi21$Callback:
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(java.lang.Object) -> onPlaybackStateChanged
    void onMetadataChanged(java.lang.Object) -> onMetadataChanged
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy -> android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy:
    android.support.v4.media.session.MediaControllerCompatApi21$Callback mCallback -> mCallback
    void onSessionDestroyed() -> onSessionDestroyed
    void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
    void onPlaybackStateChanged(android.media.session.PlaybackState) -> onPlaybackStateChanged
    void onMetadataChanged(android.media.MediaMetadata) -> onMetadataChanged
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo:
    int FLAG_SCO -> FLAG_SCO
    int STREAM_BLUETOOTH_SCO -> STREAM_BLUETOOTH_SCO
    int STREAM_SYSTEM_ENFORCED -> STREAM_SYSTEM_ENFORCED
    int getPlaybackType(java.lang.Object) -> getPlaybackType
    android.media.AudioAttributes getAudioAttributes(java.lang.Object) -> getAudioAttributes
    int getLegacyAudioStream(java.lang.Object) -> getLegacyAudioStream
    int getVolumeControl(java.lang.Object) -> getVolumeControl
    int getMaxVolume(java.lang.Object) -> getMaxVolume
    int getCurrentVolume(java.lang.Object) -> getCurrentVolume
    int toLegacyStreamType(android.media.AudioAttributes) -> toLegacyStreamType
android.support.v4.media.session.MediaControllerCompatApi21$TransportControls -> android.support.v4.media.session.MediaControllerCompatApi21$TransportControls:
    void play(java.lang.Object) -> play
    void pause(java.lang.Object) -> pause
    void stop(java.lang.Object) -> stop
    void seekTo(java.lang.Object,long) -> seekTo
    void fastForward(java.lang.Object) -> fastForward
    void rewind(java.lang.Object) -> rewind
    void skipToNext(java.lang.Object) -> skipToNext
    void skipToPrevious(java.lang.Object) -> skipToPrevious
    void setRating(java.lang.Object,java.lang.Object) -> setRating
    void playFromMediaId(java.lang.Object,java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.Object,java.lang.String,android.os.Bundle) -> playFromSearch
    void skipToQueueItem(java.lang.Object,long) -> skipToQueueItem
    void sendCustomAction(java.lang.Object,java.lang.String,android.os.Bundle) -> sendCustomAction
android.support.v4.media.session.MediaControllerCompatApi23 -> android.support.v4.media.session.MediaControllerCompatApi23:
android.support.v4.media.session.MediaControllerCompatApi23$TransportControls -> android.support.v4.media.session.MediaControllerCompatApi23$TransportControls:
    void playFromUri(java.lang.Object,android.net.Uri,android.os.Bundle) -> playFromUri
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.session.MediaSessionCompat:
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl mImpl -> mImpl
    android.support.v4.media.session.MediaControllerCompat mController -> mController
    java.util.ArrayList mActiveListeners -> mActiveListeners
    int FLAG_HANDLES_MEDIA_BUTTONS -> FLAG_HANDLES_MEDIA_BUTTONS
    int FLAG_HANDLES_TRANSPORT_CONTROLS -> FLAG_HANDLES_TRANSPORT_CONTROLS
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback) -> setCallback
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setSessionActivity(android.app.PendingIntent) -> setSessionActivity
    void setMediaButtonReceiver(android.app.PendingIntent) -> setMediaButtonReceiver
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    android.support.v4.media.session.MediaControllerCompat getController() -> getController
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    void setQueue(java.util.List) -> setQueue
    void setQueueTitle(java.lang.CharSequence) -> setQueueTitle
    void setRatingType(int) -> setRatingType
    void setExtras(android.os.Bundle) -> setExtras
    java.lang.Object getMediaSession() -> getMediaSession
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    void addOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener) -> addOnActiveChangeListener
    void removeOnActiveChangeListener(android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener) -> removeOnActiveChangeListener
    android.support.v4.media.session.MediaSessionCompat obtain(android.content.Context,java.lang.Object) -> obtain
android.support.v4.media.session.MediaSessionCompat$1 -> android.support.v4.media.session.MediaSessionCompat$1:
android.support.v4.media.session.MediaSessionCompat$Callback -> android.support.v4.media.session.MediaSessionCompat$Callback:
    java.lang.Object mCallbackObj -> mCallbackObj
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPlayFromMediaId(java.lang.String,android.os.Bundle) -> onPlayFromMediaId
    void onPlayFromSearch(java.lang.String,android.os.Bundle) -> onPlayFromSearch
    void onPlayFromUri(android.net.Uri,android.os.Bundle) -> onPlayFromUri
    void onSkipToQueueItem(long) -> onSkipToQueueItem
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(android.support.v4.media.RatingCompat) -> onSetRating
    void onCustomAction(java.lang.String,android.os.Bundle) -> onCustomAction
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi21 -> android.support.v4.media.session.MediaSessionCompat$Callback$StubApi21:
    android.support.v4.media.session.MediaSessionCompat$Callback this$0 -> this$0
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPlayFromMediaId(java.lang.String,android.os.Bundle) -> onPlayFromMediaId
    void onPlayFromSearch(java.lang.String,android.os.Bundle) -> onPlayFromSearch
    void onSkipToQueueItem(long) -> onSkipToQueueItem
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(java.lang.Object) -> onSetRating
    void onCustomAction(java.lang.String,android.os.Bundle) -> onCustomAction
android.support.v4.media.session.MediaSessionCompat$Callback$StubApi23 -> android.support.v4.media.session.MediaSessionCompat$Callback$StubApi23:
    android.support.v4.media.session.MediaSessionCompat$Callback this$0 -> this$0
    void onPlayFromUri(android.net.Uri,android.os.Bundle) -> onPlayFromUri
android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImpl:
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    void setSessionActivity(android.app.PendingIntent) -> setSessionActivity
    void setMediaButtonReceiver(android.app.PendingIntent) -> setMediaButtonReceiver
    void setQueue(java.util.List) -> setQueue
    void setQueueTitle(java.lang.CharSequence) -> setQueueTitle
    void setRatingType(int) -> setRatingType
    void setExtras(android.os.Bundle) -> setExtras
    java.lang.Object getMediaSession() -> getMediaSession
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21:
    java.lang.Object mSessionObj -> mSessionObj
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> mToken
    android.app.PendingIntent mMediaButtonIntent -> mMediaButtonIntent
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    void setSessionActivity(android.app.PendingIntent) -> setSessionActivity
    void setMediaButtonReceiver(android.app.PendingIntent) -> setMediaButtonReceiver
    void setQueue(java.util.List) -> setQueue
    void setQueueTitle(java.lang.CharSequence) -> setQueueTitle
    void setRatingType(int) -> setRatingType
    void setExtras(android.os.Bundle) -> setExtras
    java.lang.Object getMediaSession() -> getMediaSession
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase:
    android.content.Context mContext -> mContext
    android.content.ComponentName mComponentName -> mComponentName
    android.app.PendingIntent mMediaButtonEventReceiver -> mMediaButtonEventReceiver
    java.lang.Object mRccObj -> mRccObj
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub mStub -> mStub
    android.support.v4.media.session.MediaSessionCompat$Token mToken -> mToken
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler mHandler -> mHandler
    java.lang.String mPackageName -> mPackageName
    java.lang.String mTag -> mTag
    android.media.AudioManager mAudioManager -> mAudioManager
    java.lang.Object mLock -> mLock
    android.os.RemoteCallbackList mControllerCallbacks -> mControllerCallbacks
    boolean mDestroyed -> mDestroyed
    boolean mIsActive -> mIsActive
    boolean mIsRccRegistered -> mIsRccRegistered
    boolean mIsMbrRegistered -> mIsMbrRegistered
    android.support.v4.media.session.MediaSessionCompat$Callback mCallback -> mCallback
    int mFlags -> mFlags
    android.support.v4.media.MediaMetadataCompat mMetadata -> mMetadata
    android.support.v4.media.session.PlaybackStateCompat mState -> mState
    android.app.PendingIntent mSessionActivity -> mSessionActivity
    java.util.List mQueue -> mQueue
    java.lang.CharSequence mQueueTitle -> mQueueTitle
    int mRatingType -> mRatingType
    android.os.Bundle mExtras -> mExtras
    int mVolumeType -> mVolumeType
    int mLocalStream -> mLocalStream
    android.support.v4.media.VolumeProviderCompat mVolumeProvider -> mVolumeProvider
    android.support.v4.media.VolumeProviderCompat$Callback mVolumeCallback -> mVolumeCallback
    void setCallback(android.support.v4.media.session.MediaSessionCompat$Callback,android.os.Handler) -> setCallback
    void setFlags(int) -> setFlags
    void setPlaybackToLocal(int) -> setPlaybackToLocal
    void setPlaybackToRemote(android.support.v4.media.VolumeProviderCompat) -> setPlaybackToRemote
    void setActive(boolean) -> setActive
    boolean isActive() -> isActive
    void sendSessionEvent(java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release() -> release
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    void setPlaybackState(android.support.v4.media.session.PlaybackStateCompat) -> setPlaybackState
    void setMetadata(android.support.v4.media.MediaMetadataCompat) -> setMetadata
    void setSessionActivity(android.app.PendingIntent) -> setSessionActivity
    void setMediaButtonReceiver(android.app.PendingIntent) -> setMediaButtonReceiver
    void setQueue(java.util.List) -> setQueue
    void setQueueTitle(java.lang.CharSequence) -> setQueueTitle
    java.lang.Object getMediaSession() -> getMediaSession
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    void setRatingType(int) -> setRatingType
    void setExtras(android.os.Bundle) -> setExtras
    boolean update() -> update
    void adjustVolume(int,int) -> adjustVolume
    void setVolumeTo(int,int) -> setVolumeTo
    android.support.v4.media.session.PlaybackStateCompat getStateWithUpdatedPosition() -> getStateWithUpdatedPosition
    void sendVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> sendVolumeInfoChanged
    void sendSessionDestroyed() -> sendSessionDestroyed
    void sendEvent(java.lang.String,android.os.Bundle) -> sendEvent
    void sendState(android.support.v4.media.session.PlaybackStateCompat) -> sendState
    void sendMetadata(android.support.v4.media.MediaMetadataCompat) -> sendMetadata
    void sendQueue(java.util.List) -> sendQueue
    void sendQueueTitle(java.lang.CharSequence) -> sendQueueTitle
    android.support.v4.media.VolumeProviderCompat access$300(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$300
    int access$400(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$400
    int access$500(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$500
    void access$600(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,android.support.v4.media.session.ParcelableVolumeInfo) -> access$600
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler access$800(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$800
    int access$900(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$900
    boolean access$1000(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$1000
    android.os.RemoteCallbackList access$1100(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$1100
    java.lang.String access$1200(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$1200
    java.lang.String access$1300(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$1300
    java.lang.Object access$1400(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$1400
    android.app.PendingIntent access$1500(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$1500
    android.media.AudioManager access$1600(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$1600
    void access$1700(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,int,int) -> access$1700
    void access$1800(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase,int,int) -> access$1800
    android.support.v4.media.MediaMetadataCompat access$1900(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$1900
    android.support.v4.media.session.PlaybackStateCompat access$2000(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$2000
    java.util.List access$2100(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$2100
    java.lang.CharSequence access$2200(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$2200
    android.os.Bundle access$2300(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$2300
    int access$2400(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$2400
    android.support.v4.media.session.MediaSessionCompat$Callback access$2500(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$2500
    android.support.v4.media.session.PlaybackStateCompat access$2600(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> access$2600
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$1:
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0 -> this$0
    void onVolumeChanged(android.support.v4.media.VolumeProviderCompat) -> onVolumeChanged
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$2 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$2:
    android.support.v4.media.session.MediaSessionCompat$Callback val$callback -> val$callback
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0 -> this$0
    void onStop() -> onStop
    void onSkipToPrevious() -> onSkipToPrevious
    void onSkipToNext() -> onSkipToNext
    void onSetRating(java.lang.Object) -> onSetRating
    void onSeekTo(long) -> onSeekTo
    void onRewind() -> onRewind
    void onPlay() -> onPlay
    void onPause() -> onPause
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onFastForward() -> onFastForward
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$Command -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$Command:
    java.lang.String command -> command
    android.os.Bundle extras -> extras
    android.os.ResultReceiver stub -> stub
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub:
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0 -> this$0
    void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
    void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getTag() -> getTag
    android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    long getFlags() -> getFlags
    android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    void adjustVolume(int,int,java.lang.String) -> adjustVolume
    void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    void play() -> play
    void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    void skipToQueueItem(long) -> skipToQueueItem
    void pause() -> pause
    void stop() -> stop
    void next() -> next
    void previous() -> previous
    void fastForward() -> fastForward
    void rewind() -> rewind
    void seekTo(long) -> seekTo
    void rate(android.support.v4.media.RatingCompat) -> rate
    void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    java.util.List getQueue() -> getQueue
    java.lang.CharSequence getQueueTitle() -> getQueueTitle
    android.os.Bundle getExtras() -> getExtras
    int getRatingType() -> getRatingType
    boolean isTransportControlEnabled() -> isTransportControlEnabled
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MessageHandler:
    int MSG_PLAY -> MSG_PLAY
    int MSG_PLAY_MEDIA_ID -> MSG_PLAY_MEDIA_ID
    int MSG_PLAY_SEARCH -> MSG_PLAY_SEARCH
    int MSG_SKIP_TO_ITEM -> MSG_SKIP_TO_ITEM
    int MSG_PAUSE -> MSG_PAUSE
    int MSG_STOP -> MSG_STOP
    int MSG_NEXT -> MSG_NEXT
    int MSG_PREVIOUS -> MSG_PREVIOUS
    int MSG_FAST_FORWARD -> MSG_FAST_FORWARD
    int MSG_REWIND -> MSG_REWIND
    int MSG_SEEK_TO -> MSG_SEEK_TO
    int MSG_RATE -> MSG_RATE
    int MSG_CUSTOM_ACTION -> MSG_CUSTOM_ACTION
    int MSG_MEDIA_BUTTON -> MSG_MEDIA_BUTTON
    int MSG_COMMAND -> MSG_COMMAND
    int MSG_ADJUST_VOLUME -> MSG_ADJUST_VOLUME
    int MSG_SET_VOLUME -> MSG_SET_VOLUME
    int MSG_PLAY_URI -> MSG_PLAY_URI
    int KEYCODE_MEDIA_PAUSE -> KEYCODE_MEDIA_PAUSE
    int KEYCODE_MEDIA_PLAY -> KEYCODE_MEDIA_PLAY
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0 -> this$0
    void post(int,java.lang.Object,android.os.Bundle) -> post
    void post(int,java.lang.Object) -> post
    void post(int) -> post
    void post(int,java.lang.Object,int) -> post
    void handleMessage(android.os.Message) -> handleMessage
    void onMediaButtonEvent(android.view.KeyEvent) -> onMediaButtonEvent
android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener -> android.support.v4.media.session.MediaSessionCompat$OnActiveChangeListener:
    void onActiveChanged() -> onActiveChanged
android.support.v4.media.session.MediaSessionCompat$QueueItem -> android.support.v4.media.session.MediaSessionCompat$QueueItem:
    int UNKNOWN_ID -> UNKNOWN_ID
    android.support.v4.media.MediaDescriptionCompat mDescription -> mDescription
    long mId -> mId
    java.lang.Object mItem -> mItem
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.media.MediaDescriptionCompat getDescription() -> getDescription
    long getQueueId() -> getQueueId
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    java.lang.Object getQueueItem() -> getQueueItem
    android.support.v4.media.session.MediaSessionCompat$QueueItem obtain(java.lang.Object) -> obtain
    java.lang.String toString() -> toString
android.support.v4.media.session.MediaSessionCompat$QueueItem$1 -> android.support.v4.media.session.MediaSessionCompat$QueueItem$1:
    android.support.v4.media.session.MediaSessionCompat$QueueItem createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.MediaSessionCompat$QueueItem[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper:
    android.os.ResultReceiver mResultReceiver -> mResultReceiver
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    android.os.ResultReceiver access$700(android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> access$700
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1 -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1:
    android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompat$SessionFlags -> android.support.v4.media.session.MediaSessionCompat$SessionFlags:
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    java.lang.Object mInner -> mInner
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object) -> fromToken
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.Object getToken() -> getToken
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.MediaSessionCompat$Token$1:
    android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.MediaSessionCompatApi14 -> android.support.v4.media.session.MediaSessionCompatApi14:
    int RCC_PLAYSTATE_NONE -> RCC_PLAYSTATE_NONE
    int STATE_NONE -> STATE_NONE
    int STATE_STOPPED -> STATE_STOPPED
    int STATE_PAUSED -> STATE_PAUSED
    int STATE_PLAYING -> STATE_PLAYING
    int STATE_FAST_FORWARDING -> STATE_FAST_FORWARDING
    int STATE_REWINDING -> STATE_REWINDING
    int STATE_BUFFERING -> STATE_BUFFERING
    int STATE_ERROR -> STATE_ERROR
    int STATE_CONNECTING -> STATE_CONNECTING
    int STATE_SKIPPING_TO_PREVIOUS -> STATE_SKIPPING_TO_PREVIOUS
    int STATE_SKIPPING_TO_NEXT -> STATE_SKIPPING_TO_NEXT
    int STATE_SKIPPING_TO_QUEUE_ITEM -> STATE_SKIPPING_TO_QUEUE_ITEM
    long ACTION_STOP -> ACTION_STOP
    long ACTION_PAUSE -> ACTION_PAUSE
    long ACTION_PLAY -> ACTION_PLAY
    long ACTION_REWIND -> ACTION_REWIND
    long ACTION_SKIP_TO_PREVIOUS -> ACTION_SKIP_TO_PREVIOUS
    long ACTION_SKIP_TO_NEXT -> ACTION_SKIP_TO_NEXT
    long ACTION_FAST_FORWARD -> ACTION_FAST_FORWARD
    long ACTION_PLAY_PAUSE -> ACTION_PLAY_PAUSE
    java.lang.String METADATA_KEY_ART -> METADATA_KEY_ART
    java.lang.String METADATA_KEY_ALBUM_ART -> METADATA_KEY_ALBUM_ART
    java.lang.String METADATA_KEY_TITLE -> METADATA_KEY_TITLE
    java.lang.String METADATA_KEY_ARTIST -> METADATA_KEY_ARTIST
    java.lang.String METADATA_KEY_DURATION -> METADATA_KEY_DURATION
    java.lang.String METADATA_KEY_ALBUM -> METADATA_KEY_ALBUM
    java.lang.String METADATA_KEY_AUTHOR -> METADATA_KEY_AUTHOR
    java.lang.String METADATA_KEY_WRITER -> METADATA_KEY_WRITER
    java.lang.String METADATA_KEY_COMPOSER -> METADATA_KEY_COMPOSER
    java.lang.String METADATA_KEY_COMPILATION -> METADATA_KEY_COMPILATION
    java.lang.String METADATA_KEY_DATE -> METADATA_KEY_DATE
    java.lang.String METADATA_KEY_GENRE -> METADATA_KEY_GENRE
    java.lang.String METADATA_KEY_TRACK_NUMBER -> METADATA_KEY_TRACK_NUMBER
    java.lang.String METADATA_KEY_DISC_NUMBER -> METADATA_KEY_DISC_NUMBER
    java.lang.String METADATA_KEY_ALBUM_ARTIST -> METADATA_KEY_ALBUM_ARTIST
    java.lang.Object createRemoteControlClient(android.app.PendingIntent) -> createRemoteControlClient
    void setState(java.lang.Object,int) -> setState
    void setTransportControlFlags(java.lang.Object,long) -> setTransportControlFlags
    void setMetadata(java.lang.Object,android.os.Bundle) -> setMetadata
    void registerRemoteControlClient(android.content.Context,java.lang.Object) -> registerRemoteControlClient
    void unregisterRemoteControlClient(android.content.Context,java.lang.Object) -> unregisterRemoteControlClient
    int getRccStateFromState(int) -> getRccStateFromState
    int getRccTransportControlFlagsFromActions(long) -> getRccTransportControlFlagsFromActions
    void buildOldMetadata(android.os.Bundle,android.media.RemoteControlClient$MetadataEditor) -> buildOldMetadata
android.support.v4.media.session.MediaSessionCompatApi14$Callback -> android.support.v4.media.session.MediaSessionCompatApi14$Callback:
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(java.lang.Object) -> onSetRating
android.support.v4.media.session.MediaSessionCompatApi18 -> android.support.v4.media.session.MediaSessionCompatApi18:
    long ACTION_SEEK_TO -> ACTION_SEEK_TO
    java.lang.Object createPlaybackPositionUpdateListener(android.support.v4.media.session.MediaSessionCompatApi14$Callback) -> createPlaybackPositionUpdateListener
    void registerMediaButtonEventReceiver(android.content.Context,android.app.PendingIntent) -> registerMediaButtonEventReceiver
    void unregisterMediaButtonEventReceiver(android.content.Context,android.app.PendingIntent) -> unregisterMediaButtonEventReceiver
    void setState(java.lang.Object,int,long,float,long) -> setState
    void setTransportControlFlags(java.lang.Object,long) -> setTransportControlFlags
    void setOnPlaybackPositionUpdateListener(java.lang.Object,java.lang.Object) -> setOnPlaybackPositionUpdateListener
    int getRccTransportControlFlagsFromActions(long) -> getRccTransportControlFlagsFromActions
android.support.v4.media.session.MediaSessionCompatApi18$OnPlaybackPositionUpdateListener -> android.support.v4.media.session.MediaSessionCompatApi18$OnPlaybackPositionUpdateListener:
    android.support.v4.media.session.MediaSessionCompatApi14$Callback mCallback -> mCallback
    void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
android.support.v4.media.session.MediaSessionCompatApi19 -> android.support.v4.media.session.MediaSessionCompatApi19:
    long ACTION_SET_RATING -> ACTION_SET_RATING
    java.lang.String METADATA_KEY_USER_RATING -> METADATA_KEY_USER_RATING
    java.lang.String METADATA_KEY_RATING -> METADATA_KEY_RATING
    java.lang.String METADATA_KEY_YEAR -> METADATA_KEY_YEAR
    void setTransportControlFlags(java.lang.Object,long) -> setTransportControlFlags
    java.lang.Object createMetadataUpdateListener(android.support.v4.media.session.MediaSessionCompatApi14$Callback) -> createMetadataUpdateListener
    void setMetadata(java.lang.Object,android.os.Bundle,long) -> setMetadata
    void setOnMetadataUpdateListener(java.lang.Object,java.lang.Object) -> setOnMetadataUpdateListener
    int getRccTransportControlFlagsFromActions(long) -> getRccTransportControlFlagsFromActions
    void addNewMetadata(android.os.Bundle,android.media.RemoteControlClient$MetadataEditor) -> addNewMetadata
android.support.v4.media.session.MediaSessionCompatApi19$OnMetadataUpdateListener -> android.support.v4.media.session.MediaSessionCompatApi19$OnMetadataUpdateListener:
    android.support.v4.media.session.MediaSessionCompatApi14$Callback mCallback -> mCallback
    void onMetadataUpdate(int,java.lang.Object) -> onMetadataUpdate
android.support.v4.media.session.MediaSessionCompatApi21 -> android.support.v4.media.session.MediaSessionCompatApi21:
    java.lang.Object createSession(android.content.Context,java.lang.String) -> createSession
    java.lang.Object verifySession(java.lang.Object) -> verifySession
    java.lang.Object verifyToken(java.lang.Object) -> verifyToken
    java.lang.Object createCallback(android.support.v4.media.session.MediaSessionCompatApi21$Callback) -> createCallback
    void setCallback(java.lang.Object,java.lang.Object,android.os.Handler) -> setCallback
    void setFlags(java.lang.Object,int) -> setFlags
    void setPlaybackToLocal(java.lang.Object,int) -> setPlaybackToLocal
    void setPlaybackToRemote(java.lang.Object,java.lang.Object) -> setPlaybackToRemote
    void setActive(java.lang.Object,boolean) -> setActive
    boolean isActive(java.lang.Object) -> isActive
    void sendSessionEvent(java.lang.Object,java.lang.String,android.os.Bundle) -> sendSessionEvent
    void release(java.lang.Object) -> release
    android.os.Parcelable getSessionToken(java.lang.Object) -> getSessionToken
    void setPlaybackState(java.lang.Object,java.lang.Object) -> setPlaybackState
    void setMetadata(java.lang.Object,java.lang.Object) -> setMetadata
    void setSessionActivity(java.lang.Object,android.app.PendingIntent) -> setSessionActivity
    void setMediaButtonReceiver(java.lang.Object,android.app.PendingIntent) -> setMediaButtonReceiver
    void setQueue(java.lang.Object,java.util.List) -> setQueue
    void setQueueTitle(java.lang.Object,java.lang.CharSequence) -> setQueueTitle
    void setExtras(java.lang.Object,android.os.Bundle) -> setExtras
android.support.v4.media.session.MediaSessionCompatApi21$Callback -> android.support.v4.media.session.MediaSessionCompatApi21$Callback:
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPlayFromMediaId(java.lang.String,android.os.Bundle) -> onPlayFromMediaId
    void onPlayFromSearch(java.lang.String,android.os.Bundle) -> onPlayFromSearch
    void onSkipToQueueItem(long) -> onSkipToQueueItem
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(java.lang.Object) -> onSetRating
    void onCustomAction(java.lang.String,android.os.Bundle) -> onCustomAction
android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy -> android.support.v4.media.session.MediaSessionCompatApi21$CallbackProxy:
    android.support.v4.media.session.MediaSessionCompatApi21$Callback mCallback -> mCallback
    void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> onCommand
    boolean onMediaButtonEvent(android.content.Intent) -> onMediaButtonEvent
    void onPlay() -> onPlay
    void onPlayFromMediaId(java.lang.String,android.os.Bundle) -> onPlayFromMediaId
    void onPlayFromSearch(java.lang.String,android.os.Bundle) -> onPlayFromSearch
    void onSkipToQueueItem(long) -> onSkipToQueueItem
    void onPause() -> onPause
    void onSkipToNext() -> onSkipToNext
    void onSkipToPrevious() -> onSkipToPrevious
    void onFastForward() -> onFastForward
    void onRewind() -> onRewind
    void onStop() -> onStop
    void onSeekTo(long) -> onSeekTo
    void onSetRating(android.media.Rating) -> onSetRating
    void onCustomAction(java.lang.String,android.os.Bundle) -> onCustomAction
android.support.v4.media.session.MediaSessionCompatApi21$QueueItem -> android.support.v4.media.session.MediaSessionCompatApi21$QueueItem:
    java.lang.Object createItem(java.lang.Object,long) -> createItem
    java.lang.Object getDescription(java.lang.Object) -> getDescription
    long getQueueId(java.lang.Object) -> getQueueId
android.support.v4.media.session.MediaSessionCompatApi22 -> android.support.v4.media.session.MediaSessionCompatApi22:
    void setRatingType(java.lang.Object,int) -> setRatingType
android.support.v4.media.session.MediaSessionCompatApi23 -> android.support.v4.media.session.MediaSessionCompatApi23:
    java.lang.Object createCallback(android.support.v4.media.session.MediaSessionCompatApi23$Callback) -> createCallback
android.support.v4.media.session.MediaSessionCompatApi23$Callback -> android.support.v4.media.session.MediaSessionCompatApi23$Callback:
    void onPlayFromUri(android.net.Uri,android.os.Bundle) -> onPlayFromUri
android.support.v4.media.session.MediaSessionCompatApi23$CallbackProxy -> android.support.v4.media.session.MediaSessionCompatApi23$CallbackProxy:
    void onPlayFromUri(android.net.Uri,android.os.Bundle) -> onPlayFromUri
android.support.v4.media.session.MediaSessionCompatApi8 -> android.support.v4.media.session.MediaSessionCompatApi8:
    void registerMediaButtonEventReceiver(android.content.Context,android.content.ComponentName) -> registerMediaButtonEventReceiver
    void unregisterMediaButtonEventReceiver(android.content.Context,android.content.ComponentName) -> unregisterMediaButtonEventReceiver
android.support.v4.media.session.ParcelableVolumeInfo -> android.support.v4.media.session.ParcelableVolumeInfo:
    int volumeType -> volumeType
    int audioStream -> audioStream
    int controlType -> controlType
    int maxVolume -> maxVolume
    int currentVolume -> currentVolume
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.ParcelableVolumeInfo$1 -> android.support.v4.media.session.ParcelableVolumeInfo$1:
    android.support.v4.media.session.ParcelableVolumeInfo createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.ParcelableVolumeInfo[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    long ACTION_STOP -> ACTION_STOP
    long ACTION_PAUSE -> ACTION_PAUSE
    long ACTION_PLAY -> ACTION_PLAY
    long ACTION_REWIND -> ACTION_REWIND
    long ACTION_SKIP_TO_PREVIOUS -> ACTION_SKIP_TO_PREVIOUS
    long ACTION_SKIP_TO_NEXT -> ACTION_SKIP_TO_NEXT
    long ACTION_FAST_FORWARD -> ACTION_FAST_FORWARD
    long ACTION_SET_RATING -> ACTION_SET_RATING
    long ACTION_SEEK_TO -> ACTION_SEEK_TO
    long ACTION_PLAY_PAUSE -> ACTION_PLAY_PAUSE
    long ACTION_PLAY_FROM_MEDIA_ID -> ACTION_PLAY_FROM_MEDIA_ID
    long ACTION_PLAY_FROM_SEARCH -> ACTION_PLAY_FROM_SEARCH
    long ACTION_SKIP_TO_QUEUE_ITEM -> ACTION_SKIP_TO_QUEUE_ITEM
    long ACTION_PLAY_FROM_URI -> ACTION_PLAY_FROM_URI
    int STATE_NONE -> STATE_NONE
    int STATE_STOPPED -> STATE_STOPPED
    int STATE_PAUSED -> STATE_PAUSED
    int STATE_PLAYING -> STATE_PLAYING
    int STATE_FAST_FORWARDING -> STATE_FAST_FORWARDING
    int STATE_REWINDING -> STATE_REWINDING
    int STATE_BUFFERING -> STATE_BUFFERING
    int STATE_ERROR -> STATE_ERROR
    int STATE_CONNECTING -> STATE_CONNECTING
    int STATE_SKIPPING_TO_PREVIOUS -> STATE_SKIPPING_TO_PREVIOUS
    int STATE_SKIPPING_TO_NEXT -> STATE_SKIPPING_TO_NEXT
    int STATE_SKIPPING_TO_QUEUE_ITEM -> STATE_SKIPPING_TO_QUEUE_ITEM
    long PLAYBACK_POSITION_UNKNOWN -> PLAYBACK_POSITION_UNKNOWN
    int mState -> mState
    long mPosition -> mPosition
    long mBufferedPosition -> mBufferedPosition
    float mSpeed -> mSpeed
    long mActions -> mActions
    java.lang.CharSequence mErrorMessage -> mErrorMessage
    long mUpdateTime -> mUpdateTime
    java.util.List mCustomActions -> mCustomActions
    long mActiveItemId -> mActiveItemId
    android.os.Bundle mExtras -> mExtras
    java.lang.Object mStateObj -> mStateObj
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String toString() -> toString
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int getState() -> getState
    long getPosition() -> getPosition
    long getBufferedPosition() -> getBufferedPosition
    float getPlaybackSpeed() -> getPlaybackSpeed
    long getActions() -> getActions
    java.util.List getCustomActions() -> getCustomActions
    java.lang.CharSequence getErrorMessage() -> getErrorMessage
    long getLastPositionUpdateTime() -> getLastPositionUpdateTime
    long getActiveQueueItemId() -> getActiveQueueItemId
    android.os.Bundle getExtras() -> getExtras
    android.support.v4.media.session.PlaybackStateCompat fromPlaybackState(java.lang.Object) -> fromPlaybackState
    java.lang.Object getPlaybackState() -> getPlaybackState
    int access$300(android.support.v4.media.session.PlaybackStateCompat) -> access$300
    long access$400(android.support.v4.media.session.PlaybackStateCompat) -> access$400
    float access$500(android.support.v4.media.session.PlaybackStateCompat) -> access$500
    long access$600(android.support.v4.media.session.PlaybackStateCompat) -> access$600
    long access$700(android.support.v4.media.session.PlaybackStateCompat) -> access$700
    long access$800(android.support.v4.media.session.PlaybackStateCompat) -> access$800
    java.lang.CharSequence access$900(android.support.v4.media.session.PlaybackStateCompat) -> access$900
    java.util.List access$1000(android.support.v4.media.session.PlaybackStateCompat) -> access$1000
    long access$1100(android.support.v4.media.session.PlaybackStateCompat) -> access$1100
    android.os.Bundle access$1200(android.support.v4.media.session.PlaybackStateCompat) -> access$1200
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.PlaybackStateCompat$1:
    android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.PlaybackStateCompat[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.PlaybackStateCompat$Actions -> android.support.v4.media.session.PlaybackStateCompat$Actions:
android.support.v4.media.session.PlaybackStateCompat$Builder -> android.support.v4.media.session.PlaybackStateCompat$Builder:
    java.util.List mCustomActions -> mCustomActions
    int mState -> mState
    long mPosition -> mPosition
    long mBufferedPosition -> mBufferedPosition
    float mRate -> mRate
    long mActions -> mActions
    java.lang.CharSequence mErrorMessage -> mErrorMessage
    long mUpdateTime -> mUpdateTime
    long mActiveItemId -> mActiveItemId
    android.os.Bundle mExtras -> mExtras
    android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float) -> setState
    android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float,long) -> setState
    android.support.v4.media.session.PlaybackStateCompat$Builder setBufferedPosition(long) -> setBufferedPosition
    android.support.v4.media.session.PlaybackStateCompat$Builder setActions(long) -> setActions
    android.support.v4.media.session.PlaybackStateCompat$Builder addCustomAction(java.lang.String,java.lang.String,int) -> addCustomAction
    android.support.v4.media.session.PlaybackStateCompat$Builder addCustomAction(android.support.v4.media.session.PlaybackStateCompat$CustomAction) -> addCustomAction
    android.support.v4.media.session.PlaybackStateCompat$Builder setActiveQueueItemId(long) -> setActiveQueueItemId
    android.support.v4.media.session.PlaybackStateCompat$Builder setErrorMessage(java.lang.CharSequence) -> setErrorMessage
    android.support.v4.media.session.PlaybackStateCompat$Builder setExtras(android.os.Bundle) -> setExtras
    android.support.v4.media.session.PlaybackStateCompat build() -> build
android.support.v4.media.session.PlaybackStateCompat$CustomAction -> android.support.v4.media.session.PlaybackStateCompat$CustomAction:
    java.lang.String mAction -> mAction
    java.lang.CharSequence mName -> mName
    int mIcon -> mIcon
    android.os.Bundle mExtras -> mExtras
    java.lang.Object mCustomActionObj -> mCustomActionObj
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int describeContents() -> describeContents
    android.support.v4.media.session.PlaybackStateCompat$CustomAction fromCustomAction(java.lang.Object) -> fromCustomAction
    java.lang.Object getCustomAction() -> getCustomAction
    java.lang.String getAction() -> getAction
    java.lang.CharSequence getName() -> getName
    int getIcon() -> getIcon
    android.os.Bundle getExtras() -> getExtras
    java.lang.String toString() -> toString
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1 -> android.support.v4.media.session.PlaybackStateCompat$CustomAction$1:
    android.support.v4.media.session.PlaybackStateCompat$CustomAction createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.media.session.PlaybackStateCompat$CustomAction[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder -> android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder:
    java.lang.String mAction -> mAction
    java.lang.CharSequence mName -> mName
    int mIcon -> mIcon
    android.os.Bundle mExtras -> mExtras
    android.support.v4.media.session.PlaybackStateCompat$CustomAction$Builder setExtras(android.os.Bundle) -> setExtras
    android.support.v4.media.session.PlaybackStateCompat$CustomAction build() -> build
android.support.v4.media.session.PlaybackStateCompat$State -> android.support.v4.media.session.PlaybackStateCompat$State:
android.support.v4.media.session.PlaybackStateCompatApi21 -> android.support.v4.media.session.PlaybackStateCompatApi21:
    int getState(java.lang.Object) -> getState
    long getPosition(java.lang.Object) -> getPosition
    long getBufferedPosition(java.lang.Object) -> getBufferedPosition
    float getPlaybackSpeed(java.lang.Object) -> getPlaybackSpeed
    long getActions(java.lang.Object) -> getActions
    java.lang.CharSequence getErrorMessage(java.lang.Object) -> getErrorMessage
    long getLastPositionUpdateTime(java.lang.Object) -> getLastPositionUpdateTime
    java.util.List getCustomActions(java.lang.Object) -> getCustomActions
    long getActiveQueueItemId(java.lang.Object) -> getActiveQueueItemId
    java.lang.Object newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long) -> newInstance
android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction -> android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction:
    java.lang.String getAction(java.lang.Object) -> getAction
    java.lang.CharSequence getName(java.lang.Object) -> getName
    int getIcon(java.lang.Object) -> getIcon
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    java.lang.Object newInstance(java.lang.String,java.lang.CharSequence,int,android.os.Bundle) -> newInstance
android.support.v4.media.session.PlaybackStateCompatApi22 -> android.support.v4.media.session.PlaybackStateCompatApi22:
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    java.lang.Object newInstance(int,long,long,float,long,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle) -> newInstance
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> IMPL
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatGingerbread -> android.support.v4.net.ConnectivityManagerCompatGingerbread:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatHoneycombMR2 -> android.support.v4.net.ConnectivityManagerCompatHoneycombMR2:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.ConnectivityManagerCompatJellyBean -> android.support.v4.net.ConnectivityManagerCompatJellyBean:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> IMPL
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$1 -> android.support.v4.net.TrafficStatsCompat$1:
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl:
    java.lang.ThreadLocal mThreadSocketTags -> mThreadSocketTags
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> this$0
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags:
    int statsTag -> statsTag
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompatIcs -> android.support.v4.net.TrafficStatsCompatIcs:
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.os.AsyncTaskCompat -> android.support.v4.os.AsyncTaskCompat:
    android.os.AsyncTask executeParallel(android.os.AsyncTask,java.lang.Object[]) -> executeParallel
android.support.v4.os.AsyncTaskCompatHoneycomb -> android.support.v4.os.AsyncTaskCompatHoneycomb:
    void executeParallel(android.os.AsyncTask,java.lang.Object[]) -> executeParallel
android.support.v4.os.CancellationSignal -> android.support.v4.os.CancellationSignal:
    boolean mIsCanceled -> mIsCanceled
    android.support.v4.os.CancellationSignal$OnCancelListener mOnCancelListener -> mOnCancelListener
    java.lang.Object mCancellationSignalObj -> mCancellationSignalObj
    boolean mCancelInProgress -> mCancelInProgress
    boolean isCanceled() -> isCanceled
    void throwIfCanceled() -> throwIfCanceled
    void cancel() -> cancel
    void setOnCancelListener(android.support.v4.os.CancellationSignal$OnCancelListener) -> setOnCancelListener
    java.lang.Object getCancellationSignalObject() -> getCancellationSignalObject
    void waitForCancelFinishedLocked() -> waitForCancelFinishedLocked
android.support.v4.os.CancellationSignal$OnCancelListener -> android.support.v4.os.CancellationSignal$OnCancelListener:
    void onCancel() -> onCancel
android.support.v4.os.CancellationSignalCompatJellybean -> android.support.v4.os.CancellationSignalCompatJellybean:
    java.lang.Object create() -> create
    void cancel(java.lang.Object) -> cancel
android.support.v4.os.EnvironmentCompat -> android.support.v4.os.EnvironmentCompat:
    java.lang.String TAG -> TAG
    java.lang.String MEDIA_UNKNOWN -> MEDIA_UNKNOWN
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.EnvironmentCompatKitKat -> android.support.v4.os.EnvironmentCompatKitKat:
    java.lang.String getStorageState(java.io.File) -> getStorageState
android.support.v4.os.OperationCanceledException -> android.support.v4.os.OperationCanceledException:
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.os.ParcelableCompat$CompatCreator:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> mCallbacks
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> instantiate
android.support.v4.os.TraceCompat -> android.support.v4.os.TraceCompat:
    void beginSection(java.lang.String) -> beginSection
    void endSection() -> endSection
android.support.v4.os.TraceJellybeanMR2 -> android.support.v4.os.TraceJellybeanMR2:
    void beginSection(java.lang.String) -> beginSection
    void endSection() -> endSection
android.support.v4.print.PrintHelper -> android.support.v4.print.PrintHelper:
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    android.support.v4.print.PrintHelper$PrintHelperVersionImpl mImpl -> mImpl
    boolean systemSupportsPrint() -> systemSupportsPrint
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
android.support.v4.print.PrintHelper$1 -> android.support.v4.print.PrintHelper$1:
android.support.v4.print.PrintHelper$OnPrintFinishCallback -> android.support.v4.print.PrintHelper$OnPrintFinishCallback:
    void onFinish() -> onFinish
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl:
    android.support.v4.print.PrintHelperKitkat mPrintHelper -> mPrintHelper
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$1 -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$1:
    android.support.v4.print.PrintHelper$OnPrintFinishCallback val$callback -> val$callback
    android.support.v4.print.PrintHelper$PrintHelperKitkatImpl this$0 -> this$0
    void onFinish() -> onFinish
android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$2 -> android.support.v4.print.PrintHelper$PrintHelperKitkatImpl$2:
    android.support.v4.print.PrintHelper$OnPrintFinishCallback val$callback -> val$callback
    android.support.v4.print.PrintHelper$PrintHelperKitkatImpl this$0 -> this$0
    void onFinish() -> onFinish
android.support.v4.print.PrintHelper$PrintHelperStubImpl -> android.support.v4.print.PrintHelper$PrintHelperStubImpl:
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getColorMode() -> getColorMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getScaleMode() -> getScaleMode
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
android.support.v4.print.PrintHelper$PrintHelperVersionImpl -> android.support.v4.print.PrintHelper$PrintHelperVersionImpl:
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    int getColorMode() -> getColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
android.support.v4.print.PrintHelperKitkat -> android.support.v4.print.PrintHelperKitkat:
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_PRINT_SIZE -> MAX_PRINT_SIZE
    android.content.Context mContext -> mContext
    android.graphics.BitmapFactory$Options mDecodeOptions -> mDecodeOptions
    java.lang.Object mLock -> mLock
    int SCALE_MODE_FIT -> SCALE_MODE_FIT
    int SCALE_MODE_FILL -> SCALE_MODE_FILL
    int ORIENTATION_LANDSCAPE -> ORIENTATION_LANDSCAPE
    int ORIENTATION_PORTRAIT -> ORIENTATION_PORTRAIT
    int COLOR_MODE_MONOCHROME -> COLOR_MODE_MONOCHROME
    int COLOR_MODE_COLOR -> COLOR_MODE_COLOR
    int mScaleMode -> mScaleMode
    int mColorMode -> mColorMode
    int mOrientation -> mOrientation
    void setScaleMode(int) -> setScaleMode
    int getScaleMode() -> getScaleMode
    void setColorMode(int) -> setColorMode
    void setOrientation(int) -> setOrientation
    int getOrientation() -> getOrientation
    int getColorMode() -> getColorMode
    void printBitmap(java.lang.String,android.graphics.Bitmap,android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback) -> printBitmap
    android.graphics.Matrix getMatrix(int,int,android.graphics.RectF,int) -> getMatrix
    void printBitmap(java.lang.String,android.net.Uri,android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback) -> printBitmap
    android.graphics.Bitmap loadConstrainedBitmap(android.net.Uri,int) -> loadConstrainedBitmap
    android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options) -> loadBitmap
    android.graphics.Bitmap convertBitmapForColorMode(android.graphics.Bitmap,int) -> convertBitmapForColorMode
    android.graphics.Bitmap access$000(android.support.v4.print.PrintHelperKitkat,android.graphics.Bitmap,int) -> access$000
    android.graphics.Matrix access$100(android.support.v4.print.PrintHelperKitkat,int,int,android.graphics.RectF,int) -> access$100
    android.graphics.Bitmap access$300(android.support.v4.print.PrintHelperKitkat,android.net.Uri,int) -> access$300
    java.lang.Object access$400(android.support.v4.print.PrintHelperKitkat) -> access$400
android.support.v4.print.PrintHelperKitkat$1 -> android.support.v4.print.PrintHelperKitkat$1:
    android.print.PrintAttributes mAttributes -> mAttributes
    java.lang.String val$jobName -> val$jobName
    android.graphics.Bitmap val$bitmap -> val$bitmap
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback val$callback -> val$callback
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
    void onFinish() -> onFinish
android.support.v4.print.PrintHelperKitkat$2 -> android.support.v4.print.PrintHelperKitkat$2:
    android.print.PrintAttributes mAttributes -> mAttributes
    android.os.AsyncTask mLoadBitmap -> mLoadBitmap
    android.graphics.Bitmap mBitmap -> mBitmap
    java.lang.String val$jobName -> val$jobName
    android.net.Uri val$imageFile -> val$imageFile
    android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback val$callback -> val$callback
    int val$fittingMode -> val$fittingMode
    android.support.v4.print.PrintHelperKitkat this$0 -> this$0
    void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    void cancelLoad() -> cancelLoad
    void onFinish() -> onFinish
    void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
    void access$200(android.support.v4.print.PrintHelperKitkat$2) -> access$200
android.support.v4.print.PrintHelperKitkat$2$1 -> android.support.v4.print.PrintHelperKitkat$2$1:
    android.os.CancellationSignal val$cancellationSignal -> val$cancellationSignal
    android.print.PrintAttributes val$newPrintAttributes -> val$newPrintAttributes
    android.print.PrintAttributes val$oldPrintAttributes -> val$oldPrintAttributes
    android.print.PrintDocumentAdapter$LayoutResultCallback val$layoutResultCallback -> val$layoutResultCallback
    android.support.v4.print.PrintHelperKitkat$2 this$1 -> this$1
    void onPreExecute() -> onPreExecute
    android.graphics.Bitmap doInBackground(android.net.Uri[]) -> doInBackground
    void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    void onCancelled(android.graphics.Bitmap) -> onCancelled
    void onCancelled(java.lang.Object) -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
android.support.v4.print.PrintHelperKitkat$2$1$1 -> android.support.v4.print.PrintHelperKitkat$2$1$1:
    android.support.v4.print.PrintHelperKitkat$2$1 this$2 -> this$2
    void onCancel() -> onCancel
android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback -> android.support.v4.print.PrintHelperKitkat$OnPrintFinishCallback:
    void onFinish() -> onFinish
android.support.v4.provider.DocumentFile -> android.support.v4.provider.DocumentFile:
    java.lang.String TAG -> TAG
    android.support.v4.provider.DocumentFile mParent -> mParent
    android.support.v4.provider.DocumentFile fromFile(java.io.File) -> fromFile
    android.support.v4.provider.DocumentFile fromSingleUri(android.content.Context,android.net.Uri) -> fromSingleUri
    android.support.v4.provider.DocumentFile fromTreeUri(android.content.Context,android.net.Uri) -> fromTreeUri
    boolean isDocumentUri(android.content.Context,android.net.Uri) -> isDocumentUri
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    android.support.v4.provider.DocumentFile getParentFile() -> getParentFile
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    android.support.v4.provider.DocumentFile findFile(java.lang.String) -> findFile
    boolean renameTo(java.lang.String) -> renameTo
android.support.v4.provider.DocumentsContractApi19 -> android.support.v4.provider.DocumentsContractApi19:
    java.lang.String TAG -> TAG
    boolean isDocumentUri(android.content.Context,android.net.Uri) -> isDocumentUri
    java.lang.String getName(android.content.Context,android.net.Uri) -> getName
    java.lang.String getRawType(android.content.Context,android.net.Uri) -> getRawType
    java.lang.String getType(android.content.Context,android.net.Uri) -> getType
    boolean isDirectory(android.content.Context,android.net.Uri) -> isDirectory
    boolean isFile(android.content.Context,android.net.Uri) -> isFile
    long lastModified(android.content.Context,android.net.Uri) -> lastModified
    long length(android.content.Context,android.net.Uri) -> length
    boolean canRead(android.content.Context,android.net.Uri) -> canRead
    boolean canWrite(android.content.Context,android.net.Uri) -> canWrite
    boolean delete(android.content.Context,android.net.Uri) -> delete
    boolean exists(android.content.Context,android.net.Uri) -> exists
    java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String) -> queryForString
    int queryForInt(android.content.Context,android.net.Uri,java.lang.String,int) -> queryForInt
    long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long) -> queryForLong
    void closeQuietly(java.lang.AutoCloseable) -> closeQuietly
android.support.v4.provider.DocumentsContractApi21 -> android.support.v4.provider.DocumentsContractApi21:
    java.lang.String TAG -> TAG
    android.net.Uri createFile(android.content.Context,android.net.Uri,java.lang.String,java.lang.String) -> createFile
    android.net.Uri createDirectory(android.content.Context,android.net.Uri,java.lang.String) -> createDirectory
    android.net.Uri prepareTreeUri(android.net.Uri) -> prepareTreeUri
    android.net.Uri[] listFiles(android.content.Context,android.net.Uri) -> listFiles
    android.net.Uri renameTo(android.content.Context,android.net.Uri,java.lang.String) -> renameTo
    void closeQuietly(java.lang.AutoCloseable) -> closeQuietly
android.support.v4.provider.RawDocumentFile -> android.support.v4.provider.RawDocumentFile:
    java.io.File mFile -> mFile
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    boolean renameTo(java.lang.String) -> renameTo
    java.lang.String getTypeForName(java.lang.String) -> getTypeForName
    boolean deleteContents(java.io.File) -> deleteContents
android.support.v4.provider.SingleDocumentFile -> android.support.v4.provider.SingleDocumentFile:
    android.content.Context mContext -> mContext
    android.net.Uri mUri -> mUri
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    boolean renameTo(java.lang.String) -> renameTo
android.support.v4.provider.TreeDocumentFile -> android.support.v4.provider.TreeDocumentFile:
    android.content.Context mContext -> mContext
    android.net.Uri mUri -> mUri
    android.support.v4.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    android.support.v4.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    android.net.Uri getUri() -> getUri
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    boolean isDirectory() -> isDirectory
    boolean isFile() -> isFile
    long lastModified() -> lastModified
    long length() -> length
    boolean canRead() -> canRead
    boolean canWrite() -> canWrite
    boolean delete() -> delete
    boolean exists() -> exists
    android.support.v4.provider.DocumentFile[] listFiles() -> listFiles
    boolean renameTo(java.lang.String) -> renameTo
android.support.v4.speech.tts.TextToSpeechICS -> android.support.v4.speech.tts.TextToSpeechICS:
    java.lang.String TAG -> TAG
    android.speech.tts.TextToSpeech construct(android.content.Context,android.speech.tts.TextToSpeech$OnInitListener,java.lang.String) -> construct
android.support.v4.speech.tts.TextToSpeechICSMR1 -> android.support.v4.speech.tts.TextToSpeechICSMR1:
    java.lang.String KEY_FEATURE_EMBEDDED_SYNTHESIS -> KEY_FEATURE_EMBEDDED_SYNTHESIS
    java.lang.String KEY_FEATURE_NETWORK_SYNTHESIS -> KEY_FEATURE_NETWORK_SYNTHESIS
    java.util.Set getFeatures(android.speech.tts.TextToSpeech,java.util.Locale) -> getFeatures
    void setUtteranceProgressListener(android.speech.tts.TextToSpeech,android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1) -> setUtteranceProgressListener
android.support.v4.speech.tts.TextToSpeechICSMR1$1 -> android.support.v4.speech.tts.TextToSpeechICSMR1$1:
    android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1 val$listener -> val$listener
    void onStart(java.lang.String) -> onStart
    void onError(java.lang.String) -> onError
    void onDone(java.lang.String) -> onDone
android.support.v4.speech.tts.TextToSpeechICSMR1$2 -> android.support.v4.speech.tts.TextToSpeechICSMR1$2:
    android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1 val$listener -> val$listener
    void onUtteranceCompleted(java.lang.String) -> onUtteranceCompleted
android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1 -> android.support.v4.speech.tts.TextToSpeechICSMR1$UtteranceProgressListenerICSMR1:
    void onDone(java.lang.String) -> onDone
    void onError(java.lang.String) -> onError
    void onStart(java.lang.String) -> onStart
android.support.v4.text.BidiFormatter -> android.support.v4.text.BidiFormatter:
    android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> DEFAULT_TEXT_DIRECTION_HEURISTIC
    char LRE -> LRE
    char RLE -> RLE
    char PDF -> PDF
    char LRM -> LRM
    char RLM -> RLM
    java.lang.String LRM_STRING -> LRM_STRING
    java.lang.String RLM_STRING -> RLM_STRING
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    int FLAG_STEREO_RESET -> FLAG_STEREO_RESET
    int DEFAULT_FLAGS -> DEFAULT_FLAGS
    android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE -> DEFAULT_LTR_INSTANCE
    android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE -> DEFAULT_RTL_INSTANCE
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> mDefaultTextDirectionHeuristicCompat
    int DIR_LTR -> DIR_LTR
    int DIR_UNKNOWN -> DIR_UNKNOWN
    int DIR_RTL -> DIR_RTL
    android.support.v4.text.BidiFormatter getInstance() -> getInstance
    android.support.v4.text.BidiFormatter getInstance(boolean) -> getInstance
    android.support.v4.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    boolean isRtlContext() -> isRtlContext
    boolean getStereoReset() -> getStereoReset
    java.lang.String markAfter(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markAfter
    java.lang.String markBefore(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> markBefore
    boolean isRtl(java.lang.String) -> isRtl
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    int getExitDir(java.lang.String) -> getExitDir
    int getEntryDir(java.lang.String) -> getEntryDir
    boolean access$000(java.util.Locale) -> access$000
    android.support.v4.text.TextDirectionHeuristicCompat access$100() -> access$100
    android.support.v4.text.BidiFormatter access$200() -> access$200
    android.support.v4.text.BidiFormatter access$300() -> access$300
android.support.v4.text.BidiFormatter$1 -> android.support.v4.text.BidiFormatter$1:
android.support.v4.text.BidiFormatter$Builder -> android.support.v4.text.BidiFormatter$Builder:
    boolean mIsRtlContext -> mIsRtlContext
    int mFlags -> mFlags
    android.support.v4.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> mTextDirectionHeuristicCompat
    void initialize(boolean) -> initialize
    android.support.v4.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
    android.support.v4.text.BidiFormatter$Builder setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    android.support.v4.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    android.support.v4.text.BidiFormatter build() -> build
android.support.v4.text.BidiFormatter$DirectionalityEstimator -> android.support.v4.text.BidiFormatter$DirectionalityEstimator:
    int DIR_TYPE_CACHE_SIZE -> DIR_TYPE_CACHE_SIZE
    byte[] DIR_TYPE_CACHE -> DIR_TYPE_CACHE
    java.lang.String text -> text
    boolean isHtml -> isHtml
    int length -> length
    int charIndex -> charIndex
    char lastChar -> lastChar
    int getEntryDir() -> getEntryDir
    int getExitDir() -> getExitDir
    byte getCachedDirectionality(char) -> getCachedDirectionality
    byte dirTypeForward() -> dirTypeForward
    byte dirTypeBackward() -> dirTypeBackward
    byte skipTagForward() -> skipTagForward
    byte skipTagBackward() -> skipTagBackward
    byte skipEntityForward() -> skipEntityForward
    byte skipEntityBackward() -> skipEntityBackward
android.support.v4.text.ICUCompat -> android.support.v4.text.ICUCompat:
    android.support.v4.text.ICUCompat$ICUCompatImpl IMPL -> IMPL
    java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
android.support.v4.text.ICUCompat$ICUCompatImpl -> android.support.v4.text.ICUCompat$ICUCompatImpl:
    java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
android.support.v4.text.ICUCompat$ICUCompatImplBase -> android.support.v4.text.ICUCompat$ICUCompatImplBase:
    java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
android.support.v4.text.ICUCompat$ICUCompatImplIcs -> android.support.v4.text.ICUCompat$ICUCompatImplIcs:
    java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
android.support.v4.text.ICUCompat$ICUCompatImplLollipop -> android.support.v4.text.ICUCompat$ICUCompatImplLollipop:
    java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
android.support.v4.text.ICUCompatApi23 -> android.support.v4.text.ICUCompatApi23:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sAddLikelySubtagsMethod -> sAddLikelySubtagsMethod
    java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
android.support.v4.text.ICUCompatIcs -> android.support.v4.text.ICUCompatIcs:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sGetScriptMethod -> sGetScriptMethod
    java.lang.reflect.Method sAddLikelySubtagsMethod -> sAddLikelySubtagsMethod
    java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.util.Locale) -> addLikelySubtags
android.support.v4.text.TextDirectionHeuristicCompat -> android.support.v4.text.TextDirectionHeuristicCompat:
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat -> android.support.v4.text.TextDirectionHeuristicsCompat:
    android.support.v4.text.TextDirectionHeuristicCompat LTR -> LTR
    android.support.v4.text.TextDirectionHeuristicCompat RTL -> RTL
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> FIRSTSTRONG_LTR
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> FIRSTSTRONG_RTL
    android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR -> ANYRTL_LTR
    android.support.v4.text.TextDirectionHeuristicCompat LOCALE -> LOCALE
    int STATE_TRUE -> STATE_TRUE
    int STATE_FALSE -> STATE_FALSE
    int STATE_UNKNOWN -> STATE_UNKNOWN
    int isRtlText(int) -> isRtlText
    int isRtlTextOrFormat(int) -> isRtlTextOrFormat
    int access$100(int) -> access$100
    int access$200(int) -> access$200
android.support.v4.text.TextDirectionHeuristicsCompat$1 -> android.support.v4.text.TextDirectionHeuristicsCompat$1:
android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong:
    boolean mLookForRtl -> mLookForRtl
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> INSTANCE_RTL
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR -> INSTANCE_LTR
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong -> android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong:
    android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> INSTANCE
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm:
    int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> mAlgorithm
    boolean defaultIsRtl() -> defaultIsRtl
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
    boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    boolean mDefaultIsRtl -> mDefaultIsRtl
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> INSTANCE
    boolean defaultIsRtl() -> defaultIsRtl
android.support.v4.text.TextUtilsCompat -> android.support.v4.text.TextUtilsCompat:
    android.support.v4.text.TextUtilsCompat$TextUtilsCompatImpl IMPL -> IMPL
    java.util.Locale ROOT -> ROOT
    java.lang.String ARAB_SCRIPT_SUBTAG -> ARAB_SCRIPT_SUBTAG
    java.lang.String HEBR_SCRIPT_SUBTAG -> HEBR_SCRIPT_SUBTAG
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    java.lang.String access$000() -> access$000
    java.lang.String access$100() -> access$100
android.support.v4.text.TextUtilsCompat$1 -> android.support.v4.text.TextUtilsCompat$1:
android.support.v4.text.TextUtilsCompat$TextUtilsCompatImpl -> android.support.v4.text.TextUtilsCompat$TextUtilsCompatImpl:
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
android.support.v4.text.TextUtilsCompat$TextUtilsCompatJellybeanMr1Impl -> android.support.v4.text.TextUtilsCompat$TextUtilsCompatJellybeanMr1Impl:
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
android.support.v4.text.TextUtilsCompatJellybeanMr1 -> android.support.v4.text.TextUtilsCompatJellybeanMr1:
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
android.support.v4.util.ArrayMap -> android.support.v4.util.ArrayMap:
    android.support.v4.util.MapCollections mCollections -> mCollections
    android.support.v4.util.MapCollections getCollection() -> getCollection
    boolean containsAll(java.util.Collection) -> containsAll
    void putAll(java.util.Map) -> putAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.util.ArrayMap$1:
    android.support.v4.util.ArrayMap this$0 -> this$0
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> mBaseName
    java.io.File mBackupName -> mBackupName
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> sync
android.support.v4.util.CircularArray -> android.support.v4.util.CircularArray:
    java.lang.Object[] mElements -> mElements
    int mHead -> mHead
    int mTail -> mTail
    int mCapacityBitmask -> mCapacityBitmask
    void doubleCapacity() -> doubleCapacity
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    java.lang.Object popFirst() -> popFirst
    java.lang.Object popLast() -> popLast
    void clear() -> clear
    void removeFromStart(int) -> removeFromStart
    void removeFromEnd(int) -> removeFromEnd
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object get(int) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
android.support.v4.util.CircularIntArray -> android.support.v4.util.CircularIntArray:
    int[] mElements -> mElements
    int mHead -> mHead
    int mTail -> mTail
    int mCapacityBitmask -> mCapacityBitmask
    void doubleCapacity() -> doubleCapacity
    void addFirst(int) -> addFirst
    void addLast(int) -> addLast
    int popFirst() -> popFirst
    int popLast() -> popLast
    void clear() -> clear
    void removeFromStart(int) -> removeFromStart
    void removeFromEnd(int) -> removeFromEnd
    int getFirst() -> getFirst
    int getLast() -> getLast
    int get(int) -> get
    int size() -> size
    boolean isEmpty() -> isEmpty
android.support.v4.util.ContainerHelpers -> android.support.v4.util.ContainerHelpers:
    int[] EMPTY_INTS -> EMPTY_INTS
    long[] EMPTY_LONGS -> EMPTY_LONGS
    java.lang.Object[] EMPTY_OBJECTS -> EMPTY_OBJECTS
    int idealIntArraySize(int) -> idealIntArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    int idealByteArraySize(int) -> idealByteArraySize
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int binarySearch(int[],int,int) -> binarySearch
    int binarySearch(long[],int,long) -> binarySearch
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> mTag
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    long[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> map
    int size -> size
    int maxSize -> maxSize
    int putCount -> putCount
    int createCount -> createCount
    int evictionCount -> evictionCount
    int hitCount -> hitCount
    int missCount -> missCount
    void resize(int) -> resize
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.MapCollections -> android.support.v4.util.MapCollections:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> mEntrySet
    android.support.v4.util.MapCollections$KeySet mKeySet -> mKeySet
    android.support.v4.util.MapCollections$ValuesCollection mValues -> mValues
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    java.util.Set getEntrySet() -> getEntrySet
    java.util.Set getKeySet() -> getKeySet
    java.util.Collection getValues() -> getValues
    int colGetSize() -> colGetSize
    java.lang.Object colGetEntry(int,int) -> colGetEntry
    int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    java.util.Map colGetMap() -> colGetMap
    void colPut(java.lang.Object,java.lang.Object) -> colPut
    java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
    void colRemoveAt(int) -> colRemoveAt
    void colClear() -> colClear
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.util.MapCollections$ArrayIterator:
    int mOffset -> mOffset
    int mSize -> mSize
    int mIndex -> mIndex
    boolean mCanRemove -> mCanRemove
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.util.MapCollections$EntrySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.util.Map$Entry) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.util.MapCollections$KeySet:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.util.MapCollections$MapIterator:
    int mEnd -> mEnd
    int mIndex -> mIndex
    boolean mEntryValid -> mEntryValid
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.util.MapCollections$ValuesCollection:
    android.support.v4.util.MapCollections this$0 -> this$0
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.Pair -> android.support.v4.util.Pair:
    java.lang.Object first -> first
    java.lang.Object second -> second
    boolean equals(java.lang.Object) -> equals
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    int hashCode() -> hashCode
    android.support.v4.util.Pair create(java.lang.Object,java.lang.Object) -> create
android.support.v4.util.Pools -> android.support.v4.util.Pools:
android.support.v4.util.Pools$Pool -> android.support.v4.util.Pools$Pool:
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.Pools$SimplePool -> android.support.v4.util.Pools$SimplePool:
    java.lang.Object[] mPool -> mPool
    int mPoolSize -> mPoolSize
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
    boolean isInPool(java.lang.Object) -> isInPool
android.support.v4.util.Pools$SynchronizedPool -> android.support.v4.util.Pools$SynchronizedPool:
    java.lang.Object mLock -> mLock
    java.lang.Object acquire() -> acquire
    boolean release(java.lang.Object) -> release
android.support.v4.util.SimpleArrayMap -> android.support.v4.util.SimpleArrayMap:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    int BASE_SIZE -> BASE_SIZE
    int CACHE_SIZE -> CACHE_SIZE
    java.lang.Object[] mBaseCache -> mBaseCache
    int mBaseCacheSize -> mBaseCacheSize
    java.lang.Object[] mTwiceBaseCache -> mTwiceBaseCache
    int mTwiceBaseCacheSize -> mTwiceBaseCacheSize
    int[] mHashes -> mHashes
    java.lang.Object[] mArray -> mArray
    int mSize -> mSize
    int indexOf(java.lang.Object,int) -> indexOf
    int indexOfNull() -> indexOfNull
    void allocArrays(int) -> allocArrays
    void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    void clear() -> clear
    void ensureCapacity(int) -> ensureCapacity
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfKey(java.lang.Object) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(android.support.v4.util.SimpleArrayMap) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> removeAt
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    android.support.v4.util.SparseArrayCompat clone() -> clone
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    int SECONDS_PER_MINUTE -> SECONDS_PER_MINUTE
    int SECONDS_PER_HOUR -> SECONDS_PER_HOUR
    int SECONDS_PER_DAY -> SECONDS_PER_DAY
    java.lang.Object sFormatSync -> sFormatSync
    char[] sFormatStr -> sFormatStr
    int accumField(int,int,boolean,int) -> accumField
    int printField(char[],int,char,int,boolean,int) -> printField
    int formatDurationLocked(long,int) -> formatDurationLocked
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> IMPL
    java.lang.Object DEFAULT_DELEGATE -> DEFAULT_DELEGATE
    java.lang.Object mBridge -> mBridge
    java.lang.Object getBridge() -> getBridge
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> val$compat
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> this$0
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.AccessibilityDelegateCompatIcs$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> val$bridge
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    java.lang.String TAG -> TAG
    android.content.Context mContext -> mContext
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> mSubUiVisibilityListener
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> mVisibilityListener
    android.content.Context getContext() -> getContext
    android.view.View onCreateActionView() -> onCreateActionView
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
    void reset() -> reset
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.ActionProvider$VisibilityListener:
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> mImpl
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl:
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    int mTouchSlopSquare -> mTouchSlopSquare
    int mDoubleTapSlopSquare -> mDoubleTapSlopSquare
    int mMinimumFlingVelocity -> mMinimumFlingVelocity
    int mMaximumFlingVelocity -> mMaximumFlingVelocity
    int LONGPRESS_TIMEOUT -> LONGPRESS_TIMEOUT
    int TAP_TIMEOUT -> TAP_TIMEOUT
    int DOUBLE_TAP_TIMEOUT -> DOUBLE_TAP_TIMEOUT
    int SHOW_PRESS -> SHOW_PRESS
    int LONG_PRESS -> LONG_PRESS
    int TAP -> TAP
    android.os.Handler mHandler -> mHandler
    android.view.GestureDetector$OnGestureListener mListener -> mListener
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> mDoubleTapListener
    boolean mStillDown -> mStillDown
    boolean mDeferConfirmSingleTap -> mDeferConfirmSingleTap
    boolean mInLongPress -> mInLongPress
    boolean mAlwaysInTapRegion -> mAlwaysInTapRegion
    boolean mAlwaysInBiggerTapRegion -> mAlwaysInBiggerTapRegion
    android.view.MotionEvent mCurrentDownEvent -> mCurrentDownEvent
    android.view.MotionEvent mPreviousUpEvent -> mPreviousUpEvent
    boolean mIsDoubleTapping -> mIsDoubleTapping
    float mLastFocusX -> mLastFocusX
    float mLastFocusY -> mLastFocusY
    float mDownFocusX -> mDownFocusX
    float mDownFocusY -> mDownFocusY
    boolean mIsLongpressEnabled -> mIsLongpressEnabled
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    void init(android.content.Context) -> init
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void cancel() -> cancel
    void cancelTaps() -> cancelTaps
    boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    void dispatchLongPress() -> dispatchLongPress
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$000
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$100
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$200
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$300
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> access$400
    boolean access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> access$502
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    android.view.GestureDetector mDetector -> mDetector
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> IMPL
    int RELATIVE_LAYOUT_DIRECTION -> RELATIVE_LAYOUT_DIRECTION
    int START -> START
    int END -> END
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> RELATIVE_HORIZONTAL_GRAVITY_MASK
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.GravityCompat$GravityCompatImpl:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.GravityCompat$GravityCompatImplBase:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.GravityCompatJellybeanMr1:
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
android.support.v4.view.InputDeviceCompat -> android.support.v4.view.InputDeviceCompat:
    int SOURCE_CLASS_MASK -> SOURCE_CLASS_MASK
    int SOURCE_CLASS_NONE -> SOURCE_CLASS_NONE
    int SOURCE_CLASS_BUTTON -> SOURCE_CLASS_BUTTON
    int SOURCE_CLASS_POINTER -> SOURCE_CLASS_POINTER
    int SOURCE_CLASS_TRACKBALL -> SOURCE_CLASS_TRACKBALL
    int SOURCE_CLASS_POSITION -> SOURCE_CLASS_POSITION
    int SOURCE_CLASS_JOYSTICK -> SOURCE_CLASS_JOYSTICK
    int SOURCE_UNKNOWN -> SOURCE_UNKNOWN
    int SOURCE_KEYBOARD -> SOURCE_KEYBOARD
    int SOURCE_DPAD -> SOURCE_DPAD
    int SOURCE_GAMEPAD -> SOURCE_GAMEPAD
    int SOURCE_TOUCHSCREEN -> SOURCE_TOUCHSCREEN
    int SOURCE_MOUSE -> SOURCE_MOUSE
    int SOURCE_STYLUS -> SOURCE_STYLUS
    int SOURCE_TRACKBALL -> SOURCE_TRACKBALL
    int SOURCE_TOUCHPAD -> SOURCE_TOUCHPAD
    int SOURCE_TOUCH_NAVIGATION -> SOURCE_TOUCH_NAVIGATION
    int SOURCE_JOYSTICK -> SOURCE_JOYSTICK
    int SOURCE_HDMI -> SOURCE_HDMI
    int SOURCE_ANY -> SOURCE_ANY
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> IMPL
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl:
    int META_MODIFIER_MASK -> META_MODIFIER_MASK
    int META_ALL_MASK -> META_ALL_MASK
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> metaStateFilterDirectionalModifiers
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl:
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.KeyEventCompat$KeyEventVersionImpl:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.KeyEventCompatEclair:
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.KeyEventCompatHoneycomb:
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
android.support.v4.view.LayoutInflaterCompat -> android.support.v4.view.LayoutInflaterCompat:
    android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl IMPL -> IMPL
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl -> android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImpl:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplBase -> android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplBase:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV11 -> android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV11:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV21 -> android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV21:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
android.support.v4.view.LayoutInflaterCompatBase -> android.support.v4.view.LayoutInflaterCompatBase:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
android.support.v4.view.LayoutInflaterCompatBase$FactoryWrapper -> android.support.v4.view.LayoutInflaterCompatBase$FactoryWrapper:
    android.support.v4.view.LayoutInflaterFactory mDelegateFactory -> mDelegateFactory
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    java.lang.String toString() -> toString
android.support.v4.view.LayoutInflaterCompatHC -> android.support.v4.view.LayoutInflaterCompatHC:
    java.lang.String TAG -> TAG
    java.lang.reflect.Field sLayoutInflaterFactory2Field -> sLayoutInflaterFactory2Field
    boolean sCheckedField -> sCheckedField
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
    void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> forceSetFactory2
android.support.v4.view.LayoutInflaterCompatHC$FactoryWrapperHC -> android.support.v4.view.LayoutInflaterCompatHC$FactoryWrapperHC:
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
android.support.v4.view.LayoutInflaterCompatLollipop -> android.support.v4.view.LayoutInflaterCompatLollipop:
    void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory) -> setFactory
android.support.v4.view.LayoutInflaterFactory -> android.support.v4.view.LayoutInflaterFactory:
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl IMPL -> IMPL
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 -> android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 -> android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    java.lang.String TAG -> TAG
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> IMPL
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1 -> android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1:
    android.support.v4.view.MenuItemCompat$OnActionExpandListener val$listener -> val$listener
    android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl this$0 -> this$0
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> android.support.v4.view.MenuItemCompat$MenuVersionImpl:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.MenuItemCompat$OnActionExpandListener:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatHoneycomb -> android.support.v4.view.MenuItemCompatHoneycomb:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
android.support.v4.view.MenuItemCompatIcs -> android.support.v4.view.MenuItemCompatIcs:
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper -> android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper:
    android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy mWrapped -> mWrapped
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy -> android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> IMPL
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int AXIS_X -> AXIS_X
    int AXIS_Y -> AXIS_Y
    int AXIS_PRESSURE -> AXIS_PRESSURE
    int AXIS_SIZE -> AXIS_SIZE
    int AXIS_TOUCH_MAJOR -> AXIS_TOUCH_MAJOR
    int AXIS_TOUCH_MINOR -> AXIS_TOUCH_MINOR
    int AXIS_TOOL_MAJOR -> AXIS_TOOL_MAJOR
    int AXIS_TOOL_MINOR -> AXIS_TOOL_MINOR
    int AXIS_ORIENTATION -> AXIS_ORIENTATION
    int AXIS_VSCROLL -> AXIS_VSCROLL
    int AXIS_HSCROLL -> AXIS_HSCROLL
    int AXIS_Z -> AXIS_Z
    int AXIS_RX -> AXIS_RX
    int AXIS_RY -> AXIS_RY
    int AXIS_RZ -> AXIS_RZ
    int AXIS_HAT_X -> AXIS_HAT_X
    int AXIS_HAT_Y -> AXIS_HAT_Y
    int AXIS_LTRIGGER -> AXIS_LTRIGGER
    int AXIS_RTRIGGER -> AXIS_RTRIGGER
    int AXIS_THROTTLE -> AXIS_THROTTLE
    int AXIS_RUDDER -> AXIS_RUDDER
    int AXIS_WHEEL -> AXIS_WHEEL
    int AXIS_GAS -> AXIS_GAS
    int AXIS_BRAKE -> AXIS_BRAKE
    int AXIS_DISTANCE -> AXIS_DISTANCE
    int AXIS_TILT -> AXIS_TILT
    int AXIS_GENERIC_1 -> AXIS_GENERIC_1
    int AXIS_GENERIC_2 -> AXIS_GENERIC_2
    int AXIS_GENERIC_3 -> AXIS_GENERIC_3
    int AXIS_GENERIC_4 -> AXIS_GENERIC_4
    int AXIS_GENERIC_5 -> AXIS_GENERIC_5
    int AXIS_GENERIC_6 -> AXIS_GENERIC_6
    int AXIS_GENERIC_7 -> AXIS_GENERIC_7
    int AXIS_GENERIC_8 -> AXIS_GENERIC_8
    int AXIS_GENERIC_9 -> AXIS_GENERIC_9
    int AXIS_GENERIC_10 -> AXIS_GENERIC_10
    int AXIS_GENERIC_11 -> AXIS_GENERIC_11
    int AXIS_GENERIC_12 -> AXIS_GENERIC_12
    int AXIS_GENERIC_13 -> AXIS_GENERIC_13
    int AXIS_GENERIC_14 -> AXIS_GENERIC_14
    int AXIS_GENERIC_15 -> AXIS_GENERIC_15
    int AXIS_GENERIC_16 -> AXIS_GENERIC_16
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
    int getSource(android.view.MotionEvent) -> getSource
    float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
    int getSource(android.view.MotionEvent) -> getSource
    float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$GingerbreadMotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$GingerbreadMotionEventVersionImpl:
    int getSource(android.view.MotionEvent) -> getSource
android.support.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl:
    float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.MotionEventCompat$MotionEventVersionImpl:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
    int getSource(android.view.MotionEvent) -> getSource
    float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.MotionEventCompatEclair:
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompatGingerbread -> android.support.v4.view.MotionEventCompatGingerbread:
    int getSource(android.view.MotionEvent) -> getSource
android.support.v4.view.MotionEventCompatHoneycombMr1 -> android.support.v4.view.MotionEventCompatHoneycombMr1:
    float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
android.support.v4.view.NestedScrollingChild -> android.support.v4.view.NestedScrollingChild:
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean startNestedScroll(int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
android.support.v4.view.NestedScrollingChildHelper -> android.support.v4.view.NestedScrollingChildHelper:
    android.view.View mView -> mView
    android.view.ViewParent mNestedScrollingParent -> mNestedScrollingParent
    boolean mIsNestedScrollingEnabled -> mIsNestedScrollingEnabled
    int[] mTempNestedScrollConsumed -> mTempNestedScrollConsumed
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean startNestedScroll(int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
android.support.v4.view.NestedScrollingParent -> android.support.v4.view.NestedScrollingParent:
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    int getNestedScrollAxes() -> getNestedScrollAxes
android.support.v4.view.NestedScrollingParentHelper -> android.support.v4.view.NestedScrollingParentHelper:
    android.view.ViewGroup mViewGroup -> mViewGroup
    int mNestedScrollAxes -> mNestedScrollAxes
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    int getNestedScrollAxes() -> getNestedScrollAxes
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
android.support.v4.view.OnApplyWindowInsetsListener -> android.support.v4.view.OnApplyWindowInsetsListener:
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    java.lang.String TAG -> TAG
    int INDICATOR_HEIGHT -> INDICATOR_HEIGHT
    int MIN_PADDING_BOTTOM -> MIN_PADDING_BOTTOM
    int TAB_PADDING -> TAB_PADDING
    int TAB_SPACING -> TAB_SPACING
    int MIN_TEXT_SPACING -> MIN_TEXT_SPACING
    int FULL_UNDERLINE_HEIGHT -> FULL_UNDERLINE_HEIGHT
    int MIN_STRIP_HEIGHT -> MIN_STRIP_HEIGHT
    int mIndicatorColor -> mIndicatorColor
    int mIndicatorHeight -> mIndicatorHeight
    int mMinPaddingBottom -> mMinPaddingBottom
    int mMinTextSpacing -> mMinTextSpacing
    int mMinStripHeight -> mMinStripHeight
    int mTabPadding -> mTabPadding
    android.graphics.Paint mTabPaint -> mTabPaint
    android.graphics.Rect mTempRect -> mTempRect
    int mTabAlpha -> mTabAlpha
    boolean mDrawFullUnderline -> mDrawFullUnderline
    boolean mDrawFullUnderlineSet -> mDrawFullUnderlineSet
    int mFullUnderlineHeight -> mFullUnderlineHeight
    boolean mIgnoreTap -> mIgnoreTap
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mTouchSlop -> mTouchSlop
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> updateTextPositions
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> this$0
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    java.lang.String TAG -> TAG
    android.support.v4.view.ViewPager mPager -> mPager
    android.widget.TextView mPrevText -> mPrevText
    android.widget.TextView mCurrText -> mCurrText
    android.widget.TextView mNextText -> mNextText
    int mLastKnownCurrentPage -> mLastKnownCurrentPage
    float mLastKnownPositionOffset -> mLastKnownPositionOffset
    int mScaledTextSpacing -> mScaledTextSpacing
    int mGravity -> mGravity
    boolean mUpdatingText -> mUpdatingText
    boolean mUpdatingPositions -> mUpdatingPositions
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> mPageListener
    java.lang.ref.WeakReference mWatchingAdapter -> mWatchingAdapter
    int[] ATTRS -> ATTRS
    int[] TEXT_ATTRS -> TEXT_ATTRS
    float SIDE_ALPHA -> SIDE_ALPHA
    int TEXT_SPACING -> TEXT_SPACING
    int mNonPrimaryAlpha -> mNonPrimaryAlpha
    int mTextColor -> mTextColor
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> IMPL
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> updateText
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> updateAdapter
    void updateTextPositions(int,float,boolean) -> updateTextPositions
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> access$100
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$PageListener:
    int mScrollState -> mScrollState
    android.support.v4.view.PagerTitleStrip this$0 -> this$0
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.PagerTitleStripIcs:
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform:
    java.lang.String TAG -> TAG
    java.util.Locale mLocale -> mLocale
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.ScaleGestureDetectorCompat -> android.support.v4.view.ScaleGestureDetectorCompat:
    android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl IMPL -> IMPL
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$1 -> android.support.v4.view.ScaleGestureDetectorCompat$1:
android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$BaseScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorCompatKitKatImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl -> android.support.v4.view.ScaleGestureDetectorCompat$ScaleGestureDetectorImpl:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScaleGestureDetectorCompatKitKat -> android.support.v4.view.ScaleGestureDetectorCompatKitKat:
    void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
android.support.v4.view.ScrollingView -> android.support.v4.view.ScrollingView:
    int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    int computeVerticalScrollExtent() -> computeVerticalScrollExtent
android.support.v4.view.TintableBackgroundView -> android.support.v4.view.TintableBackgroundView:
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> IMPL
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.VelocityTrackerCompatHoneycomb:
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    java.lang.String TAG -> TAG
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    long FAKE_FRAME_TIME -> FAKE_FRAME_TIME
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS -> IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS
    int ACCESSIBILITY_LIVE_REGION_NONE -> ACCESSIBILITY_LIVE_REGION_NONE
    int ACCESSIBILITY_LIVE_REGION_POLITE -> ACCESSIBILITY_LIVE_REGION_POLITE
    int ACCESSIBILITY_LIVE_REGION_ASSERTIVE -> ACCESSIBILITY_LIVE_REGION_ASSERTIVE
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int LAYOUT_DIRECTION_LTR -> LAYOUT_DIRECTION_LTR
    int LAYOUT_DIRECTION_RTL -> LAYOUT_DIRECTION_RTL
    int LAYOUT_DIRECTION_INHERIT -> LAYOUT_DIRECTION_INHERIT
    int LAYOUT_DIRECTION_LOCALE -> LAYOUT_DIRECTION_LOCALE
    int MEASURED_SIZE_MASK -> MEASURED_SIZE_MASK
    int MEASURED_STATE_MASK -> MEASURED_STATE_MASK
    int MEASURED_HEIGHT_STATE_SHIFT -> MEASURED_HEIGHT_STATE_SHIFT
    int MEASURED_STATE_TOO_SMALL -> MEASURED_STATE_TOO_SMALL
    int SCROLL_AXIS_NONE -> SCROLL_AXIS_NONE
    int SCROLL_AXIS_HORIZONTAL -> SCROLL_AXIS_HORIZONTAL
    int SCROLL_AXIS_VERTICAL -> SCROLL_AXIS_VERTICAL
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> IMPL
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int combineMeasuredStates(int,int) -> combineMeasuredStates
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    float getPivotX(android.view.View) -> getPivotX
    void setPivotX(android.view.View,float) -> setPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setPivotY(android.view.View,float) -> setPivotY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    void setActivated(android.view.View,boolean) -> setActivated
    boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    void stopNestedScroll(android.view.View) -> stopNestedScroll
    boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    boolean isLaidOut(android.view.View) -> isLaidOut
    float getZ(android.view.View) -> getZ
    void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
android.support.v4.view.ViewCompat$AccessibilityLiveRegion -> android.support.v4.view.ViewCompat$AccessibilityLiveRegion:
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ViewCompat$BaseViewCompatImpl:
    java.lang.reflect.Method mDispatchStartTemporaryDetach -> mDispatchStartTemporaryDetach
    java.lang.reflect.Method mDispatchFinishTemporaryDetach -> mDispatchFinishTemporaryDetach
    boolean mTempDetachBound -> mTempDetachBound
    java.util.WeakHashMap mViewPropertyAnimatorCompatMap -> mViewPropertyAnimatorCompatMap
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    long getFrameTime() -> getFrameTime
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    void bindTempDetach() -> bindTempDetach
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setRotation(android.view.View,float) -> setRotation
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    void setActivated(android.view.View,boolean) -> setActivated
    boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    boolean canScrollingViewScrollHorizontally(android.support.v4.view.ScrollingView,int) -> canScrollingViewScrollHorizontally
    boolean canScrollingViewScrollVertically(android.support.v4.view.ScrollingView,int) -> canScrollingViewScrollVertically
    boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    void stopNestedScroll(android.view.View) -> stopNestedScroll
    boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    boolean isLaidOut(android.view.View) -> isLaidOut
    int combineMeasuredStates(int,int) -> combineMeasuredStates
    float getZ(android.view.View) -> getZ
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl:
    boolean isOpaque(android.view.View) -> isOpaque
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ViewCompat$GBViewCompatImpl:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ViewCompat$HCViewCompatImpl:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    void setActivated(android.view.View,boolean) -> setActivated
    int combineMeasuredStates(int,int) -> combineMeasuredStates
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ViewCompat$ICSViewCompatImpl:
    java.lang.reflect.Field mAccessibilityDelegateField -> mAccessibilityDelegateField
    boolean accessibilityDelegateCheckFailed -> accessibilityDelegateCheckFailed
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
android.support.v4.view.ViewCompat$ImportantForAccessibility -> android.support.v4.view.ViewCompat$ImportantForAccessibility:
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ViewCompat$JBViewCompatImpl:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    boolean isPaddingRelative(android.view.View) -> isPaddingRelative
android.support.v4.view.ViewCompat$JbMr2ViewCompatImpl -> android.support.v4.view.ViewCompat$JbMr2ViewCompatImpl:
    void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.ViewCompat$KitKatViewCompatImpl:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean isLaidOut(android.view.View) -> isLaidOut
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
android.support.v4.view.ViewCompat$LayerType -> android.support.v4.view.ViewCompat$LayerType:
android.support.v4.view.ViewCompat$LayoutDirectionMode -> android.support.v4.view.ViewCompat$LayoutDirectionMode:
android.support.v4.view.ViewCompat$LollipopViewCompatImpl -> android.support.v4.view.ViewCompat$LollipopViewCompatImpl:
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    void stopNestedScroll(android.view.View) -> stopNestedScroll
    boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    float getZ(android.view.View) -> getZ
android.support.v4.view.ViewCompat$OverScroll -> android.support.v4.view.ViewCompat$OverScroll:
android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode -> android.support.v4.view.ViewCompat$ResolvedLayoutDirectionMode:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ViewCompat$ViewCompatImpl:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setAlpha(android.view.View,float) -> setAlpha
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    void setActivated(android.view.View,boolean) -> setActivated
    boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    void stopNestedScroll(android.view.View) -> stopNestedScroll
    boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    boolean isLaidOut(android.view.View) -> isLaidOut
    int combineMeasuredStates(int,int) -> combineMeasuredStates
    float getZ(android.view.View) -> getZ
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
android.support.v4.view.ViewCompatBase -> android.support.v4.view.ViewCompatBase:
    java.lang.String TAG -> TAG
    java.lang.reflect.Field sMinWidthField -> sMinWidthField
    boolean sMinWidthFieldFetched -> sMinWidthFieldFetched
    java.lang.reflect.Field sMinHeightField -> sMinHeightField
    boolean sMinHeightFieldFetched -> sMinHeightFieldFetched
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    boolean isLaidOut(android.view.View) -> isLaidOut
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ViewCompatEclairMr1:
    java.lang.String TAG -> TAG
    java.lang.reflect.Method sChildrenDrawingOrderMethod -> sChildrenDrawingOrderMethod
    boolean isOpaque(android.view.View) -> isOpaque
    void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ViewCompatGingerbread:
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ViewCompatHC:
    long getFrameTime() -> getFrameTime
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    int getMeasuredState(android.view.View) -> getMeasuredState
    float getTranslationX(android.view.View) -> getTranslationX
    float getTranslationY(android.view.View) -> getTranslationY
    float getX(android.view.View) -> getX
    float getY(android.view.View) -> getY
    float getRotation(android.view.View) -> getRotation
    float getRotationX(android.view.View) -> getRotationX
    float getRotationY(android.view.View) -> getRotationY
    float getScaleX(android.view.View) -> getScaleX
    float getScaleY(android.view.View) -> getScaleY
    void setTranslationX(android.view.View,float) -> setTranslationX
    void setTranslationY(android.view.View,float) -> setTranslationY
    void setAlpha(android.view.View,float) -> setAlpha
    void setX(android.view.View,float) -> setX
    void setY(android.view.View,float) -> setY
    void setRotation(android.view.View,float) -> setRotation
    void setRotationX(android.view.View,float) -> setRotationX
    void setRotationY(android.view.View,float) -> setRotationY
    void setScaleX(android.view.View,float) -> setScaleX
    void setScaleY(android.view.View,float) -> setScaleY
    void setPivotX(android.view.View,float) -> setPivotX
    void setPivotY(android.view.View,float) -> setPivotY
    float getPivotX(android.view.View) -> getPivotX
    float getPivotY(android.view.View) -> getPivotY
    void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    void setActivated(android.view.View,boolean) -> setActivated
    int combineMeasuredStates(int,int) -> combineMeasuredStates
android.support.v4.view.ViewCompatICS -> android.support.v4.view.ViewCompatICS:
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ViewCompatJB:
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    int getMinimumWidth(android.view.View) -> getMinimumWidth
    int getMinimumHeight(android.view.View) -> getMinimumHeight
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ViewCompatJellybeanMr1:
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    int getPaddingStart(android.view.View) -> getPaddingStart
    int getPaddingEnd(android.view.View) -> getPaddingEnd
    void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    boolean isPaddingRelative(android.view.View) -> isPaddingRelative
android.support.v4.view.ViewCompatJellybeanMr2 -> android.support.v4.view.ViewCompatJellybeanMr2:
    android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
android.support.v4.view.ViewCompatKitKat -> android.support.v4.view.ViewCompatKitKat:
    int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    boolean isLaidOut(android.view.View) -> isLaidOut
    boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
android.support.v4.view.ViewCompatLollipop -> android.support.v4.view.ViewCompatLollipop:
    void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    java.lang.String getTransitionName(android.view.View) -> getTransitionName
    void requestApplyInsets(android.view.View) -> requestApplyInsets
    void setElevation(android.view.View,float) -> setElevation
    float getElevation(android.view.View) -> getElevation
    void setTranslationZ(android.view.View,float) -> setTranslationZ
    float getTranslationZ(android.view.View) -> getTranslationZ
    void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    android.support.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    android.support.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,android.support.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    void stopNestedScroll(android.view.View) -> stopNestedScroll
    boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    float getZ(android.view.View) -> getZ
android.support.v4.view.ViewCompatLollipop$1 -> android.support.v4.view.ViewCompatLollipop$1:
    android.support.v4.view.OnApplyWindowInsetsListener val$listener -> val$listener
    android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> IMPL
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl:
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl:
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.ViewConfigurationCompatFroyo:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompatICS -> android.support.v4.view.ViewConfigurationCompatICS:
    boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    int LAYOUT_MODE_CLIP_BOUNDS -> LAYOUT_MODE_CLIP_BOUNDS
    int LAYOUT_MODE_OPTICAL_BOUNDS -> LAYOUT_MODE_OPTICAL_BOUNDS
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> IMPL
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompat$ViewGroupCompatLollipopImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatLollipopImpl:
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.ViewGroupCompatHC:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompatIcs -> android.support.v4.view.ViewGroupCompatIcs:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompatJellybeanMR2 -> android.support.v4.view.ViewGroupCompatJellybeanMR2:
    int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
android.support.v4.view.ViewGroupCompatLollipop -> android.support.v4.view.ViewGroupCompatLollipop:
    void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
    boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    boolean USE_CACHE -> USE_CACHE
    int DEFAULT_OFFSCREEN_PAGES -> DEFAULT_OFFSCREEN_PAGES
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int MIN_DISTANCE_FOR_FLING -> MIN_DISTANCE_FOR_FLING
    int DEFAULT_GUTTER_SIZE -> DEFAULT_GUTTER_SIZE
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    int mExpectedAdapterCount -> mExpectedAdapterCount
    java.util.Comparator COMPARATOR -> COMPARATOR
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.util.ArrayList mItems -> mItems
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> mTempItem
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.view.PagerAdapter mAdapter -> mAdapter
    int mCurItem -> mCurItem
    int mRestoredCurItem -> mRestoredCurItem
    android.os.Parcelable mRestoredAdapterState -> mRestoredAdapterState
    java.lang.ClassLoader mRestoredClassLoader -> mRestoredClassLoader
    android.widget.Scroller mScroller -> mScroller
    android.support.v4.view.ViewPager$PagerObserver mObserver -> mObserver
    int mPageMargin -> mPageMargin
    android.graphics.drawable.Drawable mMarginDrawable -> mMarginDrawable
    int mTopPageBounds -> mTopPageBounds
    int mBottomPageBounds -> mBottomPageBounds
    float mFirstOffset -> mFirstOffset
    float mLastOffset -> mLastOffset
    int mChildWidthMeasureSpec -> mChildWidthMeasureSpec
    int mChildHeightMeasureSpec -> mChildHeightMeasureSpec
    boolean mInLayout -> mInLayout
    boolean mScrollingCacheEnabled -> mScrollingCacheEnabled
    boolean mPopulatePending -> mPopulatePending
    int mOffscreenPageLimit -> mOffscreenPageLimit
    boolean mIsBeingDragged -> mIsBeingDragged
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mDefaultGutterSize -> mDefaultGutterSize
    int mGutterSize -> mGutterSize
    int mTouchSlop -> mTouchSlop
    float mLastMotionX -> mLastMotionX
    float mLastMotionY -> mLastMotionY
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    int mActivePointerId -> mActivePointerId
    int INVALID_POINTER -> INVALID_POINTER
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mFlingDistance -> mFlingDistance
    int mCloseEnough -> mCloseEnough
    int CLOSE_ENOUGH -> CLOSE_ENOUGH
    boolean mFakeDragging -> mFakeDragging
    long mFakeDragBeginTime -> mFakeDragBeginTime
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> mLeftEdge
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> mRightEdge
    boolean mFirstLayout -> mFirstLayout
    boolean mNeedCalculatePageOffsets -> mNeedCalculatePageOffsets
    boolean mCalledSuper -> mCalledSuper
    int mDecorChildCount -> mDecorChildCount
    java.util.List mOnPageChangeListeners -> mOnPageChangeListeners
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> mOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> mInternalPageChangeListener
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> mAdapterChangeListener
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> mPageTransformer
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> mSetChildrenDrawingOrderEnabled
    int DRAW_ORDER_DEFAULT -> DRAW_ORDER_DEFAULT
    int DRAW_ORDER_FORWARD -> DRAW_ORDER_FORWARD
    int DRAW_ORDER_REVERSE -> DRAW_ORDER_REVERSE
    int mDrawingOrder -> mDrawingOrder
    java.util.ArrayList mDrawingOrderedChildren -> mDrawingOrderedChildren
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> sPositionComparator
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> mEndScrollRunnable
    int mScrollState -> mScrollState
    void initViewPager() -> initViewPager
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> removeNonDecorViews
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void addOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> addOnPageChangeListener
    void removeOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> removeOnPageChangeListener
    void clearOnPageChangeListeners() -> clearOnPageChangeListeners
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void smoothScrollTo(int,int) -> smoothScrollTo
    void smoothScrollTo(int,int,int) -> smoothScrollTo
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    void dataSetChanged() -> dataSetChanged
    void populate() -> populate
    void populate(int) -> populate
    void sortChildDrawingOrder() -> sortChildDrawingOrder
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> calculatePageOffsets
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> pageScrolled
    void onPageScrolled(int,float,int) -> onPageScrolled
    void dispatchOnPageScrolled(int,float,int) -> dispatchOnPageScrolled
    void dispatchOnPageSelected(int) -> dispatchOnPageSelected
    void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    void completeScroll(boolean) -> completeScroll
    boolean isGutterDrag(float,float) -> isGutterDrag
    void enableLayers(boolean) -> enableLayers
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    boolean performDrag(float) -> performDrag
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    int determineTargetPage(int,float,int,int) -> determineTargetPage
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    void endDrag() -> endDrag
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    boolean pageLeft() -> pageLeft
    boolean pageRight() -> pageRight
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> access$000
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> access$200
    int access$300(android.support.v4.view.ViewPager) -> access$300
    int[] access$400() -> access$400
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$Decor:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$ItemInfo:
    java.lang.Object object -> object
    int position -> position
    boolean scrolling -> scrolling
    float widthFactor -> widthFactor
    float offset -> offset
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> widthFactor
    boolean needsMeasure -> needsMeasure
    int position -> position
    int childIndex -> childIndex
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$MyAccessibilityDelegate:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    boolean canScroll() -> canScroll
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$OnAdapterChangeListener:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> onAdapterChanged
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$PagerObserver:
    android.support.v4.view.ViewPager this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> position
    android.os.Parcelable adapterState -> adapterState
    java.lang.ClassLoader loader -> loader
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$ViewPositionComparator:
    int compare(android.view.View,android.view.View) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> IMPL
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
android.support.v4.view.ViewParentCompat$ViewParentCompatKitKatImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatKitKatImpl:
    void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl:
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
android.support.v4.view.ViewParentCompatICS -> android.support.v4.view.ViewParentCompatICS:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompatKitKat -> android.support.v4.view.ViewParentCompatKitKat:
    void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
android.support.v4.view.ViewParentCompatLollipop -> android.support.v4.view.ViewParentCompatLollipop:
    java.lang.String TAG -> TAG
    boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
android.support.v4.view.ViewPropertyAnimatorCompat -> android.support.v4.view.ViewPropertyAnimatorCompat:
    java.lang.String TAG -> TAG
    java.lang.ref.WeakReference mView -> mView
    java.lang.Runnable mStartAction -> mStartAction
    java.lang.Runnable mEndAction -> mEndAction
    int mOldLayerType -> mOldLayerType
    int LISTENER_TAG_ID -> LISTENER_TAG_ID
    android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl IMPL -> IMPL
    android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    android.support.v4.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    android.support.v4.view.ViewPropertyAnimatorCompat alphaBy(float) -> alphaBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationX(float) -> translationX
    android.support.v4.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
    android.support.v4.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable) -> withEndAction
    long getDuration() -> getDuration
    android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    android.support.v4.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    long getStartDelay() -> getStartDelay
    android.support.v4.view.ViewPropertyAnimatorCompat rotation(float) -> rotation
    android.support.v4.view.ViewPropertyAnimatorCompat rotationBy(float) -> rotationBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationX(float) -> rotationX
    android.support.v4.view.ViewPropertyAnimatorCompat rotationXBy(float) -> rotationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat rotationY(float) -> rotationY
    android.support.v4.view.ViewPropertyAnimatorCompat rotationYBy(float) -> rotationYBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleX(float) -> scaleX
    android.support.v4.view.ViewPropertyAnimatorCompat scaleXBy(float) -> scaleXBy
    android.support.v4.view.ViewPropertyAnimatorCompat scaleY(float) -> scaleY
    android.support.v4.view.ViewPropertyAnimatorCompat scaleYBy(float) -> scaleYBy
    void cancel() -> cancel
    android.support.v4.view.ViewPropertyAnimatorCompat x(float) -> x
    android.support.v4.view.ViewPropertyAnimatorCompat xBy(float) -> xBy
    android.support.v4.view.ViewPropertyAnimatorCompat y(float) -> y
    android.support.v4.view.ViewPropertyAnimatorCompat yBy(float) -> yBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationXBy(float) -> translationXBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationYBy(float) -> translationYBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationZBy(float) -> translationZBy
    android.support.v4.view.ViewPropertyAnimatorCompat translationZ(float) -> translationZ
    android.support.v4.view.ViewPropertyAnimatorCompat z(float) -> z
    android.support.v4.view.ViewPropertyAnimatorCompat zBy(float) -> zBy
    void start() -> start
    android.support.v4.view.ViewPropertyAnimatorCompat withLayer() -> withLayer
    android.support.v4.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable) -> withStartAction
    android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    android.support.v4.view.ViewPropertyAnimatorCompat setUpdateListener(android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    java.lang.Runnable access$002(android.support.v4.view.ViewPropertyAnimatorCompat,java.lang.Runnable) -> access$002
    java.lang.Runnable access$102(android.support.v4.view.ViewPropertyAnimatorCompat,java.lang.Runnable) -> access$102
    java.lang.Runnable access$100(android.support.v4.view.ViewPropertyAnimatorCompat) -> access$100
    java.lang.Runnable access$000(android.support.v4.view.ViewPropertyAnimatorCompat) -> access$000
    int access$402(android.support.v4.view.ViewPropertyAnimatorCompat,int) -> access$402
    int access$400(android.support.v4.view.ViewPropertyAnimatorCompat) -> access$400
android.support.v4.view.ViewPropertyAnimatorCompat$1 -> android.support.v4.view.ViewPropertyAnimatorCompat$1:
android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl:
    java.util.WeakHashMap mStarterMap -> mStarterMap
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setDuration
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alpha
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationX
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationY
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getDuration
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getInterpolator
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setStartDelay
    long getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getStartDelay
    void alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alphaBy
    void rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotation
    void rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationBy
    void rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationX
    void rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationXBy
    void rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationY
    void rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationYBy
    void scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleX
    void scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleXBy
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleY
    void scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleYBy
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> cancel
    void x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> x
    void xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> xBy
    void y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> y
    void yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> yBy
    void z(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> z
    void zBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> zBy
    void translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationXBy
    void translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationYBy
    void translationZ(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationZ
    void translationZBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationZBy
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> start
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    void startAnimation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> startAnimation
    void removeStartMessage(android.view.View) -> removeStartMessage
    void postStartMessage(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> postStartMessage
    void access$200(android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl,android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> access$200
android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter -> android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter:
    java.lang.ref.WeakReference mViewRef -> mViewRef
    android.support.v4.view.ViewPropertyAnimatorCompat mVpa -> mVpa
    android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl this$0 -> this$0
    void run() -> run
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl:
    java.util.WeakHashMap mLayerMap -> mLayerMap
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setDuration
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alpha
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationX
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationY
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getDuration
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setStartDelay
    long getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getStartDelay
    void alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alphaBy
    void rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotation
    void rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationBy
    void rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationX
    void rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationXBy
    void rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationY
    void rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationYBy
    void scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleX
    void scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleXBy
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleY
    void scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleYBy
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> cancel
    void x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> x
    void xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> xBy
    void y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> y
    void yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> yBy
    void translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationXBy
    void translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationYBy
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> start
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener -> android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener:
    android.support.v4.view.ViewPropertyAnimatorCompat mVpa -> mVpa
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl:
    android.view.animation.Interpolator getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getInterpolator
android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl:
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
android.support.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl:
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
android.support.v4.view.ViewPropertyAnimatorCompat$LollipopViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$LollipopViewPropertyAnimatorCompatImpl:
    void translationZ(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationZ
    void translationZBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationZBy
    void z(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> z
    void zBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> zBy
android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl -> android.support.v4.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorCompatImpl:
    void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setDuration
    long getDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getDuration
    void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getInterpolator
    void setStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setStartDelay
    long getStartDelay(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getStartDelay
    void alpha(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alpha
    void alphaBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alphaBy
    void rotation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotation
    void rotationBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationBy
    void rotationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationX
    void rotationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationXBy
    void rotationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationY
    void rotationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationYBy
    void scaleX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleX
    void scaleXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleXBy
    void scaleY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleY
    void scaleYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleYBy
    void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> cancel
    void x(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> x
    void xBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> xBy
    void y(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> y
    void yBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> yBy
    void z(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> z
    void zBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> zBy
    void translationX(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationX
    void translationXBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationXBy
    void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationY
    void translationYBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationYBy
    void translationZ(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationZ
    void translationZBy(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationZBy
    void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> start
    void withLayer(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
    void withStartAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
    void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
android.support.v4.view.ViewPropertyAnimatorCompatICS -> android.support.v4.view.ViewPropertyAnimatorCompatICS:
    void setDuration(android.view.View,long) -> setDuration
    void alpha(android.view.View,float) -> alpha
    void translationX(android.view.View,float) -> translationX
    void translationY(android.view.View,float) -> translationY
    long getDuration(android.view.View) -> getDuration
    void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    void setStartDelay(android.view.View,long) -> setStartDelay
    long getStartDelay(android.view.View) -> getStartDelay
    void alphaBy(android.view.View,float) -> alphaBy
    void rotation(android.view.View,float) -> rotation
    void rotationBy(android.view.View,float) -> rotationBy
    void rotationX(android.view.View,float) -> rotationX
    void rotationXBy(android.view.View,float) -> rotationXBy
    void rotationY(android.view.View,float) -> rotationY
    void rotationYBy(android.view.View,float) -> rotationYBy
    void scaleX(android.view.View,float) -> scaleX
    void scaleXBy(android.view.View,float) -> scaleXBy
    void scaleY(android.view.View,float) -> scaleY
    void scaleYBy(android.view.View,float) -> scaleYBy
    void cancel(android.view.View) -> cancel
    void x(android.view.View,float) -> x
    void xBy(android.view.View,float) -> xBy
    void y(android.view.View,float) -> y
    void yBy(android.view.View,float) -> yBy
    void translationXBy(android.view.View,float) -> translationXBy
    void translationYBy(android.view.View,float) -> translationYBy
    void start(android.view.View) -> start
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompatICS$1 -> android.support.v4.view.ViewPropertyAnimatorCompatICS$1:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> val$listener
    android.view.View val$view -> val$view
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.view.ViewPropertyAnimatorCompatJB -> android.support.v4.view.ViewPropertyAnimatorCompatJB:
    void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
    void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    void withLayer(android.view.View) -> withLayer
    void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener) -> setListener
android.support.v4.view.ViewPropertyAnimatorCompatJB$1 -> android.support.v4.view.ViewPropertyAnimatorCompatJB$1:
    android.support.v4.view.ViewPropertyAnimatorListener val$listener -> val$listener
    android.view.View val$view -> val$view
    void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    void onAnimationStart(android.animation.Animator) -> onAnimationStart
android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2 -> android.support.v4.view.ViewPropertyAnimatorCompatJellybeanMr2:
    android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
android.support.v4.view.ViewPropertyAnimatorCompatKK -> android.support.v4.view.ViewPropertyAnimatorCompatKK:
    void setUpdateListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
android.support.v4.view.ViewPropertyAnimatorCompatKK$1 -> android.support.v4.view.ViewPropertyAnimatorCompatKK$1:
    android.support.v4.view.ViewPropertyAnimatorUpdateListener val$listener -> val$listener
    android.view.View val$view -> val$view
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
android.support.v4.view.ViewPropertyAnimatorCompatLollipop -> android.support.v4.view.ViewPropertyAnimatorCompatLollipop:
    void translationZ(android.view.View,float) -> translationZ
    void translationZBy(android.view.View,float) -> translationZBy
    void z(android.view.View,float) -> z
    void zBy(android.view.View,float) -> zBy
android.support.v4.view.ViewPropertyAnimatorListener -> android.support.v4.view.ViewPropertyAnimatorListener:
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorListenerAdapter -> android.support.v4.view.ViewPropertyAnimatorListenerAdapter:
    void onAnimationStart(android.view.View) -> onAnimationStart
    void onAnimationEnd(android.view.View) -> onAnimationEnd
    void onAnimationCancel(android.view.View) -> onAnimationCancel
android.support.v4.view.ViewPropertyAnimatorUpdateListener -> android.support.v4.view.ViewPropertyAnimatorUpdateListener:
    void onAnimationUpdate(android.view.View) -> onAnimationUpdate
android.support.v4.view.WindowCompat -> android.support.v4.view.WindowCompat:
    int FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    int FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    int FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
android.support.v4.view.WindowInsetsCompat -> android.support.v4.view.WindowInsetsCompat:
    int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    boolean hasSystemWindowInsets() -> hasSystemWindowInsets
    boolean hasInsets() -> hasInsets
    boolean isConsumed() -> isConsumed
    boolean isRound() -> isRound
    android.support.v4.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect) -> replaceSystemWindowInsets
    int getStableInsetTop() -> getStableInsetTop
    int getStableInsetLeft() -> getStableInsetLeft
    int getStableInsetRight() -> getStableInsetRight
    int getStableInsetBottom() -> getStableInsetBottom
    boolean hasStableInsets() -> hasStableInsets
    android.support.v4.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
android.support.v4.view.WindowInsetsCompatApi21 -> android.support.v4.view.WindowInsetsCompatApi21:
    android.view.WindowInsets mSource -> mSource
    int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    boolean hasSystemWindowInsets() -> hasSystemWindowInsets
    boolean hasInsets() -> hasInsets
    boolean isConsumed() -> isConsumed
    boolean isRound() -> isRound
    android.support.v4.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    android.support.v4.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect) -> replaceSystemWindowInsets
    int getStableInsetTop() -> getStableInsetTop
    int getStableInsetLeft() -> getStableInsetLeft
    int getStableInsetRight() -> getStableInsetRight
    int getStableInsetBottom() -> getStableInsetBottom
    boolean hasStableInsets() -> hasStableInsets
    android.support.v4.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    android.view.WindowInsets unwrap() -> unwrap
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> IMPL
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int CONTENT_CHANGE_TYPE_UNDEFINED -> CONTENT_CHANGE_TYPE_UNDEFINED
    int CONTENT_CHANGE_TYPE_SUBTREE -> CONTENT_CHANGE_TYPE_SUBTREE
    int CONTENT_CHANGE_TYPE_TEXT -> CONTENT_CHANGE_TYPE_TEXT
    int CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION -> CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventKitKatImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventKitKatImpl:
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
android.support.v4.view.accessibility.AccessibilityEventCompatIcs -> android.support.v4.view.accessibility.AccessibilityEventCompatIcs:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> appendRecord
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    void setScrollable(android.view.accessibility.AccessibilityEvent,boolean) -> setScrollable
android.support.v4.view.accessibility.AccessibilityEventCompatKitKat -> android.support.v4.view.accessibility.AccessibilityEventCompatKitKat:
    void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
    int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> IMPL
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> val$listener
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> this$0
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> newAccessiblityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> mListener
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs:
    java.lang.Object newAccessibilityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge) -> newAccessibilityStateChangeListener
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,java.lang.Object) -> removeAccessibilityStateChangeListener
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> val$bridge
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge:
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    int ACTION_COPY -> ACTION_COPY
    int ACTION_PASTE -> ACTION_PASTE
    int ACTION_CUT -> ACTION_CUT
    int ACTION_SET_SELECTION -> ACTION_SET_SELECTION
    int ACTION_EXPAND -> ACTION_EXPAND
    int ACTION_COLLAPSE -> ACTION_COLLAPSE
    int ACTION_DISMISS -> ACTION_DISMISS
    int ACTION_SET_TEXT -> ACTION_SET_TEXT
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN -> ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    java.lang.String ACTION_ARGUMENT_SELECTION_START_INT -> ACTION_ARGUMENT_SELECTION_START_INT
    java.lang.String ACTION_ARGUMENT_SELECTION_END_INT -> ACTION_ARGUMENT_SELECTION_END_INT
    java.lang.String ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE -> ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    boolean removeChild(android.view.View) -> removeChild
    boolean removeChild(android.view.View,int) -> removeChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    void addAction(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAction
    boolean removeAction(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> removeAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName() -> getViewIdResourceName
    int getLiveRegion() -> getLiveRegion
    void setLiveRegion(int) -> setLiveRegion
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo() -> getCollectionInfo
    void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo() -> getCollectionItemInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo() -> getRangeInfo
    void setRangeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat) -> setRangeInfo
    java.util.List getActionList() -> getActionList
    void setContentInvalid(boolean) -> setContentInvalid
    boolean isContentInvalid() -> isContentInvalid
    void setError(java.lang.CharSequence) -> setError
    java.lang.CharSequence getError() -> getError
    void setLabelFor(android.view.View) -> setLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getLabelFor() -> getLabelFor
    void setLabeledBy(android.view.View) -> setLabeledBy
    void setLabeledBy(android.view.View,int) -> setLabeledBy
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getLabeledBy() -> getLabeledBy
    boolean canOpenPopup() -> canOpenPopup
    void setCanOpenPopup(boolean) -> setCanOpenPopup
    java.util.List findAccessibilityNodeInfosByViewId(java.lang.String) -> findAccessibilityNodeInfosByViewId
    android.os.Bundle getExtras() -> getExtras
    int getInputType() -> getInputType
    void setInputType(int) -> setInputType
    void setMaxTextLength(int) -> setMaxTextLength
    int getMaxTextLength() -> getMaxTextLength
    void setTextSelection(int,int) -> setTextSelection
    int getTextSelectionStart() -> getTextSelectionStart
    int getTextSelectionEnd() -> getTextSelectionEnd
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore() -> getTraversalBefore
    void setTraversalBefore(android.view.View) -> setTraversalBefore
    void setTraversalBefore(android.view.View,int) -> setTraversalBefore
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter() -> getTraversalAfter
    void setTraversalAfter(android.view.View) -> setTraversalAfter
    void setTraversalAfter(android.view.View,int) -> setTraversalAfter
    android.support.v4.view.accessibility.AccessibilityWindowInfoCompat getWindow() -> getWindow
    boolean isDismissable() -> isDismissable
    void setDismissable(boolean) -> setDismissable
    boolean isEditable() -> isEditable
    void setEditable(boolean) -> setEditable
    boolean isMultiLine() -> isMultiLine
    void setMultiLine(boolean) -> setMultiLine
    boolean refresh() -> refresh
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl access$000() -> access$000
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$1 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$1:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_FOCUS -> ACTION_FOCUS
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SELECT -> ACTION_SELECT
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLICK -> ACTION_CLICK
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COPY -> ACTION_COPY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PASTE -> ACTION_PASTE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CUT -> ACTION_CUT
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_SELECTION -> ACTION_SET_SELECTION
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_EXPAND -> ACTION_EXPAND
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COLLAPSE -> ACTION_COLLAPSE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_DISMISS -> ACTION_DISMISS
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_TEXT -> ACTION_SET_TEXT
    java.lang.Object mAction -> mAction
    int getId() -> getId
    java.lang.CharSequence getLabel() -> getLabel
    java.lang.Object access$100(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> access$100
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl:
    java.lang.Object newAccessibilityAction(int,java.lang.CharSequence) -> newAccessibilityAction
    java.util.List getActionList(java.lang.Object) -> getActionList
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    void addAction(java.lang.Object,java.lang.Object) -> addAction
    boolean removeAction(java.lang.Object,java.lang.Object) -> removeAction
    int getAccessibilityActionId(java.lang.Object) -> getAccessibilityActionId
    java.lang.CharSequence getAccessibilityActionLabel(java.lang.Object) -> getAccessibilityActionLabel
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    boolean isCollectionItemSelected(java.lang.Object) -> isCollectionItemSelected
    java.lang.CharSequence getError(java.lang.Object) -> getError
    void setError(java.lang.Object,java.lang.CharSequence) -> setError
    void setMaxTextLength(java.lang.Object,int) -> setMaxTextLength
    int getMaxTextLength(java.lang.Object) -> getMaxTextLength
    java.lang.Object getWindow(java.lang.Object) -> getWindow
    boolean removeChild(java.lang.Object,android.view.View) -> removeChild
    boolean removeChild(java.lang.Object,android.view.View,int) -> removeChild
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi22Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi22Impl:
    java.lang.Object getTraversalBefore(java.lang.Object) -> getTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View) -> setTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View,int) -> setTraversalBefore
    java.lang.Object getTraversalAfter(java.lang.Object) -> getTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View) -> setTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View,int) -> setTraversalAfter
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl:
    java.lang.Object newAccessibilityAction(int,java.lang.CharSequence) -> newAccessibilityAction
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    int getWindowId(java.lang.Object) -> getWindowId
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    boolean removeChild(java.lang.Object,android.view.View) -> removeChild
    boolean removeChild(java.lang.Object,android.view.View,int) -> removeChild
    int getActions(java.lang.Object) -> getActions
    void addAction(java.lang.Object,int) -> addAction
    void addAction(java.lang.Object,java.lang.Object) -> addAction
    boolean removeAction(java.lang.Object,java.lang.Object) -> removeAction
    int getAccessibilityActionId(java.lang.Object) -> getAccessibilityActionId
    java.lang.CharSequence getAccessibilityActionLabel(java.lang.Object) -> getAccessibilityActionLabel
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    java.lang.Object getParent(java.lang.Object) -> getParent
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    void setParent(java.lang.Object,android.view.View) -> setParent
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable(java.lang.Object) -> isCheckable
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isFocusable(java.lang.Object) -> isFocusable
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    void setFocused(java.lang.Object,boolean) -> setFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean isSelected(java.lang.Object) -> isSelected
    void setSelected(java.lang.Object,boolean) -> setSelected
    boolean isClickable(java.lang.Object) -> isClickable
    void setClickable(java.lang.Object,boolean) -> setClickable
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText(java.lang.Object) -> getText
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void recycle(java.lang.Object) -> recycle
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    void setRangeInfo(java.lang.Object,java.lang.Object) -> setRangeInfo
    java.util.List getActionList(java.lang.Object) -> getActionList
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    int getCollectionInfoColumnCount(java.lang.Object) -> getCollectionInfoColumnCount
    int getCollectionInfoRowCount(java.lang.Object) -> getCollectionInfoRowCount
    boolean isCollectionInfoHierarchical(java.lang.Object) -> isCollectionInfoHierarchical
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    int getCollectionItemColumnIndex(java.lang.Object) -> getCollectionItemColumnIndex
    int getCollectionItemColumnSpan(java.lang.Object) -> getCollectionItemColumnSpan
    int getCollectionItemRowIndex(java.lang.Object) -> getCollectionItemRowIndex
    int getCollectionItemRowSpan(java.lang.Object) -> getCollectionItemRowSpan
    boolean isCollectionItemHeading(java.lang.Object) -> isCollectionItemHeading
    boolean isCollectionItemSelected(java.lang.Object) -> isCollectionItemSelected
    java.lang.Object getTraversalBefore(java.lang.Object) -> getTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View) -> setTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View,int) -> setTraversalBefore
    java.lang.Object getTraversalAfter(java.lang.Object) -> getTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View) -> setTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View,int) -> setTraversalAfter
    void setContentInvalid(java.lang.Object,boolean) -> setContentInvalid
    boolean isContentInvalid(java.lang.Object) -> isContentInvalid
    void setError(java.lang.Object,java.lang.CharSequence) -> setError
    java.lang.CharSequence getError(java.lang.Object) -> getError
    void setLabelFor(java.lang.Object,android.view.View) -> setLabelFor
    void setLabelFor(java.lang.Object,android.view.View,int) -> setLabelFor
    java.lang.Object getLabelFor(java.lang.Object) -> getLabelFor
    void setLabeledBy(java.lang.Object,android.view.View) -> setLabeledBy
    void setLabeledBy(java.lang.Object,android.view.View,int) -> setLabeledBy
    java.lang.Object getLabeledBy(java.lang.Object) -> getLabeledBy
    boolean canOpenPopup(java.lang.Object) -> canOpenPopup
    void setCanOpenPopup(java.lang.Object,boolean) -> setCanOpenPopup
    java.util.List findAccessibilityNodeInfosByViewId(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByViewId
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    int getInputType(java.lang.Object) -> getInputType
    void setInputType(java.lang.Object,int) -> setInputType
    void setMaxTextLength(java.lang.Object,int) -> setMaxTextLength
    int getMaxTextLength(java.lang.Object) -> getMaxTextLength
    void setTextSelection(java.lang.Object,int,int) -> setTextSelection
    int getTextSelectionStart(java.lang.Object) -> getTextSelectionStart
    int getTextSelectionEnd(java.lang.Object) -> getTextSelectionEnd
    java.lang.Object getWindow(java.lang.Object) -> getWindow
    boolean isDismissable(java.lang.Object) -> isDismissable
    void setDismissable(java.lang.Object,boolean) -> setDismissable
    boolean isEditable(java.lang.Object) -> isEditable
    void setEditable(java.lang.Object,boolean) -> setEditable
    boolean isMultiLine(java.lang.Object) -> isMultiLine
    void setMultiLine(java.lang.Object,boolean) -> setMultiLine
    boolean refresh(java.lang.Object) -> refresh
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setParent(java.lang.Object,android.view.View,int) -> setParent
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr1Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr1Impl:
    void setLabelFor(java.lang.Object,android.view.View) -> setLabelFor
    void setLabelFor(java.lang.Object,android.view.View,int) -> setLabelFor
    java.lang.Object getLabelFor(java.lang.Object) -> getLabelFor
    void setLabeledBy(java.lang.Object,android.view.View) -> setLabeledBy
    void setLabeledBy(java.lang.Object,android.view.View,int) -> setLabeledBy
    java.lang.Object getLabeledBy(java.lang.Object) -> getLabeledBy
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl:
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    java.util.List findAccessibilityNodeInfosByViewId(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByViewId
    void setTextSelection(java.lang.Object,int,int) -> setTextSelection
    int getTextSelectionStart(java.lang.Object) -> getTextSelectionStart
    int getTextSelectionEnd(java.lang.Object) -> getTextSelectionEnd
    boolean isEditable(java.lang.Object) -> isEditable
    void setEditable(java.lang.Object,boolean) -> setEditable
    boolean refresh(java.lang.Object) -> refresh
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    int getCollectionInfoColumnCount(java.lang.Object) -> getCollectionInfoColumnCount
    int getCollectionInfoRowCount(java.lang.Object) -> getCollectionInfoRowCount
    boolean isCollectionInfoHierarchical(java.lang.Object) -> isCollectionInfoHierarchical
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    void setRangeInfo(java.lang.Object,java.lang.Object) -> setRangeInfo
    int getCollectionItemColumnIndex(java.lang.Object) -> getCollectionItemColumnIndex
    int getCollectionItemColumnSpan(java.lang.Object) -> getCollectionItemColumnSpan
    int getCollectionItemRowIndex(java.lang.Object) -> getCollectionItemRowIndex
    int getCollectionItemRowSpan(java.lang.Object) -> getCollectionItemRowSpan
    boolean isCollectionItemHeading(java.lang.Object) -> isCollectionItemHeading
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    void setContentInvalid(java.lang.Object,boolean) -> setContentInvalid
    boolean isContentInvalid(java.lang.Object) -> isContentInvalid
    boolean canOpenPopup(java.lang.Object) -> canOpenPopup
    void setCanOpenPopup(java.lang.Object,boolean) -> setCanOpenPopup
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    int getInputType(java.lang.Object) -> getInputType
    void setInputType(java.lang.Object,int) -> setInputType
    boolean isDismissable(java.lang.Object) -> isDismissable
    void setDismissable(java.lang.Object,boolean) -> setDismissable
    boolean isMultiLine(java.lang.Object) -> isMultiLine
    void setMultiLine(java.lang.Object,boolean) -> setMultiLine
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    java.lang.Object newAccessibilityAction(int,java.lang.CharSequence) -> newAccessibilityAction
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addAction(java.lang.Object,java.lang.Object) -> addAction
    boolean removeAction(java.lang.Object,java.lang.Object) -> removeAction
    int getAccessibilityActionId(java.lang.Object) -> getAccessibilityActionId
    java.lang.CharSequence getAccessibilityActionLabel(java.lang.Object) -> getAccessibilityActionLabel
    void addChild(java.lang.Object,android.view.View) -> addChild
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    boolean removeChild(java.lang.Object,android.view.View) -> removeChild
    boolean removeChild(java.lang.Object,android.view.View,int) -> removeChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    void setRangeInfo(java.lang.Object,java.lang.Object) -> setRangeInfo
    java.util.List getActionList(java.lang.Object) -> getActionList
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    int getCollectionInfoColumnCount(java.lang.Object) -> getCollectionInfoColumnCount
    int getCollectionInfoRowCount(java.lang.Object) -> getCollectionInfoRowCount
    boolean isCollectionInfoHierarchical(java.lang.Object) -> isCollectionInfoHierarchical
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    int getCollectionItemColumnIndex(java.lang.Object) -> getCollectionItemColumnIndex
    int getCollectionItemColumnSpan(java.lang.Object) -> getCollectionItemColumnSpan
    int getCollectionItemRowIndex(java.lang.Object) -> getCollectionItemRowIndex
    int getCollectionItemRowSpan(java.lang.Object) -> getCollectionItemRowSpan
    boolean isCollectionItemHeading(java.lang.Object) -> isCollectionItemHeading
    boolean isCollectionItemSelected(java.lang.Object) -> isCollectionItemSelected
    java.lang.Object getTraversalBefore(java.lang.Object) -> getTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View) -> setTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View,int) -> setTraversalBefore
    java.lang.Object getTraversalAfter(java.lang.Object) -> getTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View) -> setTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View,int) -> setTraversalAfter
    void setContentInvalid(java.lang.Object,boolean) -> setContentInvalid
    boolean isContentInvalid(java.lang.Object) -> isContentInvalid
    void setError(java.lang.Object,java.lang.CharSequence) -> setError
    java.lang.CharSequence getError(java.lang.Object) -> getError
    void setLabelFor(java.lang.Object,android.view.View) -> setLabelFor
    void setLabelFor(java.lang.Object,android.view.View,int) -> setLabelFor
    java.lang.Object getLabelFor(java.lang.Object) -> getLabelFor
    void setLabeledBy(java.lang.Object,android.view.View) -> setLabeledBy
    void setLabeledBy(java.lang.Object,android.view.View,int) -> setLabeledBy
    java.lang.Object getLabeledBy(java.lang.Object) -> getLabeledBy
    boolean canOpenPopup(java.lang.Object) -> canOpenPopup
    void setCanOpenPopup(java.lang.Object,boolean) -> setCanOpenPopup
    java.util.List findAccessibilityNodeInfosByViewId(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByViewId
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    int getInputType(java.lang.Object) -> getInputType
    void setInputType(java.lang.Object,int) -> setInputType
    void setMaxTextLength(java.lang.Object,int) -> setMaxTextLength
    int getMaxTextLength(java.lang.Object) -> getMaxTextLength
    void setTextSelection(java.lang.Object,int,int) -> setTextSelection
    int getTextSelectionStart(java.lang.Object) -> getTextSelectionStart
    int getTextSelectionEnd(java.lang.Object) -> getTextSelectionEnd
    java.lang.Object getWindow(java.lang.Object) -> getWindow
    boolean isDismissable(java.lang.Object) -> isDismissable
    void setDismissable(java.lang.Object,boolean) -> setDismissable
    boolean isEditable(java.lang.Object) -> isEditable
    void setEditable(java.lang.Object,boolean) -> setEditable
    boolean isMultiLine(java.lang.Object) -> isMultiLine
    void setMultiLine(java.lang.Object,boolean) -> setMultiLine
    boolean refresh(java.lang.Object) -> refresh
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    int SELECTION_MODE_NONE -> SELECTION_MODE_NONE
    int SELECTION_MODE_SINGLE -> SELECTION_MODE_SINGLE
    int SELECTION_MODE_MULTIPLE -> SELECTION_MODE_MULTIPLE
    java.lang.Object mInfo -> mInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
    int getColumnCount() -> getColumnCount
    int getRowCount() -> getRowCount
    boolean isHierarchical() -> isHierarchical
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    java.lang.Object mInfo -> mInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
    int getColumnIndex() -> getColumnIndex
    int getColumnSpan() -> getColumnSpan
    int getRowIndex() -> getRowIndex
    int getRowSpan() -> getRowSpan
    boolean isHeading() -> isHeading
    boolean isSelected() -> isSelected
    java.lang.Object access$300(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat) -> access$300
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat:
    int RANGE_TYPE_INT -> RANGE_TYPE_INT
    int RANGE_TYPE_FLOAT -> RANGE_TYPE_FLOAT
    int RANGE_TYPE_PERCENT -> RANGE_TYPE_PERCENT
    java.lang.Object mInfo -> mInfo
    float getCurrent() -> getCurrent
    float getMax() -> getMax
    float getMin() -> getMin
    int getType() -> getType
    java.lang.Object access$600(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat) -> access$600
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21:
    java.util.List getActionList(java.lang.Object) -> getActionList
    void addAction(java.lang.Object,java.lang.Object) -> addAction
    boolean removeAction(java.lang.Object,java.lang.Object) -> removeAction
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    java.lang.CharSequence getError(java.lang.Object) -> getError
    void setError(java.lang.Object,java.lang.CharSequence) -> setError
    void setMaxTextLength(java.lang.Object,int) -> setMaxTextLength
    int getMaxTextLength(java.lang.Object) -> getMaxTextLength
    java.lang.Object getWindow(java.lang.Object) -> getWindow
    boolean removeChild(java.lang.Object,android.view.View) -> removeChild
    boolean removeChild(java.lang.Object,android.view.View,int) -> removeChild
    java.lang.Object newAccessibilityAction(int,java.lang.CharSequence) -> newAccessibilityAction
    int getAccessibilityActionId(java.lang.Object) -> getAccessibilityActionId
    java.lang.CharSequence getAccessibilityActionLabel(java.lang.Object) -> getAccessibilityActionLabel
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$CollectionItemInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$CollectionItemInfo:
    boolean isSelected(java.lang.Object) -> isSelected
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi22 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatApi22:
    java.lang.Object getTraversalBefore(java.lang.Object) -> getTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View) -> setTraversalBefore
    void setTraversalBefore(java.lang.Object,android.view.View,int) -> setTraversalBefore
    java.lang.Object getTraversalAfter(java.lang.Object) -> getTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View) -> setTraversalAfter
    void setTraversalAfter(java.lang.Object,android.view.View,int) -> setTraversalAfter
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(android.view.View) -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void addAction(java.lang.Object,int) -> addAction
    void addChild(java.lang.Object,android.view.View) -> addChild
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    int getActions(java.lang.Object) -> getActions
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    java.lang.Object getParent(java.lang.Object) -> getParent
    java.lang.CharSequence getText(java.lang.Object) -> getText
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isCheckable(java.lang.Object) -> isCheckable
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isClickable(java.lang.Object) -> isClickable
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFocusable(java.lang.Object) -> isFocusable
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isLongClickable(java.lang.Object) -> isLongClickable
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    boolean isSelected(java.lang.Object) -> isSelected
    boolean performAction(java.lang.Object,int) -> performAction
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    void setCheckable(java.lang.Object,boolean) -> setCheckable
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setClickable(java.lang.Object,boolean) -> setClickable
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFocusable(java.lang.Object,boolean) -> setFocusable
    void setFocused(java.lang.Object,boolean) -> setFocused
    void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    void setParent(java.lang.Object,android.view.View) -> setParent
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSelected(java.lang.Object,boolean) -> setSelected
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setText(java.lang.Object,java.lang.CharSequence) -> setText
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    void addChild(java.lang.Object,android.view.View,int) -> addChild
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    java.lang.Object obtain(android.view.View,int) -> obtain
    java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    void setParent(java.lang.Object,android.view.View,int) -> setParent
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr1 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr1:
    void setLabelFor(java.lang.Object,android.view.View) -> setLabelFor
    void setLabelFor(java.lang.Object,android.view.View,int) -> setLabelFor
    java.lang.Object getLabelFor(java.lang.Object) -> getLabelFor
    void setLabeledBy(java.lang.Object,android.view.View) -> setLabeledBy
    void setLabeledBy(java.lang.Object,android.view.View,int) -> setLabeledBy
    java.lang.Object getLabeledBy(java.lang.Object) -> getLabeledBy
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2:
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    java.util.List findAccessibilityNodeInfosByViewId(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByViewId
    void setTextSelection(java.lang.Object,int,int) -> setTextSelection
    int getTextSelectionStart(java.lang.Object) -> getTextSelectionStart
    int getTextSelectionEnd(java.lang.Object) -> getTextSelectionEnd
    boolean isEditable(java.lang.Object) -> isEditable
    void setEditable(java.lang.Object,boolean) -> setEditable
    boolean refresh(java.lang.Object) -> refresh
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat:
    int getLiveRegion(java.lang.Object) -> getLiveRegion
    void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    void setRangeInfo(java.lang.Object,java.lang.Object) -> setRangeInfo
    java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean) -> obtainCollectionItemInfo
    void setContentInvalid(java.lang.Object,boolean) -> setContentInvalid
    boolean isContentInvalid(java.lang.Object) -> isContentInvalid
    boolean canOpenPopup(java.lang.Object) -> canOpenPopup
    void setCanOpenPopup(java.lang.Object,boolean) -> setCanOpenPopup
    android.os.Bundle getExtras(java.lang.Object) -> getExtras
    int getInputType(java.lang.Object) -> getInputType
    void setInputType(java.lang.Object,int) -> setInputType
    boolean isDismissable(java.lang.Object) -> isDismissable
    void setDismissable(java.lang.Object,boolean) -> setDismissable
    boolean isMultiLine(java.lang.Object) -> isMultiLine
    void setMultiLine(java.lang.Object,boolean) -> setMultiLine
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionInfo:
    int getColumnCount(java.lang.Object) -> getColumnCount
    int getRowCount(java.lang.Object) -> getRowCount
    boolean isHierarchical(java.lang.Object) -> isHierarchical
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionItemInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionItemInfo:
    int getColumnIndex(java.lang.Object) -> getColumnIndex
    int getColumnSpan(java.lang.Object) -> getColumnSpan
    int getRowIndex(java.lang.Object) -> getRowIndex
    int getRowSpan(java.lang.Object) -> getRowSpan
    boolean isHeading(java.lang.Object) -> isHeading
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$RangeInfo -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$RangeInfo:
    float getCurrent(java.lang.Object) -> getCurrent
    float getMax(java.lang.Object) -> getMax
    float getMin(java.lang.Object) -> getMin
    int getType(java.lang.Object) -> getType
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> IMPL
    java.lang.Object mProvider -> mProvider
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> val$compat
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> this$0
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> val$bridge
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
    android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge:
    java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    java.lang.Object findFocus(int) -> findFocus
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> IMPL
    java.lang.Object mRecord -> mRecord
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    void setChecked(java.lang.Object,boolean) -> setChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    boolean isPassword(java.lang.Object) -> isPassword
    void setPassword(java.lang.Object,boolean) -> setPassword
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    boolean isScrollable(java.lang.Object) -> isScrollable
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    int getItemCount(java.lang.Object) -> getItemCount
    void setItemCount(java.lang.Object,int) -> setItemCount
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    int getToIndex(java.lang.Object) -> getToIndex
    void setToIndex(java.lang.Object,int) -> setToIndex
    int getScrollX(java.lang.Object) -> getScrollX
    void setScrollX(java.lang.Object,int) -> setScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    void setScrollY(java.lang.Object,int) -> setScrollY
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    int getAddedCount(java.lang.Object) -> getAddedCount
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    java.util.List getText(java.lang.Object) -> getText
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setSource(java.lang.Object,android.view.View,int) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcs:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getAddedCount(java.lang.Object) -> getAddedCount
    java.lang.CharSequence getBeforeText(java.lang.Object) -> getBeforeText
    java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    int getCurrentItemIndex(java.lang.Object) -> getCurrentItemIndex
    int getFromIndex(java.lang.Object) -> getFromIndex
    int getItemCount(java.lang.Object) -> getItemCount
    android.os.Parcelable getParcelableData(java.lang.Object) -> getParcelableData
    int getRemovedCount(java.lang.Object) -> getRemovedCount
    int getScrollX(java.lang.Object) -> getScrollX
    int getScrollY(java.lang.Object) -> getScrollY
    java.lang.Object getSource(java.lang.Object) -> getSource
    java.util.List getText(java.lang.Object) -> getText
    int getToIndex(java.lang.Object) -> getToIndex
    int getWindowId(java.lang.Object) -> getWindowId
    boolean isChecked(java.lang.Object) -> isChecked
    boolean isEnabled(java.lang.Object) -> isEnabled
    boolean isFullScreen(java.lang.Object) -> isFullScreen
    boolean isPassword(java.lang.Object) -> isPassword
    boolean isScrollable(java.lang.Object) -> isScrollable
    void recycle(java.lang.Object) -> recycle
    void setAddedCount(java.lang.Object,int) -> setAddedCount
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> setBeforeText
    void setChecked(java.lang.Object,boolean) -> setChecked
    void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    void setCurrentItemIndex(java.lang.Object,int) -> setCurrentItemIndex
    void setEnabled(java.lang.Object,boolean) -> setEnabled
    void setFromIndex(java.lang.Object,int) -> setFromIndex
    void setFullScreen(java.lang.Object,boolean) -> setFullScreen
    void setItemCount(java.lang.Object,int) -> setItemCount
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> setParcelableData
    void setPassword(java.lang.Object,boolean) -> setPassword
    void setRemovedCount(java.lang.Object,int) -> setRemovedCount
    void setScrollX(java.lang.Object,int) -> setScrollX
    void setScrollY(java.lang.Object,int) -> setScrollY
    void setScrollable(java.lang.Object,boolean) -> setScrollable
    void setSource(java.lang.Object,android.view.View) -> setSource
    void setToIndex(java.lang.Object,int) -> setToIndex
android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1 -> android.support.v4.view.accessibility.AccessibilityRecordCompatIcsMr1:
    int getMaxScrollX(java.lang.Object) -> getMaxScrollX
    int getMaxScrollY(java.lang.Object) -> getMaxScrollY
    void setMaxScrollX(java.lang.Object,int) -> setMaxScrollX
    void setMaxScrollY(java.lang.Object,int) -> setMaxScrollY
android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean -> android.support.v4.view.accessibility.AccessibilityRecordCompatJellyBean:
    void setSource(java.lang.Object,android.view.View,int) -> setSource
android.support.v4.view.accessibility.AccessibilityWindowInfoCompat -> android.support.v4.view.accessibility.AccessibilityWindowInfoCompat:
    android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$AccessibilityWindowInfoImpl IMPL -> IMPL
    java.lang.Object mInfo -> mInfo
    int UNDEFINED -> UNDEFINED
    int TYPE_APPLICATION -> TYPE_APPLICATION
    int TYPE_INPUT_METHOD -> TYPE_INPUT_METHOD
    int TYPE_SYSTEM -> TYPE_SYSTEM
    int TYPE_ACCESSIBILITY_OVERLAY -> TYPE_ACCESSIBILITY_OVERLAY
    android.support.v4.view.accessibility.AccessibilityWindowInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
    int getType() -> getType
    int getLayer() -> getLayer
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getRoot() -> getRoot
    android.support.v4.view.accessibility.AccessibilityWindowInfoCompat getParent() -> getParent
    int getId() -> getId
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    boolean isActive() -> isActive
    boolean isFocused() -> isFocused
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityWindowInfoCompat getChild(int) -> getChild
    android.support.v4.view.accessibility.AccessibilityWindowInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityWindowInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityWindowInfoCompat) -> obtain
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String typeToString(int) -> typeToString
android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$1 -> android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$1:
android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$AccessibilityWindowInfoApi21Impl -> android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$AccessibilityWindowInfoApi21Impl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getType(java.lang.Object) -> getType
    int getLayer(java.lang.Object) -> getLayer
    java.lang.Object getRoot(java.lang.Object) -> getRoot
    java.lang.Object getParent(java.lang.Object) -> getParent
    int getId(java.lang.Object) -> getId
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    boolean isActive(java.lang.Object) -> isActive
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$AccessibilityWindowInfoImpl -> android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$AccessibilityWindowInfoImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getType(java.lang.Object) -> getType
    int getLayer(java.lang.Object) -> getLayer
    java.lang.Object getRoot(java.lang.Object) -> getRoot
    java.lang.Object getParent(java.lang.Object) -> getParent
    int getId(java.lang.Object) -> getId
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    boolean isActive(java.lang.Object) -> isActive
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$AccessibilityWindowInfoStubImpl -> android.support.v4.view.accessibility.AccessibilityWindowInfoCompat$AccessibilityWindowInfoStubImpl:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getType(java.lang.Object) -> getType
    int getLayer(java.lang.Object) -> getLayer
    java.lang.Object getRoot(java.lang.Object) -> getRoot
    java.lang.Object getParent(java.lang.Object) -> getParent
    int getId(java.lang.Object) -> getId
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    boolean isActive(java.lang.Object) -> isActive
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.accessibility.AccessibilityWindowInfoCompatApi21 -> android.support.v4.view.accessibility.AccessibilityWindowInfoCompatApi21:
    java.lang.Object obtain() -> obtain
    java.lang.Object obtain(java.lang.Object) -> obtain
    int getType(java.lang.Object) -> getType
    int getLayer(java.lang.Object) -> getLayer
    java.lang.Object getRoot(java.lang.Object) -> getRoot
    java.lang.Object getParent(java.lang.Object) -> getParent
    int getId(java.lang.Object) -> getId
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    boolean isActive(java.lang.Object) -> isActive
    boolean isFocused(java.lang.Object) -> isFocused
    boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    void recycle(java.lang.Object) -> recycle
android.support.v4.view.animation.FastOutLinearInInterpolator -> android.support.v4.view.animation.FastOutLinearInInterpolator:
    float[] VALUES -> VALUES
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.animation.FastOutSlowInInterpolator -> android.support.v4.view.animation.FastOutSlowInInterpolator:
    float[] VALUES -> VALUES
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.animation.LinearOutSlowInInterpolator -> android.support.v4.view.animation.LinearOutSlowInInterpolator:
    float[] VALUES -> VALUES
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.animation.LookupTableInterpolator -> android.support.v4.view.animation.LookupTableInterpolator:
    float[] mValues -> mValues
    float mStepSize -> mStepSize
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.animation.PathInterpolatorCompat -> android.support.v4.view.animation.PathInterpolatorCompat:
    android.view.animation.Interpolator create(android.graphics.Path) -> create
    android.view.animation.Interpolator create(float,float) -> create
    android.view.animation.Interpolator create(float,float,float,float) -> create
android.support.v4.view.animation.PathInterpolatorCompatApi21 -> android.support.v4.view.animation.PathInterpolatorCompatApi21:
    android.view.animation.Interpolator create(android.graphics.Path) -> create
    android.view.animation.Interpolator create(float,float) -> create
    android.view.animation.Interpolator create(float,float,float,float) -> create
android.support.v4.view.animation.PathInterpolatorCompatBase -> android.support.v4.view.animation.PathInterpolatorCompatBase:
    android.view.animation.Interpolator create(android.graphics.Path) -> create
    android.view.animation.Interpolator create(float,float) -> create
    android.view.animation.Interpolator create(float,float,float,float) -> create
android.support.v4.view.animation.PathInterpolatorDonut -> android.support.v4.view.animation.PathInterpolatorDonut:
    float PRECISION -> PRECISION
    float[] mX -> mX
    float[] mY -> mY
    float getInterpolation(float) -> getInterpolation
    android.graphics.Path createQuad(float,float) -> createQuad
    android.graphics.Path createCubic(float,float,float,float) -> createCubic
android.support.v4.widget.AutoScrollHelper -> android.support.v4.widget.AutoScrollHelper:
    float RELATIVE_UNSPECIFIED -> RELATIVE_UNSPECIFIED
    float NO_MAX -> NO_MAX
    float NO_MIN -> NO_MIN
    int EDGE_TYPE_INSIDE -> EDGE_TYPE_INSIDE
    int EDGE_TYPE_INSIDE_EXTEND -> EDGE_TYPE_INSIDE_EXTEND
    int EDGE_TYPE_OUTSIDE -> EDGE_TYPE_OUTSIDE
    int HORIZONTAL -> HORIZONTAL
    int VERTICAL -> VERTICAL
    android.support.v4.widget.AutoScrollHelper$ClampedScroller mScroller -> mScroller
    android.view.animation.Interpolator mEdgeInterpolator -> mEdgeInterpolator
    android.view.View mTarget -> mTarget
    java.lang.Runnable mRunnable -> mRunnable
    float[] mRelativeEdges -> mRelativeEdges
    float[] mMaximumEdges -> mMaximumEdges
    int mEdgeType -> mEdgeType
    int mActivationDelay -> mActivationDelay
    float[] mRelativeVelocity -> mRelativeVelocity
    float[] mMinimumVelocity -> mMinimumVelocity
    float[] mMaximumVelocity -> mMaximumVelocity
    boolean mAlreadyDelayed -> mAlreadyDelayed
    boolean mNeedsReset -> mNeedsReset
    boolean mNeedsCancel -> mNeedsCancel
    boolean mAnimating -> mAnimating
    boolean mEnabled -> mEnabled
    boolean mExclusive -> mExclusive
    int DEFAULT_EDGE_TYPE -> DEFAULT_EDGE_TYPE
    int DEFAULT_MINIMUM_VELOCITY_DIPS -> DEFAULT_MINIMUM_VELOCITY_DIPS
    int DEFAULT_MAXIMUM_VELOCITY_DIPS -> DEFAULT_MAXIMUM_VELOCITY_DIPS
    float DEFAULT_MAXIMUM_EDGE -> DEFAULT_MAXIMUM_EDGE
    float DEFAULT_RELATIVE_EDGE -> DEFAULT_RELATIVE_EDGE
    float DEFAULT_RELATIVE_VELOCITY -> DEFAULT_RELATIVE_VELOCITY
    int DEFAULT_ACTIVATION_DELAY -> DEFAULT_ACTIVATION_DELAY
    int DEFAULT_RAMP_UP_DURATION -> DEFAULT_RAMP_UP_DURATION
    int DEFAULT_RAMP_DOWN_DURATION -> DEFAULT_RAMP_DOWN_DURATION
    android.support.v4.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    android.support.v4.widget.AutoScrollHelper setExclusive(boolean) -> setExclusive
    boolean isExclusive() -> isExclusive
    android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    android.support.v4.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    android.support.v4.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    android.support.v4.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    android.support.v4.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    boolean shouldAnimate() -> shouldAnimate
    void startAnimating() -> startAnimating
    void requestStop() -> requestStop
    float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    float getEdgeValue(float,float,float,float) -> getEdgeValue
    float constrainEdgeValue(float,float) -> constrainEdgeValue
    int constrain(int,int,int) -> constrain
    float constrain(float,float,float) -> constrain
    void cancelTargetTouch() -> cancelTargetTouch
    boolean access$100(android.support.v4.widget.AutoScrollHelper) -> access$100
    boolean access$200(android.support.v4.widget.AutoScrollHelper) -> access$200
    boolean access$202(android.support.v4.widget.AutoScrollHelper,boolean) -> access$202
    android.support.v4.widget.AutoScrollHelper$ClampedScroller access$300(android.support.v4.widget.AutoScrollHelper) -> access$300
    boolean access$400(android.support.v4.widget.AutoScrollHelper) -> access$400
    boolean access$102(android.support.v4.widget.AutoScrollHelper,boolean) -> access$102
    boolean access$500(android.support.v4.widget.AutoScrollHelper) -> access$500
    boolean access$502(android.support.v4.widget.AutoScrollHelper,boolean) -> access$502
    void access$600(android.support.v4.widget.AutoScrollHelper) -> access$600
    android.view.View access$700(android.support.v4.widget.AutoScrollHelper) -> access$700
    int access$800(int,int,int) -> access$800
    float access$900(float,float,float) -> access$900
android.support.v4.widget.AutoScrollHelper$1 -> android.support.v4.widget.AutoScrollHelper$1:
android.support.v4.widget.AutoScrollHelper$ClampedScroller -> android.support.v4.widget.AutoScrollHelper$ClampedScroller:
    int mRampUpDuration -> mRampUpDuration
    int mRampDownDuration -> mRampDownDuration
    float mTargetVelocityX -> mTargetVelocityX
    float mTargetVelocityY -> mTargetVelocityY
    long mStartTime -> mStartTime
    long mDeltaTime -> mDeltaTime
    int mDeltaX -> mDeltaX
    int mDeltaY -> mDeltaY
    long mStopTime -> mStopTime
    float mStopValue -> mStopValue
    int mEffectiveRampDown -> mEffectiveRampDown
    void setRampUpDuration(int) -> setRampUpDuration
    void setRampDownDuration(int) -> setRampDownDuration
    void start() -> start
    void requestStop() -> requestStop
    boolean isFinished() -> isFinished
    float getValueAt(long) -> getValueAt
    float interpolateValue(float) -> interpolateValue
    void computeScrollDelta() -> computeScrollDelta
    void setTargetVelocity(float,float) -> setTargetVelocity
    int getHorizontalDirection() -> getHorizontalDirection
    int getVerticalDirection() -> getVerticalDirection
    int getDeltaX() -> getDeltaX
    int getDeltaY() -> getDeltaY
android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable -> android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable:
    android.support.v4.widget.AutoScrollHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.CircleImageView -> android.support.v4.widget.CircleImageView:
    int KEY_SHADOW_COLOR -> KEY_SHADOW_COLOR
    int FILL_SHADOW_COLOR -> FILL_SHADOW_COLOR
    float X_OFFSET -> X_OFFSET
    float Y_OFFSET -> Y_OFFSET
    float SHADOW_RADIUS -> SHADOW_RADIUS
    int SHADOW_ELEVATION -> SHADOW_ELEVATION
    android.view.animation.Animation$AnimationListener mListener -> mListener
    int mShadowRadius -> mShadowRadius
    boolean elevationSupported() -> elevationSupported
    void onMeasure(int,int) -> onMeasure
    void setAnimationListener(android.view.animation.Animation$AnimationListener) -> setAnimationListener
    void onAnimationStart() -> onAnimationStart
    void onAnimationEnd() -> onAnimationEnd
    void setBackgroundColorRes(int) -> setBackgroundColorRes
    void setBackgroundColor(int) -> setBackgroundColor
    int access$002(android.support.v4.widget.CircleImageView,int) -> access$002
    int access$000(android.support.v4.widget.CircleImageView) -> access$000
android.support.v4.widget.CircleImageView$OvalShadow -> android.support.v4.widget.CircleImageView$OvalShadow:
    android.graphics.RadialGradient mRadialGradient -> mRadialGradient
    android.graphics.Paint mShadowPaint -> mShadowPaint
    int mCircleDiameter -> mCircleDiameter
    android.support.v4.widget.CircleImageView this$0 -> this$0
    void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
android.support.v4.widget.CompoundButtonCompat -> android.support.v4.widget.CompoundButtonCompat:
    android.support.v4.widget.CompoundButtonCompat$CompoundButtonCompatImpl IMPL -> IMPL
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
    android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
android.support.v4.widget.CompoundButtonCompat$Api23CompoundButtonImpl -> android.support.v4.widget.CompoundButtonCompat$Api23CompoundButtonImpl:
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
android.support.v4.widget.CompoundButtonCompat$BaseCompoundButtonCompat -> android.support.v4.widget.CompoundButtonCompat$BaseCompoundButtonCompat:
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
    android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
android.support.v4.widget.CompoundButtonCompat$CompoundButtonCompatImpl -> android.support.v4.widget.CompoundButtonCompat$CompoundButtonCompatImpl:
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
    android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
android.support.v4.widget.CompoundButtonCompat$LollipopCompoundButtonImpl -> android.support.v4.widget.CompoundButtonCompat$LollipopCompoundButtonImpl:
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
    android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
android.support.v4.widget.CompoundButtonCompatApi23 -> android.support.v4.widget.CompoundButtonCompatApi23:
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
android.support.v4.widget.CompoundButtonCompatDonut -> android.support.v4.widget.CompoundButtonCompatDonut:
    java.lang.String TAG -> TAG
    java.lang.reflect.Field sButtonDrawableField -> sButtonDrawableField
    boolean sButtonDrawableFieldFetched -> sButtonDrawableFieldFetched
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
    android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
    android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
android.support.v4.widget.CompoundButtonCompatLollipop -> android.support.v4.widget.CompoundButtonCompatLollipop:
    void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
    android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    int MIN_SHOW_TIME -> MIN_SHOW_TIME
    int MIN_DELAY -> MIN_DELAY
    long mStartTime -> mStartTime
    boolean mPostedHide -> mPostedHide
    boolean mPostedShow -> mPostedShow
    boolean mDismissed -> mDismissed
    java.lang.Runnable mDelayedHide -> mDelayedHide
    java.lang.Runnable mDelayedShow -> mDelayedShow
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> removeCallbacks
    void hide() -> hide
    void show() -> show
    boolean access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$002
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> access$102
    boolean access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> access$202
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> access$300
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.ContentLoadingProgressBar$1:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.ContentLoadingProgressBar$2:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> this$0
    void run() -> run
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.CursorAdapter$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.CursorAdapter$ChangeObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.CursorAdapter$MyDataSetObserver:
    android.support.v4.widget.CursorAdapter this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.CursorFilter:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> mClient
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.CursorFilter$CursorFilterClient:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    java.lang.String TAG -> TAG
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int LOCK_MODE_UNLOCKED -> LOCK_MODE_UNLOCKED
    int LOCK_MODE_LOCKED_CLOSED -> LOCK_MODE_LOCKED_CLOSED
    int LOCK_MODE_LOCKED_OPEN -> LOCK_MODE_LOCKED_OPEN
    int MIN_DRAWER_MARGIN -> MIN_DRAWER_MARGIN
    int DRAWER_ELEVATION -> DRAWER_ELEVATION
    int DEFAULT_SCRIM_COLOR -> DEFAULT_SCRIM_COLOR
    int PEEK_DELAY -> PEEK_DELAY
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    boolean ALLOW_EDGE_LOCK -> ALLOW_EDGE_LOCK
    boolean CHILDREN_DISALLOW_INTERCEPT -> CHILDREN_DISALLOW_INTERCEPT
    float TOUCH_SLOP_SENSITIVITY -> TOUCH_SLOP_SENSITIVITY
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    boolean CAN_HIDE_DESCENDANTS -> CAN_HIDE_DESCENDANTS
    boolean SET_DRAWER_SHADOW_FROM_ELEVATION -> SET_DRAWER_SHADOW_FROM_ELEVATION
    android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate -> mChildAccessibilityDelegate
    float mDrawerElevation -> mDrawerElevation
    int mMinDrawerMargin -> mMinDrawerMargin
    int mScrimColor -> mScrimColor
    float mScrimOpacity -> mScrimOpacity
    android.graphics.Paint mScrimPaint -> mScrimPaint
    android.support.v4.widget.ViewDragHelper mLeftDragger -> mLeftDragger
    android.support.v4.widget.ViewDragHelper mRightDragger -> mRightDragger
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> mLeftCallback
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> mRightCallback
    int mDrawerState -> mDrawerState
    boolean mInLayout -> mInLayout
    boolean mFirstLayout -> mFirstLayout
    int mLockModeLeft -> mLockModeLeft
    int mLockModeRight -> mLockModeRight
    boolean mDisallowInterceptRequested -> mDisallowInterceptRequested
    boolean mChildrenCanceledTouch -> mChildrenCanceledTouch
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> mListener
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.graphics.drawable.Drawable mStatusBarBackground -> mStatusBarBackground
    android.graphics.drawable.Drawable mShadowLeftResolved -> mShadowLeftResolved
    android.graphics.drawable.Drawable mShadowRightResolved -> mShadowRightResolved
    java.lang.CharSequence mTitleLeft -> mTitleLeft
    java.lang.CharSequence mTitleRight -> mTitleRight
    java.lang.Object mLastInsets -> mLastInsets
    boolean mDrawStatusBarBackground -> mDrawStatusBarBackground
    android.graphics.drawable.Drawable mShadowStart -> mShadowStart
    android.graphics.drawable.Drawable mShadowEnd -> mShadowEnd
    android.graphics.drawable.Drawable mShadowLeft -> mShadowLeft
    android.graphics.drawable.Drawable mShadowRight -> mShadowRight
    java.util.ArrayList mNonDrawerViews -> mNonDrawerViews
    android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl IMPL -> IMPL
    void setDrawerElevation(float) -> setDrawerElevation
    float getDrawerElevation() -> getDrawerElevation
    void setChildInsets(java.lang.Object,boolean) -> setChildInsets
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(int) -> getDrawerLockMode
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    void updateDrawerState(int,int,android.view.View) -> updateDrawerState
    void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    void updateChildrenImportantForAccessibility(android.view.View,boolean) -> updateChildrenImportantForAccessibility
    void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    android.view.View findOpenDrawer() -> findOpenDrawer
    void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    java.lang.String gravityToString(int) -> gravityToString
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void resolveShadowDrawables() -> resolveShadowDrawables
    android.graphics.drawable.Drawable resolveLeftShadow() -> resolveLeftShadow
    android.graphics.drawable.Drawable resolveRightShadow() -> resolveRightShadow
    boolean mirror(android.graphics.drawable.Drawable,int) -> mirror
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    android.graphics.drawable.Drawable getStatusBarBackgroundDrawable() -> getStatusBarBackgroundDrawable
    void setStatusBarBackground(int) -> setStatusBarBackground
    void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> isContentView
    boolean isDrawerView(android.view.View) -> isDrawerView
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> closeDrawers
    void closeDrawers(boolean) -> closeDrawers
    void openDrawer(android.view.View) -> openDrawer
    void openDrawer(int) -> openDrawer
    void closeDrawer(android.view.View) -> closeDrawer
    void closeDrawer(int) -> closeDrawer
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    boolean isDrawerOpen(int) -> isDrawerOpen
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    boolean isDrawerVisible(int) -> isDrawerVisible
    boolean hasPeekingDrawer() -> hasPeekingDrawer
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    boolean hasVisibleDrawer() -> hasVisibleDrawer
    android.view.View findVisibleDrawer() -> findVisibleDrawer
    void cancelChildViewTouch() -> cancelChildViewTouch
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean includeChildForAccessibility(android.view.View) -> includeChildForAccessibility
    int[] access$100() -> access$100
    boolean access$200() -> access$200
    android.view.View access$300(android.support.v4.widget.DrawerLayout) -> access$300
    boolean access$400(android.view.View) -> access$400
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate -> android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate:
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl -> android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl:
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    int getTopInset(java.lang.Object) -> getTopInset
    android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context) -> getDefaultStatusBarBackground
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21 -> android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21:
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    int getTopInset(java.lang.Object) -> getTopInset
    android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context) -> getDefaultStatusBarBackground
android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase -> android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase:
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    int getTopInset(java.lang.Object) -> getTopInset
    android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context) -> getDefaultStatusBarBackground
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$EdgeGravity -> android.support.v4.widget.DrawerLayout$EdgeGravity:
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> gravity
    float onScreen -> onScreen
    boolean isPeeking -> isPeeking
    boolean knownOpen -> knownOpen
android.support.v4.widget.DrawerLayout$LockMode -> android.support.v4.widget.DrawerLayout$LockMode:
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> openDrawerGravity
    int lockModeLeft -> lockModeLeft
    int lockModeRight -> lockModeRight
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$State -> android.support.v4.widget.DrawerLayout$State:
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$ViewDragCallback:
    int mAbsGravity -> mAbsGravity
    android.support.v4.widget.ViewDragHelper mDragger -> mDragger
    java.lang.Runnable mPeekRunnable -> mPeekRunnable
    android.support.v4.widget.DrawerLayout this$0 -> this$0
    void setDragger(android.support.v4.widget.ViewDragHelper) -> setDragger
    void removeCallbacks() -> removeCallbacks
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void closeOtherDrawer() -> closeOtherDrawer
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    void peekDrawer() -> peekDrawer
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> access$000
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.DrawerLayout$ViewDragCallback$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> this$1
    void run() -> run
android.support.v4.widget.DrawerLayoutCompatApi21 -> android.support.v4.widget.DrawerLayoutCompatApi21:
    int[] THEME_ATTRS -> THEME_ATTRS
    void configureApplyInsets(android.view.View) -> configureApplyInsets
    void dispatchChildInsets(android.view.View,java.lang.Object,int) -> dispatchChildInsets
    void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int) -> applyMarginInsets
    int getTopInset(java.lang.Object) -> getTopInset
    android.graphics.drawable.Drawable getDefaultStatusBarBackground(android.content.Context) -> getDefaultStatusBarBackground
android.support.v4.widget.DrawerLayoutCompatApi21$InsetsListener -> android.support.v4.widget.DrawerLayoutCompatApi21$InsetsListener:
    android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
android.support.v4.widget.DrawerLayoutImpl -> android.support.v4.widget.DrawerLayoutImpl:
    void setChildInsets(java.lang.Object,boolean) -> setChildInsets
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> mEdgeEffect
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> IMPL
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onPull(float,float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
    boolean onPull(java.lang.Object,float,float) -> onPull
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
    boolean onPull(java.lang.Object,float,float) -> onPull
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
    boolean onPull(java.lang.Object,float,float) -> onPull
android.support.v4.widget.EdgeEffectCompat$EdgeEffectLollipopImpl -> android.support.v4.widget.EdgeEffectCompat$EdgeEffectLollipopImpl:
    boolean onPull(java.lang.Object,float,float) -> onPull
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.EdgeEffectCompatIcs:
    java.lang.Object newEdgeEffect(android.content.Context) -> newEdgeEffect
    void setSize(java.lang.Object,int,int) -> setSize
    boolean isFinished(java.lang.Object) -> isFinished
    void finish(java.lang.Object) -> finish
    boolean onPull(java.lang.Object,float) -> onPull
    boolean onRelease(java.lang.Object) -> onRelease
    boolean onAbsorb(java.lang.Object,int) -> onAbsorb
    boolean draw(java.lang.Object,android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompatLollipop -> android.support.v4.widget.EdgeEffectCompatLollipop:
    boolean onPull(java.lang.Object,float,float) -> onPull
android.support.v4.widget.ExploreByTouchHelper -> android.support.v4.widget.ExploreByTouchHelper:
    int INVALID_ID -> INVALID_ID
    int HOST_ID -> HOST_ID
    java.lang.String DEFAULT_CLASS_NAME -> DEFAULT_CLASS_NAME
    android.graphics.Rect mTempScreenRect -> mTempScreenRect
    android.graphics.Rect mTempParentRect -> mTempParentRect
    android.graphics.Rect mTempVisibleRect -> mTempVisibleRect
    int[] mTempGlobalRect -> mTempGlobalRect
    android.view.accessibility.AccessibilityManager mManager -> mManager
    android.view.View mView -> mView
    android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider mNodeProvider -> mNodeProvider
    int mFocusedVirtualViewId -> mFocusedVirtualViewId
    int mHoveredVirtualViewId -> mHoveredVirtualViewId
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    void invalidateRoot() -> invalidateRoot
    void invalidateVirtualView(int) -> invalidateVirtualView
    int getFocusedVirtualView() -> getFocusedVirtualView
    void updateHoveredVirtualView(int) -> updateHoveredVirtualView
    android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNode(int) -> createNode
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    boolean performAction(int,int,android.os.Bundle) -> performAction
    boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    boolean manageFocusForChild(int,int,android.os.Bundle) -> manageFocusForChild
    boolean intersectVisibleToUser(android.graphics.Rect) -> intersectVisibleToUser
    boolean isAccessibilityFocused(int) -> isAccessibilityFocused
    boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    int getVirtualViewAt(float,float) -> getVirtualViewAt
    void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    void onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    void onPopulateNodeForHost(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForHost
    boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat access$100(android.support.v4.widget.ExploreByTouchHelper,int) -> access$100
    boolean access$200(android.support.v4.widget.ExploreByTouchHelper,int,int,android.os.Bundle) -> access$200
android.support.v4.widget.ExploreByTouchHelper$1 -> android.support.v4.widget.ExploreByTouchHelper$1:
android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider -> android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider:
    android.support.v4.widget.ExploreByTouchHelper this$0 -> this$0
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.widget.ListPopupWindowCompat -> android.support.v4.widget.ListPopupWindowCompat:
    android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl IMPL -> IMPL
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$BaseListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$KitKatListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl -> android.support.v4.widget.ListPopupWindowCompat$ListPopupWindowImpl:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListPopupWindowCompatKitKat -> android.support.v4.widget.ListPopupWindowCompatKitKat:
    android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
android.support.v4.widget.ListViewAutoScrollHelper -> android.support.v4.widget.ListViewAutoScrollHelper:
    android.widget.ListView mTarget -> mTarget
    void scrollTargetBy(int,int) -> scrollTargetBy
    boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    boolean canTargetScrollVertically(int) -> canTargetScrollVertically
android.support.v4.widget.MaterialProgressDrawable -> android.support.v4.widget.MaterialProgressDrawable:
    android.view.animation.Interpolator LINEAR_INTERPOLATOR -> LINEAR_INTERPOLATOR
    android.view.animation.Interpolator MATERIAL_INTERPOLATOR -> MATERIAL_INTERPOLATOR
    float FULL_ROTATION -> FULL_ROTATION
    int LARGE -> LARGE
    int DEFAULT -> DEFAULT
    int CIRCLE_DIAMETER -> CIRCLE_DIAMETER
    float CENTER_RADIUS -> CENTER_RADIUS
    float STROKE_WIDTH -> STROKE_WIDTH
    int CIRCLE_DIAMETER_LARGE -> CIRCLE_DIAMETER_LARGE
    float CENTER_RADIUS_LARGE -> CENTER_RADIUS_LARGE
    float STROKE_WIDTH_LARGE -> STROKE_WIDTH_LARGE
    int[] COLORS -> COLORS
    float COLOR_START_DELAY_OFFSET -> COLOR_START_DELAY_OFFSET
    float END_TRIM_START_DELAY_OFFSET -> END_TRIM_START_DELAY_OFFSET
    float START_TRIM_DURATION_OFFSET -> START_TRIM_DURATION_OFFSET
    int ANIMATION_DURATION -> ANIMATION_DURATION
    float NUM_POINTS -> NUM_POINTS
    java.util.ArrayList mAnimators -> mAnimators
    android.support.v4.widget.MaterialProgressDrawable$Ring mRing -> mRing
    float mRotation -> mRotation
    int ARROW_WIDTH -> ARROW_WIDTH
    int ARROW_HEIGHT -> ARROW_HEIGHT
    float ARROW_OFFSET_ANGLE -> ARROW_OFFSET_ANGLE
    int ARROW_WIDTH_LARGE -> ARROW_WIDTH_LARGE
    int ARROW_HEIGHT_LARGE -> ARROW_HEIGHT_LARGE
    float MAX_PROGRESS_ARC -> MAX_PROGRESS_ARC
    android.content.res.Resources mResources -> mResources
    android.view.View mParent -> mParent
    android.view.animation.Animation mAnimation -> mAnimation
    float mRotationCount -> mRotationCount
    double mWidth -> mWidth
    double mHeight -> mHeight
    boolean mFinishing -> mFinishing
    android.graphics.drawable.Drawable$Callback mCallback -> mCallback
    void setSizeParameters(double,double,double,double,float,float) -> setSizeParameters
    void updateSizes(int) -> updateSizes
    void showArrow(boolean) -> showArrow
    void setArrowScale(float) -> setArrowScale
    void setStartEndTrim(float,float) -> setStartEndTrim
    void setProgressRotation(float) -> setProgressRotation
    void setBackgroundColor(int) -> setBackgroundColor
    void setColorSchemeColors(int[]) -> setColorSchemeColors
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getIntrinsicWidth() -> getIntrinsicWidth
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setRotation(float) -> setRotation
    float getRotation() -> getRotation
    int getOpacity() -> getOpacity
    boolean isRunning() -> isRunning
    void start() -> start
    void stop() -> stop
    float getMinProgressArc(android.support.v4.widget.MaterialProgressDrawable$Ring) -> getMinProgressArc
    int evaluateColorChange(float,int,int) -> evaluateColorChange
    void updateRingColor(float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> updateRingColor
    void applyFinishTranslation(float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> applyFinishTranslation
    void setupAnimators() -> setupAnimators
    void access$000(android.support.v4.widget.MaterialProgressDrawable,float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> access$000
    float access$100(android.support.v4.widget.MaterialProgressDrawable,android.support.v4.widget.MaterialProgressDrawable$Ring) -> access$100
    void access$200(android.support.v4.widget.MaterialProgressDrawable,float,android.support.v4.widget.MaterialProgressDrawable$Ring) -> access$200
    android.view.animation.Interpolator access$300() -> access$300
    float access$400(android.support.v4.widget.MaterialProgressDrawable) -> access$400
    float access$402(android.support.v4.widget.MaterialProgressDrawable,float) -> access$402
android.support.v4.widget.MaterialProgressDrawable$1 -> android.support.v4.widget.MaterialProgressDrawable$1:
    android.support.v4.widget.MaterialProgressDrawable$Ring val$ring -> val$ring
    android.support.v4.widget.MaterialProgressDrawable this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.MaterialProgressDrawable$2 -> android.support.v4.widget.MaterialProgressDrawable$2:
    android.support.v4.widget.MaterialProgressDrawable$Ring val$ring -> val$ring
    android.support.v4.widget.MaterialProgressDrawable this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.MaterialProgressDrawable$3 -> android.support.v4.widget.MaterialProgressDrawable$3:
    android.support.v4.widget.MaterialProgressDrawable this$0 -> this$0
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
android.support.v4.widget.MaterialProgressDrawable$ProgressDrawableSize -> android.support.v4.widget.MaterialProgressDrawable$ProgressDrawableSize:
android.support.v4.widget.MaterialProgressDrawable$Ring -> android.support.v4.widget.MaterialProgressDrawable$Ring:
    android.graphics.RectF mTempBounds -> mTempBounds
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Paint mArrowPaint -> mArrowPaint
    android.graphics.drawable.Drawable$Callback mCallback -> mCallback
    float mStartTrim -> mStartTrim
    float mEndTrim -> mEndTrim
    float mRotation -> mRotation
    float mStrokeWidth -> mStrokeWidth
    float mStrokeInset -> mStrokeInset
    int[] mColors -> mColors
    int mColorIndex -> mColorIndex
    float mStartingStartTrim -> mStartingStartTrim
    float mStartingEndTrim -> mStartingEndTrim
    float mStartingRotation -> mStartingRotation
    boolean mShowArrow -> mShowArrow
    android.graphics.Path mArrow -> mArrow
    float mArrowScale -> mArrowScale
    double mRingCenterRadius -> mRingCenterRadius
    int mArrowWidth -> mArrowWidth
    int mArrowHeight -> mArrowHeight
    int mAlpha -> mAlpha
    android.graphics.Paint mCirclePaint -> mCirclePaint
    int mBackgroundColor -> mBackgroundColor
    int mCurrentColor -> mCurrentColor
    void setBackgroundColor(int) -> setBackgroundColor
    void setArrowDimensions(float,float) -> setArrowDimensions
    void draw(android.graphics.Canvas,android.graphics.Rect) -> draw
    void drawTriangle(android.graphics.Canvas,float,float,android.graphics.Rect) -> drawTriangle
    void setColors(int[]) -> setColors
    void setColor(int) -> setColor
    void setColorIndex(int) -> setColorIndex
    int getNextColor() -> getNextColor
    int getNextColorIndex() -> getNextColorIndex
    void goToNextColor() -> goToNextColor
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setStrokeWidth(float) -> setStrokeWidth
    float getStrokeWidth() -> getStrokeWidth
    void setStartTrim(float) -> setStartTrim
    float getStartTrim() -> getStartTrim
    float getStartingStartTrim() -> getStartingStartTrim
    float getStartingEndTrim() -> getStartingEndTrim
    int getStartingColor() -> getStartingColor
    void setEndTrim(float) -> setEndTrim
    float getEndTrim() -> getEndTrim
    void setRotation(float) -> setRotation
    float getRotation() -> getRotation
    void setInsets(int,int) -> setInsets
    float getInsets() -> getInsets
    void setCenterRadius(double) -> setCenterRadius
    double getCenterRadius() -> getCenterRadius
    void setShowArrow(boolean) -> setShowArrow
    void setArrowScale(float) -> setArrowScale
    float getStartingRotation() -> getStartingRotation
    void storeOriginals() -> storeOriginals
    void resetOriginals() -> resetOriginals
    void invalidateSelf() -> invalidateSelf
android.support.v4.widget.NestedScrollView -> android.support.v4.widget.NestedScrollView:
    int ANIMATED_SCROLL_GAP -> ANIMATED_SCROLL_GAP
    float MAX_SCROLL_FACTOR -> MAX_SCROLL_FACTOR
    java.lang.String TAG -> TAG
    long mLastScroll -> mLastScroll
    android.graphics.Rect mTempRect -> mTempRect
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    android.support.v4.widget.EdgeEffectCompat mEdgeGlowTop -> mEdgeGlowTop
    android.support.v4.widget.EdgeEffectCompat mEdgeGlowBottom -> mEdgeGlowBottom
    int mLastMotionY -> mLastMotionY
    boolean mIsLayoutDirty -> mIsLayoutDirty
    boolean mIsLaidOut -> mIsLaidOut
    android.view.View mChildToScrollTo -> mChildToScrollTo
    boolean mIsBeingDragged -> mIsBeingDragged
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    boolean mFillViewport -> mFillViewport
    boolean mSmoothScrollingEnabled -> mSmoothScrollingEnabled
    int mTouchSlop -> mTouchSlop
    int mMinimumVelocity -> mMinimumVelocity
    int mMaximumVelocity -> mMaximumVelocity
    int mActivePointerId -> mActivePointerId
    int[] mScrollOffset -> mScrollOffset
    int[] mScrollConsumed -> mScrollConsumed
    int mNestedYOffset -> mNestedYOffset
    int INVALID_POINTER -> INVALID_POINTER
    android.support.v4.widget.NestedScrollView$SavedState mSavedState -> mSavedState
    android.support.v4.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE -> ACCESSIBILITY_DELEGATE
    int[] SCROLLVIEW_STYLEABLE -> SCROLLVIEW_STYLEABLE
    android.support.v4.view.NestedScrollingParentHelper mParentHelper -> mParentHelper
    android.support.v4.view.NestedScrollingChildHelper mChildHelper -> mChildHelper
    float mVerticalScrollFactor -> mVerticalScrollFactor
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean startNestedScroll(int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    int getNestedScrollAxes() -> getNestedScrollAxes
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    int getMaxScrollAmount() -> getMaxScrollAmount
    void initScrollView() -> initScrollView
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    boolean canScroll() -> canScroll
    boolean isFillViewport() -> isFillViewport
    void setFillViewport(boolean) -> setFillViewport
    boolean isSmoothScrollingEnabled() -> isSmoothScrollingEnabled
    void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    void onMeasure(int,int) -> onMeasure
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean inChild(int,int) -> inChild
    void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    void initVelocityTrackerIfNotExists() -> initVelocityTrackerIfNotExists
    void recycleVelocityTracker() -> recycleVelocityTracker
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> overScrollByCompat
    int getScrollRange() -> getScrollRange
    android.view.View findFocusableViewInBounds(boolean,int,int) -> findFocusableViewInBounds
    boolean pageScroll(int) -> pageScroll
    boolean fullScroll(int) -> fullScroll
    boolean scrollAndFocus(int,int,int) -> scrollAndFocus
    boolean arrowScroll(int) -> arrowScroll
    boolean isOffScreen(android.view.View) -> isOffScreen
    boolean isWithinDeltaOfScreen(android.view.View,int,int) -> isWithinDeltaOfScreen
    void doScrollY(int) -> doScrollY
    void smoothScrollBy(int,int) -> smoothScrollBy
    void smoothScrollTo(int,int) -> smoothScrollTo
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    void measureChild(android.view.View,int,int) -> measureChild
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void computeScroll() -> computeScroll
    void scrollToChild(android.view.View) -> scrollToChild
    boolean scrollToChildRect(android.graphics.Rect,boolean) -> scrollToChildRect
    int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreen
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    void requestLayout() -> requestLayout
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onAttachedToWindow() -> onAttachedToWindow
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean isViewDescendantOf(android.view.View,android.view.View) -> isViewDescendantOf
    void fling(int) -> fling
    void flingWithNestedDispatch(int) -> flingWithNestedDispatch
    void endDrag() -> endDrag
    void scrollTo(int,int) -> scrollTo
    void ensureGlows() -> ensureGlows
    void draw(android.graphics.Canvas) -> draw
    int clamp(int,int,int) -> clamp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int access$000(android.support.v4.widget.NestedScrollView) -> access$000
android.support.v4.widget.NestedScrollView$AccessibilityDelegate -> android.support.v4.widget.NestedScrollView$AccessibilityDelegate:
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
android.support.v4.widget.NestedScrollView$SavedState -> android.support.v4.widget.NestedScrollView$SavedState:
    int scrollPosition -> scrollPosition
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.widget.NestedScrollView$SavedState$1 -> android.support.v4.widget.NestedScrollView$SavedState$1:
    android.support.v4.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.PopupMenuCompat -> android.support.v4.widget.PopupMenuCompat:
    android.support.v4.widget.PopupMenuCompat$PopupMenuImpl IMPL -> IMPL
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$BasePopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$KitKatPopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompat$PopupMenuImpl -> android.support.v4.widget.PopupMenuCompat$PopupMenuImpl:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupMenuCompatKitKat -> android.support.v4.widget.PopupMenuCompatKitKat:
    android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
android.support.v4.widget.PopupWindowCompat -> android.support.v4.widget.PopupWindowCompat:
    android.support.v4.widget.PopupWindowCompat$PopupWindowImpl IMPL -> IMPL
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
    void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    int getWindowLayoutType(android.widget.PopupWindow) -> getWindowLayoutType
android.support.v4.widget.PopupWindowCompat$Api21PopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$Api21PopupWindowImpl:
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
android.support.v4.widget.PopupWindowCompat$Api23PopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$Api23PopupWindowImpl:
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
    void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    int getWindowLayoutType(android.widget.PopupWindow) -> getWindowLayoutType
android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
    void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    int getWindowLayoutType(android.widget.PopupWindow) -> getWindowLayoutType
android.support.v4.widget.PopupWindowCompat$GingerbreadPopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$GingerbreadPopupWindowImpl:
    void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    int getWindowLayoutType(android.widget.PopupWindow) -> getWindowLayoutType
android.support.v4.widget.PopupWindowCompat$KitKatPopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$KitKatPopupWindowImpl:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.PopupWindowCompat$PopupWindowImpl -> android.support.v4.widget.PopupWindowCompat$PopupWindowImpl:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
    void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    int getWindowLayoutType(android.widget.PopupWindow) -> getWindowLayoutType
android.support.v4.widget.PopupWindowCompatApi21 -> android.support.v4.widget.PopupWindowCompatApi21:
    java.lang.String TAG -> TAG
    java.lang.reflect.Field sOverlapAnchorField -> sOverlapAnchorField
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
android.support.v4.widget.PopupWindowCompatApi23 -> android.support.v4.widget.PopupWindowCompatApi23:
    void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
    void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    int getWindowLayoutType(android.widget.PopupWindow) -> getWindowLayoutType
android.support.v4.widget.PopupWindowCompatGingerbread -> android.support.v4.widget.PopupWindowCompatGingerbread:
    java.lang.reflect.Method sSetWindowLayoutTypeMethod -> sSetWindowLayoutTypeMethod
    boolean sSetWindowLayoutTypeMethodAttempted -> sSetWindowLayoutTypeMethodAttempted
    java.lang.reflect.Method sGetWindowLayoutTypeMethod -> sGetWindowLayoutTypeMethod
    boolean sGetWindowLayoutTypeMethodAttempted -> sGetWindowLayoutTypeMethodAttempted
    void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    int getWindowLayoutType(android.widget.PopupWindow) -> getWindowLayoutType
android.support.v4.widget.PopupWindowCompatKitKat -> android.support.v4.widget.PopupWindowCompatKitKat:
    void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    java.lang.String TAG -> TAG
    java.lang.Object mScroller -> mScroller
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl mImpl -> mImpl
    int CHASE_FRAME_TIME -> CHASE_FRAME_TIME
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
    void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled() -> isOverScrolled
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.ScrollerCompatGingerbread:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    boolean isFinished(java.lang.Object) -> isFinished
    int getCurrX(java.lang.Object) -> getCurrX
    int getCurrY(java.lang.Object) -> getCurrY
    boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation(java.lang.Object) -> abortAnimation
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    int getFinalX(java.lang.Object) -> getFinalX
    int getFinalY(java.lang.Object) -> getFinalY
android.support.v4.widget.ScrollerCompatIcs -> android.support.v4.widget.ScrollerCompatIcs:
    float getCurrVelocity(java.lang.Object) -> getCurrVelocity
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> IMPL
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> access$000
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> mListener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> val$listener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> this$0
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb -> android.support.v4.widget.SearchViewCompatHoneycomb:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge) -> newOnQueryTextListener
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> setOnQueryTextListener
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge) -> newOnCloseListener
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> android.support.v4.widget.SearchViewCompatHoneycomb$1:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> val$listener
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> android.support.v4.widget.SearchViewCompatHoneycomb$2:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> val$listener
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge:
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> mStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> mCursorToStringConverter
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> mViewBinder
    java.lang.String[] mOriginalFrom -> mOriginalFrom
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> findColumns
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    java.lang.String TAG -> TAG
    int DEFAULT_OVERHANG_SIZE -> DEFAULT_OVERHANG_SIZE
    int DEFAULT_FADE_COLOR -> DEFAULT_FADE_COLOR
    int mSliderFadeColor -> mSliderFadeColor
    int MIN_FLING_VELOCITY -> MIN_FLING_VELOCITY
    int mCoveredFadeColor -> mCoveredFadeColor
    android.graphics.drawable.Drawable mShadowDrawableLeft -> mShadowDrawableLeft
    android.graphics.drawable.Drawable mShadowDrawableRight -> mShadowDrawableRight
    int mOverhangSize -> mOverhangSize
    boolean mCanSlide -> mCanSlide
    android.view.View mSlideableView -> mSlideableView
    float mSlideOffset -> mSlideOffset
    float mParallaxOffset -> mParallaxOffset
    int mSlideRange -> mSlideRange
    boolean mIsUnableToDrag -> mIsUnableToDrag
    int mParallaxBy -> mParallaxBy
    float mInitialMotionX -> mInitialMotionX
    float mInitialMotionY -> mInitialMotionY
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> mPanelSlideListener
    android.support.v4.widget.ViewDragHelper mDragHelper -> mDragHelper
    boolean mPreservedOpenState -> mPreservedOpenState
    boolean mFirstLayout -> mFirstLayout
    android.graphics.Rect mTmpRect -> mTmpRect
    java.util.ArrayList mPostedRunnables -> mPostedRunnables
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> IMPL
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    void setAllChildrenVisible() -> setAllChildrenVisible
    boolean viewIsOpaque(android.view.View) -> viewIsOpaque
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> closePane
    boolean openPane(android.view.View,int) -> openPane
    void smoothSlideOpen() -> smoothSlideOpen
    boolean openPane() -> openPane
    void smoothSlideClosed() -> smoothSlideClosed
    boolean closePane() -> closePane
    boolean isOpen() -> isOpen
    boolean canSlide() -> canSlide
    boolean isSlideable() -> isSlideable
    void onPanelDragged(int) -> onPanelDragged
    void dimChildView(android.view.View,float,int) -> dimChildView
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    boolean smoothSlideTo(float,int) -> smoothSlideTo
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    void setShadowResource(int) -> setShadowResource
    void setShadowResourceLeft(int) -> setShadowResourceLeft
    void setShadowResourceRight(int) -> setShadowResourceRight
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> parallaxOtherViews
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean isDimmed(android.view.View) -> isDimmed
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean isLayoutRtlSupport() -> isLayoutRtlSupport
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> access$100
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> access$200
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> access$300
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> access$400
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> access$502
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> access$600
    boolean access$700(android.support.v4.widget.SlidingPaneLayout) -> access$700
    int access$800(android.support.v4.widget.SlidingPaneLayout) -> access$800
    void access$1000(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> access$1000
    java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout) -> access$1100
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.SlidingPaneLayout$1:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate:
    android.graphics.Rect mTmpRect -> mTmpRect
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> filter
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable:
    android.view.View mChildView -> mChildView
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$DragHelperCallback:
    android.support.v4.widget.SlidingPaneLayout this$0 -> this$0
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> ATTRS
    float weight -> weight
    boolean slideable -> slideable
    boolean dimWhenOffset -> dimWhenOffset
    android.graphics.Paint dimPaint -> dimPaint
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> isOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB:
    java.lang.reflect.Method mGetDisplayList -> mGetDisplayList
    java.lang.reflect.Field mRecreateDisplayList -> mRecreateDisplayList
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> invalidateChildRegion
android.support.v4.widget.Space -> android.support.v4.widget.Space:
    void draw(android.graphics.Canvas) -> draw
    int getDefaultSize2(int,int) -> getDefaultSize2
    void onMeasure(int,int) -> onMeasure
android.support.v4.widget.SwipeProgressBar -> android.support.v4.widget.SwipeProgressBar:
    int COLOR1 -> COLOR1
    int COLOR2 -> COLOR2
    int COLOR3 -> COLOR3
    int COLOR4 -> COLOR4
    int ANIMATION_DURATION_MS -> ANIMATION_DURATION_MS
    int FINISH_ANIMATION_DURATION_MS -> FINISH_ANIMATION_DURATION_MS
    android.view.animation.Interpolator INTERPOLATOR -> INTERPOLATOR
    android.graphics.Paint mPaint -> mPaint
    android.graphics.RectF mClipRect -> mClipRect
    float mTriggerPercentage -> mTriggerPercentage
    long mStartTime -> mStartTime
    long mFinishTime -> mFinishTime
    boolean mRunning -> mRunning
    int mColor1 -> mColor1
    int mColor2 -> mColor2
    int mColor3 -> mColor3
    int mColor4 -> mColor4
    android.view.View mParent -> mParent
    android.graphics.Rect mBounds -> mBounds
    void setColorScheme(int,int,int,int) -> setColorScheme
    void setTriggerPercentage(float) -> setTriggerPercentage
    void start() -> start
    void stop() -> stop
    boolean isRunning() -> isRunning
    void draw(android.graphics.Canvas) -> draw
    void drawTrigger(android.graphics.Canvas,int,int) -> drawTrigger
    void drawCircle(android.graphics.Canvas,float,float,int,float) -> drawCircle
    void setBounds(int,int,int,int) -> setBounds
android.support.v4.widget.SwipeRefreshLayout -> android.support.v4.widget.SwipeRefreshLayout:
    int LARGE -> LARGE
    int DEFAULT -> DEFAULT
    java.lang.String LOG_TAG -> LOG_TAG
    int MAX_ALPHA -> MAX_ALPHA
    int STARTING_PROGRESS_ALPHA -> STARTING_PROGRESS_ALPHA
    int CIRCLE_DIAMETER -> CIRCLE_DIAMETER
    int CIRCLE_DIAMETER_LARGE -> CIRCLE_DIAMETER_LARGE
    float DECELERATE_INTERPOLATION_FACTOR -> DECELERATE_INTERPOLATION_FACTOR
    int INVALID_POINTER -> INVALID_POINTER
    float DRAG_RATE -> DRAG_RATE
    float MAX_PROGRESS_ANGLE -> MAX_PROGRESS_ANGLE
    int SCALE_DOWN_DURATION -> SCALE_DOWN_DURATION
    int ALPHA_ANIMATION_DURATION -> ALPHA_ANIMATION_DURATION
    int ANIMATE_TO_TRIGGER_DURATION -> ANIMATE_TO_TRIGGER_DURATION
    int ANIMATE_TO_START_DURATION -> ANIMATE_TO_START_DURATION
    int CIRCLE_BG_LIGHT -> CIRCLE_BG_LIGHT
    int DEFAULT_CIRCLE_TARGET -> DEFAULT_CIRCLE_TARGET
    android.view.View mTarget -> mTarget
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener mListener -> mListener
    boolean mRefreshing -> mRefreshing
    int mTouchSlop -> mTouchSlop
    float mTotalDragDistance -> mTotalDragDistance
    float mTotalUnconsumed -> mTotalUnconsumed
    android.support.v4.view.NestedScrollingParentHelper mNestedScrollingParentHelper -> mNestedScrollingParentHelper
    android.support.v4.view.NestedScrollingChildHelper mNestedScrollingChildHelper -> mNestedScrollingChildHelper
    int[] mParentScrollConsumed -> mParentScrollConsumed
    int mMediumAnimationDuration -> mMediumAnimationDuration
    int mCurrentTargetOffsetTop -> mCurrentTargetOffsetTop
    boolean mOriginalOffsetCalculated -> mOriginalOffsetCalculated
    float mInitialMotionY -> mInitialMotionY
    float mInitialDownY -> mInitialDownY
    boolean mIsBeingDragged -> mIsBeingDragged
    int mActivePointerId -> mActivePointerId
    boolean mScale -> mScale
    boolean mReturningToStart -> mReturningToStart
    android.view.animation.DecelerateInterpolator mDecelerateInterpolator -> mDecelerateInterpolator
    int[] LAYOUT_ATTRS -> LAYOUT_ATTRS
    android.support.v4.widget.CircleImageView mCircleView -> mCircleView
    int mCircleViewIndex -> mCircleViewIndex
    int mFrom -> mFrom
    float mStartingScale -> mStartingScale
    int mOriginalOffsetTop -> mOriginalOffsetTop
    android.support.v4.widget.MaterialProgressDrawable mProgress -> mProgress
    android.view.animation.Animation mScaleAnimation -> mScaleAnimation
    android.view.animation.Animation mScaleDownAnimation -> mScaleDownAnimation
    android.view.animation.Animation mAlphaStartAnimation -> mAlphaStartAnimation
    android.view.animation.Animation mAlphaMaxAnimation -> mAlphaMaxAnimation
    android.view.animation.Animation mScaleDownToStartAnimation -> mScaleDownToStartAnimation
    float mSpinnerFinalOffset -> mSpinnerFinalOffset
    boolean mNotify -> mNotify
    int mCircleWidth -> mCircleWidth
    int mCircleHeight -> mCircleHeight
    boolean mUsingCustomStart -> mUsingCustomStart
    android.view.animation.Animation$AnimationListener mRefreshListener -> mRefreshListener
    android.view.animation.Animation mAnimateToCorrectPosition -> mAnimateToCorrectPosition
    android.view.animation.Animation mPeek -> mPeek
    android.view.animation.Animation mAnimateToStartPosition -> mAnimateToStartPosition
    void setColorViewAlpha(int) -> setColorViewAlpha
    void setProgressViewOffset(boolean,int,int) -> setProgressViewOffset
    void setProgressViewEndTarget(boolean,int) -> setProgressViewEndTarget
    void setSize(int) -> setSize
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    void createProgressView() -> createProgressView
    void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    boolean isAlphaUsedForScale() -> isAlphaUsedForScale
    void setRefreshing(boolean) -> setRefreshing
    void startScaleUpAnimation(android.view.animation.Animation$AnimationListener) -> startScaleUpAnimation
    void setAnimationProgress(float) -> setAnimationProgress
    void setRefreshing(boolean,boolean) -> setRefreshing
    void startScaleDownAnimation(android.view.animation.Animation$AnimationListener) -> startScaleDownAnimation
    void startProgressAlphaStartAnimation() -> startProgressAlphaStartAnimation
    void startProgressAlphaMaxAnimation() -> startProgressAlphaMaxAnimation
    android.view.animation.Animation startAlphaAnimation(int,int) -> startAlphaAnimation
    void setProgressBackgroundColor(int) -> setProgressBackgroundColor
    void setProgressBackgroundColorSchemeResource(int) -> setProgressBackgroundColorSchemeResource
    void setProgressBackgroundColorSchemeColor(int) -> setProgressBackgroundColorSchemeColor
    void setColorScheme(int[]) -> setColorScheme
    void setColorSchemeResources(int[]) -> setColorSchemeResources
    void setColorSchemeColors(int[]) -> setColorSchemeColors
    boolean isRefreshing() -> isRefreshing
    void ensureTarget() -> ensureTarget
    void setDistanceToTriggerSync(int) -> setDistanceToTriggerSync
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    int getProgressCircleDiameter() -> getProgressCircleDiameter
    boolean canChildScrollUp() -> canChildScrollUp
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    float getMotionEventY(android.view.MotionEvent,int) -> getMotionEventY
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    int getNestedScrollAxes() -> getNestedScrollAxes
    void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    boolean startNestedScroll(int) -> startNestedScroll
    void stopNestedScroll() -> stopNestedScroll
    boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    boolean isAnimationRunning(android.view.animation.Animation) -> isAnimationRunning
    void moveSpinner(float) -> moveSpinner
    void finishSpinner(float) -> finishSpinner
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToCorrectPosition
    void peek(int,android.view.animation.Animation$AnimationListener) -> peek
    void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    void moveToStart(float) -> moveToStart
    void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener) -> startScaleDownReturnToStartAnimation
    void setTargetOffsetTopAndBottom(int,boolean) -> setTargetOffsetTopAndBottom
    void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    boolean access$000(android.support.v4.widget.SwipeRefreshLayout) -> access$000
    android.support.v4.widget.MaterialProgressDrawable access$100(android.support.v4.widget.SwipeRefreshLayout) -> access$100
    boolean access$200(android.support.v4.widget.SwipeRefreshLayout) -> access$200
    android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener access$300(android.support.v4.widget.SwipeRefreshLayout) -> access$300
    android.support.v4.widget.CircleImageView access$400(android.support.v4.widget.SwipeRefreshLayout) -> access$400
    void access$500(android.support.v4.widget.SwipeRefreshLayout,int) -> access$500
    boolean access$600(android.support.v4.widget.SwipeRefreshLayout) -> access$600
    void access$700(android.support.v4.widget.SwipeRefreshLayout,float) -> access$700
    int access$800(android.support.v4.widget.SwipeRefreshLayout) -> access$800
    void access$900(android.support.v4.widget.SwipeRefreshLayout,int,boolean) -> access$900
    int access$802(android.support.v4.widget.SwipeRefreshLayout,int) -> access$802
    void access$1000(android.support.v4.widget.SwipeRefreshLayout,android.view.animation.Animation$AnimationListener) -> access$1000
    boolean access$1100(android.support.v4.widget.SwipeRefreshLayout) -> access$1100
    float access$1200(android.support.v4.widget.SwipeRefreshLayout) -> access$1200
    void access$1300(android.support.v4.widget.SwipeRefreshLayout,float) -> access$1300
    float access$1400(android.support.v4.widget.SwipeRefreshLayout) -> access$1400
android.support.v4.widget.SwipeRefreshLayout$1 -> android.support.v4.widget.SwipeRefreshLayout$1:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
android.support.v4.widget.SwipeRefreshLayout$2 -> android.support.v4.widget.SwipeRefreshLayout$2:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$3 -> android.support.v4.widget.SwipeRefreshLayout$3:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$4 -> android.support.v4.widget.SwipeRefreshLayout$4:
    int val$startingAlpha -> val$startingAlpha
    int val$endingAlpha -> val$endingAlpha
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$5 -> android.support.v4.widget.SwipeRefreshLayout$5:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
android.support.v4.widget.SwipeRefreshLayout$6 -> android.support.v4.widget.SwipeRefreshLayout$6:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$7 -> android.support.v4.widget.SwipeRefreshLayout$7:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$8 -> android.support.v4.widget.SwipeRefreshLayout$8:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$9 -> android.support.v4.widget.SwipeRefreshLayout$9:
    android.support.v4.widget.SwipeRefreshLayout this$0 -> this$0
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener -> android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener:
    void onRefresh() -> onRefresh
android.support.v4.widget.TextViewCompat -> android.support.v4.widget.TextViewCompat:
    android.support.v4.widget.TextViewCompat$TextViewCompatImpl IMPL -> IMPL
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
android.support.v4.widget.TextViewCompat$BaseTextViewCompatImpl -> android.support.v4.widget.TextViewCompat$BaseTextViewCompatImpl:
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
android.support.v4.widget.TextViewCompat$JbMr1TextViewCompatImpl -> android.support.v4.widget.TextViewCompat$JbMr1TextViewCompatImpl:
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
android.support.v4.widget.TextViewCompat$JbMr2TextViewCompatImpl -> android.support.v4.widget.TextViewCompat$JbMr2TextViewCompatImpl:
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
android.support.v4.widget.TextViewCompat$TextViewCompatImpl -> android.support.v4.widget.TextViewCompat$TextViewCompatImpl:
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
android.support.v4.widget.TextViewCompatJbMr1 -> android.support.v4.widget.TextViewCompatJbMr1:
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
android.support.v4.widget.TextViewCompatJbMr2 -> android.support.v4.widget.TextViewCompatJbMr2:
    void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
android.support.v4.widget.TintableCompoundButton -> android.support.v4.widget.TintableCompoundButton:
    void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
    android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    java.lang.String TAG -> TAG
    int INVALID_POINTER -> INVALID_POINTER
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_TOP -> EDGE_TOP
    int EDGE_BOTTOM -> EDGE_BOTTOM
    int EDGE_ALL -> EDGE_ALL
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int DIRECTION_ALL -> DIRECTION_ALL
    int EDGE_SIZE -> EDGE_SIZE
    int BASE_SETTLE_DURATION -> BASE_SETTLE_DURATION
    int MAX_SETTLE_DURATION -> MAX_SETTLE_DURATION
    int mDragState -> mDragState
    int mTouchSlop -> mTouchSlop
    int mActivePointerId -> mActivePointerId
    float[] mInitialMotionX -> mInitialMotionX
    float[] mInitialMotionY -> mInitialMotionY
    float[] mLastMotionX -> mLastMotionX
    float[] mLastMotionY -> mLastMotionY
    int[] mInitialEdgesTouched -> mInitialEdgesTouched
    int[] mEdgeDragsInProgress -> mEdgeDragsInProgress
    int[] mEdgeDragsLocked -> mEdgeDragsLocked
    int mPointersDown -> mPointersDown
    android.view.VelocityTracker mVelocityTracker -> mVelocityTracker
    float mMaxVelocity -> mMaxVelocity
    float mMinVelocity -> mMinVelocity
    int mEdgeSize -> mEdgeSize
    int mTrackingEdges -> mTrackingEdges
    android.support.v4.widget.ScrollerCompat mScroller -> mScroller
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> mCallback
    android.view.View mCapturedView -> mCapturedView
    boolean mReleaseInProgress -> mReleaseInProgress
    android.view.ViewGroup mParentView -> mParentView
    android.view.animation.Interpolator sInterpolator -> sInterpolator
    java.lang.Runnable mSetIdleRunnable -> mSetIdleRunnable
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void setMinVelocity(float) -> setMinVelocity
    float getMinVelocity() -> getMinVelocity
    int getViewDragState() -> getViewDragState
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    int getEdgeSize() -> getEdgeSize
    void captureChildView(android.view.View,int) -> captureChildView
    android.view.View getCapturedView() -> getCapturedView
    int getActivePointerId() -> getActivePointerId
    int getTouchSlop() -> getTouchSlop
    void cancel() -> cancel
    void abort() -> abort
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    int computeAxisDuration(int,int,int) -> computeAxisDuration
    int clampMag(int,int,int) -> clampMag
    float clampMag(float,float,float) -> clampMag
    float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean continueSettling(boolean) -> continueSettling
    void dispatchViewReleased(float,float) -> dispatchViewReleased
    void clearMotionHistory() -> clearMotionHistory
    void clearMotionHistory(int) -> clearMotionHistory
    void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    void saveInitialMotion(float,float,int) -> saveInitialMotion
    void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    boolean isPointerDown(int) -> isPointerDown
    void setDragState(int) -> setDragState
    boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
    boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    boolean checkTouchSlop(int) -> checkTouchSlop
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    void releaseViewForPointerUp() -> releaseViewForPointerUp
    void dragTo(int,int,int,int) -> dragTo
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    int getEdgesTouched(int,int) -> getEdgesTouched
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ViewDragHelper$1:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ViewDragHelper$2:
    android.support.v4.widget.ViewDragHelper this$0 -> this$0
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
com.alibaba.fastjson.JSON -> com.alibaba.fastjson.JSON:
    java.lang.String DEFAULT_TYPE_KEY -> DEFAULT_TYPE_KEY
    int DEFAULT_PARSER_FEATURE -> DEFAULT_PARSER_FEATURE
    java.lang.String DEFFAULT_DATE_FORMAT -> DEFFAULT_DATE_FORMAT
    int DEFAULT_GENERATE_FEATURE -> DEFAULT_GENERATE_FEATURE
    java.lang.String VERSION -> VERSION
    java.lang.Object parse(java.lang.String) -> parse
    java.lang.Object parse(java.lang.String,int) -> parse
    java.lang.Object parse(byte[],com.alibaba.fastjson.parser.Feature[]) -> parse
    java.lang.Object parse(byte[],int,int,java.nio.charset.CharsetDecoder,com.alibaba.fastjson.parser.Feature[]) -> parse
    java.lang.Object parse(byte[],int,int,java.nio.charset.CharsetDecoder,int) -> parse
    java.lang.Object parse(java.lang.String,com.alibaba.fastjson.parser.Feature[]) -> parse
    com.alibaba.fastjson.JSONObject parseObject(java.lang.String,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    com.alibaba.fastjson.JSONObject parseObject(java.lang.String) -> parseObject
    java.lang.Object parseObject(java.lang.String,com.alibaba.fastjson.TypeReference,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.Class,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,int,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.ParserConfig,int,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    int handleResovleTask(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object) -> handleResovleTask
    java.lang.Object parseObject(byte[],java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(byte[],int,int,java.nio.charset.CharsetDecoder,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(char[],int,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.Class) -> parseObject
    com.alibaba.fastjson.JSONArray parseArray(java.lang.String) -> parseArray
    java.util.List parseArray(java.lang.String,java.lang.Class) -> parseArray
    java.util.List parseArray(java.lang.String,java.lang.reflect.Type[]) -> parseArray
    java.lang.String toJSONString(java.lang.Object) -> toJSONString
    java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONString
    java.lang.String toJSONStringWithDateFormat(java.lang.Object,java.lang.String,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONStringWithDateFormat
    java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeFilter,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONString
    byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONBytes
    java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONString
    java.lang.String toJSONStringZ(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONStringZ
    byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONBytes
    java.lang.String toJSONString(java.lang.Object,boolean) -> toJSONString
    void writeJSONStringTo(java.lang.Object,java.io.Writer,com.alibaba.fastjson.serializer.SerializerFeature[]) -> writeJSONStringTo
    java.lang.String toString() -> toString
    java.lang.String toJSONString() -> toJSONString
    void writeJSONString(java.lang.Appendable) -> writeJSONString
    java.lang.Object toJSON(java.lang.Object) -> toJSON
    java.lang.Object toJSON(java.lang.Object,com.alibaba.fastjson.parser.ParserConfig) -> toJSON
    java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class) -> toJavaObject
com.alibaba.fastjson.JSONArray -> com.alibaba.fastjson.JSONArray:
    long serialVersionUID -> serialVersionUID
    java.util.List list -> list
    java.lang.Object relatedArray -> relatedArray
    java.lang.reflect.Type componentType -> componentType
    java.lang.Object getRelatedArray() -> getRelatedArray
    void setRelatedArray(java.lang.Object) -> setRelatedArray
    java.lang.reflect.Type getComponentType() -> getComponentType
    void setComponentType(java.lang.reflect.Type) -> setComponentType
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean add(java.lang.Object) -> add
    boolean remove(java.lang.Object) -> remove
    boolean containsAll(java.util.Collection) -> containsAll
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    java.lang.Object set(int,java.lang.Object) -> set
    void add(int,java.lang.Object) -> add
    java.lang.Object remove(int) -> remove
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.List subList(int,int) -> subList
    java.lang.Object get(int) -> get
    com.alibaba.fastjson.JSONObject getJSONObject(int) -> getJSONObject
    com.alibaba.fastjson.JSONArray getJSONArray(int) -> getJSONArray
    java.lang.Object getObject(int,java.lang.Class) -> getObject
    java.lang.Boolean getBoolean(int) -> getBoolean
    boolean getBooleanValue(int) -> getBooleanValue
    java.lang.Byte getByte(int) -> getByte
    byte getByteValue(int) -> getByteValue
    java.lang.Short getShort(int) -> getShort
    short getShortValue(int) -> getShortValue
    java.lang.Integer getInteger(int) -> getInteger
    int getIntValue(int) -> getIntValue
    java.lang.Long getLong(int) -> getLong
    long getLongValue(int) -> getLongValue
    java.lang.Float getFloat(int) -> getFloat
    float getFloatValue(int) -> getFloatValue
    java.lang.Double getDouble(int) -> getDouble
    double getDoubleValue(int) -> getDoubleValue
    java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    java.math.BigInteger getBigInteger(int) -> getBigInteger
    java.lang.String getString(int) -> getString
    java.util.Date getDate(int) -> getDate
    java.sql.Date getSqlDate(int) -> getSqlDate
    java.sql.Timestamp getTimestamp(int) -> getTimestamp
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.alibaba.fastjson.JSONAware -> com.alibaba.fastjson.JSONAware:
    java.lang.String toJSONString() -> toJSONString
com.alibaba.fastjson.JSONException -> com.alibaba.fastjson.JSONException:
    long serialVersionUID -> serialVersionUID
com.alibaba.fastjson.JSONObject -> com.alibaba.fastjson.JSONObject:
    long serialVersionUID -> serialVersionUID
    int DEFAULT_INITIAL_CAPACITY -> DEFAULT_INITIAL_CAPACITY
    java.util.Map map -> map
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String) -> getJSONObject
    com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String) -> getJSONArray
    java.lang.Object getObject(java.lang.String,java.lang.Class) -> getObject
    java.lang.Boolean getBoolean(java.lang.String) -> getBoolean
    byte[] getBytes(java.lang.String) -> getBytes
    boolean getBooleanValue(java.lang.String) -> getBooleanValue
    java.lang.Byte getByte(java.lang.String) -> getByte
    byte getByteValue(java.lang.String) -> getByteValue
    java.lang.Short getShort(java.lang.String) -> getShort
    short getShortValue(java.lang.String) -> getShortValue
    java.lang.Integer getInteger(java.lang.String) -> getInteger
    int getIntValue(java.lang.String) -> getIntValue
    java.lang.Long getLong(java.lang.String) -> getLong
    long getLongValue(java.lang.String) -> getLongValue
    java.lang.Float getFloat(java.lang.String) -> getFloat
    float getFloatValue(java.lang.String) -> getFloatValue
    java.lang.Double getDouble(java.lang.String) -> getDouble
    double getDoubleValue(java.lang.String) -> getDoubleValue
    java.math.BigDecimal getBigDecimal(java.lang.String) -> getBigDecimal
    java.math.BigInteger getBigInteger(java.lang.String) -> getBigInteger
    java.lang.String getString(java.lang.String) -> getString
    java.util.Date getDate(java.lang.String) -> getDate
    java.sql.Date getSqlDate(java.lang.String) -> getSqlDate
    java.sql.Timestamp getTimestamp(java.lang.String) -> getTimestamp
    java.lang.Object put(java.lang.String,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.alibaba.fastjson.JSONReader -> com.alibaba.fastjson.JSONReader:
    com.alibaba.fastjson.parser.DefaultJSONParser parser -> parser
    com.alibaba.fastjson.JSONStreamContext context -> context
    void config(com.alibaba.fastjson.parser.Feature,boolean) -> config
    void startObject() -> startObject
    void endObject() -> endObject
    void startArray() -> startArray
    void endArray() -> endArray
    void startStructure() -> startStructure
    void endStructure() -> endStructure
    boolean hasNext() -> hasNext
    void close() -> close
    java.lang.Integer readInteger() -> readInteger
    java.lang.Long readLong() -> readLong
    java.lang.String readString() -> readString
    java.lang.Object readObject(java.lang.reflect.Type) -> readObject
    java.lang.Object readObject(java.lang.Class) -> readObject
    void readObject(java.lang.Object) -> readObject
    java.lang.Object readObject() -> readObject
    java.lang.Object readObject(java.util.Map) -> readObject
    void readBefore() -> readBefore
    void readAfter() -> readAfter
com.alibaba.fastjson.JSONStreamAware -> com.alibaba.fastjson.JSONStreamAware:
    void writeJSONString(java.lang.Appendable) -> writeJSONString
com.alibaba.fastjson.JSONStreamContext -> com.alibaba.fastjson.JSONStreamContext:
    int StartObject -> StartObject
    int PropertyKey -> PropertyKey
    int PropertyValue -> PropertyValue
    int StartArray -> StartArray
    int ArrayValue -> ArrayValue
    com.alibaba.fastjson.JSONStreamContext parent -> parent
    int state -> state
    com.alibaba.fastjson.JSONStreamContext getParent() -> getParent
    int getState() -> getState
    void setState(int) -> setState
com.alibaba.fastjson.JSONWriter -> com.alibaba.fastjson.JSONWriter:
    com.alibaba.fastjson.serializer.SerializeWriter writer -> writer
    com.alibaba.fastjson.serializer.JSONSerializer serializer -> serializer
    com.alibaba.fastjson.JSONStreamContext context -> context
    void config(com.alibaba.fastjson.serializer.SerializerFeature,boolean) -> config
    void startObject() -> startObject
    void endObject() -> endObject
    void writeKey(java.lang.String) -> writeKey
    void writeValue(java.lang.Object) -> writeValue
    void writeObject(java.lang.String) -> writeObject
    void writeObject(java.lang.Object) -> writeObject
    void startArray() -> startArray
    void beginStructure() -> beginStructure
    void endArray() -> endArray
    void endStructure() -> endStructure
    void beforeWrite() -> beforeWrite
    void afterWriter() -> afterWriter
    void flush() -> flush
    void close() -> close
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
com.alibaba.fastjson.TypeReference -> com.alibaba.fastjson.TypeReference:
    java.lang.reflect.Type type -> type
    java.lang.reflect.Type LIST_STRING -> LIST_STRING
    java.lang.reflect.Type getType() -> getType
com.alibaba.fastjson.TypeReference$1 -> com.alibaba.fastjson.TypeReference$1:
com.alibaba.fastjson.annotation.JSONCreator -> com.alibaba.fastjson.annotation.JSONCreator:
com.alibaba.fastjson.annotation.JSONField -> com.alibaba.fastjson.annotation.JSONField:
    java.lang.String name() -> name
    java.lang.String format() -> format
    boolean serialize() -> serialize
    boolean deserialize() -> deserialize
    com.alibaba.fastjson.serializer.SerializerFeature[] serialzeFeatures() -> serialzeFeatures
    com.alibaba.fastjson.parser.Feature[] parseFeatures() -> parseFeatures
com.alibaba.fastjson.annotation.JSONType -> com.alibaba.fastjson.annotation.JSONType:
    boolean asm() -> asm
    java.lang.String[] orders() -> orders
    java.lang.String[] ignores() -> ignores
    com.alibaba.fastjson.serializer.SerializerFeature[] serialzeFeatures() -> serialzeFeatures
    boolean alphabetic() -> alphabetic
    java.lang.Class mappingTo() -> mappingTo
com.alibaba.fastjson.parser.AbstractJSONParser -> com.alibaba.fastjson.parser.AbstractJSONParser:
com.alibaba.fastjson.parser.CharTypes -> com.alibaba.fastjson.parser.CharTypes:
    char[] digits -> digits
    boolean[] firstIdentifierFlags -> firstIdentifierFlags
    boolean[] identifierFlags -> identifierFlags
    boolean[] specicalFlags_doubleQuotes -> specicalFlags_doubleQuotes
    boolean[] specicalFlags_singleQuotes -> specicalFlags_singleQuotes
    char[] replaceChars -> replaceChars
    char[] ASCII_CHARS -> ASCII_CHARS
    boolean isSpecial_doubleQuotes(char) -> isSpecial_doubleQuotes
com.alibaba.fastjson.parser.DefaultJSONParser -> com.alibaba.fastjson.parser.DefaultJSONParser:
    java.lang.Object input -> input
    com.alibaba.fastjson.parser.SymbolTable symbolTable -> symbolTable
    com.alibaba.fastjson.parser.ParserConfig config -> config
    java.util.Set primitiveClasses -> primitiveClasses
    java.lang.String dateFormatPattern -> dateFormatPattern
    java.text.DateFormat dateFormat -> dateFormat
    com.alibaba.fastjson.parser.JSONLexer lexer -> lexer
    com.alibaba.fastjson.parser.ParseContext context -> context
    com.alibaba.fastjson.parser.ParseContext[] contextArray -> contextArray
    int contextArrayIndex -> contextArrayIndex
    java.util.List resolveTaskList -> resolveTaskList
    int NONE -> NONE
    int NeedToResolve -> NeedToResolve
    int TypeNameRedirect -> TypeNameRedirect
    int resolveStatus -> resolveStatus
    java.lang.String getDateFomartPattern() -> getDateFomartPattern
    java.text.DateFormat getDateFormat() -> getDateFormat
    void setDateFormat(java.lang.String) -> setDateFormat
    void setDateFomrat(java.text.DateFormat) -> setDateFomrat
    com.alibaba.fastjson.parser.SymbolTable getSymbolTable() -> getSymbolTable
    java.lang.String getInput() -> getInput
    java.lang.Object parseObject(java.util.Map,java.lang.Object) -> parseObject
    com.alibaba.fastjson.parser.ParserConfig getConfig() -> getConfig
    void setConfig(com.alibaba.fastjson.parser.ParserConfig) -> setConfig
    java.lang.Object parseObject(java.lang.Class) -> parseObject
    java.lang.Object parseObject(java.lang.reflect.Type) -> parseObject
    java.util.List parseArray(java.lang.Class) -> parseArray
    void parseArray(java.lang.Class,java.util.Collection) -> parseArray
    void parseArray(java.lang.reflect.Type,java.util.Collection) -> parseArray
    void parseArray(java.lang.reflect.Type,java.util.Collection,java.lang.Object) -> parseArray
    java.lang.Object[] parseArray(java.lang.reflect.Type[]) -> parseArray
    void parseObject(java.lang.Object) -> parseObject
    java.lang.Object parseArrayWithType(java.lang.reflect.Type) -> parseArrayWithType
    int getResolveStatus() -> getResolveStatus
    void setResolveStatus(int) -> setResolveStatus
    java.lang.Object getObject(java.lang.String) -> getObject
    void checkListResolve(java.util.Collection) -> checkListResolve
    void checkMapResolve(java.util.Map,java.lang.String) -> checkMapResolve
    java.lang.Object parseObject(java.util.Map) -> parseObject
    com.alibaba.fastjson.JSONObject parseObject() -> parseObject
    void parseArray(java.util.Collection) -> parseArray
    void parseArray(java.util.Collection,java.lang.Object) -> parseArray
    com.alibaba.fastjson.parser.ParseContext getContext() -> getContext
    java.util.List getResolveTaskList() -> getResolveTaskList
    void addResolveTask(com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask) -> addResolveTask
    com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask getLastResolveTask() -> getLastResolveTask
    void setContext(com.alibaba.fastjson.parser.ParseContext) -> setContext
    void popContext() -> popContext
    com.alibaba.fastjson.parser.ParseContext setContext(java.lang.Object,java.lang.Object) -> setContext
    com.alibaba.fastjson.parser.ParseContext setContext(com.alibaba.fastjson.parser.ParseContext,java.lang.Object,java.lang.Object) -> setContext
    void addContext(com.alibaba.fastjson.parser.ParseContext) -> addContext
    java.lang.Object parse() -> parse
    java.lang.Object parseKey() -> parseKey
    java.lang.Object parse(java.lang.Object) -> parse
    void config(com.alibaba.fastjson.parser.Feature,boolean) -> config
    boolean isEnabled(com.alibaba.fastjson.parser.Feature) -> isEnabled
    com.alibaba.fastjson.parser.JSONLexer getLexer() -> getLexer
    void accept(int) -> accept
    void accept(int,int) -> accept
    void close() -> close
com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask -> com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask:
    com.alibaba.fastjson.parser.ParseContext context -> context
    java.lang.String referenceValue -> referenceValue
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer fieldDeserializer -> fieldDeserializer
    com.alibaba.fastjson.parser.ParseContext ownerContext -> ownerContext
    com.alibaba.fastjson.parser.ParseContext getContext() -> getContext
    java.lang.String getReferenceValue() -> getReferenceValue
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer getFieldDeserializer() -> getFieldDeserializer
    void setFieldDeserializer(com.alibaba.fastjson.parser.deserializer.FieldDeserializer) -> setFieldDeserializer
    com.alibaba.fastjson.parser.ParseContext getOwnerContext() -> getOwnerContext
    void setOwnerContext(com.alibaba.fastjson.parser.ParseContext) -> setOwnerContext
com.alibaba.fastjson.parser.Feature -> com.alibaba.fastjson.parser.Feature:
    com.alibaba.fastjson.parser.Feature AutoCloseSource -> AutoCloseSource
    com.alibaba.fastjson.parser.Feature AllowComment -> AllowComment
    com.alibaba.fastjson.parser.Feature AllowUnQuotedFieldNames -> AllowUnQuotedFieldNames
    com.alibaba.fastjson.parser.Feature AllowSingleQuotes -> AllowSingleQuotes
    com.alibaba.fastjson.parser.Feature InternFieldNames -> InternFieldNames
    com.alibaba.fastjson.parser.Feature AllowISO8601DateFormat -> AllowISO8601DateFormat
    com.alibaba.fastjson.parser.Feature AllowArbitraryCommas -> AllowArbitraryCommas
    com.alibaba.fastjson.parser.Feature UseBigDecimal -> UseBigDecimal
    com.alibaba.fastjson.parser.Feature IgnoreNotMatch -> IgnoreNotMatch
    com.alibaba.fastjson.parser.Feature SortFeidFastMatch -> SortFeidFastMatch
    com.alibaba.fastjson.parser.Feature DisableASM -> DisableASM
    com.alibaba.fastjson.parser.Feature DisableCircularReferenceDetect -> DisableCircularReferenceDetect
    com.alibaba.fastjson.parser.Feature InitStringFieldAsEmpty -> InitStringFieldAsEmpty
    int mask -> mask
    com.alibaba.fastjson.parser.Feature[] $VALUES -> $VALUES
    com.alibaba.fastjson.parser.Feature[] values() -> values
    com.alibaba.fastjson.parser.Feature valueOf(java.lang.String) -> valueOf
    int getMask() -> getMask
    boolean isEnabled(int,com.alibaba.fastjson.parser.Feature) -> isEnabled
    int config(int,com.alibaba.fastjson.parser.Feature,boolean) -> config
com.alibaba.fastjson.parser.JSONLexer -> com.alibaba.fastjson.parser.JSONLexer:
    byte EOI -> EOI
    int token -> token
    int pos -> pos
    int features -> features
    char ch -> ch
    int bp -> bp
    int eofPos -> eofPos
    char[] sbuf -> sbuf
    int sp -> sp
    int np -> np
    boolean hasSpecial -> hasSpecial
    java.util.Calendar calendar -> calendar
    java.lang.ThreadLocal SBUF_REF_LOCAL -> SBUF_REF_LOCAL
    com.alibaba.fastjson.parser.Keywords keywods -> keywods
    char[] typeFieldName -> typeFieldName
    boolean[] whitespaceFlags -> whitespaceFlags
    long MULTMIN_RADIX_TEN -> MULTMIN_RADIX_TEN
    long N_MULTMAX_RADIX_TEN -> N_MULTMAX_RADIX_TEN
    int INT_MULTMIN_RADIX_TEN -> INT_MULTMIN_RADIX_TEN
    int INT_N_MULTMAX_RADIX_TEN -> INT_N_MULTMAX_RADIX_TEN
    int[] digits -> digits
    void nextToken() -> nextToken
    void nextToken(int) -> nextToken
    void nextIdent() -> nextIdent
    void nextTokenWithColon() -> nextTokenWithColon
    int token() -> token
    java.lang.String tokenName() -> tokenName
    int pos() -> pos
    int getBufferPosition() -> getBufferPosition
    java.lang.Number integerValue() -> integerValue
    void nextTokenWithColon(int) -> nextTokenWithColon
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    void config(com.alibaba.fastjson.parser.Feature,boolean) -> config
    boolean isEnabled(com.alibaba.fastjson.parser.Feature) -> isEnabled
    java.lang.String numberString() -> numberString
    boolean isEOF() -> isEOF
    char getCurrent() -> getCurrent
    char charAt(int) -> charAt
    char next() -> next
    java.lang.String scanSymbol(com.alibaba.fastjson.parser.SymbolTable) -> scanSymbol
    void arrayCopy(int,char[],int,int) -> arrayCopy
    java.lang.String scanSymbol(com.alibaba.fastjson.parser.SymbolTable,char) -> scanSymbol
    void resetStringPosition() -> resetStringPosition
    java.lang.String scanSymbolUnQuoted(com.alibaba.fastjson.parser.SymbolTable) -> scanSymbolUnQuoted
    void copyTo(int,int,char[]) -> copyTo
    void scanString() -> scanString
    java.util.Calendar getCalendar() -> getCalendar
    int intValue() -> intValue
    byte[] bytesValue() -> bytesValue
    void close() -> close
    boolean isRef() -> isRef
    java.lang.String addSymbol(int,int,int,com.alibaba.fastjson.parser.SymbolTable) -> addSymbol
    void scanTrue() -> scanTrue
    void scanTreeSet() -> scanTreeSet
    void scanNullOrNew() -> scanNullOrNew
    void scanFalse() -> scanFalse
    void scanIdent() -> scanIdent
    java.lang.String stringVal() -> stringVal
    boolean isBlankInput() -> isBlankInput
    void skipWhitespace() -> skipWhitespace
    void scanStringSingleQuote() -> scanStringSingleQuote
    void scanSet() -> scanSet
    void putChar(char) -> putChar
    void scanNumber() -> scanNumber
    long longValue() -> longValue
    java.lang.Number decimalValue(boolean) -> decimalValue
    java.math.BigDecimal decimalValue() -> decimalValue
    java.lang.Number numberValue() -> numberValue
    boolean isWhitespace(char) -> isWhitespace
com.alibaba.fastjson.parser.JSONReaderScanner -> com.alibaba.fastjson.parser.JSONReaderScanner:
    int BUF_INIT_LEN -> BUF_INIT_LEN
    java.lang.ThreadLocal BUF_REF_LOCAL -> BUF_REF_LOCAL
    java.io.Reader reader -> reader
    char[] buf -> buf
    int bufLength -> bufLength
    char charAt(int) -> charAt
    java.lang.String addSymbol(int,int,int,com.alibaba.fastjson.parser.SymbolTable) -> addSymbol
    char next() -> next
    void copyTo(int,int,char[]) -> copyTo
    byte[] bytesValue() -> bytesValue
    void arrayCopy(int,char[],int,int) -> arrayCopy
    java.lang.String stringVal() -> stringVal
    java.lang.String numberString() -> numberString
    void close() -> close
    boolean isEOF() -> isEOF
com.alibaba.fastjson.parser.JSONScanner -> com.alibaba.fastjson.parser.JSONScanner:
    java.lang.String text -> text
    int ISO8601_LEN_0 -> ISO8601_LEN_0
    int ISO8601_LEN_1 -> ISO8601_LEN_1
    int ISO8601_LEN_2 -> ISO8601_LEN_2
    char charAt(int) -> charAt
    char next() -> next
    void copyTo(int,int,char[]) -> copyTo
    java.lang.String addSymbol(int,int,int,com.alibaba.fastjson.parser.SymbolTable) -> addSymbol
    byte[] bytesValue() -> bytesValue
    void arrayCopy(int,char[],int,int) -> arrayCopy
    java.lang.String stringVal() -> stringVal
    java.lang.String subString(int,int) -> subString
    java.lang.String numberString() -> numberString
    boolean scanISO8601DateIfMatch() -> scanISO8601DateIfMatch
    boolean scanISO8601DateIfMatch(boolean) -> scanISO8601DateIfMatch
    boolean checkTime(char,char,char,char,char,char) -> checkTime
    void setCalendar(char,char,char,char,char,char,char,char) -> setCalendar
    boolean checkDate(char,char,char,char,char,char,int,int) -> checkDate
    boolean isEOF() -> isEOF
com.alibaba.fastjson.parser.JSONToken -> com.alibaba.fastjson.parser.JSONToken:
    int ERROR -> ERROR
    int LITERAL_INT -> LITERAL_INT
    int LITERAL_FLOAT -> LITERAL_FLOAT
    int LITERAL_STRING -> LITERAL_STRING
    int LITERAL_ISO8601_DATE -> LITERAL_ISO8601_DATE
    int TRUE -> TRUE
    int FALSE -> FALSE
    int NULL -> NULL
    int NEW -> NEW
    int LPAREN -> LPAREN
    int RPAREN -> RPAREN
    int LBRACE -> LBRACE
    int RBRACE -> RBRACE
    int LBRACKET -> LBRACKET
    int RBRACKET -> RBRACKET
    int COMMA -> COMMA
    int COLON -> COLON
    int IDENTIFIER -> IDENTIFIER
    int FIELD_NAME -> FIELD_NAME
    int EOF -> EOF
    int SET -> SET
    int TREE_SET -> TREE_SET
    java.lang.String name(int) -> name
com.alibaba.fastjson.parser.JavaBeanMapping -> com.alibaba.fastjson.parser.JavaBeanMapping:
    com.alibaba.fastjson.parser.JavaBeanMapping instance -> instance
    com.alibaba.fastjson.parser.JavaBeanMapping getGlobalInstance() -> getGlobalInstance
com.alibaba.fastjson.parser.Keywords -> com.alibaba.fastjson.parser.Keywords:
    java.util.Map keywords -> keywords
    com.alibaba.fastjson.parser.Keywords DEFAULT_KEYWORDS -> DEFAULT_KEYWORDS
    java.lang.Integer getKeyword(java.lang.String) -> getKeyword
com.alibaba.fastjson.parser.ParseContext -> com.alibaba.fastjson.parser.ParseContext:
    java.lang.Object object -> object
    com.alibaba.fastjson.parser.ParseContext parent -> parent
    java.lang.Object fieldName -> fieldName
    java.lang.reflect.Type type -> type
    java.lang.reflect.Type getType() -> getType
    void setType(java.lang.reflect.Type) -> setType
    java.lang.Object getObject() -> getObject
    void setObject(java.lang.Object) -> setObject
    com.alibaba.fastjson.parser.ParseContext getParentContext() -> getParentContext
    java.lang.String getPath() -> getPath
    java.lang.String toString() -> toString
com.alibaba.fastjson.parser.ParserConfig -> com.alibaba.fastjson.parser.ParserConfig:
    java.util.Set primitiveClasses -> primitiveClasses
    com.alibaba.fastjson.parser.ParserConfig global -> global
    com.alibaba.fastjson.util.IdentityHashMap derializers -> derializers
    com.alibaba.fastjson.parser.SymbolTable symbolTable -> symbolTable
    com.alibaba.fastjson.parser.ParserConfig getGlobalInstance() -> getGlobalInstance
    com.alibaba.fastjson.parser.SymbolTable getSymbolTable() -> getSymbolTable
    com.alibaba.fastjson.util.IdentityHashMap getDerializers() -> getDerializers
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer getDeserializer(java.lang.reflect.Type) -> getDeserializer
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer getDeserializer(java.lang.Class,java.lang.reflect.Type) -> getDeserializer
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer createJavaBeanDeserializer(java.lang.Class,java.lang.reflect.Type) -> createJavaBeanDeserializer
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer createFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> createFieldDeserializer
    void putDeserializer(java.lang.reflect.Type,com.alibaba.fastjson.parser.deserializer.ObjectDeserializer) -> putDeserializer
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer getDeserializer(com.alibaba.fastjson.util.FieldInfo) -> getDeserializer
    boolean isPrimitive(java.lang.Class) -> isPrimitive
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    java.lang.reflect.Field getField0(java.lang.Class,java.lang.String) -> getField0
    java.util.Map getFieldDeserializers(java.lang.Class) -> getFieldDeserializers
com.alibaba.fastjson.parser.SymbolTable -> com.alibaba.fastjson.parser.SymbolTable:
    int DEFAULT_TABLE_SIZE -> DEFAULT_TABLE_SIZE
    int MAX_BUCKET_LENTH -> MAX_BUCKET_LENTH
    int MAX_SIZE -> MAX_SIZE
    com.alibaba.fastjson.parser.SymbolTable$Entry[] buckets -> buckets
    java.lang.String[] symbols -> symbols
    char[][] symbols_char -> symbols_char
    int indexMask -> indexMask
    int size -> size
    java.lang.String addSymbol(char[],int,int) -> addSymbol
    java.lang.String addSymbol(char[],int,int,int) -> addSymbol
    java.lang.String addSymbol(java.lang.String,int,int,int) -> addSymbol
    int size() -> size
    int hash(char[],int,int) -> hash
com.alibaba.fastjson.parser.SymbolTable$Entry -> com.alibaba.fastjson.parser.SymbolTable$Entry:
    java.lang.String symbol -> symbol
    int hashCode -> hashCode
    char[] characters -> characters
    byte[] bytes -> bytes
    com.alibaba.fastjson.parser.SymbolTable$Entry next -> next
com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer -> com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer:
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
com.alibaba.fastjson.parser.deserializer.ArrayDeserializer -> com.alibaba.fastjson.parser.deserializer.ArrayDeserializer:
    com.alibaba.fastjson.parser.deserializer.ArrayDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object toObjectArray(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Class,com.alibaba.fastjson.JSONArray) -> toObjectArray
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer:
    java.lang.reflect.Type itemType -> itemType
    int itemFastMatchToken -> itemFastMatchToken
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer deserializer -> deserializer
    int getFastMatchToken() -> getFastMatchToken
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    void parseArray(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.util.Collection) -> parseArray
com.alibaba.fastjson.parser.deserializer.BigDecimalDeserializer -> com.alibaba.fastjson.parser.deserializer.BigDecimalDeserializer:
    com.alibaba.fastjson.parser.deserializer.BigDecimalDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.BigIntegerDeserializer -> com.alibaba.fastjson.parser.deserializer.BigIntegerDeserializer:
    com.alibaba.fastjson.parser.deserializer.BigIntegerDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.BooleanDeserializer -> com.alibaba.fastjson.parser.deserializer.BooleanDeserializer:
    com.alibaba.fastjson.parser.deserializer.BooleanDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.BooleanFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.BooleanFieldDeserializer:
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.CalendarDeserializer -> com.alibaba.fastjson.parser.deserializer.CalendarDeserializer:
    com.alibaba.fastjson.parser.deserializer.CalendarDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.CharArrayDeserializer -> com.alibaba.fastjson.parser.deserializer.CharArrayDeserializer:
    com.alibaba.fastjson.parser.deserializer.CharArrayDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.CharacterDeserializer -> com.alibaba.fastjson.parser.deserializer.CharacterDeserializer:
    com.alibaba.fastjson.parser.deserializer.CharacterDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.CharsetDeserializer -> com.alibaba.fastjson.parser.deserializer.CharsetDeserializer:
    com.alibaba.fastjson.parser.deserializer.CharsetDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ClassDerializer -> com.alibaba.fastjson.parser.deserializer.ClassDerializer:
    com.alibaba.fastjson.parser.deserializer.ClassDerializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.CollectionDeserializer -> com.alibaba.fastjson.parser.deserializer.CollectionDeserializer:
    com.alibaba.fastjson.parser.deserializer.CollectionDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Class getRawClass(java.lang.reflect.Type) -> getRawClass
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.DateDeserializer -> com.alibaba.fastjson.parser.deserializer.DateDeserializer:
    com.alibaba.fastjson.parser.deserializer.DateDeserializer instance -> instance
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.DateFormatDeserializer -> com.alibaba.fastjson.parser.deserializer.DateFormatDeserializer:
    com.alibaba.fastjson.parser.deserializer.DateFormatDeserializer instance -> instance
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer:
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer fieldValueDeserilizer -> fieldValueDeserilizer
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.EnumDeserializer -> com.alibaba.fastjson.parser.deserializer.EnumDeserializer:
    java.lang.Class enumClass -> enumClass
    java.util.Map ordinalMap -> ordinalMap
    java.util.Map nameMap -> nameMap
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.FieldDeserializer -> com.alibaba.fastjson.parser.deserializer.FieldDeserializer:
    com.alibaba.fastjson.util.FieldInfo fieldInfo -> fieldInfo
    java.lang.Class clazz -> clazz
    java.lang.reflect.Method getMethod() -> getMethod
    java.lang.reflect.Field getField() -> getField
    java.lang.Class getFieldClass() -> getFieldClass
    java.lang.reflect.Type getFieldType() -> getFieldType
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
    void setValue(java.lang.Object,boolean) -> setValue
    void setValue(java.lang.Object,int) -> setValue
    void setValue(java.lang.Object,long) -> setValue
    void setValue(java.lang.Object,java.lang.String) -> setValue
    void setValue(java.lang.Object,java.lang.Object) -> setValue
com.alibaba.fastjson.parser.deserializer.FileDeserializer -> com.alibaba.fastjson.parser.deserializer.FileDeserializer:
    com.alibaba.fastjson.parser.deserializer.FileDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.FloatDeserializer -> com.alibaba.fastjson.parser.deserializer.FloatDeserializer:
    com.alibaba.fastjson.parser.deserializer.FloatDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.InetAddressDeserializer -> com.alibaba.fastjson.parser.deserializer.InetAddressDeserializer:
    com.alibaba.fastjson.parser.deserializer.InetAddressDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.InetSocketAddressDeserializer -> com.alibaba.fastjson.parser.deserializer.InetSocketAddressDeserializer:
    com.alibaba.fastjson.parser.deserializer.InetSocketAddressDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.IntegerDeserializer -> com.alibaba.fastjson.parser.deserializer.IntegerDeserializer:
    com.alibaba.fastjson.parser.deserializer.IntegerDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.IntegerFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.IntegerFieldDeserializer:
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.JSONArrayDeserializer -> com.alibaba.fastjson.parser.deserializer.JSONArrayDeserializer:
    com.alibaba.fastjson.parser.deserializer.JSONArrayDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.JSONObjectDeserializer -> com.alibaba.fastjson.parser.deserializer.JSONObjectDeserializer:
    com.alibaba.fastjson.parser.deserializer.JSONObjectDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer -> com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer:
    java.util.Map feildDeserializerMap -> feildDeserializerMap
    java.util.List fieldDeserializers -> fieldDeserializers
    java.lang.Class clazz -> clazz
    com.alibaba.fastjson.util.DeserializeBeanInfo beanInfo -> beanInfo
    java.util.Map getFieldDeserializerMap() -> getFieldDeserializerMap
    void addFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> addFieldDeserializer
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer createFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> createFieldDeserializer
    java.lang.Object createInstance(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type) -> createInstance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> deserialze
    boolean parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.String,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer -> com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer:
    com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ListResolveFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.ListResolveFieldDeserializer:
    int index -> index
    java.util.List list -> list
    com.alibaba.fastjson.parser.DefaultJSONParser parser -> parser
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
com.alibaba.fastjson.parser.deserializer.LocaleDeserializer -> com.alibaba.fastjson.parser.deserializer.LocaleDeserializer:
    com.alibaba.fastjson.parser.deserializer.LocaleDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.LongDeserializer -> com.alibaba.fastjson.parser.deserializer.LongDeserializer:
    com.alibaba.fastjson.parser.deserializer.LongDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.LongFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.LongFieldDeserializer:
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer fieldValueDeserilizer -> fieldValueDeserilizer
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.MapDeserializer -> com.alibaba.fastjson.parser.deserializer.MapDeserializer:
    com.alibaba.fastjson.parser.deserializer.MapDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.util.Map) -> deserialze
    java.util.Map parseMap(com.alibaba.fastjson.parser.DefaultJSONParser,java.util.Map,java.lang.reflect.Type,java.lang.Object) -> parseMap
    java.lang.Object parseMap(com.alibaba.fastjson.parser.DefaultJSONParser,java.util.Map,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.Object) -> parseMap
    java.util.Map createMap(java.lang.reflect.Type) -> createMap
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.MapResolveFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.MapResolveFieldDeserializer:
    java.lang.String key -> key
    java.util.Map map -> map
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
com.alibaba.fastjson.parser.deserializer.NumberDeserializer -> com.alibaba.fastjson.parser.deserializer.NumberDeserializer:
    com.alibaba.fastjson.parser.deserializer.NumberDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ObjectDeserializer -> com.alibaba.fastjson.parser.deserializer.ObjectDeserializer:
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.PatternDeserializer -> com.alibaba.fastjson.parser.deserializer.PatternDeserializer:
    com.alibaba.fastjson.parser.deserializer.PatternDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ReferenceDeserializer -> com.alibaba.fastjson.parser.deserializer.ReferenceDeserializer:
    com.alibaba.fastjson.parser.deserializer.ReferenceDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer -> com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer:
    com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer instance -> instance
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer -> com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer:
    com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.StringDeserializer -> com.alibaba.fastjson.parser.deserializer.StringDeserializer:
    com.alibaba.fastjson.parser.deserializer.StringDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.StringFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.StringFieldDeserializer:
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer fieldValueDeserilizer -> fieldValueDeserilizer
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ThrowableDeserializer -> com.alibaba.fastjson.parser.deserializer.ThrowableDeserializer:
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Throwable createException(java.lang.String,java.lang.Throwable,java.lang.Class) -> createException
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.TimeDeserializer -> com.alibaba.fastjson.parser.deserializer.TimeDeserializer:
    com.alibaba.fastjson.parser.deserializer.TimeDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.TimeZoneDeserializer -> com.alibaba.fastjson.parser.deserializer.TimeZoneDeserializer:
    com.alibaba.fastjson.parser.deserializer.TimeZoneDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.TimestampDeserializer -> com.alibaba.fastjson.parser.deserializer.TimestampDeserializer:
    com.alibaba.fastjson.parser.deserializer.TimestampDeserializer instance -> instance
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.URIDeserializer -> com.alibaba.fastjson.parser.deserializer.URIDeserializer:
    com.alibaba.fastjson.parser.deserializer.URIDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.URLDeserializer -> com.alibaba.fastjson.parser.deserializer.URLDeserializer:
    com.alibaba.fastjson.parser.deserializer.URLDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.UUIDDeserializer -> com.alibaba.fastjson.parser.deserializer.UUIDDeserializer:
    com.alibaba.fastjson.parser.deserializer.UUIDDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.AppendableSerializer -> com.alibaba.fastjson.serializer.AppendableSerializer:
    com.alibaba.fastjson.serializer.AppendableSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ArraySerializer -> com.alibaba.fastjson.serializer.ArraySerializer:
    java.lang.Class componentType -> componentType
    com.alibaba.fastjson.serializer.ObjectSerializer compObjectSerializer -> compObjectSerializer
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.AtomicBooleanSerializer -> com.alibaba.fastjson.serializer.AtomicBooleanSerializer:
    com.alibaba.fastjson.serializer.AtomicBooleanSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.AtomicIntegerArraySerializer -> com.alibaba.fastjson.serializer.AtomicIntegerArraySerializer:
    com.alibaba.fastjson.serializer.AtomicIntegerArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.AtomicIntegerSerializer -> com.alibaba.fastjson.serializer.AtomicIntegerSerializer:
    com.alibaba.fastjson.serializer.AtomicIntegerSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.AtomicLongArraySerializer -> com.alibaba.fastjson.serializer.AtomicLongArraySerializer:
    com.alibaba.fastjson.serializer.AtomicLongArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.AtomicLongSerializer -> com.alibaba.fastjson.serializer.AtomicLongSerializer:
    com.alibaba.fastjson.serializer.AtomicLongSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.BigDecimalSerializer -> com.alibaba.fastjson.serializer.BigDecimalSerializer:
    com.alibaba.fastjson.serializer.BigDecimalSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.BigIntegerSerializer -> com.alibaba.fastjson.serializer.BigIntegerSerializer:
    com.alibaba.fastjson.serializer.BigIntegerSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.BooleanArraySerializer -> com.alibaba.fastjson.serializer.BooleanArraySerializer:
    com.alibaba.fastjson.serializer.BooleanArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.BooleanSerializer -> com.alibaba.fastjson.serializer.BooleanSerializer:
    com.alibaba.fastjson.serializer.BooleanSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ByteArraySerializer -> com.alibaba.fastjson.serializer.ByteArraySerializer:
    com.alibaba.fastjson.serializer.ByteArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ByteSerializer -> com.alibaba.fastjson.serializer.ByteSerializer:
    com.alibaba.fastjson.serializer.ByteSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.CalendarSerializer -> com.alibaba.fastjson.serializer.CalendarSerializer:
    com.alibaba.fastjson.serializer.CalendarSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.CharArraySerializer -> com.alibaba.fastjson.serializer.CharArraySerializer:
    com.alibaba.fastjson.serializer.CharArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.CharacterSerializer -> com.alibaba.fastjson.serializer.CharacterSerializer:
    com.alibaba.fastjson.serializer.CharacterSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ClassSerializer -> com.alibaba.fastjson.serializer.ClassSerializer:
    com.alibaba.fastjson.serializer.ClassSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.CollectionSerializer -> com.alibaba.fastjson.serializer.CollectionSerializer:
    com.alibaba.fastjson.serializer.CollectionSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.DateFormatSerializer -> com.alibaba.fastjson.serializer.DateFormatSerializer:
    com.alibaba.fastjson.serializer.DateFormatSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.DateSerializer -> com.alibaba.fastjson.serializer.DateSerializer:
    com.alibaba.fastjson.serializer.DateSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.DoubleArraySerializer -> com.alibaba.fastjson.serializer.DoubleArraySerializer:
    com.alibaba.fastjson.serializer.DoubleArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.DoubleSerializer -> com.alibaba.fastjson.serializer.DoubleSerializer:
    com.alibaba.fastjson.serializer.DoubleSerializer instance -> instance
    java.text.DecimalFormat decimalFormat -> decimalFormat
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.EnumSerializer -> com.alibaba.fastjson.serializer.EnumSerializer:
    com.alibaba.fastjson.serializer.EnumSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.EnumerationSeriliazer -> com.alibaba.fastjson.serializer.EnumerationSeriliazer:
    com.alibaba.fastjson.serializer.EnumerationSeriliazer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ExceptionSerializer -> com.alibaba.fastjson.serializer.ExceptionSerializer:
    boolean isWriteClassName(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.reflect.Type,java.lang.Object) -> isWriteClassName
com.alibaba.fastjson.serializer.FieldSerializer -> com.alibaba.fastjson.serializer.FieldSerializer:
    com.alibaba.fastjson.util.FieldInfo fieldInfo -> fieldInfo
    java.lang.String double_quoted_fieldPrefix -> double_quoted_fieldPrefix
    java.lang.String single_quoted_fieldPrefix -> single_quoted_fieldPrefix
    java.lang.String un_quoted_fieldPrefix -> un_quoted_fieldPrefix
    boolean writeNull -> writeNull
    boolean isWriteNull() -> isWriteNull
    java.lang.reflect.Field getField() -> getField
    java.lang.String getName() -> getName
    java.lang.reflect.Method getMethod() -> getMethod
    void writePrefix(com.alibaba.fastjson.serializer.JSONSerializer) -> writePrefix
    java.lang.Object getPropertyValue(java.lang.Object) -> getPropertyValue
    void writeProperty(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeProperty
com.alibaba.fastjson.serializer.FileSerializer -> com.alibaba.fastjson.serializer.FileSerializer:
    com.alibaba.fastjson.serializer.FileSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.FilterUtils -> com.alibaba.fastjson.serializer.FilterUtils:
    java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,java.lang.Object) -> processValue
    java.lang.String processKey(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,java.lang.Object) -> processKey
    boolean applyName(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String) -> applyName
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,java.lang.Object) -> apply
com.alibaba.fastjson.serializer.FloatArraySerializer -> com.alibaba.fastjson.serializer.FloatArraySerializer:
    com.alibaba.fastjson.serializer.FloatArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.FloatSerializer -> com.alibaba.fastjson.serializer.FloatSerializer:
    com.alibaba.fastjson.serializer.FloatSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.InetAddressSerializer -> com.alibaba.fastjson.serializer.InetAddressSerializer:
    com.alibaba.fastjson.serializer.InetAddressSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.InetSocketAddressSerializer -> com.alibaba.fastjson.serializer.InetSocketAddressSerializer:
    com.alibaba.fastjson.serializer.InetSocketAddressSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.IntArraySerializer -> com.alibaba.fastjson.serializer.IntArraySerializer:
    com.alibaba.fastjson.serializer.IntArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.IntegerSerializer -> com.alibaba.fastjson.serializer.IntegerSerializer:
    com.alibaba.fastjson.serializer.IntegerSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.JSONAwareSerializer -> com.alibaba.fastjson.serializer.JSONAwareSerializer:
    com.alibaba.fastjson.serializer.JSONAwareSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.JSONLibDataFormatSerializer -> com.alibaba.fastjson.serializer.JSONLibDataFormatSerializer:
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.JSONSerializer -> com.alibaba.fastjson.serializer.JSONSerializer:
    com.alibaba.fastjson.serializer.SerializeConfig config -> config
    com.alibaba.fastjson.serializer.SerializeWriter out -> out
    java.util.List propertyFilters -> propertyFilters
    java.util.List valueFilters -> valueFilters
    java.util.List nameFilters -> nameFilters
    java.util.List propertyPreFilters -> propertyPreFilters
    int indentCount -> indentCount
    java.lang.String indent -> indent
    java.lang.String dateFormatPattern -> dateFormatPattern
    java.text.DateFormat dateFormat -> dateFormat
    java.util.IdentityHashMap references -> references
    com.alibaba.fastjson.serializer.SerialContext context -> context
    java.lang.String getDateFormatPattern() -> getDateFormatPattern
    java.text.DateFormat getDateFormat() -> getDateFormat
    void setDateFormat(java.text.DateFormat) -> setDateFormat
    void setDateFormat(java.lang.String) -> setDateFormat
    com.alibaba.fastjson.serializer.SerialContext getContext() -> getContext
    void setContext(com.alibaba.fastjson.serializer.SerialContext) -> setContext
    void setContext(com.alibaba.fastjson.serializer.SerialContext,java.lang.Object,java.lang.Object) -> setContext
    boolean isWriteClassName(java.lang.reflect.Type,java.lang.Object) -> isWriteClassName
    com.alibaba.fastjson.serializer.SerialContext getSerialContext(java.lang.Object) -> getSerialContext
    boolean containsReference(java.lang.Object) -> containsReference
    void writeReference(java.lang.Object) -> writeReference
    java.util.List getValueFilters() -> getValueFilters
    java.util.List getValueFiltersDirect() -> getValueFiltersDirect
    int getIndentCount() -> getIndentCount
    void incrementIndent() -> incrementIndent
    void decrementIdent() -> decrementIdent
    void println() -> println
    java.util.List getNameFilters() -> getNameFilters
    java.util.List getNameFiltersDirect() -> getNameFiltersDirect
    java.util.List getPropertyPreFilters() -> getPropertyPreFilters
    java.util.List getPropertyPreFiltersDirect() -> getPropertyPreFiltersDirect
    java.util.List getPropertyFilters() -> getPropertyFilters
    java.util.List getPropertyFiltersDirect() -> getPropertyFiltersDirect
    com.alibaba.fastjson.serializer.SerializeWriter getWriter() -> getWriter
    java.lang.String toString() -> toString
    void config(com.alibaba.fastjson.serializer.SerializerFeature,boolean) -> config
    boolean isEnabled(com.alibaba.fastjson.serializer.SerializerFeature) -> isEnabled
    void writeNull() -> writeNull
    com.alibaba.fastjson.serializer.SerializeConfig getMapping() -> getMapping
    void write(java.io.Writer,java.lang.Object) -> write
    void write(com.alibaba.fastjson.serializer.SerializeWriter,java.lang.Object) -> write
    void write(java.lang.Object) -> write
    void writeWithFieldName(java.lang.Object,java.lang.Object) -> writeWithFieldName
    void writeWithFieldName(java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> writeWithFieldName
    void writeWithFormat(java.lang.Object,java.lang.String) -> writeWithFormat
    void write(java.lang.String) -> write
    com.alibaba.fastjson.serializer.ObjectSerializer getObjectWriter(java.lang.Class) -> getObjectWriter
    void close() -> close
com.alibaba.fastjson.serializer.JSONSerializerContext -> com.alibaba.fastjson.serializer.JSONSerializerContext:
    int DEFAULT_TABLE_SIZE -> DEFAULT_TABLE_SIZE
    com.alibaba.fastjson.serializer.JSONSerializerContext$Entry[] buckets -> buckets
    int indexMask -> indexMask
    boolean put(java.lang.Object) -> put
com.alibaba.fastjson.serializer.JSONSerializerContext$Entry -> com.alibaba.fastjson.serializer.JSONSerializerContext$Entry:
    int hashCode -> hashCode
    java.lang.Object object -> object
    com.alibaba.fastjson.serializer.JSONSerializerContext$Entry next -> next
com.alibaba.fastjson.serializer.JSONSerializerMap -> com.alibaba.fastjson.serializer.JSONSerializerMap:
    boolean put(java.lang.Class,com.alibaba.fastjson.serializer.ObjectSerializer) -> put
com.alibaba.fastjson.serializer.JSONStreamAwareSerializer -> com.alibaba.fastjson.serializer.JSONStreamAwareSerializer:
    com.alibaba.fastjson.serializer.JSONStreamAwareSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.JavaBeanSerializer -> com.alibaba.fastjson.serializer.JavaBeanSerializer:
    com.alibaba.fastjson.serializer.FieldSerializer[] getters -> getters
    com.alibaba.fastjson.serializer.FieldSerializer[] sortedGetters -> sortedGetters
    com.alibaba.fastjson.serializer.FieldSerializer[] getGetters() -> getGetters
    java.util.Map createAliasMap(java.lang.String[]) -> createAliasMap
    boolean isWriteClassName(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.reflect.Type,java.lang.Object) -> isWriteClassName
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    void writeReference(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeReference
    com.alibaba.fastjson.serializer.FieldSerializer createFieldSerializer(com.alibaba.fastjson.util.FieldInfo) -> createFieldSerializer
com.alibaba.fastjson.serializer.ListSerializer -> com.alibaba.fastjson.serializer.ListSerializer:
    com.alibaba.fastjson.serializer.ListSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.LongArraySerializer -> com.alibaba.fastjson.serializer.LongArraySerializer:
    com.alibaba.fastjson.serializer.LongArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.LongSerializer -> com.alibaba.fastjson.serializer.LongSerializer:
    com.alibaba.fastjson.serializer.LongSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.MapSerializer -> com.alibaba.fastjson.serializer.MapSerializer:
    com.alibaba.fastjson.serializer.MapSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.NameFilter -> com.alibaba.fastjson.serializer.NameFilter:
    java.lang.String process(java.lang.Object,java.lang.String,java.lang.Object) -> process
com.alibaba.fastjson.serializer.NumberFieldSerializer -> com.alibaba.fastjson.serializer.NumberFieldSerializer:
    void writeProperty(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeProperty
com.alibaba.fastjson.serializer.ObjectArraySerializer -> com.alibaba.fastjson.serializer.ObjectArraySerializer:
    com.alibaba.fastjson.serializer.ObjectArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ObjectFieldSerializer -> com.alibaba.fastjson.serializer.ObjectFieldSerializer:
    com.alibaba.fastjson.serializer.ObjectSerializer fieldSerializer -> fieldSerializer
    java.lang.Class runtimeFieldClass -> runtimeFieldClass
    java.lang.String format -> format
    boolean writeNumberAsZero -> writeNumberAsZero
    boolean writeNullStringAsEmpty -> writeNullStringAsEmpty
    boolean writeNullBooleanAsFalse -> writeNullBooleanAsFalse
    boolean writeNullListAsEmpty -> writeNullListAsEmpty
    boolean writeEnumUsingToString -> writeEnumUsingToString
    void writeProperty(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeProperty
com.alibaba.fastjson.serializer.ObjectSerializer -> com.alibaba.fastjson.serializer.ObjectSerializer:
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.PascalNameFilter -> com.alibaba.fastjson.serializer.PascalNameFilter:
    java.lang.String process(java.lang.Object,java.lang.String,java.lang.Object) -> process
com.alibaba.fastjson.serializer.PatternSerializer -> com.alibaba.fastjson.serializer.PatternSerializer:
    com.alibaba.fastjson.serializer.PatternSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.PropertyFilter -> com.alibaba.fastjson.serializer.PropertyFilter:
    boolean apply(java.lang.Object,java.lang.String,java.lang.Object) -> apply
com.alibaba.fastjson.serializer.PropertyPreFilter -> com.alibaba.fastjson.serializer.PropertyPreFilter:
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String) -> apply
com.alibaba.fastjson.serializer.ReferenceSerializer -> com.alibaba.fastjson.serializer.ReferenceSerializer:
    com.alibaba.fastjson.serializer.ReferenceSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.SerialContext -> com.alibaba.fastjson.serializer.SerialContext:
    com.alibaba.fastjson.serializer.SerialContext parent -> parent
    java.lang.Object object -> object
    java.lang.Object fieldName -> fieldName
    com.alibaba.fastjson.serializer.SerialContext getParent() -> getParent
    java.lang.Object getObject() -> getObject
    java.lang.Object getFieldName() -> getFieldName
    java.lang.String getPath() -> getPath
    java.lang.String toString() -> toString
com.alibaba.fastjson.serializer.SerialWriterStringEncoder -> com.alibaba.fastjson.serializer.SerialWriterStringEncoder:
    java.nio.charset.CharsetEncoder encoder -> encoder
    byte[] encode(char[],int,int) -> encode
    java.nio.charset.CharsetEncoder getEncoder() -> getEncoder
    byte[] encode(char[],int,int,byte[]) -> encode
    int scale(int,float) -> scale
com.alibaba.fastjson.serializer.SerializeConfig -> com.alibaba.fastjson.serializer.SerializeConfig:
    com.alibaba.fastjson.serializer.SerializeConfig globalInstance -> globalInstance
    com.alibaba.fastjson.serializer.ObjectSerializer createJavaBeanSerializer(java.lang.Class) -> createJavaBeanSerializer
    com.alibaba.fastjson.serializer.SerializeConfig getGlobalInstance() -> getGlobalInstance
com.alibaba.fastjson.serializer.SerializeFilter -> com.alibaba.fastjson.serializer.SerializeFilter:
com.alibaba.fastjson.serializer.SerializeWriter -> com.alibaba.fastjson.serializer.SerializeWriter:
    char[] buf -> buf
    int count -> count
    java.lang.ThreadLocal bufLocal -> bufLocal
    int features -> features
    java.io.Writer writer -> writer
    int getBufferLength() -> getBufferLength
    void config(com.alibaba.fastjson.serializer.SerializerFeature,boolean) -> config
    boolean isEnabled(com.alibaba.fastjson.serializer.SerializerFeature) -> isEnabled
    void write(int) -> write
    void write(char) -> write
    void write(char[],int,int) -> write
    void expandCapacity(int) -> expandCapacity
    void write(java.lang.String,int,int) -> write
    void writeTo(java.io.Writer) -> writeTo
    void writeTo(java.io.OutputStream,java.lang.String) -> writeTo
    void writeTo(java.io.OutputStream,java.nio.charset.Charset) -> writeTo
    com.alibaba.fastjson.serializer.SerializeWriter append(java.lang.CharSequence) -> append
    com.alibaba.fastjson.serializer.SerializeWriter append(java.lang.CharSequence,int,int) -> append
    com.alibaba.fastjson.serializer.SerializeWriter append(char) -> append
    void reset() -> reset
    char[] toCharArray() -> toCharArray
    byte[] toBytes(java.lang.String) -> toBytes
    int size() -> size
    java.lang.String toString() -> toString
    void close() -> close
    void write(java.lang.String) -> write
    void writeInt(int) -> writeInt
    void writeByteArray(byte[]) -> writeByteArray
    void writeIntAndChar(int,char) -> writeIntAndChar
    void writeLongAndChar(long,char) -> writeLongAndChar
    void writeLong(long) -> writeLong
    void writeNull() -> writeNull
    void writeStringWithDoubleQuote(java.lang.String,char) -> writeStringWithDoubleQuote
    void writeStringWithDoubleQuote(java.lang.String,char,boolean) -> writeStringWithDoubleQuote
    void write(boolean) -> write
    void writeString(java.lang.String,char) -> writeString
    void writeString(java.lang.String) -> writeString
    void writeStringWithSingleQuote(java.lang.String) -> writeStringWithSingleQuote
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(java.lang.String,boolean) -> writeFieldName
    void writeKeyWithDoubleQuoteIfHasSpecial(java.lang.String) -> writeKeyWithDoubleQuoteIfHasSpecial
    void writeKeyWithSingleQuoteIfHasSpecial(java.lang.String) -> writeKeyWithSingleQuoteIfHasSpecial
    void flush() -> flush
    java.io.Writer append(char) -> append
    java.io.Writer append(java.lang.CharSequence,int,int) -> append
    java.io.Writer append(java.lang.CharSequence) -> append
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
com.alibaba.fastjson.serializer.SerializerFeature -> com.alibaba.fastjson.serializer.SerializerFeature:
    com.alibaba.fastjson.serializer.SerializerFeature QuoteFieldNames -> QuoteFieldNames
    com.alibaba.fastjson.serializer.SerializerFeature UseSingleQuotes -> UseSingleQuotes
    com.alibaba.fastjson.serializer.SerializerFeature WriteMapNullValue -> WriteMapNullValue
    com.alibaba.fastjson.serializer.SerializerFeature WriteEnumUsingToString -> WriteEnumUsingToString
    com.alibaba.fastjson.serializer.SerializerFeature UseISO8601DateFormat -> UseISO8601DateFormat
    com.alibaba.fastjson.serializer.SerializerFeature WriteNullListAsEmpty -> WriteNullListAsEmpty
    com.alibaba.fastjson.serializer.SerializerFeature WriteNullStringAsEmpty -> WriteNullStringAsEmpty
    com.alibaba.fastjson.serializer.SerializerFeature WriteNullNumberAsZero -> WriteNullNumberAsZero
    com.alibaba.fastjson.serializer.SerializerFeature WriteNullBooleanAsFalse -> WriteNullBooleanAsFalse
    com.alibaba.fastjson.serializer.SerializerFeature SkipTransientField -> SkipTransientField
    com.alibaba.fastjson.serializer.SerializerFeature SortField -> SortField
    com.alibaba.fastjson.serializer.SerializerFeature WriteTabAsSpecial -> WriteTabAsSpecial
    com.alibaba.fastjson.serializer.SerializerFeature PrettyFormat -> PrettyFormat
    com.alibaba.fastjson.serializer.SerializerFeature WriteClassName -> WriteClassName
    com.alibaba.fastjson.serializer.SerializerFeature DisableCircularReferenceDetect -> DisableCircularReferenceDetect
    com.alibaba.fastjson.serializer.SerializerFeature WriteSlashAsSpecial -> WriteSlashAsSpecial
    com.alibaba.fastjson.serializer.SerializerFeature BrowserCompatible -> BrowserCompatible
    com.alibaba.fastjson.serializer.SerializerFeature WriteDateUseDateFormat -> WriteDateUseDateFormat
    com.alibaba.fastjson.serializer.SerializerFeature NotWriteRootClassName -> NotWriteRootClassName
    com.alibaba.fastjson.serializer.SerializerFeature DisableCheckSpecialChar -> DisableCheckSpecialChar
    int mask -> mask
    com.alibaba.fastjson.serializer.SerializerFeature[] $VALUES -> $VALUES
    com.alibaba.fastjson.serializer.SerializerFeature[] values() -> values
    com.alibaba.fastjson.serializer.SerializerFeature valueOf(java.lang.String) -> valueOf
    int getMask() -> getMask
    boolean isEnabled(int,com.alibaba.fastjson.serializer.SerializerFeature) -> isEnabled
    int config(int,com.alibaba.fastjson.serializer.SerializerFeature,boolean) -> config
com.alibaba.fastjson.serializer.ShortArraySerializer -> com.alibaba.fastjson.serializer.ShortArraySerializer:
    com.alibaba.fastjson.serializer.ShortArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ShortSerializer -> com.alibaba.fastjson.serializer.ShortSerializer:
    com.alibaba.fastjson.serializer.ShortSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.SimpleDateFormatSerializer -> com.alibaba.fastjson.serializer.SimpleDateFormatSerializer:
    java.lang.String pattern -> pattern
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.SimplePropertyPreFilter -> com.alibaba.fastjson.serializer.SimplePropertyPreFilter:
    java.lang.Class clazz -> clazz
    java.util.Set includes -> includes
    java.util.Set excludes -> excludes
    java.lang.Class getClazz() -> getClazz
    java.util.Set getIncludes() -> getIncludes
    java.util.Set getExcludes() -> getExcludes
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String) -> apply
com.alibaba.fastjson.serializer.StringSerializer -> com.alibaba.fastjson.serializer.StringSerializer:
    com.alibaba.fastjson.serializer.StringSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.String) -> write
com.alibaba.fastjson.serializer.TimeZoneSerializer -> com.alibaba.fastjson.serializer.TimeZoneSerializer:
    com.alibaba.fastjson.serializer.TimeZoneSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ToStringSerializer -> com.alibaba.fastjson.serializer.ToStringSerializer:
    com.alibaba.fastjson.serializer.ToStringSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ValueFilter -> com.alibaba.fastjson.serializer.ValueFilter:
    java.lang.Object process(java.lang.Object,java.lang.String,java.lang.Object) -> process
com.alibaba.fastjson.util.Base64 -> com.alibaba.fastjson.util.Base64:
    char[] CA -> CA
    int[] IA -> IA
    byte[] decodeFast(char[],int,int) -> decodeFast
    byte[] decodeFast(java.lang.String,int,int) -> decodeFast
    byte[] decodeFast(java.lang.String) -> decodeFast
com.alibaba.fastjson.util.DeserializeBeanInfo -> com.alibaba.fastjson.util.DeserializeBeanInfo:
    java.lang.Class clazz -> clazz
    java.lang.reflect.Constructor defaultConstructor -> defaultConstructor
    java.lang.reflect.Constructor creatorConstructor -> creatorConstructor
    java.lang.reflect.Method factoryMethod -> factoryMethod
    java.util.List fieldList -> fieldList
    java.lang.Class getClazz() -> getClazz
    java.lang.reflect.Constructor getDefaultConstructor() -> getDefaultConstructor
    void setDefaultConstructor(java.lang.reflect.Constructor) -> setDefaultConstructor
    java.lang.reflect.Constructor getCreatorConstructor() -> getCreatorConstructor
    void setCreatorConstructor(java.lang.reflect.Constructor) -> setCreatorConstructor
    java.lang.reflect.Method getFactoryMethod() -> getFactoryMethod
    void setFactoryMethod(java.lang.reflect.Method) -> setFactoryMethod
    java.util.List getFieldList() -> getFieldList
    com.alibaba.fastjson.util.FieldInfo getField(java.lang.String) -> getField
    boolean add(com.alibaba.fastjson.util.FieldInfo) -> add
    com.alibaba.fastjson.util.DeserializeBeanInfo computeSetters(java.lang.Class,java.lang.reflect.Type) -> computeSetters
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    java.lang.reflect.Constructor getDefaultConstructor(java.lang.Class) -> getDefaultConstructor
    java.lang.reflect.Constructor getCreatorConstructor(java.lang.Class) -> getCreatorConstructor
    java.lang.reflect.Method getFactoryMethod(java.lang.Class) -> getFactoryMethod
com.alibaba.fastjson.util.FieldInfo -> com.alibaba.fastjson.util.FieldInfo:
    java.lang.String name -> name
    java.lang.reflect.Method method -> method
    java.lang.reflect.Field field -> field
    java.lang.Class fieldClass -> fieldClass
    java.lang.reflect.Type fieldType -> fieldType
    java.lang.Class declaringClass -> declaringClass
    boolean getOnly -> getOnly
    java.lang.reflect.Type getFieldType(java.lang.Class,java.lang.reflect.Type,java.lang.reflect.Type) -> getFieldType
    java.lang.reflect.Type getInheritGenericType(java.lang.Class,java.lang.reflect.TypeVariable) -> getInheritGenericType
    java.lang.String toString() -> toString
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.Class getFieldClass() -> getFieldClass
    java.lang.reflect.Type getFieldType() -> getFieldType
    java.lang.String getName() -> getName
    java.lang.reflect.Method getMethod() -> getMethod
    java.lang.reflect.Field getField() -> getField
    int compareTo(com.alibaba.fastjson.util.FieldInfo) -> compareTo
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
    void setAccessible(boolean) -> setAccessible
    boolean isGetOnly() -> isGetOnly
    int compareTo(java.lang.Object) -> compareTo
com.alibaba.fastjson.util.IOUtils -> com.alibaba.fastjson.util.IOUtils:
    char[] digits -> digits
    char[] DigitTens -> DigitTens
    char[] DigitOnes -> DigitOnes
    int[] sizeTable -> sizeTable
    void close(java.io.Closeable) -> close
    int stringSize(long) -> stringSize
    void getChars(long,int,char[]) -> getChars
    void getChars(int,int,char[]) -> getChars
    void getChars(byte,int,char[]) -> getChars
    int stringSize(int) -> stringSize
    void decode(java.nio.charset.CharsetDecoder,java.nio.ByteBuffer,java.nio.CharBuffer) -> decode
com.alibaba.fastjson.util.IdentityHashMap -> com.alibaba.fastjson.util.IdentityHashMap:
    int DEFAULT_TABLE_SIZE -> DEFAULT_TABLE_SIZE
    com.alibaba.fastjson.util.IdentityHashMap$Entry[] buckets -> buckets
    int indexMask -> indexMask
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
    int size() -> size
com.alibaba.fastjson.util.IdentityHashMap$Entry -> com.alibaba.fastjson.util.IdentityHashMap$Entry:
    int hashCode -> hashCode
    java.lang.Object key -> key
    java.lang.Object value -> value
    com.alibaba.fastjson.util.IdentityHashMap$Entry next -> next
com.alibaba.fastjson.util.ParameterizedTypeImpl -> com.alibaba.fastjson.util.ParameterizedTypeImpl:
    java.lang.reflect.Type[] actualTypeArguments -> actualTypeArguments
    java.lang.reflect.Type ownerType -> ownerType
    java.lang.reflect.Type rawType -> rawType
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    java.lang.reflect.Type getRawType() -> getRawType
com.alibaba.fastjson.util.ThreadLocalCache -> com.alibaba.fastjson.util.ThreadLocalCache:
    int CHARS_CACH_INIT_SIZE -> CHARS_CACH_INIT_SIZE
    int CHARS_CACH_MAX_SIZE -> CHARS_CACH_MAX_SIZE
    java.lang.ThreadLocal charsBufLocal -> charsBufLocal
    int BYTES_CACH_INIT_SIZE -> BYTES_CACH_INIT_SIZE
    int BYTeS_CACH_MAX_SIZE -> BYTeS_CACH_MAX_SIZE
    java.lang.ThreadLocal bytesBufLocal -> bytesBufLocal
    void clearChars() -> clearChars
    char[] getChars(int) -> getChars
    char[] allocate(int) -> allocate
    int getAllocateLength(int,int,int) -> getAllocateLength
    void clearBytes() -> clearBytes
    byte[] getBytes(int) -> getBytes
    byte[] allocateBytes(int) -> allocateBytes
com.alibaba.fastjson.util.TypeUtils -> com.alibaba.fastjson.util.TypeUtils:
    java.util.concurrent.ConcurrentMap mappings -> mappings
    java.lang.String castToString(java.lang.Object) -> castToString
    java.lang.Byte castToByte(java.lang.Object) -> castToByte
    java.lang.Character castToChar(java.lang.Object) -> castToChar
    java.lang.Short castToShort(java.lang.Object) -> castToShort
    java.math.BigDecimal castToBigDecimal(java.lang.Object) -> castToBigDecimal
    java.math.BigInteger castToBigInteger(java.lang.Object) -> castToBigInteger
    java.lang.Float castToFloat(java.lang.Object) -> castToFloat
    java.lang.Double castToDouble(java.lang.Object) -> castToDouble
    java.util.Date castToDate(java.lang.Object) -> castToDate
    java.sql.Date castToSqlDate(java.lang.Object) -> castToSqlDate
    java.sql.Timestamp castToTimestamp(java.lang.Object) -> castToTimestamp
    java.lang.Long castToLong(java.lang.Object) -> castToLong
    java.lang.Integer castToInt(java.lang.Object) -> castToInt
    byte[] castToBytes(java.lang.Object) -> castToBytes
    java.lang.Boolean castToBoolean(java.lang.Object) -> castToBoolean
    java.lang.Object castToJavaBean(java.lang.Object,java.lang.Class) -> castToJavaBean
    java.lang.Object cast(java.lang.Object,java.lang.Class,com.alibaba.fastjson.parser.ParserConfig) -> cast
    java.lang.Object castToEnum(java.lang.Object,java.lang.Class,com.alibaba.fastjson.parser.ParserConfig) -> castToEnum
    java.lang.Object cast(java.lang.Object,java.lang.reflect.Type,com.alibaba.fastjson.parser.ParserConfig) -> cast
    java.lang.Object cast(java.lang.Object,java.lang.reflect.ParameterizedType,com.alibaba.fastjson.parser.ParserConfig) -> cast
    java.lang.Object castToJavaBean(java.util.Map,java.lang.Class,com.alibaba.fastjson.parser.ParserConfig) -> castToJavaBean
    void addClassMapping(java.lang.String,java.lang.Class) -> addClassMapping
    void addBaseClassMappings() -> addBaseClassMappings
    void clearClassMapping() -> clearClassMapping
    java.lang.Class loadClass(java.lang.String) -> loadClass
    java.util.List computeGetters(java.lang.Class,java.util.Map) -> computeGetters
    java.util.List computeGetters(java.lang.Class,java.util.Map,boolean) -> computeGetters
    com.alibaba.fastjson.annotation.JSONField getSupperMethodAnnotation(java.lang.Class,java.lang.reflect.Method) -> getSupperMethodAnnotation
    boolean isJSONTypeIgnore(java.lang.Class,java.lang.String) -> isJSONTypeIgnore
    java.lang.Class getClass(java.lang.reflect.Type) -> getClass
com.baidu.location.BDLocation -> com.baidu.location.BDLocation:
    int TypeNone -> TypeNone
    int TypeGpsLocation -> TypeGpsLocation
    int TypeCriteriaException -> TypeCriteriaException
    int TypeNetWorkException -> TypeNetWorkException
    int TypeOffLineLocation -> TypeOffLineLocation
    int TypeOffLineLocationFail -> TypeOffLineLocationFail
    int TypeOffLineLocationNetworkFail -> TypeOffLineLocationNetworkFail
    int TypeNetWorkLocation -> TypeNetWorkLocation
    int TypeCacheLocation -> TypeCacheLocation
    int TypeServerError -> TypeServerError
    int if -> if
    java.lang.String d -> d
    double else -> else
    double for -> for
    boolean c -> c
    double f -> f
    boolean int -> int
    float new -> new
    boolean try -> try
    float long -> long
    boolean b -> b
    int do -> do
    float char -> char
    java.lang.String goto -> goto
    java.lang.String byte -> byte
    boolean void -> void
    boolean case -> case
    java.lang.String a -> a
    java.lang.String mServerString -> mServerString
    boolean e -> e
    com.baidu.location.BDLocation$a mAddr -> mAddr
    java.lang.String toJsonString() -> toJsonString
    void a(java.lang.Boolean) -> a
    boolean isCellChangeFlag() -> isCellChangeFlag
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    double getLatitude() -> getLatitude
    void setLatitude(double) -> setLatitude
    double getLongitude() -> getLongitude
    void setLongitude(double) -> setLongitude
    double getAltitude() -> getAltitude
    void setAltitude(double) -> setAltitude
    float getSpeed() -> getSpeed
    void setSpeed(float) -> setSpeed
    float getRadius() -> getRadius
    void setRadius(float) -> setRadius
    java.lang.String getCoorType() -> getCoorType
    void setCoorType(java.lang.String) -> setCoorType
    void setAddrStr(java.lang.String) -> setAddrStr
    boolean hasAltitude() -> hasAltitude
    boolean hasSpeed() -> hasSpeed
    boolean hasRadius() -> hasRadius
    com.baidu.location.BDLocation toNewLocation(java.lang.String) -> toNewLocation
    void setLocType(int) -> setLocType
    int getLocType() -> getLocType
    void setSatelliteNumber(int) -> setSatelliteNumber
    int getSatelliteNumber() -> getSatelliteNumber
    void setDerect(float) -> setDerect
    float getDerect() -> getDerect
    boolean hasSateNumber() -> hasSateNumber
    boolean hasPoi() -> hasPoi
    java.lang.String getPoi() -> getPoi
    boolean hasAddr() -> hasAddr
    java.lang.String getAddrStr() -> getAddrStr
    java.lang.String getProvince() -> getProvince
    java.lang.String getCity() -> getCity
    java.lang.String getCityCode() -> getCityCode
    java.lang.String getDistrict() -> getDistrict
    java.lang.String getStreet() -> getStreet
    java.lang.String getStreetNumber() -> getStreetNumber
com.baidu.location.BDLocation$a -> com.baidu.location.BDLocation$a:
    java.lang.String if -> if
    java.lang.String new -> new
    java.lang.String int -> int
    java.lang.String byte -> byte
    java.lang.String do -> do
    java.lang.String for -> for
    java.lang.String try -> try
    com.baidu.location.BDLocation a -> a
com.baidu.location.BDLocationListener -> com.baidu.location.BDLocationListener:
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
    void onReceivePoi(com.baidu.location.BDLocation) -> onReceivePoi
com.baidu.location.BDNotifyListener -> com.baidu.location.BDNotifyListener:
    double mLatitude -> mLatitude
    double mLongitude -> mLongitude
    float mRadius -> mRadius
    float differDistance -> differDistance
    java.lang.String mCoorType -> mCoorType
    double mLatitudeC -> mLatitudeC
    double mLongitudeC -> mLongitudeC
    int Notified -> Notified
    boolean isAdded -> isAdded
    com.baidu.location.i mNotifyCache -> mNotifyCache
    void SetNotifyLocation(double,double,float,java.lang.String) -> SetNotifyLocation
    void onNotify(com.baidu.location.BDLocation,float) -> onNotify
com.baidu.location.Jni -> com.baidu.location.Jni:
    int case -> case
    int try -> try
    int byte -> byte
    int for -> for
    int int -> int
    int if -> if
    int a -> a
    int do -> do
    boolean new -> new
    java.lang.String a(byte[],int) -> a
    java.lang.String b(double,double,int,int) -> b
    java.lang.String if(java.lang.String) -> if
    double[] if(double,double,java.lang.String) -> if
com.baidu.location.LocationClient -> com.baidu.location.LocationClient:
    java.lang.String for -> for
    int try -> try
    int p -> p
    int void -> void
    int B -> B
    int m -> m
    int o -> o
    int h -> h
    int b -> b
    int f -> f
    int if -> if
    int y -> y
    int n -> n
    int goto -> goto
    int s -> s
    java.lang.String e -> e
    long r -> r
    long char -> char
    java.lang.String A -> A
    com.baidu.location.LocationClientOption l -> l
    boolean q -> q
    android.content.Context j -> j
    android.os.Messenger k -> k
    com.baidu.location.LocationClient$a do -> do
    android.os.Messenger i -> i
    java.util.ArrayList C -> C
    com.baidu.location.BDLocation x -> x
    boolean d -> d
    boolean v -> v
    boolean g -> g
    com.baidu.location.LocationClient$b byte -> byte
    boolean a -> a
    boolean int -> int
    java.lang.Object new -> new
    com.baidu.location.i else -> else
    boolean w -> w
    com.baidu.location.BDLocationListener c -> c
    java.lang.String z -> z
    java.lang.String u -> u
    java.lang.Boolean long -> long
    java.lang.Boolean case -> case
    android.content.ServiceConnection t -> t
    com.baidu.location.LocationClientOption getLocOption() -> getLocOption
    void setLocOption(com.baidu.location.LocationClientOption) -> setLocOption
    boolean updateLocation(android.location.Location) -> updateLocation
    void requestNotifyLocation() -> requestNotifyLocation
    int requestOfflineLocation() -> requestOfflineLocation
    void try() -> try
    int requestLocation() -> requestLocation
    int requestPoi() -> requestPoi
    boolean isStarted() -> isStarted
    com.baidu.location.BDLocation getLastKnownLocation() -> getLastKnownLocation
    java.lang.String getVersion() -> getVersion
    void start() -> start
    void for() -> for
    void stop() -> stop
    void int() -> int
    void registerNotify(com.baidu.location.BDNotifyListener) -> registerNotify
    void a(android.os.Message) -> a
    void removeNotifyEvent(com.baidu.location.BDNotifyListener) -> removeNotifyEvent
    void int(android.os.Message) -> int
    void do(android.os.Message) -> do
    android.os.Bundle if() -> if
    android.os.Bundle a() -> a
    void registerNotifyLocationListener(com.baidu.location.BDLocationListener) -> registerNotifyLocationListener
    void try(android.os.Message) -> try
    void registerLocationListener(com.baidu.location.BDLocationListener) -> registerLocationListener
    void new(android.os.Message) -> new
    void unRegisterLocationListener(com.baidu.location.BDLocationListener) -> unRegisterLocationListener
    void if(android.os.Message) -> if
    void new() -> new
    void byte() -> byte
    void do() -> do
    void a(android.os.Message,int) -> a
    void for(android.os.Message) -> for
    void a(int) -> a
    void setForBaiduMap(boolean) -> setForBaiduMap
    android.os.Messenger a(com.baidu.location.LocationClient,android.os.Messenger) -> a
    android.os.Messenger char(com.baidu.location.LocationClient) -> char
    boolean a(com.baidu.location.LocationClient,boolean) -> a
    android.os.Messenger int(com.baidu.location.LocationClient) -> int
    android.os.Bundle long(com.baidu.location.LocationClient) -> long
    boolean do(com.baidu.location.LocationClient,boolean) -> do
    com.baidu.location.LocationClientOption byte(com.baidu.location.LocationClient) -> byte
    com.baidu.location.LocationClient$a try(com.baidu.location.LocationClient) -> try
    java.lang.Object do(com.baidu.location.LocationClient) -> do
    boolean for(com.baidu.location.LocationClient,boolean) -> for
    java.util.ArrayList else(com.baidu.location.LocationClient) -> else
    void do(com.baidu.location.LocationClient,android.os.Message) -> do
    void if(com.baidu.location.LocationClient,android.os.Message) -> if
    void a(com.baidu.location.LocationClient,android.os.Message) -> a
    void try(com.baidu.location.LocationClient,android.os.Message) -> try
    void new(com.baidu.location.LocationClient,android.os.Message) -> new
    void for(com.baidu.location.LocationClient,android.os.Message) -> for
    void if(com.baidu.location.LocationClient) -> if
    void new(com.baidu.location.LocationClient) -> new
    void case(com.baidu.location.LocationClient) -> case
    void a(com.baidu.location.LocationClient) -> a
    void for(com.baidu.location.LocationClient) -> for
    void goto(com.baidu.location.LocationClient) -> goto
    boolean if(com.baidu.location.LocationClient,boolean) -> if
    void a(com.baidu.location.LocationClient,android.os.Message,int) -> a
    void int(com.baidu.location.LocationClient,android.os.Message) -> int
com.baidu.location.LocationClient$1 -> com.baidu.location.LocationClient$1:
    com.baidu.location.LocationClient a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.baidu.location.LocationClient$a -> com.baidu.location.LocationClient$a:
    com.baidu.location.LocationClient a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.LocationClient$b -> com.baidu.location.LocationClient$b:
    com.baidu.location.LocationClient a -> a
    void run() -> run
com.baidu.location.LocationClientOption -> com.baidu.location.LocationClientOption:
    int MIN_SCAN_SPAN -> MIN_SCAN_SPAN
    int GpsFirst -> GpsFirst
    int NetWorkFirst -> NetWorkFirst
    java.lang.String try -> try
    java.lang.String char -> char
    boolean case -> case
    int int -> int
    int long -> long
    java.lang.String new -> new
    int goto -> goto
    boolean void -> void
    boolean for -> for
    boolean else -> else
    boolean if -> if
    float do -> do
    int a -> a
    java.lang.String byte -> byte
    boolean equals(com.baidu.location.LocationClientOption) -> equals
    java.lang.String getCoorType() -> getCoorType
    void setCoorType(java.lang.String) -> setCoorType
    java.lang.String getAddrType() -> getAddrType
    void setAddrType(java.lang.String) -> setAddrType
    boolean isOpenGps() -> isOpenGps
    void setOpenGps(boolean) -> setOpenGps
    boolean isLocationNotify() -> isLocationNotify
    void setLocationNotify(boolean) -> setLocationNotify
    int getScanSpan() -> getScanSpan
    void setScanSpan(int) -> setScanSpan
    int getTimeOut() -> getTimeOut
    void setTimeOut(int) -> setTimeOut
    java.lang.String getProdName() -> getProdName
    void setProdName(java.lang.String) -> setProdName
    int getPriority() -> getPriority
    void setPriority(int) -> setPriority
    java.lang.String getServiceName() -> getServiceName
    void setServiceName(java.lang.String) -> setServiceName
    void setPoiDistance(float) -> setPoiDistance
    float getPoiDistance() -> getPoiDistance
    void setPoiNumber(int) -> setPoiNumber
    int getPoiNumber() -> getPoiNumber
    void setPoiExtraInfo(boolean) -> setPoiExtraInfo
    boolean getPoiExtranInfo() -> getPoiExtranInfo
    void disableCache(boolean) -> disableCache
    boolean isDisableCache() -> isDisableCache
com.baidu.location.a -> com.baidu.location.a:
    java.lang.String if -> if
    java.util.ArrayList do -> do
    android.os.Handler int -> int
    boolean for -> for
    boolean a -> a
    boolean for() -> for
    void int(android.os.Message) -> int
    void if(android.os.Message) -> if
    boolean for(android.os.Message) -> for
    java.lang.String a(android.os.Message) -> a
    void a(java.lang.String,int) -> a
    void a(java.lang.String) -> a
    void if(java.lang.String) -> if
    void a(java.lang.String,android.os.Message) -> a
    void if() -> if
    java.lang.String byte() -> byte
    int do(android.os.Message) -> do
    com.baidu.location.a$a a(android.os.Messenger) -> a
    void a(com.baidu.location.a$a) -> a
    void do() -> do
    void int() -> int
    void a() -> a
    void new() -> new
    java.lang.String try() -> try
com.baidu.location.a$a -> com.baidu.location.a$a:
    java.lang.String int -> int
    android.os.Messenger for -> for
    com.baidu.location.LocationClientOption do -> do
    int if -> if
    com.baidu.location.a a -> a
    void if(java.lang.String) -> if
    void a(java.lang.String,int) -> a
    void a(java.lang.String) -> a
    void a() -> a
    void if() -> if
    void a(int) -> a
    void a(int,java.lang.String,java.lang.String) -> a
    void a(com.baidu.location.a$a,int) -> a
com.baidu.location.b -> com.baidu.location.b:
    java.lang.String if -> if
    int s -> s
    long q -> q
    int z -> z
    int p -> p
    int goto -> goto
    double else -> else
    android.content.Context f -> f
    android.location.LocationManager do -> do
    android.location.Location F -> F
    com.baidu.location.b$b x -> x
    android.location.GpsStatus a -> a
    com.baidu.location.b$a new -> new
    int k -> k
    long d -> d
    long long -> long
    boolean int -> int
    android.os.Handler H -> H
    boolean t -> t
    java.lang.String D -> D
    boolean C -> C
    long E -> E
    int K -> K
    boolean w -> w
    boolean e -> e
    java.util.List u -> u
    java.lang.String g -> g
    java.lang.String try -> try
    java.lang.String n -> n
    java.lang.String r -> r
    com.baidu.location.b$d for -> for
    java.lang.String N -> N
    java.io.File A -> A
    int l -> l
    int h -> h
    int B -> B
    int v -> v
    int M -> M
    int i -> i
    int G -> G
    int void -> void
    java.lang.StringBuffer y -> y
    boolean char -> char
    int case -> case
    int c -> c
    long byte -> byte
    long J -> J
    long L -> L
    double o -> o
    double m -> m
    int j -> j
    int I -> I
    int b -> b
    void k() -> k
    void l() -> l
    java.lang.String char() -> char
    java.lang.String for(android.location.Location) -> for
    java.lang.String int() -> int
    android.location.Location try() -> try
    boolean case() -> case
    boolean new() -> new
    boolean a(android.location.Location,android.location.Location,boolean) -> a
    void a(android.location.Location) -> a
    void a(double,double,float) -> a
    void a(boolean) -> a
    java.lang.String do(android.location.Location) -> do
    java.lang.String if(android.location.Location) -> if
    boolean if(int,int,int) -> if
    boolean h() -> h
    void f() -> f
    java.lang.String j() -> j
    void goto() -> goto
    void a(com.baidu.location.b,android.location.Location) -> a
    boolean a(com.baidu.location.b,boolean) -> a
    boolean try(com.baidu.location.b) -> try
    void if(com.baidu.location.b,boolean) -> if
    long if(com.baidu.location.b,long) -> if
    android.location.LocationManager new(com.baidu.location.b) -> new
    android.location.GpsStatus do(com.baidu.location.b) -> do
    android.location.GpsStatus a(com.baidu.location.b,android.location.GpsStatus) -> a
    int void() -> void
    long do(com.baidu.location.b,long) -> do
    int a(int) -> a
    long a(com.baidu.location.b) -> a
    boolean int(com.baidu.location.b) -> int
    java.util.List case(com.baidu.location.b) -> case
    java.lang.String if(com.baidu.location.b) -> if
    java.lang.String for(com.baidu.location.b) -> for
    java.lang.String byte(com.baidu.location.b) -> byte
    java.lang.String a(java.lang.String) -> a
    java.lang.String if(com.baidu.location.b,java.lang.String) -> if
    java.lang.String do(com.baidu.location.b,java.lang.String) -> do
    java.lang.String a(com.baidu.location.b,java.lang.String) -> a
    boolean do(com.baidu.location.b,boolean) -> do
    long a(com.baidu.location.b,long) -> a
    boolean else() -> else
    int if(int) -> if
    java.lang.StringBuffer a(java.lang.StringBuffer) -> a
    java.lang.StringBuffer c() -> c
    int do(int) -> do
    long a(long) -> a
    double if(double) -> if
    double a(double) -> a
    long if(long) -> if
    long do(long) -> do
    boolean if(boolean) -> if
    double d() -> d
    double a() -> a
    long g() -> g
    int i() -> i
    int for(int) -> for
    int new(int) -> new
    long o() -> o
    int int(int) -> int
    long b() -> b
    int if() -> if
    int e() -> e
    int do() -> do
    int byte() -> byte
    int for() -> for
    java.io.File m() -> m
    void n() -> n
    boolean long() -> long
    boolean a(int,int,int) -> a
com.baidu.location.b$1 -> com.baidu.location.b$1:
com.baidu.location.b$a -> com.baidu.location.b$a:
    com.baidu.location.b a -> a
    void onGpsStatusChanged(int) -> onGpsStatusChanged
    void onNmeaReceived(long,java.lang.String) -> onNmeaReceived
com.baidu.location.b$b -> com.baidu.location.b$b:
    com.baidu.location.b a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.baidu.location.b$c -> com.baidu.location.b$c:
    boolean goto -> goto
    java.lang.String char -> char
    boolean h -> h
    java.lang.String int -> int
    int long -> long
    int d -> d
    java.lang.String f -> f
    boolean new -> new
    java.lang.String b -> b
    char case -> case
    java.lang.String g -> g
    boolean void -> void
    int if -> if
    double byte -> byte
    double for -> for
    java.util.List do -> do
    boolean try -> try
    java.util.List else -> else
    int e -> e
    int a -> a
    com.baidu.location.b c -> c
    void try() -> try
    boolean a(java.lang.String) -> a
    int case() -> case
    int a(boolean,boolean,boolean,boolean,boolean) -> a
    double[] a(java.util.List) -> a
    double[] if(double,double) -> if
    double[] a(double,double) -> a
    boolean if() -> if
    boolean for() -> for
    boolean long() -> long
    boolean goto() -> goto
    boolean new() -> new
    int else() -> else
    java.lang.String do() -> do
    double byte() -> byte
    double a() -> a
    java.lang.String void() -> void
    java.lang.String char() -> char
    java.util.List int() -> int
    boolean if(com.baidu.location.b$c) -> if
    int do(com.baidu.location.b$c) -> do
    double for(com.baidu.location.b$c) -> for
    double a(com.baidu.location.b$c) -> a
com.baidu.location.b$c$a -> com.baidu.location.b$c$a:
    int int -> int
    int a -> a
    int if -> if
    int do -> do
    com.baidu.location.b$c for -> for
    int a() -> a
    int if() -> if
    int do() -> do
com.baidu.location.b$d -> com.baidu.location.b$d:
    java.lang.String if -> if
    boolean a -> a
    boolean a(android.location.Location) -> a
    boolean a(android.location.Location,int,int) -> a
    boolean if() -> if
    boolean a(java.lang.String) -> a
    java.lang.String a(int) -> a
    void a() -> a
    void a(com.baidu.location.b$d) -> a
    boolean a(com.baidu.location.b$d,android.location.Location) -> a
com.baidu.location.c -> com.baidu.location.c:
    java.lang.String else -> else
    android.content.Context if -> if
    android.telephony.TelephonyManager try -> try
    com.baidu.location.c$a a -> a
    java.util.List new -> new
    java.lang.String byte -> byte
    java.lang.String goto -> goto
    android.os.Handler do -> do
    com.baidu.location.c$b int -> int
    boolean b -> b
    java.lang.reflect.Method long -> long
    java.lang.reflect.Method case -> case
    java.lang.reflect.Method for -> for
    java.lang.Class d -> d
    long void -> void
    int c -> c
    boolean char -> char
    void do() -> do
    void byte() -> byte
    int new() -> new
    java.lang.String int() -> int
    boolean if() -> if
    com.baidu.location.c$a a() -> a
    java.lang.String for() -> for
    void a(android.telephony.CellLocation) -> a
    java.lang.String a(boolean) -> a
    long try() -> try
    com.baidu.location.c$a for(com.baidu.location.c) -> for
    java.util.List do(com.baidu.location.c) -> do
    android.telephony.TelephonyManager if(com.baidu.location.c) -> if
    void a(com.baidu.location.c,android.telephony.CellLocation) -> a
    android.os.Handler a(com.baidu.location.c) -> a
com.baidu.location.c$a -> com.baidu.location.c$a:
    int for -> for
    int try -> try
    int do -> do
    int if -> if
    long byte -> byte
    int int -> int
    char new -> new
    com.baidu.location.c a -> a
    boolean a(com.baidu.location.c$a) -> a
    boolean do() -> do
    boolean for() -> for
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    java.lang.String if() -> if
    java.lang.String int() -> int
com.baidu.location.c$b -> com.baidu.location.c$b:
    com.baidu.location.c a -> a
    void onCellLocationChanged(android.telephony.CellLocation) -> onCellLocationChanged
    void onSignalStrengthsChanged(android.telephony.SignalStrength) -> onSignalStrengthsChanged
com.baidu.location.d -> com.baidu.location.d:
    char[] if -> if
    char[] a -> a
    char[] a(byte[]) -> a
    char[] if(byte[]) -> if
    java.lang.String a(java.lang.String) -> a
com.baidu.location.e -> com.baidu.location.e:
    java.lang.String try -> try
    int byte -> byte
    long f -> f
    long new -> new
    long a -> a
    android.content.Context goto -> goto
    android.os.Handler if -> if
    android.net.wifi.WifiManager void -> void
    com.baidu.location.e$b char -> char
    com.baidu.location.e$a c -> c
    com.baidu.location.e$c case -> case
    long b -> b
    long long -> long
    boolean int -> int
    java.lang.Object g -> g
    java.lang.reflect.Method e -> e
    boolean for -> for
    boolean d -> d
    boolean else -> else
    boolean do -> do
    void try() -> try
    void case() -> case
    void else() -> else
    boolean a() -> a
    boolean new() -> new
    java.lang.String char() -> char
    com.baidu.location.e$c int() -> int
    com.baidu.location.e$c byte() -> byte
    void if() -> if
    void goto() -> goto
    void for() -> for
    boolean do(com.baidu.location.e) -> do
    android.os.Handler if(com.baidu.location.e) -> if
    boolean a(com.baidu.location.e,boolean) -> a
    void a(com.baidu.location.e) -> a
    void for(com.baidu.location.e) -> for
    java.lang.String do() -> do
com.baidu.location.e$1 -> com.baidu.location.e$1:
com.baidu.location.e$a -> com.baidu.location.e$a:
    com.baidu.location.e a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.e$b -> com.baidu.location.e$b:
    com.baidu.location.e a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.e$c -> com.baidu.location.e$c:
    java.util.List for -> for
    long if -> if
    long int -> int
    boolean do -> do
    com.baidu.location.e a -> a
    java.lang.String int() -> int
    int try() -> try
    java.lang.String char() -> char
    java.lang.String byte() -> byte
    java.lang.String a(int) -> a
    java.lang.String else() -> else
    void a() -> a
    java.lang.String if(int) -> if
    boolean if(com.baidu.location.e$c) -> if
    boolean do(com.baidu.location.e$c) -> do
    boolean a(com.baidu.location.e$c) -> a
    boolean a(com.baidu.location.e$c,com.baidu.location.e$c,float) -> a
    int do() -> do
    boolean case() -> case
    boolean for() -> for
    boolean new() -> new
    boolean if() -> if
com.baidu.location.e$d -> com.baidu.location.e$d:
    com.baidu.location.e a -> a
    void run() -> run
com.baidu.location.f -> com.baidu.location.f:
    java.lang.String v -> v
    float ap -> ap
    int l -> l
    int c -> c
    int long -> long
    int ah -> ah
    int g -> g
    int aa -> aa
    int for -> for
    int s -> s
    int w -> w
    int W -> W
    int I -> I
    int L -> L
    int do -> do
    int int -> int
    int p -> p
    int case -> case
    int ag -> ag
    int z -> z
    int G -> G
    int ar -> ar
    int U -> U
    int i -> i
    int ak -> ak
    int D -> D
    int aq -> aq
    int M -> M
    int b -> b
    int K -> K
    int e -> e
    int void -> void
    int V -> V
    int t -> t
    int B -> B
    int ao -> ao
    int S -> S
    int x -> x
    int else -> else
    int ai -> ai
    java.lang.String ac -> ac
    java.lang.String m -> m
    java.lang.String a -> a
    java.io.File j -> j
    java.io.File k -> k
    int at -> at
    int byte -> byte
    int af -> af
    android.os.Handler R -> R
    android.os.Messenger an -> an
    com.baidu.location.c r -> r
    com.baidu.location.b ab -> ab
    com.baidu.location.e F -> F
    com.baidu.location.a au -> au
    com.baidu.location.e$c C -> C
    com.baidu.location.e$c char -> char
    com.baidu.location.e$c ae -> ae
    com.baidu.location.c$a try -> try
    com.baidu.location.c$a al -> al
    com.baidu.location.c$a u -> u
    android.location.Location f -> f
    java.lang.String h -> h
    java.lang.String new -> new
    java.lang.String H -> H
    boolean ad -> ad
    boolean Y -> Y
    boolean O -> O
    boolean aj -> aj
    long P -> P
    long d -> d
    boolean N -> N
    com.baidu.location.f$c y -> y
    android.database.sqlite.SQLiteDatabase T -> T
    java.lang.String if -> if
    java.lang.String A -> A
    java.lang.String as -> as
    boolean Q -> Q
    boolean goto -> goto
    java.lang.String X -> X
    int Z -> Z
    boolean J -> J
    double o -> o
    double n -> n
    double q -> q
    long E -> E
    boolean am -> am
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void if(android.os.Message) -> if
    void new(android.os.Message) -> new
    void try(android.os.Message) -> try
    void if() -> if
    void a(android.os.Message) -> a
    void goto() -> goto
    void do() -> do
    void b() -> b
    void try() -> try
    java.lang.String a(java.lang.String) -> a
    void void() -> void
    boolean a(com.baidu.location.e$c) -> a
    boolean a(com.baidu.location.c$a) -> a
    void do(android.os.Message) -> do
    void for(android.os.Message) -> for
    void int(android.os.Message) -> int
    void do(java.lang.String) -> do
    java.lang.String if(boolean) -> if
    java.lang.String a(boolean) -> a
    void if(java.lang.String) -> if
    void d() -> d
    void byte() -> byte
    void a(android.os.Message,int) -> a
    void int() -> int
    void c() -> c
    void a(int) -> a
    void case() -> case
    void char() -> char
    void long() -> long
    java.lang.String new() -> new
    boolean else() -> else
    boolean int(com.baidu.location.f) -> int
    boolean a(com.baidu.location.f,boolean) -> a
    void else(com.baidu.location.f) -> else
    boolean if(com.baidu.location.f) -> if
    void do(com.baidu.location.f,android.os.Message) -> do
    void a(com.baidu.location.f,android.os.Message) -> a
    void new(com.baidu.location.f,android.os.Message) -> new
    void a(com.baidu.location.f,android.os.Message,int) -> a
    void for(com.baidu.location.f) -> for
    void char(com.baidu.location.f) -> char
    void int(com.baidu.location.f,android.os.Message) -> int
    void c(com.baidu.location.f) -> c
    void for(com.baidu.location.f,android.os.Message) -> for
    void if(com.baidu.location.f,android.os.Message) -> if
    void try(com.baidu.location.f,android.os.Message) -> try
    void case(com.baidu.location.f) -> case
    void a(com.baidu.location.f) -> a
    void try(com.baidu.location.f) -> try
    void b(com.baidu.location.f) -> b
    void a(com.baidu.location.f,int) -> a
    com.baidu.location.f$c do(com.baidu.location.f) -> do
    void void(com.baidu.location.f) -> void
    java.io.File a(java.io.File) -> a
    com.baidu.location.e goto(com.baidu.location.f) -> goto
    com.baidu.location.c long(com.baidu.location.f) -> long
    java.io.File for() -> for
    java.lang.String byte(com.baidu.location.f) -> byte
    java.io.File a() -> a
    com.baidu.location.a new(com.baidu.location.f) -> new
com.baidu.location.f$1 -> com.baidu.location.f$1:
com.baidu.location.f$a -> com.baidu.location.f$a:
    android.content.Context if -> if
    com.baidu.location.f a -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void a(java.io.File,java.lang.String,java.lang.String) -> a
    void a() -> a
    java.lang.String a(java.lang.Throwable) -> a
    boolean a(java.lang.String,java.lang.String) -> a
com.baidu.location.f$b -> com.baidu.location.f$b:
    com.baidu.location.f a -> a
    void run() -> run
com.baidu.location.f$c -> com.baidu.location.f$c:
    long new -> new
    int char -> char
    android.app.AlarmManager try -> try
    com.baidu.location.f$c$a case -> case
    android.app.PendingIntent d -> d
    android.content.Context goto -> goto
    long void -> void
    long[] a -> a
    int int -> int
    com.baidu.location.c$a b -> b
    java.lang.String for -> for
    java.lang.String long -> long
    int byte -> byte
    boolean do -> do
    boolean if -> if
    boolean else -> else
    java.lang.String c -> c
    com.baidu.location.f e -> e
    void try() -> try
    void do() -> do
    void for() -> for
    void int() -> int
    void a() -> a
    void if() -> if
    void case() -> case
    void new() -> new
    void byte() -> byte
    java.lang.String a(com.baidu.location.f$c,java.lang.String) -> a
com.baidu.location.f$c$a -> com.baidu.location.f$c$a:
    com.baidu.location.f$c a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.f$d -> com.baidu.location.f$d:
    com.baidu.location.f a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.baidu.location.g -> com.baidu.location.g:
    java.lang.String new -> new
    int d -> d
    int void -> void
    java.lang.String l -> l
    java.lang.String e -> e
    java.lang.String do -> do
    java.lang.String for -> for
    java.lang.String long -> long
    boolean j -> j
    boolean else -> else
    boolean b -> b
    boolean char -> char
    boolean h -> h
    java.util.ArrayList f -> f
    int a -> a
    int byte -> byte
    int case -> case
    int n -> n
    int i -> i
    android.net.Uri if -> if
    int try -> try
    java.lang.String k -> k
    int g -> g
    int goto -> goto
    android.os.Handler int -> int
    android.os.Handler m -> m
    android.os.Handler c -> c
    boolean a(java.lang.String,android.os.Handler) -> a
    boolean if(java.lang.String,android.os.Handler) -> if
    void f() -> f
    void a(java.lang.String,boolean) -> a
    boolean a(android.content.Context) -> a
    boolean for(android.content.Context) -> for
    int do(android.content.Context) -> do
    int if(android.content.Context) -> if
    boolean if(java.lang.String) -> if
    void c() -> c
    void for() -> for
    void for(android.os.Handler) -> for
    int a(android.content.Context,android.net.NetworkInfo) -> a
    int new() -> new
    java.lang.String else() -> else
    java.lang.String goto() -> goto
    int b() -> b
    java.lang.String long() -> long
    int e() -> e
    java.lang.String void() -> void
    int g() -> g
    android.os.Handler try() -> try
    java.lang.String do(java.lang.String) -> do
    android.os.Handler if(android.os.Handler) -> if
    boolean a(boolean) -> a
    java.lang.String if() -> if
    java.lang.String a() -> a
    android.os.Handler int() -> int
    android.os.Handler a(android.os.Handler) -> a
    boolean if(boolean) -> if
    java.util.ArrayList d() -> d
    int char() -> char
    java.util.ArrayList a(java.util.ArrayList) -> a
    boolean do(boolean) -> do
    boolean byte() -> byte
    java.lang.String do() -> do
    android.os.Handler case() -> case
    android.os.Handler do(android.os.Handler) -> do
    java.lang.String a(java.lang.String) -> a
    boolean for(boolean) -> for
com.baidu.location.g$1 -> com.baidu.location.g$1:
    void run() -> run
com.baidu.location.g$2 -> com.baidu.location.g$2:
    void run() -> run
com.baidu.location.g$3 -> com.baidu.location.g$3:
    void run() -> run
com.baidu.location.g$4 -> com.baidu.location.g$4:
    void run() -> run
com.baidu.location.h -> com.baidu.location.h:
    java.lang.String if -> if
    int a -> a
    long try -> try
    int new -> new
    float for -> for
    java.lang.String do -> do
    java.util.ArrayList int -> int
    void a(com.baidu.location.c$a,double,double,float) -> a
    java.lang.String a(int,int,int) -> a
    void if() -> if
    com.baidu.location.h$a if(int,int,int) -> if
    void a() -> a
    void do() -> do
com.baidu.location.h$a -> com.baidu.location.h$a:
    int do -> do
    int try -> try
    int if -> if
    int a -> a
    double new -> new
    double int -> int
    float for -> for
    boolean a(int,int,int) -> a
    double a(com.baidu.location.h$a,double) -> a
    double if(com.baidu.location.h$a,double) -> if
    float a(com.baidu.location.h$a,float) -> a
    double if(com.baidu.location.h$a) -> if
    double int(com.baidu.location.h$a) -> int
    float a(com.baidu.location.h$a) -> a
    int for(com.baidu.location.h$a) -> for
    int new(com.baidu.location.h$a) -> new
    int do(com.baidu.location.h$a) -> do
    int try(com.baidu.location.h$a) -> try
com.baidu.location.i -> com.baidu.location.i:
    java.lang.String do -> do
    java.util.ArrayList byte -> byte
    float goto -> goto
    com.baidu.location.BDLocation case -> case
    long b -> b
    com.baidu.location.LocationClient d -> d
    android.content.Context if -> if
    int a -> a
    long char -> char
    boolean void -> void
    boolean long -> long
    android.app.PendingIntent try -> try
    android.app.AlarmManager for -> for
    com.baidu.location.i$b else -> else
    java.lang.String new -> new
    com.baidu.location.i$a int -> int
    boolean c -> c
    void if() -> if
    int if(com.baidu.location.BDNotifyListener) -> if
    void a(com.baidu.location.BDNotifyListener) -> a
    int do(com.baidu.location.BDNotifyListener) -> do
    boolean do() -> do
    void a() -> a
    void a(long) -> a
    void a(com.baidu.location.BDLocation) -> a
    void a(com.baidu.location.i,com.baidu.location.BDLocation) -> a
    java.lang.String a(com.baidu.location.i) -> a
    java.util.ArrayList do(com.baidu.location.i) -> do
    com.baidu.location.LocationClient if(com.baidu.location.i) -> if
com.baidu.location.i$a -> com.baidu.location.i$a:
    com.baidu.location.i a -> a
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
    void onReceivePoi(com.baidu.location.BDLocation) -> onReceivePoi
com.baidu.location.i$b -> com.baidu.location.i$b:
    com.baidu.location.i a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.location.j -> com.baidu.location.j:
    boolean case -> case
    boolean B -> B
    boolean H -> H
    boolean ab -> ab
    boolean d -> d
    int h -> h
    java.lang.String f -> f
    java.lang.String char -> char
    java.lang.String N -> N
    boolean y -> y
    boolean E -> E
    boolean k -> k
    java.lang.String else -> else
    java.lang.Process aj -> aj
    java.lang.String do -> do
    java.lang.String A -> A
    java.lang.String ah -> ah
    boolean R -> R
    boolean G -> G
    int l -> l
    double J -> J
    double Z -> Z
    double if -> if
    double o -> o
    int I -> I
    byte[] j -> j
    boolean ag -> ag
    int g -> g
    float am -> am
    float c -> c
    float F -> F
    float U -> U
    int p -> p
    int K -> K
    int X -> X
    int int -> int
    int for -> for
    int ad -> ad
    int long -> long
    float D -> D
    float C -> C
    float ai -> ai
    float Q -> Q
    int Y -> Y
    float byte -> byte
    int S -> S
    float a -> a
    float u -> u
    float s -> s
    int r -> r
    int q -> q
    boolean void -> void
    boolean try -> try
    int V -> V
    int aa -> aa
    int L -> L
    long M -> M
    long ac -> ac
    long al -> al
    int af -> af
    boolean O -> O
    boolean P -> P
    boolean n -> n
    boolean x -> x
    boolean z -> z
    boolean m -> m
    float w -> w
    float W -> W
    int v -> v
    int ae -> ae
    int goto -> goto
    int T -> T
    java.lang.String i -> i
    java.lang.String ak -> ak
    java.lang.String b -> b
    int new -> new
    int t -> t
    int e -> e
    int if(java.lang.String,java.lang.String,java.lang.String) -> if
    float a(java.lang.String,java.lang.String,java.lang.String) -> a
    double do(java.lang.String,java.lang.String,java.lang.String) -> do
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String,double) -> a
    java.lang.String for() -> for
    java.lang.String a() -> a
    java.lang.String a(com.baidu.location.c$a,com.baidu.location.e$c,android.location.Location,java.lang.String,int) -> a
    void a(int) -> a
    void int() -> int
    void if() -> if
    void if(int) -> if
    void try() -> try
    void new() -> new
    void if(java.lang.String,java.lang.String) -> if
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
    boolean do(java.lang.String) -> do
    void if(java.lang.String) -> if
    java.lang.String do() -> do
    java.lang.String a(byte[],boolean) -> a
    java.lang.String a(byte[],java.lang.String,boolean) -> a
com.baidu.location.j$a -> com.baidu.location.j$a:
    boolean a -> a
    java.lang.String if -> if
    java.lang.String if(android.content.Context) -> if
    java.lang.String a(android.content.Context) -> a
com.baidu.location.j$b -> com.baidu.location.j$b:
    java.lang.String if -> if
    java.lang.String do -> do
    java.lang.String for -> for
    java.lang.String a -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String do(android.content.Context) -> do
    java.lang.String if(android.content.Context) -> if
com.baidu.location.k -> com.baidu.location.k:
    java.lang.String do -> do
    java.util.ArrayList h -> h
    java.util.ArrayList long -> long
    java.util.ArrayList m -> m
    java.util.ArrayList x -> x
    java.util.ArrayList j -> j
    java.util.ArrayList r -> r
    java.lang.String y -> y
    java.lang.String u -> u
    java.lang.String t -> t
    java.lang.String k -> k
    java.lang.String p -> p
    int if -> if
    int for -> for
    int s -> s
    int d -> d
    int f -> f
    int goto -> goto
    java.io.File else -> else
    int case -> case
    int w -> w
    int byte -> byte
    int i -> i
    int b -> b
    int try -> try
    int o -> o
    int l -> l
    double new -> new
    double n -> n
    double void -> void
    double int -> int
    int c -> c
    int char -> char
    int v -> v
    android.location.Location e -> e
    android.location.Location q -> q
    android.location.Location a -> a
    com.baidu.location.e$c g -> g
    java.lang.String do() -> do
    void a(com.baidu.location.c$a,com.baidu.location.e$c,android.location.Location,java.lang.String) -> a
    void a(double,double,double,double) -> a
    boolean a(android.location.Location,boolean) -> a
    boolean a(android.location.Location) -> a
    boolean a(android.location.Location,com.baidu.location.e$c) -> a
    void for(java.lang.String) -> for
    void do(java.lang.String) -> do
    void int(java.lang.String) -> int
    int a(java.util.List,int) -> a
    boolean a(int,int,int,int,long) -> a
    void a(java.lang.String) -> a
    void if(java.lang.String) -> if
    void a(int,boolean) -> a
    boolean a(java.lang.String,java.util.List) -> a
    java.lang.String int() -> int
    void a() -> a
    java.lang.String a(int) -> a
    java.lang.String if() -> if
    void a(java.lang.String,int) -> a
    void a(java.lang.String,int,boolean) -> a
    void a(int,int) -> a
    void a(int,int,boolean) -> a
    void for() -> for
    void new() -> new
com.j256.ormlite.android.AndroidCompiledStatement -> com.j256.ormlite.android.AndroidCompiledStatement:
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.String[] NO_STRING_ARGS -> NO_STRING_ARGS
    com.j256.ormlite.android.compat.ApiCompatibility apiCompatibility -> apiCompatibility
    java.lang.String sql -> sql
    android.database.sqlite.SQLiteDatabase db -> db
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> type
    boolean cancelQueriesEnabled -> cancelQueriesEnabled
    android.database.Cursor cursor -> cursor
    java.util.List args -> args
    java.lang.Integer max -> max
    com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook cancellationHook -> cancellationHook
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    com.j256.ormlite.support.DatabaseResults runQuery(com.j256.ormlite.dao.ObjectCache) -> runQuery
    int runUpdate() -> runUpdate
    int runExecute() -> runExecute
    void close() -> close
    void closeQuietly() -> closeQuietly
    void cancel() -> cancel
    void setObject(int,java.lang.Object,com.j256.ormlite.field.SqlType) -> setObject
    void setMaxRows(int) -> setMaxRows
    void setQueryTimeout(long) -> setQueryTimeout
    android.database.Cursor getCursor() -> getCursor
    java.lang.String toString() -> toString
    int execSql(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.Object[]) -> execSql
    void isInPrep() -> isInPrep
    java.lang.Object[] getArgArray() -> getArgArray
    java.lang.String[] getStringArray() -> getStringArray
com.j256.ormlite.android.AndroidCompiledStatement$1 -> com.j256.ormlite.android.AndroidCompiledStatement$1:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> $SwitchMap$com$j256$ormlite$field$SqlType
com.j256.ormlite.android.AndroidConnectionSource -> com.j256.ormlite.android.AndroidConnectionSource:
    com.j256.ormlite.logger.Logger logger -> logger
    android.database.sqlite.SQLiteOpenHelper helper -> helper
    android.database.sqlite.SQLiteDatabase sqliteDatabase -> sqliteDatabase
    com.j256.ormlite.support.DatabaseConnection connection -> connection
    boolean isOpen -> isOpen
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.support.DatabaseConnectionProxyFactory connectionProxyFactory -> connectionProxyFactory
    boolean cancelQueriesEnabled -> cancelQueriesEnabled
    com.j256.ormlite.support.DatabaseConnection getReadOnlyConnection() -> getReadOnlyConnection
    com.j256.ormlite.support.DatabaseConnection getReadWriteConnection() -> getReadWriteConnection
    void releaseConnection(com.j256.ormlite.support.DatabaseConnection) -> releaseConnection
    boolean saveSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> saveSpecialConnection
    void clearSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> clearSpecialConnection
    void close() -> close
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.db.DatabaseType getDatabaseType() -> getDatabaseType
    boolean isOpen() -> isOpen
    void setDatabaseConnectionProxyFactory(com.j256.ormlite.support.DatabaseConnectionProxyFactory) -> setDatabaseConnectionProxyFactory
    boolean isCancelQueriesEnabled() -> isCancelQueriesEnabled
    void setCancelQueriesEnabled(boolean) -> setCancelQueriesEnabled
    java.lang.String toString() -> toString
com.j256.ormlite.android.AndroidDatabaseConnection -> com.j256.ormlite.android.AndroidDatabaseConnection:
    java.lang.String ANDROID_VERSION -> ANDROID_VERSION
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.String[] NO_STRING_ARGS -> NO_STRING_ARGS
    android.database.sqlite.SQLiteDatabase db -> db
    boolean readWrite -> readWrite
    boolean cancelQueriesEnabled -> cancelQueriesEnabled
    boolean isAutoCommitSupported() -> isAutoCommitSupported
    boolean isAutoCommit() -> isAutoCommit
    void setAutoCommit(boolean) -> setAutoCommit
    java.sql.Savepoint setSavePoint(java.lang.String) -> setSavePoint
    boolean isReadWrite() -> isReadWrite
    void commit(java.sql.Savepoint) -> commit
    void rollback(java.sql.Savepoint) -> rollback
    int executeStatement(java.lang.String,int) -> executeStatement
    com.j256.ormlite.support.CompiledStatement compileStatement(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType,com.j256.ormlite.field.FieldType[],int) -> compileStatement
    int insert(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.support.GeneratedKeyHolder) -> insert
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> update
    int delete(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> delete
    java.lang.Object queryForOne(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.stmt.GenericRowMapper,com.j256.ormlite.dao.ObjectCache) -> queryForOne
    long queryForLong(java.lang.String) -> queryForLong
    long queryForLong(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> queryForLong
    void close() -> close
    void closeQuietly() -> closeQuietly
    boolean isClosed() -> isClosed
    boolean isTableExists(java.lang.String) -> isTableExists
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],java.lang.String) -> update
    void bindArgs(android.database.sqlite.SQLiteStatement,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> bindArgs
    java.lang.String[] toStrings(java.lang.Object[]) -> toStrings
    java.lang.String toString() -> toString
com.j256.ormlite.android.AndroidDatabaseConnection$1 -> com.j256.ormlite.android.AndroidDatabaseConnection$1:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> $SwitchMap$com$j256$ormlite$field$SqlType
com.j256.ormlite.android.AndroidDatabaseConnection$OurSavePoint -> com.j256.ormlite.android.AndroidDatabaseConnection$OurSavePoint:
    java.lang.String name -> name
    int getSavepointId() -> getSavepointId
    java.lang.String getSavepointName() -> getSavepointName
com.j256.ormlite.android.AndroidDatabaseResults -> com.j256.ormlite.android.AndroidDatabaseResults:
    int MIN_NUM_COLUMN_NAMES_MAP -> MIN_NUM_COLUMN_NAMES_MAP
    android.database.Cursor cursor -> cursor
    java.lang.String[] columnNames -> columnNames
    java.util.Map columnNameMap -> columnNameMap
    com.j256.ormlite.dao.ObjectCache objectCache -> objectCache
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    int getColumnCount() -> getColumnCount
    java.lang.String[] getColumnNames() -> getColumnNames
    boolean first() -> first
    boolean next() -> next
    boolean last() -> last
    boolean previous() -> previous
    boolean moveRelative(int) -> moveRelative
    boolean moveAbsolute(int) -> moveAbsolute
    int getCount() -> getCount
    int getPosition() -> getPosition
    int findColumn(java.lang.String) -> findColumn
    java.lang.String getString(int) -> getString
    boolean getBoolean(int) -> getBoolean
    char getChar(int) -> getChar
    byte getByte(int) -> getByte
    byte[] getBytes(int) -> getBytes
    short getShort(int) -> getShort
    int getInt(int) -> getInt
    long getLong(int) -> getLong
    float getFloat(int) -> getFloat
    double getDouble(int) -> getDouble
    java.sql.Timestamp getTimestamp(int) -> getTimestamp
    java.io.InputStream getBlobStream(int) -> getBlobStream
    java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    boolean wasNull(int) -> wasNull
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void close() -> close
    void closeQuietly() -> closeQuietly
    android.database.Cursor getRawCursor() -> getRawCursor
    java.lang.String toString() -> toString
    int lookupColumn(java.lang.String) -> lookupColumn
com.j256.ormlite.android.AndroidLog -> com.j256.ormlite.android.AndroidLog:
    java.lang.String ALL_LOGS_NAME -> ALL_LOGS_NAME
    int REFRESH_LEVEL_CACHE_EVERY -> REFRESH_LEVEL_CACHE_EVERY
    int MAX_TAG_LENGTH -> MAX_TAG_LENGTH
    java.lang.String className -> className
    int levelCacheC -> levelCacheC
    boolean[] levelCache -> levelCache
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> log
    void refreshLevelCache() -> refreshLevelCache
    boolean isLevelEnabledInternal(int) -> isLevelEnabledInternal
    int levelToAndroidLevel(com.j256.ormlite.logger.Log$Level) -> levelToAndroidLevel
com.j256.ormlite.android.AndroidLog$1 -> com.j256.ormlite.android.AndroidLog$1:
    int[] $SwitchMap$com$j256$ormlite$logger$Log$Level -> $SwitchMap$com$j256$ormlite$logger$Log$Level
com.j256.ormlite.android.DatabaseTableConfigUtil -> com.j256.ormlite.android.DatabaseTableConfigUtil:
    java.lang.Class annotationFactoryClazz -> annotationFactoryClazz
    java.lang.reflect.Field elementsField -> elementsField
    java.lang.Class annotationMemberClazz -> annotationMemberClazz
    java.lang.reflect.Field nameField -> nameField
    java.lang.reflect.Field valueField -> valueField
    int workedC -> workedC
    int[] configFieldNums -> configFieldNums
    int COLUMN_NAME -> COLUMN_NAME
    int DATA_TYPE -> DATA_TYPE
    int DEFAULT_VALUE -> DEFAULT_VALUE
    int WIDTH -> WIDTH
    int CAN_BE_NULL -> CAN_BE_NULL
    int ID -> ID
    int GENERATED_ID -> GENERATED_ID
    int GENERATED_ID_SEQUENCE -> GENERATED_ID_SEQUENCE
    int FOREIGN -> FOREIGN
    int USE_GET_SET -> USE_GET_SET
    int UNKNOWN_ENUM_NAME -> UNKNOWN_ENUM_NAME
    int THROW_IF_NULL -> THROW_IF_NULL
    int PERSISTED -> PERSISTED
    int FORMAT -> FORMAT
    int UNIQUE -> UNIQUE
    int UNIQUE_COMBO -> UNIQUE_COMBO
    int INDEX -> INDEX
    int UNIQUE_INDEX -> UNIQUE_INDEX
    int INDEX_NAME -> INDEX_NAME
    int UNIQUE_INDEX_NAME -> UNIQUE_INDEX_NAME
    int FOREIGN_AUTO_REFRESH -> FOREIGN_AUTO_REFRESH
    int MAX_FOREIGN_AUTO_REFRESH_LEVEL -> MAX_FOREIGN_AUTO_REFRESH_LEVEL
    int PERSISTER_CLASS -> PERSISTER_CLASS
    int ALLOW_GENERATED_ID_INSERT -> ALLOW_GENERATED_ID_INSERT
    int COLUMN_DEFINITON -> COLUMN_DEFINITON
    int FOREIGN_AUTO_CREATE -> FOREIGN_AUTO_CREATE
    int VERSION -> VERSION
    int FOREIGN_COLUMN_NAME -> FOREIGN_COLUMN_NAME
    int READ_ONLY -> READ_ONLY
    com.j256.ormlite.table.DatabaseTableConfig fromClass(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> fromClass
    int getWorkedC() -> getWorkedC
    int[] lookupClasses() -> lookupClasses
    int configFieldNameToNum(java.lang.String) -> configFieldNameToNum
    com.j256.ormlite.field.DatabaseFieldConfig configFromField(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.reflect.Field) -> configFromField
    com.j256.ormlite.field.DatabaseFieldConfig buildConfig(com.j256.ormlite.field.DatabaseField,java.lang.String,java.lang.reflect.Field) -> buildConfig
    void assignConfigField(int,com.j256.ormlite.field.DatabaseFieldConfig,java.lang.reflect.Field,java.lang.Object) -> assignConfigField
    java.lang.String valueIfNotBlank(java.lang.String) -> valueIfNotBlank
com.j256.ormlite.android.DatabaseTableConfigUtil$DatabaseFieldSample -> com.j256.ormlite.android.DatabaseTableConfigUtil$DatabaseFieldSample:
    java.lang.String field -> field
com.j256.ormlite.android.apptools.OpenHelperManager -> com.j256.ormlite.android.apptools.OpenHelperManager:
    java.lang.String HELPER_CLASS_RESOURCE_NAME -> HELPER_CLASS_RESOURCE_NAME
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.Class helperClass -> helperClass
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean wasClosed -> wasClosed
    int instanceCount -> instanceCount
    void setOpenHelperClass(java.lang.Class) -> setOpenHelperClass
    void setHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> setHelper
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper(android.content.Context,java.lang.Class) -> getHelper
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper(android.content.Context) -> getHelper
    void release() -> release
    void releaseHelper() -> releaseHelper
    void innerSetHelperClass(java.lang.Class) -> innerSetHelperClass
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper loadHelper(android.content.Context,java.lang.Class) -> loadHelper
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper constructHelper(android.content.Context,java.lang.Class) -> constructHelper
    java.lang.Class lookupHelperClass(android.content.Context,java.lang.Class) -> lookupHelperClass
com.j256.ormlite.android.apptools.OrmLiteBaseActivity -> com.j256.ormlite.android.apptools.OrmLiteBaseActivity:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
    java.lang.String toString() -> toString
com.j256.ormlite.android.apptools.OrmLiteBaseActivityGroup -> com.j256.ormlite.android.apptools.OrmLiteBaseActivityGroup:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteBaseListActivity -> com.j256.ormlite.android.apptools.OrmLiteBaseListActivity:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteBaseService -> com.j256.ormlite.android.apptools.OrmLiteBaseService:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteBaseTabActivity -> com.j256.ormlite.android.apptools.OrmLiteBaseTabActivity:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> helper
    boolean created -> created
    boolean destroyed -> destroyed
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper() -> getHelper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelperInternal(android.content.Context) -> getHelperInternal
    void releaseHelper(com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper) -> releaseHelper
com.j256.ormlite.android.apptools.OrmLiteConfigUtil -> com.j256.ormlite.android.apptools.OrmLiteConfigUtil:
    java.lang.String RESOURCE_DIR_NAME -> RESOURCE_DIR_NAME
    java.lang.String RAW_DIR_NAME -> RAW_DIR_NAME
    int maxFindSourceLevel -> maxFindSourceLevel
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    void main(java.lang.String[]) -> main
    void writeConfigFile(java.lang.String) -> writeConfigFile
    void writeConfigFile(java.lang.String,java.lang.Class[]) -> writeConfigFile
    void writeConfigFile(java.io.File) -> writeConfigFile
    void writeConfigFile(java.io.File,java.io.File) -> writeConfigFile
    void writeConfigFile(java.io.File,java.lang.Class[]) -> writeConfigFile
    void writeConfigFile(java.io.OutputStream,java.io.File) -> writeConfigFile
    void writeConfigFile(java.io.OutputStream,java.lang.Class[]) -> writeConfigFile
    java.io.File findRawDir(java.io.File) -> findRawDir
    void writeHeader(java.io.BufferedWriter) -> writeHeader
    void findAnnotatedClasses(java.util.List,java.io.File,int) -> findAnnotatedClasses
    void writeConfigForTable(java.io.BufferedWriter,java.lang.Class) -> writeConfigForTable
    boolean classHasAnnotations(java.lang.Class) -> classHasAnnotations
    java.lang.String getPackageOfClass(java.io.File) -> getPackageOfClass
    java.io.File findResRawDir(java.io.File) -> findResRawDir
com.j256.ormlite.android.apptools.OrmLiteConfigUtil$1 -> com.j256.ormlite.android.apptools.OrmLiteConfigUtil$1:
    boolean accept(java.io.File) -> accept
com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper -> com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.android.AndroidConnectionSource connectionSource -> connectionSource
    boolean cancelQueriesEnabled -> cancelQueriesEnabled
    boolean isOpen -> isOpen
    void onCreate(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource,int,int) -> onUpgrade
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void close() -> close
    boolean isOpen() -> isOpen
    com.j256.ormlite.dao.Dao getDao(java.lang.Class) -> getDao
    com.j256.ormlite.dao.RuntimeExceptionDao getRuntimeExceptionDao(java.lang.Class) -> getRuntimeExceptionDao
    java.lang.String toString() -> toString
    java.io.InputStream openFileId(android.content.Context,int) -> openFileId
    java.io.InputStream openFile(java.io.File) -> openFile
com.j256.ormlite.android.compat.ApiCompatibility -> com.j256.ormlite.android.compat.ApiCompatibility:
    android.database.Cursor rawQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook) -> rawQuery
    com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook createCancellationHook() -> createCancellationHook
com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook -> com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook:
    void cancel() -> cancel
com.j256.ormlite.android.compat.ApiCompatibilityUtils -> com.j256.ormlite.android.compat.ApiCompatibilityUtils:
    com.j256.ormlite.android.compat.ApiCompatibility compatibility -> compatibility
    int BASE -> BASE
    int BASE_1_1 -> BASE_1_1
    int CUPCAKE -> CUPCAKE
    int DONUT -> DONUT
    int ECLAIR -> ECLAIR
    int ECLAIR_0_1 -> ECLAIR_0_1
    int ECLAIR_MR1 -> ECLAIR_MR1
    int FROYO -> FROYO
    int GINGERBREAD -> GINGERBREAD
    int GINGERBREAD_MR1 -> GINGERBREAD_MR1
    int HONEYCOMB -> HONEYCOMB
    int HONEYCOMB_MR1 -> HONEYCOMB_MR1
    int HONEYCOMB_MR2 -> HONEYCOMB_MR2
    int ICE_CREAM_SANDWICH -> ICE_CREAM_SANDWICH
    int ICE_CREAM_SANDWICH_MR1 -> ICE_CREAM_SANDWICH_MR1
    int JELLY_BEAN -> JELLY_BEAN
    int JELLY_BEAN_MR1 -> JELLY_BEAN_MR1
    int JELLY_BEAN_MR2 -> JELLY_BEAN_MR2
    com.j256.ormlite.android.compat.ApiCompatibility getCompatibility() -> getCompatibility
com.j256.ormlite.android.compat.BasicApiCompatibility -> com.j256.ormlite.android.compat.BasicApiCompatibility:
    android.database.Cursor rawQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook) -> rawQuery
    com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook createCancellationHook() -> createCancellationHook
com.j256.ormlite.android.compat.JellyBeanApiCompatibility -> com.j256.ormlite.android.compat.JellyBeanApiCompatibility:
    android.database.Cursor rawQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook) -> rawQuery
    com.j256.ormlite.android.compat.ApiCompatibility$CancellationHook createCancellationHook() -> createCancellationHook
com.j256.ormlite.android.compat.JellyBeanApiCompatibility$JellyBeanCancellationHook -> com.j256.ormlite.android.compat.JellyBeanApiCompatibility$JellyBeanCancellationHook:
    android.os.CancellationSignal cancellationSignal -> cancellationSignal
    void cancel() -> cancel
    android.os.CancellationSignal access$000(com.j256.ormlite.android.compat.JellyBeanApiCompatibility$JellyBeanCancellationHook) -> access$000
com.j256.ormlite.dao.BaseDaoImpl -> com.j256.ormlite.dao.BaseDaoImpl:
    boolean initialized -> initialized
    com.j256.ormlite.stmt.StatementExecutor statementExecutor -> statementExecutor
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    java.lang.Class dataClass -> dataClass
    com.j256.ormlite.table.DatabaseTableConfig tableConfig -> tableConfig
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    com.j256.ormlite.dao.CloseableIterator lastIterator -> lastIterator
    com.j256.ormlite.table.ObjectFactory objectFactory -> objectFactory
    java.lang.ThreadLocal daoConfigLevelLocal -> daoConfigLevelLocal
    com.j256.ormlite.dao.ReferenceObjectCache defaultObjectCache -> defaultObjectCache
    com.j256.ormlite.dao.ObjectCache objectCache -> objectCache
    void initialize() -> initialize
    java.lang.Object queryForId(java.lang.Object) -> queryForId
    java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery) -> queryForFirst
    java.util.List queryForAll() -> queryForAll
    java.util.List queryForEq(java.lang.String,java.lang.Object) -> queryForEq
    com.j256.ormlite.stmt.QueryBuilder queryBuilder() -> queryBuilder
    com.j256.ormlite.stmt.UpdateBuilder updateBuilder() -> updateBuilder
    com.j256.ormlite.stmt.DeleteBuilder deleteBuilder() -> deleteBuilder
    java.util.List query(com.j256.ormlite.stmt.PreparedQuery) -> query
    java.util.List queryForMatching(java.lang.Object) -> queryForMatching
    java.util.List queryForMatchingArgs(java.lang.Object) -> queryForMatchingArgs
    java.util.List queryForFieldValues(java.util.Map) -> queryForFieldValues
    java.util.List queryForFieldValuesArgs(java.util.Map) -> queryForFieldValuesArgs
    java.lang.Object queryForSameId(java.lang.Object) -> queryForSameId
    int create(java.lang.Object) -> create
    java.lang.Object createIfNotExists(java.lang.Object) -> createIfNotExists
    com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object) -> createOrUpdate
    int update(java.lang.Object) -> update
    int updateId(java.lang.Object,java.lang.Object) -> updateId
    int update(com.j256.ormlite.stmt.PreparedUpdate) -> update
    int refresh(java.lang.Object) -> refresh
    int delete(java.lang.Object) -> delete
    int deleteById(java.lang.Object) -> deleteById
    int delete(java.util.Collection) -> delete
    int deleteIds(java.util.Collection) -> deleteIds
    int delete(com.j256.ormlite.stmt.PreparedDelete) -> delete
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(com.j256.ormlite.stmt.PreparedQuery) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery) -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery,int) -> iterator
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],com.j256.ormlite.dao.RawRowObjectMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[]) -> queryRaw
    long queryRawValue(java.lang.String,java.lang.String[]) -> queryRawValue
    int executeRaw(java.lang.String,java.lang.String[]) -> executeRaw
    int executeRawNoArgs(java.lang.String) -> executeRawNoArgs
    int updateRaw(java.lang.String,java.lang.String[]) -> updateRaw
    java.lang.Object callBatchTasks(java.util.concurrent.Callable) -> callBatchTasks
    java.lang.String objectToString(java.lang.Object) -> objectToString
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    java.lang.Object extractId(java.lang.Object) -> extractId
    java.lang.Class getDataClass() -> getDataClass
    com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class) -> findForeignFieldType
    boolean isUpdatable() -> isUpdatable
    boolean isTableExists() -> isTableExists
    long countOf() -> countOf
    long countOf(com.j256.ormlite.stmt.PreparedQuery) -> countOf
    void assignEmptyForeignCollection(java.lang.Object,java.lang.String) -> assignEmptyForeignCollection
    com.j256.ormlite.dao.ForeignCollection getEmptyForeignCollection(java.lang.String) -> getEmptyForeignCollection
    void setObjectCache(boolean) -> setObjectCache
    void setObjectCache(com.j256.ormlite.dao.ObjectCache) -> setObjectCache
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void clearObjectCache() -> clearObjectCache
    void clearAllInternalObjectCaches() -> clearAllInternalObjectCaches
    java.lang.Object mapSelectStarRow(com.j256.ormlite.support.DatabaseResults) -> mapSelectStarRow
    com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    com.j256.ormlite.dao.RawRowMapper getRawRowMapper() -> getRawRowMapper
    boolean idExists(java.lang.Object) -> idExists
    com.j256.ormlite.support.DatabaseConnection startThreadConnection() -> startThreadConnection
    void endThreadConnection(com.j256.ormlite.support.DatabaseConnection) -> endThreadConnection
    void setAutoCommit(boolean) -> setAutoCommit
    void setAutoCommit(com.j256.ormlite.support.DatabaseConnection,boolean) -> setAutoCommit
    boolean isAutoCommit() -> isAutoCommit
    boolean isAutoCommit(com.j256.ormlite.support.DatabaseConnection) -> isAutoCommit
    void commit(com.j256.ormlite.support.DatabaseConnection) -> commit
    void rollBack(com.j256.ormlite.support.DatabaseConnection) -> rollBack
    com.j256.ormlite.table.ObjectFactory getObjectFactory() -> getObjectFactory
    void setObjectFactory(com.j256.ormlite.table.ObjectFactory) -> setObjectFactory
    com.j256.ormlite.table.DatabaseTableConfig getTableConfig() -> getTableConfig
    com.j256.ormlite.table.TableInfo getTableInfo() -> getTableInfo
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void setConnectionSource(com.j256.ormlite.support.ConnectionSource) -> setConnectionSource
    void setTableConfig(com.j256.ormlite.table.DatabaseTableConfig) -> setTableConfig
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDao
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createDao
    void checkForInitialized() -> checkForInitialized
    com.j256.ormlite.dao.ForeignCollection makeEmptyForeignCollection(java.lang.Object,java.lang.String) -> makeEmptyForeignCollection
    com.j256.ormlite.dao.CloseableIterator createIterator(int) -> createIterator
    com.j256.ormlite.dao.CloseableIterator createIterator(com.j256.ormlite.stmt.PreparedQuery,int) -> createIterator
    java.util.List queryForMatching(java.lang.Object,boolean) -> queryForMatching
    java.util.List queryForFieldValues(java.util.Map,boolean) -> queryForFieldValues
    java.util.Iterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator access$000(com.j256.ormlite.dao.BaseDaoImpl,int) -> access$000
    com.j256.ormlite.dao.CloseableIterator access$100(com.j256.ormlite.dao.BaseDaoImpl,com.j256.ormlite.stmt.PreparedQuery,int) -> access$100
com.j256.ormlite.dao.BaseDaoImpl$1 -> com.j256.ormlite.dao.BaseDaoImpl$1:
    java.util.List initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.dao.BaseDaoImpl$2 -> com.j256.ormlite.dao.BaseDaoImpl$2:
    com.j256.ormlite.dao.BaseDaoImpl this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
com.j256.ormlite.dao.BaseDaoImpl$3 -> com.j256.ormlite.dao.BaseDaoImpl$3:
    com.j256.ormlite.stmt.PreparedQuery val$preparedQuery -> val$preparedQuery
    com.j256.ormlite.dao.BaseDaoImpl this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
com.j256.ormlite.dao.BaseDaoImpl$4 -> com.j256.ormlite.dao.BaseDaoImpl$4:
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.BaseDaoImpl$5 -> com.j256.ormlite.dao.BaseDaoImpl$5:
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.BaseForeignCollection -> com.j256.ormlite.dao.BaseForeignCollection:
    long serialVersionUID -> serialVersionUID
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.field.FieldType foreignFieldType -> foreignFieldType
    java.lang.Object parentId -> parentId
    com.j256.ormlite.stmt.PreparedQuery preparedQuery -> preparedQuery
    java.lang.String orderColumn -> orderColumn
    boolean orderAscending -> orderAscending
    java.lang.Object parent -> parent
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    int update(java.lang.Object) -> update
    int refresh(java.lang.Object) -> refresh
    com.j256.ormlite.stmt.PreparedQuery getPreparedQuery() -> getPreparedQuery
    boolean addElement(java.lang.Object) -> addElement
com.j256.ormlite.dao.CloseableIterable -> com.j256.ormlite.dao.CloseableIterable:
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
com.j256.ormlite.dao.CloseableIterator -> com.j256.ormlite.dao.CloseableIterator:
    void close() -> close
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.support.DatabaseResults getRawResults() -> getRawResults
    void moveToNext() -> moveToNext
    java.lang.Object first() -> first
    java.lang.Object previous() -> previous
    java.lang.Object current() -> current
    java.lang.Object nextThrow() -> nextThrow
    java.lang.Object moveRelative(int) -> moveRelative
com.j256.ormlite.dao.CloseableWrappedIterable -> com.j256.ormlite.dao.CloseableWrappedIterable:
    void close() -> close
com.j256.ormlite.dao.CloseableWrappedIterableImpl -> com.j256.ormlite.dao.CloseableWrappedIterableImpl:
    com.j256.ormlite.dao.CloseableIterable iterable -> iterable
    com.j256.ormlite.dao.CloseableIterator iterator -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    void close() -> close
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.Dao -> com.j256.ormlite.dao.Dao:
    java.lang.Object queryForId(java.lang.Object) -> queryForId
    java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery) -> queryForFirst
    java.util.List queryForAll() -> queryForAll
    java.util.List queryForEq(java.lang.String,java.lang.Object) -> queryForEq
    java.util.List queryForMatching(java.lang.Object) -> queryForMatching
    java.util.List queryForMatchingArgs(java.lang.Object) -> queryForMatchingArgs
    java.util.List queryForFieldValues(java.util.Map) -> queryForFieldValues
    java.util.List queryForFieldValuesArgs(java.util.Map) -> queryForFieldValuesArgs
    java.lang.Object queryForSameId(java.lang.Object) -> queryForSameId
    com.j256.ormlite.stmt.QueryBuilder queryBuilder() -> queryBuilder
    com.j256.ormlite.stmt.UpdateBuilder updateBuilder() -> updateBuilder
    com.j256.ormlite.stmt.DeleteBuilder deleteBuilder() -> deleteBuilder
    java.util.List query(com.j256.ormlite.stmt.PreparedQuery) -> query
    int create(java.lang.Object) -> create
    java.lang.Object createIfNotExists(java.lang.Object) -> createIfNotExists
    com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object) -> createOrUpdate
    int update(java.lang.Object) -> update
    int updateId(java.lang.Object,java.lang.Object) -> updateId
    int update(com.j256.ormlite.stmt.PreparedUpdate) -> update
    int refresh(java.lang.Object) -> refresh
    int delete(java.lang.Object) -> delete
    int deleteById(java.lang.Object) -> deleteById
    int delete(java.util.Collection) -> delete
    int deleteIds(java.util.Collection) -> deleteIds
    int delete(com.j256.ormlite.stmt.PreparedDelete) -> delete
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery) -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery,int) -> iterator
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(com.j256.ormlite.stmt.PreparedQuery) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],com.j256.ormlite.dao.RawRowObjectMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[]) -> queryRaw
    long queryRawValue(java.lang.String,java.lang.String[]) -> queryRawValue
    int executeRaw(java.lang.String,java.lang.String[]) -> executeRaw
    int executeRawNoArgs(java.lang.String) -> executeRawNoArgs
    int updateRaw(java.lang.String,java.lang.String[]) -> updateRaw
    java.lang.Object callBatchTasks(java.util.concurrent.Callable) -> callBatchTasks
    java.lang.String objectToString(java.lang.Object) -> objectToString
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    java.lang.Object extractId(java.lang.Object) -> extractId
    java.lang.Class getDataClass() -> getDataClass
    com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class) -> findForeignFieldType
    boolean isUpdatable() -> isUpdatable
    boolean isTableExists() -> isTableExists
    long countOf() -> countOf
    long countOf(com.j256.ormlite.stmt.PreparedQuery) -> countOf
    void assignEmptyForeignCollection(java.lang.Object,java.lang.String) -> assignEmptyForeignCollection
    com.j256.ormlite.dao.ForeignCollection getEmptyForeignCollection(java.lang.String) -> getEmptyForeignCollection
    void setObjectCache(boolean) -> setObjectCache
    void setObjectCache(com.j256.ormlite.dao.ObjectCache) -> setObjectCache
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void clearObjectCache() -> clearObjectCache
    java.lang.Object mapSelectStarRow(com.j256.ormlite.support.DatabaseResults) -> mapSelectStarRow
    com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    com.j256.ormlite.dao.RawRowMapper getRawRowMapper() -> getRawRowMapper
    boolean idExists(java.lang.Object) -> idExists
    com.j256.ormlite.support.DatabaseConnection startThreadConnection() -> startThreadConnection
    void endThreadConnection(com.j256.ormlite.support.DatabaseConnection) -> endThreadConnection
    void setAutoCommit(boolean) -> setAutoCommit
    void setAutoCommit(com.j256.ormlite.support.DatabaseConnection,boolean) -> setAutoCommit
    boolean isAutoCommit() -> isAutoCommit
    boolean isAutoCommit(com.j256.ormlite.support.DatabaseConnection) -> isAutoCommit
    void commit(com.j256.ormlite.support.DatabaseConnection) -> commit
    void rollBack(com.j256.ormlite.support.DatabaseConnection) -> rollBack
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void setObjectFactory(com.j256.ormlite.table.ObjectFactory) -> setObjectFactory
com.j256.ormlite.dao.Dao$CreateOrUpdateStatus -> com.j256.ormlite.dao.Dao$CreateOrUpdateStatus:
    boolean created -> created
    boolean updated -> updated
    int numLinesChanged -> numLinesChanged
    boolean isCreated() -> isCreated
    boolean isUpdated() -> isUpdated
    int getNumLinesChanged() -> getNumLinesChanged
com.j256.ormlite.dao.DaoManager -> com.j256.ormlite.dao.DaoManager:
    java.util.Map configMap -> configMap
    java.util.Map classMap -> classMap
    java.util.Map tableConfigMap -> tableConfigMap
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDao
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> lookupDao
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createDao
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> lookupDao
    void registerDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.Dao) -> registerDao
    void unregisterDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.Dao) -> unregisterDao
    void registerDaoWithTableConfig(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.Dao) -> registerDaoWithTableConfig
    void clearCache() -> clearCache
    void clearDaoCache() -> clearDaoCache
    void addCachedDatabaseConfigs(java.util.Collection) -> addCachedDatabaseConfigs
    void addDaoToClassMap(com.j256.ormlite.dao.DaoManager$ClassConnectionSource,com.j256.ormlite.dao.Dao) -> addDaoToClassMap
    void removeDaoToClassMap(com.j256.ormlite.dao.DaoManager$ClassConnectionSource,com.j256.ormlite.dao.Dao) -> removeDaoToClassMap
    void addDaoToTableMap(com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource,com.j256.ormlite.dao.Dao) -> addDaoToTableMap
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.dao.DaoManager$ClassConnectionSource) -> lookupDao
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource) -> lookupDao
    java.lang.reflect.Constructor findConstructor(java.lang.Class,java.lang.Object[]) -> findConstructor
    java.lang.Object createDaoFromConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDaoFromConfig
    com.j256.ormlite.dao.Dao doCreateDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> doCreateDao
com.j256.ormlite.dao.DaoManager$ClassConnectionSource -> com.j256.ormlite.dao.DaoManager$ClassConnectionSource:
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    java.lang.Class clazz -> clazz
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource -> com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource:
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    com.j256.ormlite.table.DatabaseTableConfig tableConfig -> tableConfig
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.j256.ormlite.dao.EagerForeignCollection -> com.j256.ormlite.dao.EagerForeignCollection:
    long serialVersionUID -> serialVersionUID
    java.util.List results -> results
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator(int) -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iteratorThrow() -> iteratorThrow
    com.j256.ormlite.dao.CloseableIterator iteratorThrow(int) -> iteratorThrow
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(int) -> getWrappedIterable
    void close() -> close
    void closeLastIterator() -> closeLastIterator
    boolean isEager() -> isEager
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int updateAll() -> updateAll
    int refreshAll() -> refreshAll
    int refreshCollection() -> refreshCollection
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.util.Iterator iterator() -> iterator
    java.util.List access$000(com.j256.ormlite.dao.EagerForeignCollection) -> access$000
com.j256.ormlite.dao.EagerForeignCollection$1 -> com.j256.ormlite.dao.EagerForeignCollection$1:
    int offset -> offset
    com.j256.ormlite.dao.EagerForeignCollection this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object first() -> first
    java.lang.Object next() -> next
    java.lang.Object nextThrow() -> nextThrow
    java.lang.Object current() -> current
    java.lang.Object previous() -> previous
    java.lang.Object moveRelative(int) -> moveRelative
    void remove() -> remove
    void close() -> close
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.support.DatabaseResults getRawResults() -> getRawResults
    void moveToNext() -> moveToNext
com.j256.ormlite.dao.ForeignCollection -> com.j256.ormlite.dao.ForeignCollection:
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator(int) -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iteratorThrow() -> iteratorThrow
    com.j256.ormlite.dao.CloseableIterator iteratorThrow(int) -> iteratorThrow
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(int) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    boolean isEager() -> isEager
    int update(java.lang.Object) -> update
    int updateAll() -> updateAll
    int refresh(java.lang.Object) -> refresh
    int refreshAll() -> refreshAll
    int refreshCollection() -> refreshCollection
    boolean add(java.lang.Object) -> add
com.j256.ormlite.dao.GenericRawResults -> com.j256.ormlite.dao.GenericRawResults:
    int getNumberColumns() -> getNumberColumns
    java.lang.String[] getColumnNames() -> getColumnNames
    java.util.List getResults() -> getResults
    java.lang.Object getFirstResult() -> getFirstResult
    void close() -> close
com.j256.ormlite.dao.LazyForeignCollection -> com.j256.ormlite.dao.LazyForeignCollection:
    long serialVersionUID -> serialVersionUID
    com.j256.ormlite.dao.CloseableIterator lastIterator -> lastIterator
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator(int) -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iteratorThrow() -> iteratorThrow
    com.j256.ormlite.dao.CloseableIterator iteratorThrow(int) -> iteratorThrow
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(int) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    boolean isEager() -> isEager
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    int updateAll() -> updateAll
    int refreshAll() -> refreshAll
    int refreshCollection() -> refreshCollection
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.j256.ormlite.dao.CloseableIterator seperateIteratorThrow(int) -> seperateIteratorThrow
    java.util.Iterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator access$000(com.j256.ormlite.dao.LazyForeignCollection,int) -> access$000
com.j256.ormlite.dao.LazyForeignCollection$1 -> com.j256.ormlite.dao.LazyForeignCollection$1:
    int val$flags -> val$flags
    com.j256.ormlite.dao.LazyForeignCollection this$0 -> this$0
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.LruObjectCache -> com.j256.ormlite.dao.LruObjectCache:
    int capacity -> capacity
    java.util.concurrent.ConcurrentHashMap classMaps -> classMaps
    void registerClass(java.lang.Class) -> registerClass
    java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    void clear(java.lang.Class) -> clear
    void clearAll() -> clearAll
    void remove(java.lang.Class,java.lang.Object) -> remove
    java.lang.Object updateId(java.lang.Class,java.lang.Object,java.lang.Object) -> updateId
    int size(java.lang.Class) -> size
    int sizeAll() -> sizeAll
    java.util.Map getMapForClass(java.lang.Class) -> getMapForClass
com.j256.ormlite.dao.LruObjectCache$LimitedLinkedHashMap -> com.j256.ormlite.dao.LruObjectCache$LimitedLinkedHashMap:
    long serialVersionUID -> serialVersionUID
    int capacity -> capacity
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.j256.ormlite.dao.ObjectCache -> com.j256.ormlite.dao.ObjectCache:
    void registerClass(java.lang.Class) -> registerClass
    java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    void remove(java.lang.Class,java.lang.Object) -> remove
    java.lang.Object updateId(java.lang.Class,java.lang.Object,java.lang.Object) -> updateId
    void clear(java.lang.Class) -> clear
    void clearAll() -> clearAll
    int size(java.lang.Class) -> size
    int sizeAll() -> sizeAll
com.j256.ormlite.dao.RawRowMapper -> com.j256.ormlite.dao.RawRowMapper:
    java.lang.Object mapRow(java.lang.String[],java.lang.String[]) -> mapRow
com.j256.ormlite.dao.RawRowObjectMapper -> com.j256.ormlite.dao.RawRowObjectMapper:
    java.lang.Object mapRow(java.lang.String[],com.j256.ormlite.field.DataType[],java.lang.Object[]) -> mapRow
com.j256.ormlite.dao.ReferenceObjectCache -> com.j256.ormlite.dao.ReferenceObjectCache:
    java.util.concurrent.ConcurrentHashMap classMaps -> classMaps
    boolean useWeak -> useWeak
    com.j256.ormlite.dao.ReferenceObjectCache makeWeakCache() -> makeWeakCache
    com.j256.ormlite.dao.ReferenceObjectCache makeSoftCache() -> makeSoftCache
    void registerClass(java.lang.Class) -> registerClass
    java.lang.Object get(java.lang.Class,java.lang.Object) -> get
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> put
    void clear(java.lang.Class) -> clear
    void clearAll() -> clearAll
    void remove(java.lang.Class,java.lang.Object) -> remove
    java.lang.Object updateId(java.lang.Class,java.lang.Object,java.lang.Object) -> updateId
    int size(java.lang.Class) -> size
    int sizeAll() -> sizeAll
    void cleanNullReferences(java.lang.Class) -> cleanNullReferences
    void cleanNullReferencesAll() -> cleanNullReferencesAll
    void cleanMap(java.util.Map) -> cleanMap
    java.util.Map getMapForClass(java.lang.Class) -> getMapForClass
com.j256.ormlite.dao.RuntimeExceptionDao -> com.j256.ormlite.dao.RuntimeExceptionDao:
    com.j256.ormlite.logger.Log$Level LOG_LEVEL -> LOG_LEVEL
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.dao.RuntimeExceptionDao createDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createDao
    com.j256.ormlite.dao.RuntimeExceptionDao createDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createDao
    java.lang.Object queryForId(java.lang.Object) -> queryForId
    java.lang.Object queryForFirst(com.j256.ormlite.stmt.PreparedQuery) -> queryForFirst
    java.util.List queryForAll() -> queryForAll
    java.util.List queryForEq(java.lang.String,java.lang.Object) -> queryForEq
    java.util.List queryForMatching(java.lang.Object) -> queryForMatching
    java.util.List queryForMatchingArgs(java.lang.Object) -> queryForMatchingArgs
    java.util.List queryForFieldValues(java.util.Map) -> queryForFieldValues
    java.util.List queryForFieldValuesArgs(java.util.Map) -> queryForFieldValuesArgs
    java.lang.Object queryForSameId(java.lang.Object) -> queryForSameId
    com.j256.ormlite.stmt.QueryBuilder queryBuilder() -> queryBuilder
    com.j256.ormlite.stmt.UpdateBuilder updateBuilder() -> updateBuilder
    com.j256.ormlite.stmt.DeleteBuilder deleteBuilder() -> deleteBuilder
    java.util.List query(com.j256.ormlite.stmt.PreparedQuery) -> query
    int create(java.lang.Object) -> create
    java.lang.Object createIfNotExists(java.lang.Object) -> createIfNotExists
    com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object) -> createOrUpdate
    int update(java.lang.Object) -> update
    int updateId(java.lang.Object,java.lang.Object) -> updateId
    int update(com.j256.ormlite.stmt.PreparedUpdate) -> update
    int refresh(java.lang.Object) -> refresh
    int delete(java.lang.Object) -> delete
    int deleteById(java.lang.Object) -> deleteById
    int delete(java.util.Collection) -> delete
    int deleteIds(java.util.Collection) -> deleteIds
    int delete(com.j256.ormlite.stmt.PreparedDelete) -> delete
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    com.j256.ormlite.dao.CloseableIterator iterator(int) -> iterator
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable() -> getWrappedIterable
    com.j256.ormlite.dao.CloseableWrappedIterable getWrappedIterable(com.j256.ormlite.stmt.PreparedQuery) -> getWrappedIterable
    void closeLastIterator() -> closeLastIterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery) -> iterator
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery,int) -> iterator
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,java.lang.String[]) -> queryRaw
    long queryRawValue(java.lang.String,java.lang.String[]) -> queryRawValue
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],com.j256.ormlite.dao.RawRowObjectMapper,java.lang.String[]) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[]) -> queryRaw
    int executeRaw(java.lang.String,java.lang.String[]) -> executeRaw
    int executeRawNoArgs(java.lang.String) -> executeRawNoArgs
    int updateRaw(java.lang.String,java.lang.String[]) -> updateRaw
    java.lang.Object callBatchTasks(java.util.concurrent.Callable) -> callBatchTasks
    java.lang.String objectToString(java.lang.Object) -> objectToString
    boolean objectsEqual(java.lang.Object,java.lang.Object) -> objectsEqual
    java.lang.Object extractId(java.lang.Object) -> extractId
    java.lang.Class getDataClass() -> getDataClass
    com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class) -> findForeignFieldType
    boolean isUpdatable() -> isUpdatable
    boolean isTableExists() -> isTableExists
    long countOf() -> countOf
    long countOf(com.j256.ormlite.stmt.PreparedQuery) -> countOf
    void assignEmptyForeignCollection(java.lang.Object,java.lang.String) -> assignEmptyForeignCollection
    com.j256.ormlite.dao.ForeignCollection getEmptyForeignCollection(java.lang.String) -> getEmptyForeignCollection
    void setObjectCache(boolean) -> setObjectCache
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void setObjectCache(com.j256.ormlite.dao.ObjectCache) -> setObjectCache
    void clearObjectCache() -> clearObjectCache
    java.lang.Object mapSelectStarRow(com.j256.ormlite.support.DatabaseResults) -> mapSelectStarRow
    com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    boolean idExists(java.lang.Object) -> idExists
    com.j256.ormlite.support.DatabaseConnection startThreadConnection() -> startThreadConnection
    void endThreadConnection(com.j256.ormlite.support.DatabaseConnection) -> endThreadConnection
    void setAutoCommit(boolean) -> setAutoCommit
    void setAutoCommit(com.j256.ormlite.support.DatabaseConnection,boolean) -> setAutoCommit
    boolean isAutoCommit() -> isAutoCommit
    boolean isAutoCommit(com.j256.ormlite.support.DatabaseConnection) -> isAutoCommit
    void commit(com.j256.ormlite.support.DatabaseConnection) -> commit
    void rollBack(com.j256.ormlite.support.DatabaseConnection) -> rollBack
    void setObjectFactory(com.j256.ormlite.table.ObjectFactory) -> setObjectFactory
    com.j256.ormlite.dao.RawRowMapper getRawRowMapper() -> getRawRowMapper
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> getConnectionSource
    void logMessage(java.lang.Exception,java.lang.String) -> logMessage
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.db.BaseDatabaseType -> com.j256.ormlite.db.BaseDatabaseType:
    java.lang.String DEFAULT_SEQUENCE_SUFFIX -> DEFAULT_SEQUENCE_SUFFIX
    java.sql.Driver driver -> driver
    java.lang.String getDriverClassName() -> getDriverClassName
    void loadDriver() -> loadDriver
    void setDriver(java.sql.Driver) -> setDriver
    void appendColumnArg(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> appendColumnArg
    void appendStringType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendStringType
    void appendLongStringType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendLongStringType
    void appendDateType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendDateType
    void appendBooleanType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendBooleanType
    void appendCharType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendCharType
    void appendByteType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendByteType
    void appendShortType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendShortType
    void appendIntegerType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendIntegerType
    void appendLongType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendLongType
    void appendFloatType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendFloatType
    void appendDoubleType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendDoubleType
    void appendByteArrayType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendByteArrayType
    void appendSerializableType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendSerializableType
    void appendBigDecimalNumericType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendBigDecimalNumericType
    void appendDefaultValue(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.lang.Object) -> appendDefaultValue
    void configureGeneratedIdSequence(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List) -> configureGeneratedIdSequence
    void configureGeneratedId(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> configureGeneratedId
    void configureId(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List) -> configureId
    void addPrimaryKeySql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addPrimaryKeySql
    boolean generatedIdSqlAtEnd() -> generatedIdSqlAtEnd
    void addUniqueComboSql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addUniqueComboSql
    void dropColumnArg(com.j256.ormlite.field.FieldType,java.util.List,java.util.List) -> dropColumnArg
    void appendEscapedWord(java.lang.StringBuilder,java.lang.String) -> appendEscapedWord
    void appendEscapedEntityName(java.lang.StringBuilder,java.lang.String) -> appendEscapedEntityName
    java.lang.String generateIdSequenceName(java.lang.String,com.j256.ormlite.field.FieldType) -> generateIdSequenceName
    java.lang.String getCommentLinePrefix() -> getCommentLinePrefix
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> getFieldConverter
    boolean isIdSequenceNeeded() -> isIdSequenceNeeded
    boolean isVarcharFieldWidthSupported() -> isVarcharFieldWidthSupported
    boolean isLimitSqlSupported() -> isLimitSqlSupported
    boolean isOffsetSqlSupported() -> isOffsetSqlSupported
    boolean isOffsetLimitArgument() -> isOffsetLimitArgument
    boolean isLimitAfterSelect() -> isLimitAfterSelect
    void appendLimitValue(java.lang.StringBuilder,long,java.lang.Long) -> appendLimitValue
    void appendOffsetValue(java.lang.StringBuilder,long) -> appendOffsetValue
    void appendSelectNextValFromSequence(java.lang.StringBuilder,java.lang.String) -> appendSelectNextValFromSequence
    void appendCreateTableSuffix(java.lang.StringBuilder) -> appendCreateTableSuffix
    boolean isCreateTableReturnsZero() -> isCreateTableReturnsZero
    boolean isCreateTableReturnsNegative() -> isCreateTableReturnsNegative
    boolean isEntityNamesMustBeUpCase() -> isEntityNamesMustBeUpCase
    boolean isNestedSavePointsSupported() -> isNestedSavePointsSupported
    java.lang.String getPingStatement() -> getPingStatement
    boolean isBatchUseTransaction() -> isBatchUseTransaction
    boolean isTruncateSupported() -> isTruncateSupported
    boolean isCreateIfNotExistsSupported() -> isCreateIfNotExistsSupported
    boolean isCreateIndexIfNotExistsSupported() -> isCreateIndexIfNotExistsSupported
    boolean isSelectSequenceBeforeInsert() -> isSelectSequenceBeforeInsert
    boolean isAllowGeneratedIdInsertSupported() -> isAllowGeneratedIdInsertSupported
    com.j256.ormlite.table.DatabaseTableConfig extractDatabaseTableConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> extractDatabaseTableConfig
    void appendInsertNoColumns(java.lang.StringBuilder) -> appendInsertNoColumns
    void appendCanBeNull(java.lang.StringBuilder,com.j256.ormlite.field.FieldType) -> appendCanBeNull
    void addSingleUnique(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List) -> addSingleUnique
com.j256.ormlite.db.BaseDatabaseType$1 -> com.j256.ormlite.db.BaseDatabaseType$1:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> $SwitchMap$com$j256$ormlite$field$SqlType
com.j256.ormlite.db.BaseDatabaseType$BooleanNumberFieldConverter -> com.j256.ormlite.db.BaseDatabaseType$BooleanNumberFieldConverter:
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
com.j256.ormlite.db.BaseSqliteDatabaseType -> com.j256.ormlite.db.BaseSqliteDatabaseType:
    com.j256.ormlite.field.FieldConverter booleanConverter -> booleanConverter
    void appendLongType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendLongType
    void configureGeneratedId(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> configureGeneratedId
    boolean generatedIdSqlAtEnd() -> generatedIdSqlAtEnd
    boolean isVarcharFieldWidthSupported() -> isVarcharFieldWidthSupported
    boolean isCreateTableReturnsZero() -> isCreateTableReturnsZero
    boolean isCreateIfNotExistsSupported() -> isCreateIfNotExistsSupported
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> getFieldConverter
    void appendInsertNoColumns(java.lang.StringBuilder) -> appendInsertNoColumns
com.j256.ormlite.db.BaseSqliteDatabaseType$1 -> com.j256.ormlite.db.BaseSqliteDatabaseType$1:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> $SwitchMap$com$j256$ormlite$field$SqlType
com.j256.ormlite.db.DatabaseType -> com.j256.ormlite.db.DatabaseType:
    boolean isDatabaseUrlThisType(java.lang.String,java.lang.String) -> isDatabaseUrlThisType
    void loadDriver() -> loadDriver
    void setDriver(java.sql.Driver) -> setDriver
    void appendColumnArg(java.lang.String,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List,java.util.List,java.util.List,java.util.List) -> appendColumnArg
    void addPrimaryKeySql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addPrimaryKeySql
    void addUniqueComboSql(com.j256.ormlite.field.FieldType[],java.util.List,java.util.List,java.util.List,java.util.List) -> addUniqueComboSql
    void dropColumnArg(com.j256.ormlite.field.FieldType,java.util.List,java.util.List) -> dropColumnArg
    void appendEscapedEntityName(java.lang.StringBuilder,java.lang.String) -> appendEscapedEntityName
    void appendEscapedWord(java.lang.StringBuilder,java.lang.String) -> appendEscapedWord
    java.lang.String generateIdSequenceName(java.lang.String,com.j256.ormlite.field.FieldType) -> generateIdSequenceName
    java.lang.String getCommentLinePrefix() -> getCommentLinePrefix
    boolean isIdSequenceNeeded() -> isIdSequenceNeeded
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> getFieldConverter
    boolean isVarcharFieldWidthSupported() -> isVarcharFieldWidthSupported
    boolean isLimitSqlSupported() -> isLimitSqlSupported
    boolean isLimitAfterSelect() -> isLimitAfterSelect
    void appendLimitValue(java.lang.StringBuilder,long,java.lang.Long) -> appendLimitValue
    boolean isOffsetSqlSupported() -> isOffsetSqlSupported
    boolean isOffsetLimitArgument() -> isOffsetLimitArgument
    void appendOffsetValue(java.lang.StringBuilder,long) -> appendOffsetValue
    void appendSelectNextValFromSequence(java.lang.StringBuilder,java.lang.String) -> appendSelectNextValFromSequence
    void appendCreateTableSuffix(java.lang.StringBuilder) -> appendCreateTableSuffix
    boolean isCreateTableReturnsZero() -> isCreateTableReturnsZero
    boolean isCreateTableReturnsNegative() -> isCreateTableReturnsNegative
    boolean isEntityNamesMustBeUpCase() -> isEntityNamesMustBeUpCase
    boolean isNestedSavePointsSupported() -> isNestedSavePointsSupported
    java.lang.String getPingStatement() -> getPingStatement
    boolean isBatchUseTransaction() -> isBatchUseTransaction
    boolean isTruncateSupported() -> isTruncateSupported
    boolean isCreateIfNotExistsSupported() -> isCreateIfNotExistsSupported
    boolean isCreateIndexIfNotExistsSupported() -> isCreateIndexIfNotExistsSupported
    boolean isSelectSequenceBeforeInsert() -> isSelectSequenceBeforeInsert
    boolean isAllowGeneratedIdInsertSupported() -> isAllowGeneratedIdInsertSupported
    java.lang.String getDatabaseName() -> getDatabaseName
    com.j256.ormlite.table.DatabaseTableConfig extractDatabaseTableConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> extractDatabaseTableConfig
    void appendInsertNoColumns(java.lang.StringBuilder) -> appendInsertNoColumns
com.j256.ormlite.db.SqliteAndroidDatabaseType -> com.j256.ormlite.db.SqliteAndroidDatabaseType:
    void loadDriver() -> loadDriver
    boolean isDatabaseUrlThisType(java.lang.String,java.lang.String) -> isDatabaseUrlThisType
    java.lang.String getDriverClassName() -> getDriverClassName
    java.lang.String getDatabaseName() -> getDatabaseName
    void appendDateType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendDateType
    void appendBooleanType(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,int) -> appendBooleanType
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> getFieldConverter
    boolean isNestedSavePointsSupported() -> isNestedSavePointsSupported
    boolean isBatchUseTransaction() -> isBatchUseTransaction
    com.j256.ormlite.table.DatabaseTableConfig extractDatabaseTableConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> extractDatabaseTableConfig
com.j256.ormlite.db.SqliteAndroidDatabaseType$1 -> com.j256.ormlite.db.SqliteAndroidDatabaseType$1:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> $SwitchMap$com$j256$ormlite$field$SqlType
com.j256.ormlite.field.BaseFieldConverter -> com.j256.ormlite.field.BaseFieldConverter:
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    boolean isStreamType() -> isStreamType
com.j256.ormlite.field.DataPersister -> com.j256.ormlite.field.DataPersister:
    java.lang.Class[] getAssociatedClasses() -> getAssociatedClasses
    java.lang.String[] getAssociatedClassNames() -> getAssociatedClassNames
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    java.lang.Class getPrimaryClass() -> getPrimaryClass
    boolean isEscapedDefaultValue() -> isEscapedDefaultValue
    boolean isEscapedValue() -> isEscapedValue
    boolean isPrimitive() -> isPrimitive
    boolean isComparable() -> isComparable
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    boolean isSelfGeneratedId() -> isSelfGeneratedId
    java.lang.Object generateId() -> generateId
    int getDefaultWidth() -> getDefaultWidth
    boolean dataIsEqual(java.lang.Object,java.lang.Object) -> dataIsEqual
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.DataPersisterManager -> com.j256.ormlite.field.DataPersisterManager:
    com.j256.ormlite.field.DataPersister DEFAULT_ENUM_PERSISTER -> DEFAULT_ENUM_PERSISTER
    java.util.Map builtInMap -> builtInMap
    java.util.List registeredPersisters -> registeredPersisters
    void registerDataPersisters(com.j256.ormlite.field.DataPersister[]) -> registerDataPersisters
    void clear() -> clear
    com.j256.ormlite.field.DataPersister lookupForField(java.lang.reflect.Field) -> lookupForField
com.j256.ormlite.field.DataType -> com.j256.ormlite.field.DataType:
    com.j256.ormlite.field.DataType STRING -> STRING
    com.j256.ormlite.field.DataType LONG_STRING -> LONG_STRING
    com.j256.ormlite.field.DataType STRING_BYTES -> STRING_BYTES
    com.j256.ormlite.field.DataType BOOLEAN -> BOOLEAN
    com.j256.ormlite.field.DataType BOOLEAN_OBJ -> BOOLEAN_OBJ
    com.j256.ormlite.field.DataType DATE -> DATE
    com.j256.ormlite.field.DataType DATE_LONG -> DATE_LONG
    com.j256.ormlite.field.DataType DATE_STRING -> DATE_STRING
    com.j256.ormlite.field.DataType CHAR -> CHAR
    com.j256.ormlite.field.DataType CHAR_OBJ -> CHAR_OBJ
    com.j256.ormlite.field.DataType BYTE -> BYTE
    com.j256.ormlite.field.DataType BYTE_ARRAY -> BYTE_ARRAY
    com.j256.ormlite.field.DataType BYTE_OBJ -> BYTE_OBJ
    com.j256.ormlite.field.DataType SHORT -> SHORT
    com.j256.ormlite.field.DataType SHORT_OBJ -> SHORT_OBJ
    com.j256.ormlite.field.DataType INTEGER -> INTEGER
    com.j256.ormlite.field.DataType INTEGER_OBJ -> INTEGER_OBJ
    com.j256.ormlite.field.DataType LONG -> LONG
    com.j256.ormlite.field.DataType LONG_OBJ -> LONG_OBJ
    com.j256.ormlite.field.DataType FLOAT -> FLOAT
    com.j256.ormlite.field.DataType FLOAT_OBJ -> FLOAT_OBJ
    com.j256.ormlite.field.DataType DOUBLE -> DOUBLE
    com.j256.ormlite.field.DataType DOUBLE_OBJ -> DOUBLE_OBJ
    com.j256.ormlite.field.DataType SERIALIZABLE -> SERIALIZABLE
    com.j256.ormlite.field.DataType ENUM_STRING -> ENUM_STRING
    com.j256.ormlite.field.DataType ENUM_INTEGER -> ENUM_INTEGER
    com.j256.ormlite.field.DataType UUID -> UUID
    com.j256.ormlite.field.DataType BIG_INTEGER -> BIG_INTEGER
    com.j256.ormlite.field.DataType BIG_DECIMAL -> BIG_DECIMAL
    com.j256.ormlite.field.DataType BIG_DECIMAL_NUMERIC -> BIG_DECIMAL_NUMERIC
    com.j256.ormlite.field.DataType DATE_TIME -> DATE_TIME
    com.j256.ormlite.field.DataType SQL_DATE -> SQL_DATE
    com.j256.ormlite.field.DataType TIME_STAMP -> TIME_STAMP
    com.j256.ormlite.field.DataType UNKNOWN -> UNKNOWN
    com.j256.ormlite.field.DataPersister dataPersister -> dataPersister
    com.j256.ormlite.field.DataType[] $VALUES -> $VALUES
    com.j256.ormlite.field.DataType[] values() -> values
    com.j256.ormlite.field.DataType valueOf(java.lang.String) -> valueOf
    com.j256.ormlite.field.DataPersister getDataPersister() -> getDataPersister
com.j256.ormlite.field.DatabaseField -> com.j256.ormlite.field.DatabaseField:
    java.lang.String DEFAULT_STRING -> DEFAULT_STRING
    int NO_MAX_FOREIGN_AUTO_REFRESH_LEVEL_SPECIFIED -> NO_MAX_FOREIGN_AUTO_REFRESH_LEVEL_SPECIFIED
    int DEFAULT_MAX_FOREIGN_AUTO_REFRESH_LEVEL -> DEFAULT_MAX_FOREIGN_AUTO_REFRESH_LEVEL
    java.lang.String columnName() -> columnName
    com.j256.ormlite.field.DataType dataType() -> dataType
    java.lang.String defaultValue() -> defaultValue
    int width() -> width
    boolean canBeNull() -> canBeNull
    boolean id() -> id
    boolean generatedId() -> generatedId
    java.lang.String generatedIdSequence() -> generatedIdSequence
    boolean foreign() -> foreign
    boolean useGetSet() -> useGetSet
    java.lang.String unknownEnumName() -> unknownEnumName
    boolean throwIfNull() -> throwIfNull
    boolean persisted() -> persisted
    java.lang.String format() -> format
    boolean unique() -> unique
    boolean uniqueCombo() -> uniqueCombo
    boolean index() -> index
    boolean uniqueIndex() -> uniqueIndex
    java.lang.String indexName() -> indexName
    java.lang.String uniqueIndexName() -> uniqueIndexName
    boolean foreignAutoRefresh() -> foreignAutoRefresh
    int maxForeignAutoRefreshLevel() -> maxForeignAutoRefreshLevel
    java.lang.Class persisterClass() -> persisterClass
    boolean allowGeneratedIdInsert() -> allowGeneratedIdInsert
    java.lang.String columnDefinition() -> columnDefinition
    boolean foreignAutoCreate() -> foreignAutoCreate
    boolean version() -> version
    java.lang.String foreignColumnName() -> foreignColumnName
    boolean readOnly() -> readOnly
com.j256.ormlite.field.DatabaseFieldConfig -> com.j256.ormlite.field.DatabaseFieldConfig:
    int DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL -> DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL
    java.lang.Class DEFAULT_PERSISTER_CLASS -> DEFAULT_PERSISTER_CLASS
    com.j256.ormlite.field.DataType DEFAULT_DATA_TYPE -> DEFAULT_DATA_TYPE
    boolean DEFAULT_CAN_BE_NULL -> DEFAULT_CAN_BE_NULL
    boolean DEFAULT_FOREIGN_COLLECTION_ORDER_ASCENDING -> DEFAULT_FOREIGN_COLLECTION_ORDER_ASCENDING
    java.lang.String fieldName -> fieldName
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.DataType dataType -> dataType
    com.j256.ormlite.field.DataPersister dataPersister -> dataPersister
    java.lang.String defaultValue -> defaultValue
    int width -> width
    boolean canBeNull -> canBeNull
    boolean id -> id
    boolean generatedId -> generatedId
    java.lang.String generatedIdSequence -> generatedIdSequence
    boolean foreign -> foreign
    com.j256.ormlite.table.DatabaseTableConfig foreignTableConfig -> foreignTableConfig
    boolean useGetSet -> useGetSet
    java.lang.Enum unknownEnumValue -> unknownEnumValue
    boolean throwIfNull -> throwIfNull
    boolean persisted -> persisted
    java.lang.String format -> format
    boolean unique -> unique
    boolean uniqueCombo -> uniqueCombo
    boolean index -> index
    java.lang.String indexName -> indexName
    boolean uniqueIndex -> uniqueIndex
    java.lang.String uniqueIndexName -> uniqueIndexName
    boolean foreignAutoRefresh -> foreignAutoRefresh
    int maxForeignAutoRefreshLevel -> maxForeignAutoRefreshLevel
    java.lang.Class persisterClass -> persisterClass
    boolean allowGeneratedIdInsert -> allowGeneratedIdInsert
    java.lang.String columnDefinition -> columnDefinition
    boolean foreignAutoCreate -> foreignAutoCreate
    boolean version -> version
    java.lang.String foreignColumnName -> foreignColumnName
    boolean readOnly -> readOnly
    boolean foreignCollection -> foreignCollection
    boolean foreignCollectionEager -> foreignCollectionEager
    int foreignCollectionMaxEagerLevel -> foreignCollectionMaxEagerLevel
    java.lang.String foreignCollectionColumnName -> foreignCollectionColumnName
    java.lang.String foreignCollectionOrderColumnName -> foreignCollectionOrderColumnName
    boolean foreignCollectionOrderAscending -> foreignCollectionOrderAscending
    java.lang.String foreignCollectionForeignFieldName -> foreignCollectionForeignFieldName
    java.lang.String getFieldName() -> getFieldName
    void setFieldName(java.lang.String) -> setFieldName
    java.lang.String getColumnName() -> getColumnName
    void setColumnName(java.lang.String) -> setColumnName
    com.j256.ormlite.field.DataType getDataType() -> getDataType
    void setDataType(com.j256.ormlite.field.DataType) -> setDataType
    com.j256.ormlite.field.DataPersister getDataPersister() -> getDataPersister
    void setDataPersister(com.j256.ormlite.field.DataPersister) -> setDataPersister
    java.lang.String getDefaultValue() -> getDefaultValue
    void setDefaultValue(java.lang.String) -> setDefaultValue
    int getWidth() -> getWidth
    void setWidth(int) -> setWidth
    boolean isCanBeNull() -> isCanBeNull
    void setCanBeNull(boolean) -> setCanBeNull
    boolean isId() -> isId
    void setId(boolean) -> setId
    boolean isGeneratedId() -> isGeneratedId
    void setGeneratedId(boolean) -> setGeneratedId
    java.lang.String getGeneratedIdSequence() -> getGeneratedIdSequence
    void setGeneratedIdSequence(java.lang.String) -> setGeneratedIdSequence
    boolean isForeign() -> isForeign
    void setForeign(boolean) -> setForeign
    com.j256.ormlite.table.DatabaseTableConfig getForeignTableConfig() -> getForeignTableConfig
    void setForeignTableConfig(com.j256.ormlite.table.DatabaseTableConfig) -> setForeignTableConfig
    boolean isUseGetSet() -> isUseGetSet
    void setUseGetSet(boolean) -> setUseGetSet
    java.lang.Enum getUnknownEnumValue() -> getUnknownEnumValue
    void setUnknownEnumValue(java.lang.Enum) -> setUnknownEnumValue
    boolean isThrowIfNull() -> isThrowIfNull
    void setThrowIfNull(boolean) -> setThrowIfNull
    boolean isPersisted() -> isPersisted
    void setPersisted(boolean) -> setPersisted
    java.lang.String getFormat() -> getFormat
    void setFormat(java.lang.String) -> setFormat
    boolean isUnique() -> isUnique
    void setUnique(boolean) -> setUnique
    boolean isUniqueCombo() -> isUniqueCombo
    void setUniqueCombo(boolean) -> setUniqueCombo
    boolean isIndex() -> isIndex
    void setIndex(boolean) -> setIndex
    java.lang.String getIndexName(java.lang.String) -> getIndexName
    void setIndexName(java.lang.String) -> setIndexName
    boolean isUniqueIndex() -> isUniqueIndex
    void setUniqueIndex(boolean) -> setUniqueIndex
    java.lang.String getUniqueIndexName(java.lang.String) -> getUniqueIndexName
    void setUniqueIndexName(java.lang.String) -> setUniqueIndexName
    void setForeignAutoRefresh(boolean) -> setForeignAutoRefresh
    boolean isForeignAutoRefresh() -> isForeignAutoRefresh
    int getMaxForeignAutoRefreshLevel() -> getMaxForeignAutoRefreshLevel
    void setMaxForeignAutoRefreshLevel(int) -> setMaxForeignAutoRefreshLevel
    boolean isForeignCollection() -> isForeignCollection
    void setForeignCollection(boolean) -> setForeignCollection
    boolean isForeignCollectionEager() -> isForeignCollectionEager
    void setForeignCollectionEager(boolean) -> setForeignCollectionEager
    int getForeignCollectionMaxEagerLevel() -> getForeignCollectionMaxEagerLevel
    void setForeignCollectionMaxEagerLevel(int) -> setForeignCollectionMaxEagerLevel
    void setMaxEagerForeignCollectionLevel(int) -> setMaxEagerForeignCollectionLevel
    void setForeignCollectionMaxEagerForeignCollectionLevel(int) -> setForeignCollectionMaxEagerForeignCollectionLevel
    java.lang.String getForeignCollectionColumnName() -> getForeignCollectionColumnName
    void setForeignCollectionColumnName(java.lang.String) -> setForeignCollectionColumnName
    java.lang.String getForeignCollectionOrderColumnName() -> getForeignCollectionOrderColumnName
    void setForeignCollectionOrderColumn(java.lang.String) -> setForeignCollectionOrderColumn
    void setForeignCollectionOrderColumnName(java.lang.String) -> setForeignCollectionOrderColumnName
    boolean isForeignCollectionOrderAscending() -> isForeignCollectionOrderAscending
    void setForeignCollectionOrderAscending(boolean) -> setForeignCollectionOrderAscending
    java.lang.String getForeignCollectionForeignFieldName() -> getForeignCollectionForeignFieldName
    void setForeignCollectionForeignColumnName(java.lang.String) -> setForeignCollectionForeignColumnName
    void setForeignCollectionForeignFieldName(java.lang.String) -> setForeignCollectionForeignFieldName
    java.lang.Class getPersisterClass() -> getPersisterClass
    void setPersisterClass(java.lang.Class) -> setPersisterClass
    boolean isAllowGeneratedIdInsert() -> isAllowGeneratedIdInsert
    void setAllowGeneratedIdInsert(boolean) -> setAllowGeneratedIdInsert
    java.lang.String getColumnDefinition() -> getColumnDefinition
    void setColumnDefinition(java.lang.String) -> setColumnDefinition
    boolean isForeignAutoCreate() -> isForeignAutoCreate
    void setForeignAutoCreate(boolean) -> setForeignAutoCreate
    boolean isVersion() -> isVersion
    void setVersion(boolean) -> setVersion
    java.lang.String getForeignColumnName() -> getForeignColumnName
    void setForeignColumnName(java.lang.String) -> setForeignColumnName
    boolean isReadOnly() -> isReadOnly
    void setReadOnly(boolean) -> setReadOnly
    com.j256.ormlite.field.DatabaseFieldConfig fromField(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.reflect.Field) -> fromField
    java.lang.reflect.Method findGetMethod(java.lang.reflect.Field,boolean) -> findGetMethod
    java.lang.reflect.Method findSetMethod(java.lang.reflect.Field,boolean) -> findSetMethod
    com.j256.ormlite.field.DatabaseFieldConfig fromDatabaseField(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.reflect.Field,com.j256.ormlite.field.DatabaseField) -> fromDatabaseField
    void postProcess() -> postProcess
    java.lang.Enum findMatchingEnumVal(java.lang.reflect.Field,java.lang.String) -> findMatchingEnumVal
    com.j256.ormlite.field.DatabaseFieldConfig fromForeignCollection(com.j256.ormlite.db.DatabaseType,java.lang.reflect.Field,com.j256.ormlite.field.ForeignCollectionField) -> fromForeignCollection
    java.lang.String findIndexName(java.lang.String) -> findIndexName
    java.lang.String valueIfNotBlank(java.lang.String) -> valueIfNotBlank
    java.lang.String methodFromField(java.lang.reflect.Field,java.lang.String) -> methodFromField
com.j256.ormlite.field.DatabaseFieldConfigLoader -> com.j256.ormlite.field.DatabaseFieldConfigLoader:
    java.lang.String CONFIG_FILE_START_MARKER -> CONFIG_FILE_START_MARKER
    java.lang.String CONFIG_FILE_END_MARKER -> CONFIG_FILE_END_MARKER
    int DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL -> DEFAULT_MAX_EAGER_FOREIGN_COLLECTION_LEVEL
    com.j256.ormlite.field.DataPersister DEFAULT_DATA_PERSISTER -> DEFAULT_DATA_PERSISTER
    java.lang.String FIELD_NAME_FIELD_NAME -> FIELD_NAME_FIELD_NAME
    java.lang.String FIELD_NAME_COLUMN_NAME -> FIELD_NAME_COLUMN_NAME
    java.lang.String FIELD_NAME_DATA_PERSISTER -> FIELD_NAME_DATA_PERSISTER
    java.lang.String FIELD_NAME_DEFAULT_VALUE -> FIELD_NAME_DEFAULT_VALUE
    java.lang.String FIELD_NAME_WIDTH -> FIELD_NAME_WIDTH
    java.lang.String FIELD_NAME_CAN_BE_NULL -> FIELD_NAME_CAN_BE_NULL
    java.lang.String FIELD_NAME_ID -> FIELD_NAME_ID
    java.lang.String FIELD_NAME_GENERATED_ID -> FIELD_NAME_GENERATED_ID
    java.lang.String FIELD_NAME_GENERATED_ID_SEQUENCE -> FIELD_NAME_GENERATED_ID_SEQUENCE
    java.lang.String FIELD_NAME_FOREIGN -> FIELD_NAME_FOREIGN
    java.lang.String FIELD_NAME_USE_GET_SET -> FIELD_NAME_USE_GET_SET
    java.lang.String FIELD_NAME_UNKNOWN_ENUM_VALUE -> FIELD_NAME_UNKNOWN_ENUM_VALUE
    java.lang.String FIELD_NAME_THROW_IF_NULL -> FIELD_NAME_THROW_IF_NULL
    java.lang.String FIELD_NAME_FORMAT -> FIELD_NAME_FORMAT
    java.lang.String FIELD_NAME_UNIQUE -> FIELD_NAME_UNIQUE
    java.lang.String FIELD_NAME_UNIQUE_COMBO -> FIELD_NAME_UNIQUE_COMBO
    java.lang.String FIELD_NAME_INDEX -> FIELD_NAME_INDEX
    java.lang.String FIELD_NAME_INDEX_NAME -> FIELD_NAME_INDEX_NAME
    java.lang.String FIELD_NAME_UNIQUE_INDEX -> FIELD_NAME_UNIQUE_INDEX
    java.lang.String FIELD_NAME_UNIQUE_INDEX_NAME -> FIELD_NAME_UNIQUE_INDEX_NAME
    java.lang.String FIELD_NAME_FOREIGN_AUTO_REFRESH -> FIELD_NAME_FOREIGN_AUTO_REFRESH
    java.lang.String FIELD_NAME_MAX_FOREIGN_AUTO_REFRESH_LEVEL -> FIELD_NAME_MAX_FOREIGN_AUTO_REFRESH_LEVEL
    java.lang.String FIELD_NAME_PERSISTER_CLASS -> FIELD_NAME_PERSISTER_CLASS
    java.lang.String FIELD_NAME_ALLOW_GENERATED_ID_INSERT -> FIELD_NAME_ALLOW_GENERATED_ID_INSERT
    java.lang.String FIELD_NAME_COLUMN_DEFINITION -> FIELD_NAME_COLUMN_DEFINITION
    java.lang.String FIELD_NAME_FOREIGN_AUTO_CREATE -> FIELD_NAME_FOREIGN_AUTO_CREATE
    java.lang.String FIELD_NAME_VERSION -> FIELD_NAME_VERSION
    java.lang.String FIELD_NAME_FOREIGN_COLUMN_NAME -> FIELD_NAME_FOREIGN_COLUMN_NAME
    java.lang.String FIELD_NAME_READ_ONLY -> FIELD_NAME_READ_ONLY
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION -> FIELD_NAME_FOREIGN_COLLECTION
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_EAGER -> FIELD_NAME_FOREIGN_COLLECTION_EAGER
    java.lang.String FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL_OLD -> FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL_OLD
    java.lang.String FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL -> FIELD_NAME_MAX_EAGER_FOREIGN_COLLECTION_LEVEL
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_COLUMN_NAME -> FIELD_NAME_FOREIGN_COLLECTION_COLUMN_NAME
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN_NAME_OLD -> FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN_NAME_OLD
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN_NAME -> FIELD_NAME_FOREIGN_COLLECTION_ORDER_COLUMN_NAME
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_ORDER_ASCENDING -> FIELD_NAME_FOREIGN_COLLECTION_ORDER_ASCENDING
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_FOREIGN_FIELD_NAME_OLD -> FIELD_NAME_FOREIGN_COLLECTION_FOREIGN_FIELD_NAME_OLD
    java.lang.String FIELD_NAME_FOREIGN_COLLECTION_FOREIGN_FIELD_NAME -> FIELD_NAME_FOREIGN_COLLECTION_FOREIGN_FIELD_NAME
    com.j256.ormlite.field.DatabaseFieldConfig fromReader(java.io.BufferedReader) -> fromReader
    void write(java.io.BufferedWriter,com.j256.ormlite.field.DatabaseFieldConfig,java.lang.String) -> write
    void writeConfig(java.io.BufferedWriter,com.j256.ormlite.field.DatabaseFieldConfig,java.lang.String) -> writeConfig
    void readField(com.j256.ormlite.field.DatabaseFieldConfig,java.lang.String,java.lang.String) -> readField
com.j256.ormlite.field.FieldConverter -> com.j256.ormlite.field.FieldConverter:
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToJava
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    boolean isStreamType() -> isStreamType
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
com.j256.ormlite.field.FieldType -> com.j256.ormlite.field.FieldType:
    java.lang.String FOREIGN_ID_FIELD_SUFFIX -> FOREIGN_ID_FIELD_SUFFIX
    boolean DEFAULT_VALUE_BOOLEAN -> DEFAULT_VALUE_BOOLEAN
    byte DEFAULT_VALUE_BYTE -> DEFAULT_VALUE_BYTE
    char DEFAULT_VALUE_CHAR -> DEFAULT_VALUE_CHAR
    short DEFAULT_VALUE_SHORT -> DEFAULT_VALUE_SHORT
    int DEFAULT_VALUE_INT -> DEFAULT_VALUE_INT
    long DEFAULT_VALUE_LONG -> DEFAULT_VALUE_LONG
    float DEFAULT_VALUE_FLOAT -> DEFAULT_VALUE_FLOAT
    double DEFAULT_VALUE_DOUBLE -> DEFAULT_VALUE_DOUBLE
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    java.lang.String tableName -> tableName
    java.lang.reflect.Field field -> field
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.DatabaseFieldConfig fieldConfig -> fieldConfig
    boolean isId -> isId
    boolean isGeneratedId -> isGeneratedId
    java.lang.String generatedIdSequence -> generatedIdSequence
    java.lang.reflect.Method fieldGetMethod -> fieldGetMethod
    java.lang.reflect.Method fieldSetMethod -> fieldSetMethod
    java.lang.Class parentClass -> parentClass
    com.j256.ormlite.field.DataPersister dataPersister -> dataPersister
    java.lang.Object defaultValue -> defaultValue
    java.lang.Object dataTypeConfigObj -> dataTypeConfigObj
    com.j256.ormlite.field.FieldConverter fieldConverter -> fieldConverter
    com.j256.ormlite.field.FieldType foreignIdField -> foreignIdField
    com.j256.ormlite.table.TableInfo foreignTableInfo -> foreignTableInfo
    com.j256.ormlite.field.FieldType foreignFieldType -> foreignFieldType
    com.j256.ormlite.dao.BaseDaoImpl foreignDao -> foreignDao
    com.j256.ormlite.stmt.mapped.MappedQueryForId mappedQueryForId -> mappedQueryForId
    java.lang.ThreadLocal threadLevelCounters -> threadLevelCounters
    void configDaoInformation(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> configDaoInformation
    java.lang.reflect.Field getField() -> getField
    java.lang.String getTableName() -> getTableName
    java.lang.String getFieldName() -> getFieldName
    java.lang.Class getType() -> getType
    java.lang.String getColumnName() -> getColumnName
    com.j256.ormlite.field.DataPersister getDataPersister() -> getDataPersister
    java.lang.Object getDataTypeConfigObj() -> getDataTypeConfigObj
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    java.lang.Object getDefaultValue() -> getDefaultValue
    int getWidth() -> getWidth
    boolean isCanBeNull() -> isCanBeNull
    boolean isId() -> isId
    boolean isGeneratedId() -> isGeneratedId
    boolean isGeneratedIdSequence() -> isGeneratedIdSequence
    java.lang.String getGeneratedIdSequence() -> getGeneratedIdSequence
    boolean isForeign() -> isForeign
    void assignField(java.lang.Object,java.lang.Object,boolean,com.j256.ormlite.dao.ObjectCache) -> assignField
    java.lang.Object assignIdValue(java.lang.Object,java.lang.Number,com.j256.ormlite.dao.ObjectCache) -> assignIdValue
    java.lang.Object extractRawJavaFieldValue(java.lang.Object) -> extractRawJavaFieldValue
    java.lang.Object extractJavaFieldValue(java.lang.Object) -> extractJavaFieldValue
    java.lang.Object extractJavaFieldToSqlArgValue(java.lang.Object) -> extractJavaFieldToSqlArgValue
    java.lang.Object convertJavaFieldToSqlArgValue(java.lang.Object) -> convertJavaFieldToSqlArgValue
    java.lang.Object convertStringToJavaField(java.lang.String,int) -> convertStringToJavaField
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
    com.j256.ormlite.field.FieldType getForeignIdField() -> getForeignIdField
    boolean isEscapedValue() -> isEscapedValue
    java.lang.Enum getUnknownEnumVal() -> getUnknownEnumVal
    java.lang.String getFormat() -> getFormat
    boolean isUnique() -> isUnique
    boolean isUniqueCombo() -> isUniqueCombo
    java.lang.String getIndexName() -> getIndexName
    java.lang.String getUniqueIndexName() -> getUniqueIndexName
    boolean isEscapedDefaultValue() -> isEscapedDefaultValue
    boolean isComparable() -> isComparable
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    boolean isForeignCollection() -> isForeignCollection
    com.j256.ormlite.dao.BaseForeignCollection buildForeignCollection(java.lang.Object,java.lang.Object) -> buildForeignCollection
    java.lang.Object resultToJava(com.j256.ormlite.support.DatabaseResults,java.util.Map) -> resultToJava
    boolean isSelfGeneratedId() -> isSelfGeneratedId
    boolean isAllowGeneratedIdInsert() -> isAllowGeneratedIdInsert
    java.lang.String getColumnDefinition() -> getColumnDefinition
    boolean isForeignAutoCreate() -> isForeignAutoCreate
    boolean isVersion() -> isVersion
    java.lang.Object generateId() -> generateId
    boolean isReadOnly() -> isReadOnly
    java.lang.Object getFieldValueIfNotDefault(java.lang.Object) -> getFieldValueIfNotDefault
    boolean isObjectsFieldValueDefault(java.lang.Object) -> isObjectsFieldValueDefault
    java.lang.Object getJavaDefaultValueDefault() -> getJavaDefaultValueDefault
    int createWithForeignDao(java.lang.Object) -> createWithForeignDao
    com.j256.ormlite.field.FieldType createFieldType(com.j256.ormlite.support.ConnectionSource,java.lang.String,java.lang.reflect.Field,java.lang.Class) -> createFieldType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean isFieldValueDefault(java.lang.Object) -> isFieldValueDefault
    com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class,java.lang.Class,com.j256.ormlite.dao.BaseDaoImpl) -> findForeignFieldType
    void assignDataType(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.DataPersister) -> assignDataType
com.j256.ormlite.field.FieldType$1 -> com.j256.ormlite.field.FieldType$1:
    com.j256.ormlite.field.FieldType$LevelCounters initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.field.FieldType$LevelCounters -> com.j256.ormlite.field.FieldType$LevelCounters:
    int autoRefreshLevel -> autoRefreshLevel
    int autoRefreshLevelMax -> autoRefreshLevelMax
    int foreignCollectionLevel -> foreignCollectionLevel
    int foreignCollectionLevelMax -> foreignCollectionLevelMax
com.j256.ormlite.field.ForeignCollectionField -> com.j256.ormlite.field.ForeignCollectionField:
    int MAX_EAGER_LEVEL -> MAX_EAGER_LEVEL
    boolean eager() -> eager
    int maxEagerForeignCollectionLevel() -> maxEagerForeignCollectionLevel
    int maxEagerLevel() -> maxEagerLevel
    java.lang.String columnName() -> columnName
    java.lang.String orderColumnName() -> orderColumnName
    boolean orderAscending() -> orderAscending
    java.lang.String foreignColumnName() -> foreignColumnName
    java.lang.String foreignFieldName() -> foreignFieldName
com.j256.ormlite.field.SqlType -> com.j256.ormlite.field.SqlType:
    com.j256.ormlite.field.SqlType STRING -> STRING
    com.j256.ormlite.field.SqlType LONG_STRING -> LONG_STRING
    com.j256.ormlite.field.SqlType DATE -> DATE
    com.j256.ormlite.field.SqlType BOOLEAN -> BOOLEAN
    com.j256.ormlite.field.SqlType CHAR -> CHAR
    com.j256.ormlite.field.SqlType BYTE -> BYTE
    com.j256.ormlite.field.SqlType BYTE_ARRAY -> BYTE_ARRAY
    com.j256.ormlite.field.SqlType SHORT -> SHORT
    com.j256.ormlite.field.SqlType INTEGER -> INTEGER
    com.j256.ormlite.field.SqlType LONG -> LONG
    com.j256.ormlite.field.SqlType FLOAT -> FLOAT
    com.j256.ormlite.field.SqlType DOUBLE -> DOUBLE
    com.j256.ormlite.field.SqlType SERIALIZABLE -> SERIALIZABLE
    com.j256.ormlite.field.SqlType BLOB -> BLOB
    com.j256.ormlite.field.SqlType BIG_DECIMAL -> BIG_DECIMAL
    com.j256.ormlite.field.SqlType OTHER -> OTHER
    com.j256.ormlite.field.SqlType UNKNOWN -> UNKNOWN
    com.j256.ormlite.field.SqlType[] $VALUES -> $VALUES
    com.j256.ormlite.field.SqlType[] values() -> values
    com.j256.ormlite.field.SqlType valueOf(java.lang.String) -> valueOf
com.j256.ormlite.field.types.BaseDataType -> com.j256.ormlite.field.types.BaseDataType:
    com.j256.ormlite.field.SqlType sqlType -> sqlType
    java.lang.Class[] classes -> classes
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    java.lang.Class getPrimaryClass() -> getPrimaryClass
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    java.lang.Class[] getAssociatedClasses() -> getAssociatedClasses
    java.lang.String[] getAssociatedClassNames() -> getAssociatedClassNames
    java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isEscapedDefaultValue() -> isEscapedDefaultValue
    boolean isEscapedValue() -> isEscapedValue
    boolean isPrimitive() -> isPrimitive
    boolean isComparable() -> isComparable
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    boolean isSelfGeneratedId() -> isSelfGeneratedId
    java.lang.Object generateId() -> generateId
    int getDefaultWidth() -> getDefaultWidth
    boolean dataIsEqual(java.lang.Object,java.lang.Object) -> dataIsEqual
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
com.j256.ormlite.field.types.BaseDateType -> com.j256.ormlite.field.types.BaseDateType:
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig defaultDateFormatConfig -> defaultDateFormatConfig
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig convertDateStringConfig(com.j256.ormlite.field.FieldType,com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig) -> convertDateStringConfig
    java.util.Date parseDateString(com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig,java.lang.String) -> parseDateString
    java.lang.String normalizeDateString(com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig,java.lang.String) -> normalizeDateString
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig -> com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig:
    java.lang.ThreadLocal threadLocal -> threadLocal
    java.lang.String dateFormatStr -> dateFormatStr
    java.text.DateFormat getDateFormat() -> getDateFormat
    java.lang.String toString() -> toString
com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig$1 -> com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig$1:
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig this$0 -> this$0
    java.text.DateFormat initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.field.types.BaseEnumType -> com.j256.ormlite.field.types.BaseEnumType:
    java.lang.Enum enumVal(com.j256.ormlite.field.FieldType,java.lang.Object,java.lang.Enum,java.lang.Enum) -> enumVal
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
com.j256.ormlite.field.types.BigDecimalNumericType -> com.j256.ormlite.field.types.BigDecimalNumericType:
    com.j256.ormlite.field.types.BigDecimalNumericType singleTon -> singleTon
    com.j256.ormlite.field.types.BigDecimalNumericType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isAppropriateId() -> isAppropriateId
    boolean isEscapedValue() -> isEscapedValue
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.BigDecimalStringType -> com.j256.ormlite.field.types.BigDecimalStringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.BigDecimalStringType singleTon -> singleTon
    com.j256.ormlite.field.types.BigDecimalStringType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    int getDefaultWidth() -> getDefaultWidth
    boolean isAppropriateId() -> isAppropriateId
com.j256.ormlite.field.types.BigIntegerType -> com.j256.ormlite.field.types.BigIntegerType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.BigIntegerType singleTon -> singleTon
    com.j256.ormlite.field.types.BigIntegerType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    int getDefaultWidth() -> getDefaultWidth
    boolean isAppropriateId() -> isAppropriateId
com.j256.ormlite.field.types.BooleanObjectType -> com.j256.ormlite.field.types.BooleanObjectType:
    com.j256.ormlite.field.types.BooleanObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.BooleanObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isEscapedValue() -> isEscapedValue
    boolean isAppropriateId() -> isAppropriateId
com.j256.ormlite.field.types.BooleanType -> com.j256.ormlite.field.types.BooleanType:
    com.j256.ormlite.field.types.BooleanType singleTon -> singleTon
    com.j256.ormlite.field.types.BooleanType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.ByteArrayType -> com.j256.ormlite.field.types.ByteArrayType:
    com.j256.ormlite.field.types.ByteArrayType singleTon -> singleTon
    com.j256.ormlite.field.types.ByteArrayType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    boolean dataIsEqual(java.lang.Object,java.lang.Object) -> dataIsEqual
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.ByteObjectType -> com.j256.ormlite.field.types.ByteObjectType:
    com.j256.ormlite.field.types.ByteObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.ByteObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isEscapedValue() -> isEscapedValue
com.j256.ormlite.field.types.ByteType -> com.j256.ormlite.field.types.ByteType:
    com.j256.ormlite.field.types.ByteType singleTon -> singleTon
    com.j256.ormlite.field.types.ByteType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.CharType -> com.j256.ormlite.field.types.CharType:
    com.j256.ormlite.field.types.CharType singleTon -> singleTon
    com.j256.ormlite.field.types.CharType getSingleton() -> getSingleton
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.CharacterObjectType -> com.j256.ormlite.field.types.CharacterObjectType:
    com.j256.ormlite.field.types.CharacterObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.CharacterObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
com.j256.ormlite.field.types.DateLongType -> com.j256.ormlite.field.types.DateLongType:
    com.j256.ormlite.field.types.DateLongType singleTon -> singleTon
    com.j256.ormlite.field.types.DateLongType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isEscapedValue() -> isEscapedValue
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.DateStringType -> com.j256.ormlite.field.types.DateStringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.DateStringType singleTon -> singleTon
    com.j256.ormlite.field.types.DateStringType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    int getDefaultWidth() -> getDefaultWidth
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.DateTimeType -> com.j256.ormlite.field.types.DateTimeType:
    com.j256.ormlite.field.types.DateTimeType singleTon -> singleTon
    java.lang.Class dateTimeClass -> dateTimeClass
    java.lang.reflect.Method getMillisMethod -> getMillisMethod
    java.lang.reflect.Constructor millisConstructor -> millisConstructor
    java.lang.String[] associatedClassNames -> associatedClassNames
    com.j256.ormlite.field.types.DateTimeType getSingleton() -> getSingleton
    java.lang.String[] getAssociatedClassNames() -> getAssociatedClassNames
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    boolean isEscapedValue() -> isEscapedValue
    boolean isAppropriateId() -> isAppropriateId
    java.lang.Class getPrimaryClass() -> getPrimaryClass
    java.lang.reflect.Method getMillisMethod() -> getMillisMethod
    java.lang.reflect.Constructor getConstructor() -> getConstructor
    java.lang.Class getDateTimeClass() -> getDateTimeClass
com.j256.ormlite.field.types.DateType -> com.j256.ormlite.field.types.DateType:
    com.j256.ormlite.field.types.DateType singleTon -> singleTon
    com.j256.ormlite.field.types.DateType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig getDefaultDateFormatConfig() -> getDefaultDateFormatConfig
com.j256.ormlite.field.types.DoubleObjectType -> com.j256.ormlite.field.types.DoubleObjectType:
    com.j256.ormlite.field.types.DoubleObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.DoubleObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isEscapedValue() -> isEscapedValue
com.j256.ormlite.field.types.DoubleType -> com.j256.ormlite.field.types.DoubleType:
    com.j256.ormlite.field.types.DoubleType singleTon -> singleTon
    com.j256.ormlite.field.types.DoubleType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.EnumIntegerType -> com.j256.ormlite.field.types.EnumIntegerType:
    com.j256.ormlite.field.types.EnumIntegerType singleTon -> singleTon
    com.j256.ormlite.field.types.EnumIntegerType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isEscapedValue() -> isEscapedValue
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.EnumStringType -> com.j256.ormlite.field.types.EnumStringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.EnumStringType singleTon -> singleTon
    com.j256.ormlite.field.types.EnumStringType getSingleton() -> getSingleton
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> makeConfigObject
    int getDefaultWidth() -> getDefaultWidth
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
com.j256.ormlite.field.types.FloatObjectType -> com.j256.ormlite.field.types.FloatObjectType:
    com.j256.ormlite.field.types.FloatObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.FloatObjectType getSingleton() -> getSingleton
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    boolean isEscapedValue() -> isEscapedValue
com.j256.ormlite.field.types.FloatType -> com.j256.ormlite.field.types.FloatType:
    com.j256.ormlite.field.types.FloatType singleTon -> singleTon
    com.j256.ormlite.field.types.FloatType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.IntType -> com.j256.ormlite.field.types.IntType:
    com.j256.ormlite.field.types.IntType singleTon -> singleTon
    com.j256.ormlite.field.types.IntType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.IntegerObjectType -> com.j256.ormlite.field.types.IntegerObjectType:
    com.j256.ormlite.field.types.IntegerObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.IntegerObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    boolean isEscapedValue() -> isEscapedValue
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.LongObjectType -> com.j256.ormlite.field.types.LongObjectType:
    com.j256.ormlite.field.types.LongObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.LongObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object convertIdNumber(java.lang.Number) -> convertIdNumber
    boolean isEscapedValue() -> isEscapedValue
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.LongStringType -> com.j256.ormlite.field.types.LongStringType:
    com.j256.ormlite.field.types.LongStringType singleTon -> singleTon
    com.j256.ormlite.field.types.LongStringType getSingleton() -> getSingleton
    boolean isAppropriateId() -> isAppropriateId
    int getDefaultWidth() -> getDefaultWidth
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.LongType -> com.j256.ormlite.field.types.LongType:
    com.j256.ormlite.field.types.LongType singleTon -> singleTon
    com.j256.ormlite.field.types.LongType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.SerializableType -> com.j256.ormlite.field.types.SerializableType:
    com.j256.ormlite.field.types.SerializableType singleTon -> singleTon
    com.j256.ormlite.field.types.SerializableType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    boolean isStreamType() -> isStreamType
    boolean isComparable() -> isComparable
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
com.j256.ormlite.field.types.ShortObjectType -> com.j256.ormlite.field.types.ShortObjectType:
    com.j256.ormlite.field.types.ShortObjectType singleTon -> singleTon
    com.j256.ormlite.field.types.ShortObjectType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isEscapedValue() -> isEscapedValue
    boolean isValidForVersion() -> isValidForVersion
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.ShortType -> com.j256.ormlite.field.types.ShortType:
    com.j256.ormlite.field.types.ShortType singleTon -> singleTon
    com.j256.ormlite.field.types.ShortType getSingleton() -> getSingleton
    boolean isPrimitive() -> isPrimitive
com.j256.ormlite.field.types.SqlDateType -> com.j256.ormlite.field.types.SqlDateType:
    com.j256.ormlite.field.types.SqlDateType singleTon -> singleTon
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig sqlDateFormatConfig -> sqlDateFormatConfig
    com.j256.ormlite.field.types.SqlDateType getSingleton() -> getSingleton
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig getDefaultDateFormatConfig() -> getDefaultDateFormatConfig
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
com.j256.ormlite.field.types.StringBytesType -> com.j256.ormlite.field.types.StringBytesType:
    java.lang.String DEFAULT_STRING_BYTES_CHARSET_NAME -> DEFAULT_STRING_BYTES_CHARSET_NAME
    com.j256.ormlite.field.types.StringBytesType singleTon -> singleTon
    com.j256.ormlite.field.types.StringBytesType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isAppropriateId() -> isAppropriateId
    boolean isArgumentHolderRequired() -> isArgumentHolderRequired
    java.lang.Object resultStringToJava(com.j256.ormlite.field.FieldType,java.lang.String,int) -> resultStringToJava
    java.lang.Class getPrimaryClass() -> getPrimaryClass
    java.lang.String getCharsetName(com.j256.ormlite.field.FieldType) -> getCharsetName
com.j256.ormlite.field.types.StringType -> com.j256.ormlite.field.types.StringType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.StringType singleTon -> singleTon
    com.j256.ormlite.field.types.StringType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    int getDefaultWidth() -> getDefaultWidth
com.j256.ormlite.field.types.TimeStampType -> com.j256.ormlite.field.types.TimeStampType:
    com.j256.ormlite.field.types.TimeStampType singleTon -> singleTon
    com.j256.ormlite.field.types.TimeStampType getSingleton() -> getSingleton
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
    java.lang.Object moveToNextValue(java.lang.Object) -> moveToNextValue
com.j256.ormlite.field.types.UuidType -> com.j256.ormlite.field.types.UuidType:
    int DEFAULT_WIDTH -> DEFAULT_WIDTH
    com.j256.ormlite.field.types.UuidType singleTon -> singleTon
    com.j256.ormlite.field.types.UuidType getSingleton() -> getSingleton
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> sqlArgToJava
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> javaToSqlArg
    boolean isValidGeneratedType() -> isValidGeneratedType
    boolean isSelfGeneratedId() -> isSelfGeneratedId
    java.lang.Object generateId() -> generateId
    int getDefaultWidth() -> getDefaultWidth
com.j256.ormlite.field.types.VoidType -> com.j256.ormlite.field.types.VoidType:
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> parseDefaultString
    java.lang.Object resultToSqlArg(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> resultToSqlArg
    boolean isValidForField(java.lang.reflect.Field) -> isValidForField
com.j256.ormlite.logger.LocalLog -> com.j256.ormlite.logger.LocalLog:
    java.lang.String LOCAL_LOG_LEVEL_PROPERTY -> LOCAL_LOG_LEVEL_PROPERTY
    java.lang.String LOCAL_LOG_FILE_PROPERTY -> LOCAL_LOG_FILE_PROPERTY
    java.lang.String LOCAL_LOG_PROPERTIES_FILE -> LOCAL_LOG_PROPERTIES_FILE
    com.j256.ormlite.logger.Log$Level DEFAULT_LEVEL -> DEFAULT_LEVEL
    java.lang.ThreadLocal dateFormatThreadLocal -> dateFormatThreadLocal
    java.io.PrintStream printStream -> printStream
    java.util.List classLevels -> classLevels
    java.lang.String className -> className
    com.j256.ormlite.logger.Log$Level level -> level
    void openLogFile(java.lang.String) -> openLogFile
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> log
    void flush() -> flush
    java.util.List readLevelResourceFile(java.io.InputStream) -> readLevelResourceFile
    java.util.List configureClassLevels(java.io.InputStream) -> configureClassLevels
    void printMessage(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> printMessage
com.j256.ormlite.logger.LocalLog$1 -> com.j256.ormlite.logger.LocalLog$1:
    java.text.DateFormat initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.logger.LocalLog$PatternLevel -> com.j256.ormlite.logger.LocalLog$PatternLevel:
    java.util.regex.Pattern pattern -> pattern
    com.j256.ormlite.logger.Log$Level level -> level
com.j256.ormlite.logger.Log -> com.j256.ormlite.logger.Log:
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> log
com.j256.ormlite.logger.Log$Level -> com.j256.ormlite.logger.Log$Level:
    com.j256.ormlite.logger.Log$Level TRACE -> TRACE
    com.j256.ormlite.logger.Log$Level DEBUG -> DEBUG
    com.j256.ormlite.logger.Log$Level INFO -> INFO
    com.j256.ormlite.logger.Log$Level WARNING -> WARNING
    com.j256.ormlite.logger.Log$Level ERROR -> ERROR
    com.j256.ormlite.logger.Log$Level FATAL -> FATAL
    int level -> level
    com.j256.ormlite.logger.Log$Level[] $VALUES -> $VALUES
    com.j256.ormlite.logger.Log$Level[] values() -> values
    com.j256.ormlite.logger.Log$Level valueOf(java.lang.String) -> valueOf
    boolean isEnabled(com.j256.ormlite.logger.Log$Level) -> isEnabled
com.j256.ormlite.logger.Logger -> com.j256.ormlite.logger.Logger:
    java.lang.String ARG_STRING -> ARG_STRING
    int ARG_STRING_LENGTH -> ARG_STRING_LENGTH
    java.lang.Object UNKNOWN_ARG -> UNKNOWN_ARG
    com.j256.ormlite.logger.Log log -> log
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> isLevelEnabled
    void trace(java.lang.String) -> trace
    void trace(java.lang.String,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.String,java.lang.Object[]) -> trace
    void trace(java.lang.Throwable,java.lang.String) -> trace
    void trace(java.lang.Throwable,java.lang.String,java.lang.Object) -> trace
    void trace(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> trace
    void trace(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> trace
    void debug(java.lang.String) -> debug
    void debug(java.lang.String,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.String,java.lang.Object[]) -> debug
    void debug(java.lang.Throwable,java.lang.String) -> debug
    void debug(java.lang.Throwable,java.lang.String,java.lang.Object) -> debug
    void debug(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> debug
    void info(java.lang.String) -> info
    void info(java.lang.String,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.String,java.lang.Object[]) -> info
    void info(java.lang.Throwable,java.lang.String) -> info
    void info(java.lang.Throwable,java.lang.String,java.lang.Object) -> info
    void info(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> info
    void info(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> info
    void warn(java.lang.String) -> warn
    void warn(java.lang.String,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.String,java.lang.Object[]) -> warn
    void warn(java.lang.Throwable,java.lang.String) -> warn
    void warn(java.lang.Throwable,java.lang.String,java.lang.Object) -> warn
    void warn(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> warn
    void warn(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> warn
    void error(java.lang.String) -> error
    void error(java.lang.String,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.String,java.lang.Object[]) -> error
    void error(java.lang.Throwable,java.lang.String) -> error
    void error(java.lang.Throwable,java.lang.String,java.lang.Object) -> error
    void error(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> error
    void error(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> error
    void fatal(java.lang.String) -> fatal
    void fatal(java.lang.String,java.lang.Object) -> fatal
    void fatal(java.lang.String,java.lang.Object,java.lang.Object) -> fatal
    void fatal(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> fatal
    void fatal(java.lang.String,java.lang.Object[]) -> fatal
    void fatal(java.lang.Throwable,java.lang.String) -> fatal
    void fatal(java.lang.Throwable,java.lang.String,java.lang.Object) -> fatal
    void fatal(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> fatal
    void fatal(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> fatal
    void fatal(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> fatal
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Object,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Object[]) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> log
    void log(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> log
    void innerLog(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> innerLog
    java.lang.String buildFullMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> buildFullMessage
    void appendArg(java.lang.StringBuilder,java.lang.Object) -> appendArg
com.j256.ormlite.logger.LoggerFactory -> com.j256.ormlite.logger.LoggerFactory:
    java.lang.String LOG_TYPE_SYSTEM_PROPERTY -> LOG_TYPE_SYSTEM_PROPERTY
    com.j256.ormlite.logger.LoggerFactory$LogType logType -> logType
    com.j256.ormlite.logger.Logger getLogger(java.lang.Class) -> getLogger
    com.j256.ormlite.logger.Logger getLogger(java.lang.String) -> getLogger
    java.lang.String getSimpleClassName(java.lang.String) -> getSimpleClassName
    com.j256.ormlite.logger.LoggerFactory$LogType findLogType() -> findLogType
com.j256.ormlite.logger.LoggerFactory$1 -> com.j256.ormlite.logger.LoggerFactory$1:
com.j256.ormlite.logger.LoggerFactory$LogType -> com.j256.ormlite.logger.LoggerFactory$LogType:
    com.j256.ormlite.logger.LoggerFactory$LogType ANDROID -> ANDROID
    com.j256.ormlite.logger.LoggerFactory$LogType SLF4J -> SLF4J
    com.j256.ormlite.logger.LoggerFactory$LogType COMMONS_LOGGING -> COMMONS_LOGGING
    com.j256.ormlite.logger.LoggerFactory$LogType LOG4J2 -> LOG4J2
    com.j256.ormlite.logger.LoggerFactory$LogType LOG4J -> LOG4J
    com.j256.ormlite.logger.LoggerFactory$LogType LOCAL -> LOCAL
    java.lang.String detectClassName -> detectClassName
    java.lang.String logClassName -> logClassName
    com.j256.ormlite.logger.LoggerFactory$LogType[] $VALUES -> $VALUES
    com.j256.ormlite.logger.LoggerFactory$LogType[] values() -> values
    com.j256.ormlite.logger.LoggerFactory$LogType valueOf(java.lang.String) -> valueOf
    com.j256.ormlite.logger.Log createLog(java.lang.String) -> createLog
    boolean isAvailable() -> isAvailable
    com.j256.ormlite.logger.Log createLogFromClassName(java.lang.String) -> createLogFromClassName
    boolean isAvailableTestClass() -> isAvailableTestClass
com.j256.ormlite.logger.LoggerFactory$LogType$1 -> com.j256.ormlite.logger.LoggerFactory$LogType$1:
    com.j256.ormlite.logger.Log createLog(java.lang.String) -> createLog
    boolean isAvailable() -> isAvailable
com.j256.ormlite.misc.BaseDaoEnabled -> com.j256.ormlite.misc.BaseDaoEnabled:
    com.j256.ormlite.dao.Dao dao -> dao
    int create() -> create
    int refresh() -> refresh
    int update() -> update
    int updateId(java.lang.Object) -> updateId
    int delete() -> delete
    java.lang.String objectToString() -> objectToString
    java.lang.Object extractId() -> extractId
    boolean objectsEqual(java.lang.Object) -> objectsEqual
    void setDao(com.j256.ormlite.dao.Dao) -> setDao
    com.j256.ormlite.dao.Dao getDao() -> getDao
    void checkForDao() -> checkForDao
com.j256.ormlite.misc.JavaxPersistence -> com.j256.ormlite.misc.JavaxPersistence:
    com.j256.ormlite.field.DatabaseFieldConfig createFieldConfig(com.j256.ormlite.db.DatabaseType,java.lang.reflect.Field) -> createFieldConfig
    java.lang.String getEntityName(java.lang.Class) -> getEntityName
com.j256.ormlite.misc.SqlExceptionUtil -> com.j256.ormlite.misc.SqlExceptionUtil:
    java.sql.SQLException create(java.lang.String,java.lang.Throwable) -> create
com.j256.ormlite.misc.TransactionManager -> com.j256.ormlite.misc.TransactionManager:
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.String SAVE_POINT_PREFIX -> SAVE_POINT_PREFIX
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    java.util.concurrent.atomic.AtomicInteger savePointCounter -> savePointCounter
    void initialize() -> initialize
    java.lang.Object callInTransaction(java.util.concurrent.Callable) -> callInTransaction
    java.lang.Object callInTransaction(com.j256.ormlite.support.ConnectionSource,java.util.concurrent.Callable) -> callInTransaction
    java.lang.Object callInTransaction(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.db.DatabaseType,java.util.concurrent.Callable) -> callInTransaction
    java.lang.Object callInTransaction(com.j256.ormlite.support.DatabaseConnection,boolean,com.j256.ormlite.db.DatabaseType,java.util.concurrent.Callable) -> callInTransaction
    void setConnectionSource(com.j256.ormlite.support.ConnectionSource) -> setConnectionSource
    void commit(com.j256.ormlite.support.DatabaseConnection,java.sql.Savepoint) -> commit
    void rollBack(com.j256.ormlite.support.DatabaseConnection,java.sql.Savepoint) -> rollBack
com.j256.ormlite.misc.VersionUtils -> com.j256.ormlite.misc.VersionUtils:
    java.lang.String CORE_VERSION -> CORE_VERSION
    com.j256.ormlite.logger.Logger logger -> logger
    boolean thrownOnErrors -> thrownOnErrors
    java.lang.String coreVersion -> coreVersion
    void checkCoreVersusJdbcVersions(java.lang.String) -> checkCoreVersusJdbcVersions
    void checkCoreVersusAndroidVersions(java.lang.String) -> checkCoreVersusAndroidVersions
    java.lang.String getCoreVersion() -> getCoreVersion
    void setThrownOnErrors(boolean) -> setThrownOnErrors
    void logVersionWarnings(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> logVersionWarnings
    void warning(java.lang.Throwable,java.lang.String,java.lang.String,java.lang.Object[]) -> warning
    com.j256.ormlite.logger.Logger getLogger() -> getLogger
com.j256.ormlite.stmt.ArgumentHolder -> com.j256.ormlite.stmt.ArgumentHolder:
    java.lang.String getColumnName() -> getColumnName
    void setMetaInfo(java.lang.String) -> setMetaInfo
    void setMetaInfo(com.j256.ormlite.field.FieldType) -> setMetaInfo
    void setMetaInfo(java.lang.String,com.j256.ormlite.field.FieldType) -> setMetaInfo
    void setValue(java.lang.Object) -> setValue
    java.lang.Object getSqlArgValue() -> getSqlArgValue
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    com.j256.ormlite.field.FieldType getFieldType() -> getFieldType
com.j256.ormlite.stmt.BaseArgumentHolder -> com.j256.ormlite.stmt.BaseArgumentHolder:
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.FieldType fieldType -> fieldType
    com.j256.ormlite.field.SqlType sqlType -> sqlType
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    boolean isValueSet() -> isValueSet
    java.lang.String getColumnName() -> getColumnName
    void setMetaInfo(java.lang.String) -> setMetaInfo
    void setMetaInfo(com.j256.ormlite.field.FieldType) -> setMetaInfo
    void setMetaInfo(java.lang.String,com.j256.ormlite.field.FieldType) -> setMetaInfo
    java.lang.Object getSqlArgValue() -> getSqlArgValue
    com.j256.ormlite.field.FieldType getFieldType() -> getFieldType
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.ColumnArg -> com.j256.ormlite.stmt.ColumnArg:
    java.lang.String tableName -> tableName
    java.lang.String columnName -> columnName
    java.lang.String getTableName() -> getTableName
    java.lang.String getColumnName() -> getColumnName
com.j256.ormlite.stmt.DeleteBuilder -> com.j256.ormlite.stmt.DeleteBuilder:
    com.j256.ormlite.stmt.PreparedDelete prepare() -> prepare
    int delete() -> delete
    void clear() -> clear
    void reset() -> reset
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    void appendStatementEnd(java.lang.StringBuilder,java.util.List) -> appendStatementEnd
com.j256.ormlite.stmt.GenericRowMapper -> com.j256.ormlite.stmt.GenericRowMapper:
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
com.j256.ormlite.stmt.NullArgHolder -> com.j256.ormlite.stmt.NullArgHolder:
    java.lang.String getColumnName() -> getColumnName
    void setValue(java.lang.Object) -> setValue
    void setMetaInfo(java.lang.String) -> setMetaInfo
    void setMetaInfo(com.j256.ormlite.field.FieldType) -> setMetaInfo
    void setMetaInfo(java.lang.String,com.j256.ormlite.field.FieldType) -> setMetaInfo
    java.lang.Object getSqlArgValue() -> getSqlArgValue
    com.j256.ormlite.field.SqlType getSqlType() -> getSqlType
    com.j256.ormlite.field.FieldType getFieldType() -> getFieldType
com.j256.ormlite.stmt.PreparedDelete -> com.j256.ormlite.stmt.PreparedDelete:
com.j256.ormlite.stmt.PreparedQuery -> com.j256.ormlite.stmt.PreparedQuery:
com.j256.ormlite.stmt.PreparedStmt -> com.j256.ormlite.stmt.PreparedStmt:
    com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType) -> compile
    com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType,int) -> compile
    java.lang.String getStatement() -> getStatement
    com.j256.ormlite.stmt.StatementBuilder$StatementType getType() -> getType
    void setArgumentHolderValue(int,java.lang.Object) -> setArgumentHolderValue
com.j256.ormlite.stmt.PreparedUpdate -> com.j256.ormlite.stmt.PreparedUpdate:
com.j256.ormlite.stmt.QueryBuilder -> com.j256.ormlite.stmt.QueryBuilder:
    com.j256.ormlite.field.FieldType idField -> idField
    com.j256.ormlite.field.FieldType[] resultFieldTypes -> resultFieldTypes
    boolean distinct -> distinct
    boolean selectIdColumn -> selectIdColumn
    java.util.List selectColumnList -> selectColumnList
    java.util.List selectRawList -> selectRawList
    java.util.List orderByList -> orderByList
    java.lang.String orderByRaw -> orderByRaw
    com.j256.ormlite.stmt.ArgumentHolder[] orderByArgs -> orderByArgs
    java.util.List groupByList -> groupByList
    java.lang.String groupByRaw -> groupByRaw
    boolean isInnerQuery -> isInnerQuery
    boolean isCountOfQuery -> isCountOfQuery
    java.lang.String having -> having
    java.lang.Long limit -> limit
    java.lang.Long offset -> offset
    java.util.List joinList -> joinList
    void enableInnerQuery() -> enableInnerQuery
    int getSelectColumnCount() -> getSelectColumnCount
    java.util.List getSelectColumns() -> getSelectColumns
    com.j256.ormlite.stmt.PreparedQuery prepare() -> prepare
    com.j256.ormlite.stmt.QueryBuilder selectColumns(java.lang.String[]) -> selectColumns
    com.j256.ormlite.stmt.QueryBuilder selectColumns(java.lang.Iterable) -> selectColumns
    com.j256.ormlite.stmt.QueryBuilder selectRaw(java.lang.String[]) -> selectRaw
    com.j256.ormlite.stmt.QueryBuilder groupBy(java.lang.String) -> groupBy
    com.j256.ormlite.stmt.QueryBuilder groupByRaw(java.lang.String) -> groupByRaw
    com.j256.ormlite.stmt.QueryBuilder orderBy(java.lang.String,boolean) -> orderBy
    com.j256.ormlite.stmt.QueryBuilder orderByRaw(java.lang.String) -> orderByRaw
    com.j256.ormlite.stmt.QueryBuilder orderByRaw(java.lang.String,com.j256.ormlite.stmt.ArgumentHolder[]) -> orderByRaw
    com.j256.ormlite.stmt.QueryBuilder distinct() -> distinct
    com.j256.ormlite.stmt.QueryBuilder limit(int) -> limit
    com.j256.ormlite.stmt.QueryBuilder limit(java.lang.Long) -> limit
    com.j256.ormlite.stmt.QueryBuilder offset(int) -> offset
    com.j256.ormlite.stmt.QueryBuilder offset(java.lang.Long) -> offset
    com.j256.ormlite.stmt.QueryBuilder setCountOf(boolean) -> setCountOf
    com.j256.ormlite.stmt.QueryBuilder having(java.lang.String) -> having
    com.j256.ormlite.stmt.QueryBuilder join(com.j256.ormlite.stmt.QueryBuilder) -> join
    com.j256.ormlite.stmt.QueryBuilder joinOr(com.j256.ormlite.stmt.QueryBuilder) -> joinOr
    com.j256.ormlite.stmt.QueryBuilder leftJoin(com.j256.ormlite.stmt.QueryBuilder) -> leftJoin
    com.j256.ormlite.stmt.QueryBuilder leftJoinOr(com.j256.ormlite.stmt.QueryBuilder) -> leftJoinOr
    java.util.List query() -> query
    com.j256.ormlite.dao.GenericRawResults queryRaw() -> queryRaw
    java.lang.Object queryForFirst() -> queryForFirst
    java.lang.String[] queryRawFirst() -> queryRawFirst
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    long countOf() -> countOf
    void clear() -> clear
    void reset() -> reset
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    com.j256.ormlite.field.FieldType[] getResultFieldTypes() -> getResultFieldTypes
    boolean appendWhereStatement(java.lang.StringBuilder,java.util.List,com.j256.ormlite.stmt.StatementBuilder$WhereOperation) -> appendWhereStatement
    void appendStatementEnd(java.lang.StringBuilder,java.util.List) -> appendStatementEnd
    boolean shouldPrependTableNameToColumns() -> shouldPrependTableNameToColumns
    void setAddTableName(boolean) -> setAddTableName
    void addJoinInfo(java.lang.String,com.j256.ormlite.stmt.QueryBuilder,com.j256.ormlite.stmt.StatementBuilder$WhereOperation) -> addJoinInfo
    void matchJoinedFields(com.j256.ormlite.stmt.QueryBuilder$JoinInfo,com.j256.ormlite.stmt.QueryBuilder) -> matchJoinedFields
    void addSelectColumnToList(java.lang.String) -> addSelectColumnToList
    void appendJoinSql(java.lang.StringBuilder) -> appendJoinSql
    void appendSelectRaw(java.lang.StringBuilder) -> appendSelectRaw
    void appendColumns(java.lang.StringBuilder) -> appendColumns
    void appendFieldColumnName(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List) -> appendFieldColumnName
    void appendLimit(java.lang.StringBuilder) -> appendLimit
    void appendOffset(java.lang.StringBuilder) -> appendOffset
    void appendGroupBys(java.lang.StringBuilder) -> appendGroupBys
    boolean hasGroupStuff() -> hasGroupStuff
    void appendGroupBys(java.lang.StringBuilder,boolean) -> appendGroupBys
    void appendOrderBys(java.lang.StringBuilder,java.util.List) -> appendOrderBys
    boolean hasOrderStuff() -> hasOrderStuff
    void appendOrderBys(java.lang.StringBuilder,boolean,java.util.List) -> appendOrderBys
    void appendColumnName(java.lang.StringBuilder,java.lang.String) -> appendColumnName
    void appendHaving(java.lang.StringBuilder) -> appendHaving
com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper -> com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper:
    com.j256.ormlite.stmt.QueryBuilder queryBuilder -> queryBuilder
    void appendStatementString(java.lang.StringBuilder,java.util.List) -> appendStatementString
    com.j256.ormlite.field.FieldType[] getResultFieldTypes() -> getResultFieldTypes
com.j256.ormlite.stmt.QueryBuilder$JoinInfo -> com.j256.ormlite.stmt.QueryBuilder$JoinInfo:
    java.lang.String type -> type
    com.j256.ormlite.stmt.QueryBuilder queryBuilder -> queryBuilder
    com.j256.ormlite.field.FieldType localField -> localField
    com.j256.ormlite.field.FieldType remoteField -> remoteField
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation operation -> operation
    com.j256.ormlite.stmt.QueryBuilder this$0 -> this$0
com.j256.ormlite.stmt.RawResultsImpl -> com.j256.ormlite.stmt.RawResultsImpl:
    com.j256.ormlite.stmt.SelectIterator iterator -> iterator
    java.lang.String[] columnNames -> columnNames
    int getNumberColumns() -> getNumberColumns
    java.lang.String[] getColumnNames() -> getColumnNames
    java.util.List getResults() -> getResults
    java.lang.Object getFirstResult() -> getFirstResult
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> closeableIterator
    void close() -> close
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.stmt.RawRowMapperImpl -> com.j256.ormlite.stmt.RawRowMapperImpl:
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    java.lang.Object mapRow(java.lang.String[],java.lang.String[]) -> mapRow
com.j256.ormlite.stmt.SelectArg -> com.j256.ormlite.stmt.SelectArg:
    boolean hasBeenSet -> hasBeenSet
    java.lang.Object value -> value
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    boolean isValueSet() -> isValueSet
com.j256.ormlite.stmt.SelectIterator -> com.j256.ormlite.stmt.SelectIterator:
    com.j256.ormlite.logger.Logger logger -> logger
    java.lang.Class dataClass -> dataClass
    com.j256.ormlite.dao.Dao classDao -> classDao
    com.j256.ormlite.support.ConnectionSource connectionSource -> connectionSource
    com.j256.ormlite.support.DatabaseConnection connection -> connection
    com.j256.ormlite.support.CompiledStatement compiledStmt -> compiledStmt
    com.j256.ormlite.support.DatabaseResults results -> results
    com.j256.ormlite.stmt.GenericRowMapper rowMapper -> rowMapper
    java.lang.String statement -> statement
    boolean first -> first
    boolean closed -> closed
    boolean alreadyMoved -> alreadyMoved
    java.lang.Object last -> last
    int rowC -> rowC
    boolean hasNextThrow() -> hasNextThrow
    boolean hasNext() -> hasNext
    java.lang.Object first() -> first
    java.lang.Object previous() -> previous
    java.lang.Object current() -> current
    java.lang.Object nextThrow() -> nextThrow
    java.lang.Object next() -> next
    java.lang.Object moveRelative(int) -> moveRelative
    void removeThrow() -> removeThrow
    void remove() -> remove
    void close() -> close
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.support.DatabaseResults getRawResults() -> getRawResults
    void moveToNext() -> moveToNext
    java.lang.Object getCurrent() -> getCurrent
com.j256.ormlite.stmt.StatementBuilder -> com.j256.ormlite.stmt.StatementBuilder:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    java.lang.String tableName -> tableName
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> type
    boolean addTableName -> addTableName
    com.j256.ormlite.stmt.Where where -> where
    com.j256.ormlite.stmt.Where where() -> where
    void setWhere(com.j256.ormlite.stmt.Where) -> setWhere
    com.j256.ormlite.stmt.mapped.MappedPreparedStmt prepareStatement(java.lang.Long) -> prepareStatement
    java.lang.String prepareStatementString() -> prepareStatementString
    com.j256.ormlite.stmt.StatementBuilder$StatementInfo prepareStatementInfo() -> prepareStatementInfo
    void clear() -> clear
    void reset() -> reset
    java.lang.String buildStatementString(java.util.List) -> buildStatementString
    void appendStatementString(java.lang.StringBuilder,java.util.List) -> appendStatementString
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    boolean appendWhereStatement(java.lang.StringBuilder,java.util.List,com.j256.ormlite.stmt.StatementBuilder$WhereOperation) -> appendWhereStatement
    void appendStatementEnd(java.lang.StringBuilder,java.util.List) -> appendStatementEnd
    boolean shouldPrependTableNameToColumns() -> shouldPrependTableNameToColumns
    com.j256.ormlite.field.FieldType[] getResultFieldTypes() -> getResultFieldTypes
    com.j256.ormlite.field.FieldType verifyColumnName(java.lang.String) -> verifyColumnName
    com.j256.ormlite.stmt.StatementBuilder$StatementType getType() -> getType
com.j256.ormlite.stmt.StatementBuilder$1 -> com.j256.ormlite.stmt.StatementBuilder$1:
com.j256.ormlite.stmt.StatementBuilder$StatementInfo -> com.j256.ormlite.stmt.StatementBuilder$StatementInfo:
    java.lang.String statement -> statement
    java.util.List argList -> argList
    java.lang.String getStatement() -> getStatement
    java.util.List getArgList() -> getArgList
com.j256.ormlite.stmt.StatementBuilder$StatementType -> com.j256.ormlite.stmt.StatementBuilder$StatementType:
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT -> SELECT
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT_LONG -> SELECT_LONG
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT_RAW -> SELECT_RAW
    com.j256.ormlite.stmt.StatementBuilder$StatementType UPDATE -> UPDATE
    com.j256.ormlite.stmt.StatementBuilder$StatementType DELETE -> DELETE
    com.j256.ormlite.stmt.StatementBuilder$StatementType EXECUTE -> EXECUTE
    boolean okForStatementBuilder -> okForStatementBuilder
    boolean okForQuery -> okForQuery
    boolean okForUpdate -> okForUpdate
    boolean okForExecute -> okForExecute
    com.j256.ormlite.stmt.StatementBuilder$StatementType[] $VALUES -> $VALUES
    com.j256.ormlite.stmt.StatementBuilder$StatementType[] values() -> values
    com.j256.ormlite.stmt.StatementBuilder$StatementType valueOf(java.lang.String) -> valueOf
    boolean isOkForStatementBuilder() -> isOkForStatementBuilder
    boolean isOkForQuery() -> isOkForQuery
    boolean isOkForUpdate() -> isOkForUpdate
    boolean isOkForExecute() -> isOkForExecute
com.j256.ormlite.stmt.StatementBuilder$WhereOperation -> com.j256.ormlite.stmt.StatementBuilder$WhereOperation:
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation FIRST -> FIRST
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation AND -> AND
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation OR -> OR
    java.lang.String before -> before
    java.lang.String after -> after
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation[] $VALUES -> $VALUES
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation[] values() -> values
    com.j256.ormlite.stmt.StatementBuilder$WhereOperation valueOf(java.lang.String) -> valueOf
    void appendBefore(java.lang.StringBuilder) -> appendBefore
    void appendAfter(java.lang.StringBuilder) -> appendAfter
com.j256.ormlite.stmt.StatementExecutor -> com.j256.ormlite.stmt.StatementExecutor:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.field.FieldType[] noFieldTypes -> noFieldTypes
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    com.j256.ormlite.dao.Dao dao -> dao
    com.j256.ormlite.stmt.mapped.MappedQueryForId mappedQueryForId -> mappedQueryForId
    com.j256.ormlite.stmt.PreparedQuery preparedQueryForAll -> preparedQueryForAll
    com.j256.ormlite.stmt.mapped.MappedCreate mappedInsert -> mappedInsert
    com.j256.ormlite.stmt.mapped.MappedUpdate mappedUpdate -> mappedUpdate
    com.j256.ormlite.stmt.mapped.MappedUpdateId mappedUpdateId -> mappedUpdateId
    com.j256.ormlite.stmt.mapped.MappedDelete mappedDelete -> mappedDelete
    com.j256.ormlite.stmt.mapped.MappedRefresh mappedRefresh -> mappedRefresh
    java.lang.String countStarQuery -> countStarQuery
    java.lang.String ifExistsQuery -> ifExistsQuery
    com.j256.ormlite.field.FieldType[] ifExistsFieldTypes -> ifExistsFieldTypes
    com.j256.ormlite.dao.RawRowMapper rawRowMapper -> rawRowMapper
    java.lang.Object queryForId(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> queryForId
    java.lang.Object queryForFirst(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache) -> queryForFirst
    java.util.List queryForAll(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.ObjectCache) -> queryForAll
    long queryForCountStar(com.j256.ormlite.support.DatabaseConnection) -> queryForCountStar
    long queryForLong(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedStmt) -> queryForLong
    long queryForLong(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.lang.String[]) -> queryForLong
    java.util.List query(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache) -> query
    com.j256.ormlite.stmt.SelectIterator buildIterator(com.j256.ormlite.dao.BaseDaoImpl,com.j256.ormlite.support.ConnectionSource,int,com.j256.ormlite.dao.ObjectCache) -> buildIterator
    com.j256.ormlite.stmt.GenericRowMapper getSelectStarRowMapper() -> getSelectStarRowMapper
    com.j256.ormlite.dao.RawRowMapper getRawRowMapper() -> getRawRowMapper
    com.j256.ormlite.stmt.SelectIterator buildIterator(com.j256.ormlite.dao.BaseDaoImpl,com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache,int) -> buildIterator
    com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,com.j256.ormlite.dao.RawRowMapper,java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,com.j256.ormlite.field.DataType[],com.j256.ormlite.dao.RawRowObjectMapper,java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    com.j256.ormlite.dao.GenericRawResults queryRaw(com.j256.ormlite.support.ConnectionSource,java.lang.String,com.j256.ormlite.field.DataType[],java.lang.String[],com.j256.ormlite.dao.ObjectCache) -> queryRaw
    int updateRaw(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.lang.String[]) -> updateRaw
    int executeRawNoArgs(com.j256.ormlite.support.DatabaseConnection,java.lang.String) -> executeRawNoArgs
    int executeRaw(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.lang.String[]) -> executeRaw
    int create(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> create
    int update(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> update
    int updateId(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> updateId
    int update(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedUpdate) -> update
    int refresh(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> refresh
    int delete(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> delete
    int deleteById(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> deleteById
    int deleteObjects(com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteObjects
    int deleteIds(com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteIds
    int delete(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.PreparedDelete) -> delete
    java.lang.Object callBatchTasks(com.j256.ormlite.support.DatabaseConnection,boolean,java.util.concurrent.Callable) -> callBatchTasks
    java.lang.String[] mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    boolean ifExists(com.j256.ormlite.support.DatabaseConnection,java.lang.Object) -> ifExists
    void assignStatementArguments(com.j256.ormlite.support.CompiledStatement,java.lang.String[]) -> assignStatementArguments
    void prepareQueryForAll() -> prepareQueryForAll
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
com.j256.ormlite.stmt.StatementExecutor$ObjectArrayRowMapper -> com.j256.ormlite.stmt.StatementExecutor$ObjectArrayRowMapper:
    com.j256.ormlite.field.DataType[] columnTypes -> columnTypes
    java.lang.Object[] mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
com.j256.ormlite.stmt.StatementExecutor$UserRawRowMapper -> com.j256.ormlite.stmt.StatementExecutor$UserRawRowMapper:
    com.j256.ormlite.dao.RawRowMapper mapper -> mapper
    com.j256.ormlite.stmt.GenericRowMapper stringRowMapper -> stringRowMapper
    java.lang.String[] columnNames -> columnNames
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    java.lang.String[] getColumnNames(com.j256.ormlite.support.DatabaseResults) -> getColumnNames
com.j256.ormlite.stmt.StatementExecutor$UserRawRowObjectMapper -> com.j256.ormlite.stmt.StatementExecutor$UserRawRowObjectMapper:
    com.j256.ormlite.dao.RawRowObjectMapper mapper -> mapper
    com.j256.ormlite.field.DataType[] columnTypes -> columnTypes
    java.lang.String[] columnNames -> columnNames
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    java.lang.String[] getColumnNames(com.j256.ormlite.support.DatabaseResults) -> getColumnNames
com.j256.ormlite.stmt.ThreadLocalSelectArg -> com.j256.ormlite.stmt.ThreadLocalSelectArg:
    java.lang.ThreadLocal threadValue -> threadValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    boolean isValueSet() -> isValueSet
com.j256.ormlite.stmt.ThreadLocalSelectArg$ValueWrapper -> com.j256.ormlite.stmt.ThreadLocalSelectArg$ValueWrapper:
    java.lang.Object value -> value
com.j256.ormlite.stmt.UpdateBuilder -> com.j256.ormlite.stmt.UpdateBuilder:
    java.util.List updateClauseList -> updateClauseList
    com.j256.ormlite.stmt.PreparedUpdate prepare() -> prepare
    com.j256.ormlite.stmt.StatementBuilder updateColumnValue(java.lang.String,java.lang.Object) -> updateColumnValue
    com.j256.ormlite.stmt.StatementBuilder updateColumnExpression(java.lang.String,java.lang.String) -> updateColumnExpression
    void escapeColumnName(java.lang.StringBuilder,java.lang.String) -> escapeColumnName
    java.lang.String escapeColumnName(java.lang.String) -> escapeColumnName
    void escapeValue(java.lang.StringBuilder,java.lang.String) -> escapeValue
    java.lang.String escapeValue(java.lang.String) -> escapeValue
    int update() -> update
    void clear() -> clear
    void reset() -> reset
    void appendStatementStart(java.lang.StringBuilder,java.util.List) -> appendStatementStart
    void appendStatementEnd(java.lang.StringBuilder,java.util.List) -> appendStatementEnd
    void addUpdateColumnToList(java.lang.String,com.j256.ormlite.stmt.query.Clause) -> addUpdateColumnToList
com.j256.ormlite.stmt.Where -> com.j256.ormlite.stmt.Where:
    int CLAUSE_STACK_START_SIZE -> CLAUSE_STACK_START_SIZE
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    com.j256.ormlite.stmt.StatementBuilder statementBuilder -> statementBuilder
    com.j256.ormlite.field.FieldType idFieldType -> idFieldType
    java.lang.String idColumnName -> idColumnName
    com.j256.ormlite.db.DatabaseType databaseType -> databaseType
    com.j256.ormlite.stmt.query.Clause[] clauseStack -> clauseStack
    int clauseStackLevel -> clauseStackLevel
    com.j256.ormlite.stmt.query.NeedsFutureClause needsFuture -> needsFuture
    com.j256.ormlite.stmt.Where and() -> and
    com.j256.ormlite.stmt.Where and(com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where[]) -> and
    com.j256.ormlite.stmt.Where and(int) -> and
    com.j256.ormlite.stmt.Where between(java.lang.String,java.lang.Object,java.lang.Object) -> between
    com.j256.ormlite.stmt.Where eq(java.lang.String,java.lang.Object) -> eq
    com.j256.ormlite.stmt.Where ge(java.lang.String,java.lang.Object) -> ge
    com.j256.ormlite.stmt.Where gt(java.lang.String,java.lang.Object) -> gt
    com.j256.ormlite.stmt.Where in(java.lang.String,java.lang.Iterable) -> in
    com.j256.ormlite.stmt.Where notIn(java.lang.String,java.lang.Iterable) -> notIn
    com.j256.ormlite.stmt.Where in(java.lang.String,java.lang.Object[]) -> in
    com.j256.ormlite.stmt.Where notIn(java.lang.String,java.lang.Object[]) -> notIn
    com.j256.ormlite.stmt.Where in(java.lang.String,com.j256.ormlite.stmt.QueryBuilder) -> in
    com.j256.ormlite.stmt.Where notIn(java.lang.String,com.j256.ormlite.stmt.QueryBuilder) -> notIn
    com.j256.ormlite.stmt.Where exists(com.j256.ormlite.stmt.QueryBuilder) -> exists
    com.j256.ormlite.stmt.Where isNull(java.lang.String) -> isNull
    com.j256.ormlite.stmt.Where isNotNull(java.lang.String) -> isNotNull
    com.j256.ormlite.stmt.Where le(java.lang.String,java.lang.Object) -> le
    com.j256.ormlite.stmt.Where lt(java.lang.String,java.lang.Object) -> lt
    com.j256.ormlite.stmt.Where like(java.lang.String,java.lang.Object) -> like
    com.j256.ormlite.stmt.Where ne(java.lang.String,java.lang.Object) -> ne
    com.j256.ormlite.stmt.Where not() -> not
    com.j256.ormlite.stmt.Where not(com.j256.ormlite.stmt.Where) -> not
    com.j256.ormlite.stmt.Where or() -> or
    com.j256.ormlite.stmt.Where or(com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where,com.j256.ormlite.stmt.Where[]) -> or
    com.j256.ormlite.stmt.Where or(int) -> or
    com.j256.ormlite.stmt.Where idEq(java.lang.Object) -> idEq
    com.j256.ormlite.stmt.Where idEq(com.j256.ormlite.dao.Dao,java.lang.Object) -> idEq
    com.j256.ormlite.stmt.Where raw(java.lang.String,com.j256.ormlite.stmt.ArgumentHolder[]) -> raw
    com.j256.ormlite.stmt.Where rawComparison(java.lang.String,java.lang.String,java.lang.Object) -> rawComparison
    com.j256.ormlite.stmt.PreparedQuery prepare() -> prepare
    java.util.List query() -> query
    com.j256.ormlite.dao.GenericRawResults queryRaw() -> queryRaw
    java.lang.Object queryForFirst() -> queryForFirst
    java.lang.String[] queryRawFirst() -> queryRawFirst
    long countOf() -> countOf
    com.j256.ormlite.dao.CloseableIterator iterator() -> iterator
    com.j256.ormlite.stmt.Where clear() -> clear
    com.j256.ormlite.stmt.Where reset() -> reset
    java.lang.String getStatement() -> getStatement
    void appendSql(java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    java.lang.String toString() -> toString
    com.j256.ormlite.stmt.QueryBuilder checkQueryBuilderMethod(java.lang.String) -> checkQueryBuilderMethod
    com.j256.ormlite.stmt.Where in(boolean,java.lang.String,java.lang.Object[]) -> in
    com.j256.ormlite.stmt.Where in(boolean,java.lang.String,com.j256.ormlite.stmt.QueryBuilder) -> in
    com.j256.ormlite.stmt.query.Clause[] buildClauseArray(com.j256.ormlite.stmt.Where[],java.lang.String) -> buildClauseArray
    void addNeedsFuture(com.j256.ormlite.stmt.query.NeedsFutureClause) -> addNeedsFuture
    void addClause(com.j256.ormlite.stmt.query.Clause) -> addClause
    com.j256.ormlite.field.FieldType findColumnFieldType(java.lang.String) -> findColumnFieldType
    void push(com.j256.ormlite.stmt.query.Clause) -> push
    com.j256.ormlite.stmt.query.Clause pop(java.lang.String) -> pop
    com.j256.ormlite.stmt.query.Clause peek() -> peek
com.j256.ormlite.stmt.mapped.BaseMappedQuery -> com.j256.ormlite.stmt.mapped.BaseMappedQuery:
    com.j256.ormlite.field.FieldType[] resultsFieldTypes -> resultsFieldTypes
    java.util.Map columnPositions -> columnPositions
    java.lang.Object parent -> parent
    java.lang.Object parentId -> parentId
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> mapRow
    void setParentInformation(java.lang.Object,java.lang.Object) -> setParentInformation
com.j256.ormlite.stmt.mapped.BaseMappedStatement -> com.j256.ormlite.stmt.mapped.BaseMappedStatement:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.table.TableInfo tableInfo -> tableInfo
    java.lang.Class clazz -> clazz
    com.j256.ormlite.field.FieldType idField -> idField
    java.lang.String statement -> statement
    com.j256.ormlite.field.FieldType[] argFieldTypes -> argFieldTypes
    java.lang.Object[] getFieldObjects(java.lang.Object) -> getFieldObjects
    java.lang.Object convertIdToFieldObject(java.lang.Object) -> convertIdToFieldObject
    void appendWhereFieldEq(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,java.util.List) -> appendWhereFieldEq
    void appendTableName(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.lang.String,java.lang.String) -> appendTableName
    void appendFieldColumnName(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List) -> appendFieldColumnName
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.mapped.MappedCreate -> com.j256.ormlite.stmt.mapped.MappedCreate:
    java.lang.String queryNextSequenceStmt -> queryNextSequenceStmt
    java.lang.String dataClassName -> dataClassName
    int versionFieldTypeIndex -> versionFieldTypeIndex
    int insert(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> insert
    com.j256.ormlite.stmt.mapped.MappedCreate build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    boolean foreignCollectionsAreAssigned(com.j256.ormlite.field.FieldType[],java.lang.Object) -> foreignCollectionsAreAssigned
    boolean isFieldCreatable(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType) -> isFieldCreatable
    java.lang.String buildQueryNextSequence(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType) -> buildQueryNextSequence
    void assignSequenceId(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> assignSequenceId
    void assignIdValue(java.lang.Object,java.lang.Number,java.lang.String,com.j256.ormlite.dao.ObjectCache) -> assignIdValue
com.j256.ormlite.stmt.mapped.MappedCreate$1 -> com.j256.ormlite.stmt.mapped.MappedCreate$1:
com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder -> com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder:
    java.lang.Number key -> key
    java.lang.Number getKey() -> getKey
    void addKey(java.lang.Number) -> addKey
com.j256.ormlite.stmt.mapped.MappedDelete -> com.j256.ormlite.stmt.mapped.MappedDelete:
    com.j256.ormlite.stmt.mapped.MappedDelete build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    int delete(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> delete
    int deleteById(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> deleteById
com.j256.ormlite.stmt.mapped.MappedDeleteCollection -> com.j256.ormlite.stmt.mapped.MappedDeleteCollection:
    int deleteObjects(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteObjects
    int deleteIds(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.support.DatabaseConnection,java.util.Collection,com.j256.ormlite.dao.ObjectCache) -> deleteIds
    com.j256.ormlite.stmt.mapped.MappedDeleteCollection build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,int) -> build
    int updateRows(com.j256.ormlite.support.DatabaseConnection,java.lang.Class,com.j256.ormlite.stmt.mapped.MappedDeleteCollection,java.lang.Object[],com.j256.ormlite.dao.ObjectCache) -> updateRows
    void appendWhereIds(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,int,com.j256.ormlite.field.FieldType[]) -> appendWhereIds
com.j256.ormlite.stmt.mapped.MappedPreparedStmt -> com.j256.ormlite.stmt.mapped.MappedPreparedStmt:
    com.j256.ormlite.stmt.ArgumentHolder[] argHolders -> argHolders
    java.lang.Long limit -> limit
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> type
    com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType) -> compile
    com.j256.ormlite.support.CompiledStatement compile(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType,int) -> compile
    java.lang.String getStatement() -> getStatement
    com.j256.ormlite.stmt.StatementBuilder$StatementType getType() -> getType
    void setArgumentHolderValue(int,java.lang.Object) -> setArgumentHolderValue
    com.j256.ormlite.support.CompiledStatement assignStatementArguments(com.j256.ormlite.support.CompiledStatement) -> assignStatementArguments
com.j256.ormlite.stmt.mapped.MappedQueryForId -> com.j256.ormlite.stmt.mapped.MappedQueryForId:
    java.lang.String label -> label
    java.lang.Object execute(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> execute
    com.j256.ormlite.stmt.mapped.MappedQueryForId build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.field.FieldType) -> build
    java.lang.String buildStatement(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.field.FieldType) -> buildStatement
    void logArgs(java.lang.Object[]) -> logArgs
com.j256.ormlite.stmt.mapped.MappedRefresh -> com.j256.ormlite.stmt.mapped.MappedRefresh:
    int executeRefresh(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> executeRefresh
    com.j256.ormlite.stmt.mapped.MappedRefresh build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
com.j256.ormlite.stmt.mapped.MappedUpdate -> com.j256.ormlite.stmt.mapped.MappedUpdate:
    com.j256.ormlite.field.FieldType versionFieldType -> versionFieldType
    int versionFieldTypeIndex -> versionFieldTypeIndex
    com.j256.ormlite.stmt.mapped.MappedUpdate build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    int update(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> update
    boolean isFieldUpdatable(com.j256.ormlite.field.FieldType,com.j256.ormlite.field.FieldType) -> isFieldUpdatable
com.j256.ormlite.stmt.mapped.MappedUpdateId -> com.j256.ormlite.stmt.mapped.MappedUpdateId:
    int execute(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> execute
    com.j256.ormlite.stmt.mapped.MappedUpdateId build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> build
    java.lang.Object extractIdToFieldObject(java.lang.Object) -> extractIdToFieldObject
com.j256.ormlite.stmt.query.BaseComparison -> com.j256.ormlite.stmt.query.BaseComparison:
    java.lang.String NUMBER_CHARACTERS -> NUMBER_CHARACTERS
    java.lang.String columnName -> columnName
    com.j256.ormlite.field.FieldType fieldType -> fieldType
    java.lang.Object value -> value
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    java.lang.String getColumnName() -> getColumnName
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    void appendArgOrValue(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,java.util.List,java.lang.Object) -> appendArgOrValue
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.query.Between -> com.j256.ormlite.stmt.query.Between:
    java.lang.Object low -> low
    java.lang.Object high -> high
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.Clause -> com.j256.ormlite.stmt.query.Clause:
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.Comparison -> com.j256.ormlite.stmt.query.Comparison:
    java.lang.String getColumnName() -> getColumnName
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
com.j256.ormlite.stmt.query.Exists -> com.j256.ormlite.stmt.query.Exists:
    com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper subQueryBuilder -> subQueryBuilder
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.In -> com.j256.ormlite.stmt.query.In:
    java.lang.Iterable objects -> objects
    boolean in -> in
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.InSubQuery -> com.j256.ormlite.stmt.query.InSubQuery:
    com.j256.ormlite.stmt.QueryBuilder$InternalQueryBuilderWrapper subQueryBuilder -> subQueryBuilder
    boolean in -> in
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.IsNotNull -> com.j256.ormlite.stmt.query.IsNotNull:
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.IsNull -> com.j256.ormlite.stmt.query.IsNull:
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String toString() -> toString
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.ManyClause -> com.j256.ormlite.stmt.query.ManyClause:
    java.lang.String AND_OPERATION -> AND_OPERATION
    java.lang.String OR_OPERATION -> OR_OPERATION
    com.j256.ormlite.stmt.query.Clause first -> first
    com.j256.ormlite.stmt.query.Clause second -> second
    com.j256.ormlite.stmt.query.Clause[] others -> others
    int startOthersAt -> startOthersAt
    java.lang.String operation -> operation
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    void setMissingClause(com.j256.ormlite.stmt.query.Clause) -> setMissingClause
com.j256.ormlite.stmt.query.NeedsFutureClause -> com.j256.ormlite.stmt.query.NeedsFutureClause:
    void setMissingClause(com.j256.ormlite.stmt.query.Clause) -> setMissingClause
com.j256.ormlite.stmt.query.Not -> com.j256.ormlite.stmt.query.Not:
    com.j256.ormlite.stmt.query.Comparison comparison -> comparison
    com.j256.ormlite.stmt.query.Exists exists -> exists
    void setMissingClause(com.j256.ormlite.stmt.query.Clause) -> setMissingClause
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.query.OrderBy -> com.j256.ormlite.stmt.query.OrderBy:
    java.lang.String columnName -> columnName
    boolean ascending -> ascending
    java.lang.String getColumnName() -> getColumnName
    boolean isAscending() -> isAscending
com.j256.ormlite.stmt.query.Raw -> com.j256.ormlite.stmt.query.Raw:
    java.lang.String statement -> statement
    com.j256.ormlite.stmt.ArgumentHolder[] args -> args
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.SetExpression -> com.j256.ormlite.stmt.query.SetExpression:
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    void appendArgOrValue(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,java.util.List,java.lang.Object) -> appendArgOrValue
    java.lang.String toString() -> toString
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.SetValue -> com.j256.ormlite.stmt.query.SetValue:
    com.j256.ormlite.stmt.ArgumentHolder nullValue -> nullValue
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    java.lang.String toString() -> toString
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.stmt.query.SimpleComparison -> com.j256.ormlite.stmt.query.SimpleComparison:
    java.lang.String EQUAL_TO_OPERATION -> EQUAL_TO_OPERATION
    java.lang.String GREATER_THAN_OPERATION -> GREATER_THAN_OPERATION
    java.lang.String GREATER_THAN_EQUAL_TO_OPERATION -> GREATER_THAN_EQUAL_TO_OPERATION
    java.lang.String LESS_THAN_OPERATION -> LESS_THAN_OPERATION
    java.lang.String LESS_THAN_EQUAL_TO_OPERATION -> LESS_THAN_EQUAL_TO_OPERATION
    java.lang.String LIKE_OPERATION -> LIKE_OPERATION
    java.lang.String NOT_EQUAL_TO_OPERATION -> NOT_EQUAL_TO_OPERATION
    java.lang.String operation -> operation
    void appendOperation(java.lang.StringBuilder) -> appendOperation
    java.lang.String toString() -> toString
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> appendValue
    java.lang.String getColumnName() -> getColumnName
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> appendSql
com.j256.ormlite.support.BaseConnectionSource -> com.j256.ormlite.support.BaseConnectionSource:
    java.lang.ThreadLocal specialConnection -> specialConnection
    com.j256.ormlite.support.DatabaseConnection getSpecialConnection() -> getSpecialConnection
    com.j256.ormlite.support.DatabaseConnection getSavedConnection() -> getSavedConnection
    boolean isSavedConnection(com.j256.ormlite.support.DatabaseConnection) -> isSavedConnection
    boolean saveSpecial(com.j256.ormlite.support.DatabaseConnection) -> saveSpecial
    boolean clearSpecial(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.logger.Logger) -> clearSpecial
com.j256.ormlite.support.BaseConnectionSource$NestedConnection -> com.j256.ormlite.support.BaseConnectionSource$NestedConnection:
    com.j256.ormlite.support.DatabaseConnection connection -> connection
    int nestedC -> nestedC
    void increment() -> increment
    int decrementAndGet() -> decrementAndGet
com.j256.ormlite.support.CompiledStatement -> com.j256.ormlite.support.CompiledStatement:
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    int runUpdate() -> runUpdate
    com.j256.ormlite.support.DatabaseResults runQuery(com.j256.ormlite.dao.ObjectCache) -> runQuery
    int runExecute() -> runExecute
    void close() -> close
    void closeQuietly() -> closeQuietly
    void cancel() -> cancel
    void setObject(int,java.lang.Object,com.j256.ormlite.field.SqlType) -> setObject
    void setMaxRows(int) -> setMaxRows
    void setQueryTimeout(long) -> setQueryTimeout
com.j256.ormlite.support.ConnectionSource -> com.j256.ormlite.support.ConnectionSource:
    com.j256.ormlite.support.DatabaseConnection getReadOnlyConnection() -> getReadOnlyConnection
    com.j256.ormlite.support.DatabaseConnection getReadWriteConnection() -> getReadWriteConnection
    void releaseConnection(com.j256.ormlite.support.DatabaseConnection) -> releaseConnection
    boolean saveSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> saveSpecialConnection
    void clearSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> clearSpecialConnection
    com.j256.ormlite.support.DatabaseConnection getSpecialConnection() -> getSpecialConnection
    void close() -> close
    void closeQuietly() -> closeQuietly
    com.j256.ormlite.db.DatabaseType getDatabaseType() -> getDatabaseType
    boolean isOpen() -> isOpen
com.j256.ormlite.support.DatabaseConnection -> com.j256.ormlite.support.DatabaseConnection:
    java.lang.Object MORE_THAN_ONE -> MORE_THAN_ONE
    int DEFAULT_RESULT_FLAGS -> DEFAULT_RESULT_FLAGS
    boolean isAutoCommitSupported() -> isAutoCommitSupported
    boolean isAutoCommit() -> isAutoCommit
    void setAutoCommit(boolean) -> setAutoCommit
    java.sql.Savepoint setSavePoint(java.lang.String) -> setSavePoint
    void commit(java.sql.Savepoint) -> commit
    void rollback(java.sql.Savepoint) -> rollback
    int executeStatement(java.lang.String,int) -> executeStatement
    com.j256.ormlite.support.CompiledStatement compileStatement(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType,com.j256.ormlite.field.FieldType[],int) -> compileStatement
    int insert(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.support.GeneratedKeyHolder) -> insert
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> update
    int delete(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> delete
    java.lang.Object queryForOne(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.stmt.GenericRowMapper,com.j256.ormlite.dao.ObjectCache) -> queryForOne
    long queryForLong(java.lang.String) -> queryForLong
    long queryForLong(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> queryForLong
    void close() -> close
    void closeQuietly() -> closeQuietly
    boolean isClosed() -> isClosed
    boolean isTableExists(java.lang.String) -> isTableExists
com.j256.ormlite.support.DatabaseConnectionProxy -> com.j256.ormlite.support.DatabaseConnectionProxy:
    com.j256.ormlite.support.DatabaseConnection proxy -> proxy
    boolean isAutoCommitSupported() -> isAutoCommitSupported
    boolean isAutoCommit() -> isAutoCommit
    void setAutoCommit(boolean) -> setAutoCommit
    java.sql.Savepoint setSavePoint(java.lang.String) -> setSavePoint
    void commit(java.sql.Savepoint) -> commit
    void rollback(java.sql.Savepoint) -> rollback
    int executeStatement(java.lang.String,int) -> executeStatement
    com.j256.ormlite.support.CompiledStatement compileStatement(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType,com.j256.ormlite.field.FieldType[],int) -> compileStatement
    int insert(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.support.GeneratedKeyHolder) -> insert
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> update
    int delete(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> delete
    java.lang.Object queryForOne(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.stmt.GenericRowMapper,com.j256.ormlite.dao.ObjectCache) -> queryForOne
    long queryForLong(java.lang.String) -> queryForLong
    long queryForLong(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> queryForLong
    void close() -> close
    void closeQuietly() -> closeQuietly
    boolean isClosed() -> isClosed
    boolean isTableExists(java.lang.String) -> isTableExists
com.j256.ormlite.support.DatabaseConnectionProxyFactory -> com.j256.ormlite.support.DatabaseConnectionProxyFactory:
    com.j256.ormlite.support.DatabaseConnection createProxy(com.j256.ormlite.support.DatabaseConnection) -> createProxy
com.j256.ormlite.support.DatabaseResults -> com.j256.ormlite.support.DatabaseResults:
    int getColumnCount() -> getColumnCount
    java.lang.String[] getColumnNames() -> getColumnNames
    boolean first() -> first
    boolean previous() -> previous
    boolean next() -> next
    boolean last() -> last
    boolean moveRelative(int) -> moveRelative
    boolean moveAbsolute(int) -> moveAbsolute
    int findColumn(java.lang.String) -> findColumn
    java.lang.String getString(int) -> getString
    boolean getBoolean(int) -> getBoolean
    char getChar(int) -> getChar
    byte getByte(int) -> getByte
    byte[] getBytes(int) -> getBytes
    short getShort(int) -> getShort
    int getInt(int) -> getInt
    long getLong(int) -> getLong
    float getFloat(int) -> getFloat
    double getDouble(int) -> getDouble
    java.sql.Timestamp getTimestamp(int) -> getTimestamp
    java.io.InputStream getBlobStream(int) -> getBlobStream
    java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    boolean wasNull(int) -> wasNull
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> getObjectCache
    void close() -> close
    void closeQuietly() -> closeQuietly
com.j256.ormlite.support.GeneratedKeyHolder -> com.j256.ormlite.support.GeneratedKeyHolder:
    void addKey(java.lang.Number) -> addKey
com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory -> com.j256.ormlite.support.ReflectionDatabaseConnectionProxyFactory:
    java.lang.Class proxyClass -> proxyClass
    java.lang.reflect.Constructor constructor -> constructor
    com.j256.ormlite.support.DatabaseConnection createProxy(com.j256.ormlite.support.DatabaseConnection) -> createProxy
com.j256.ormlite.table.DatabaseTable -> com.j256.ormlite.table.DatabaseTable:
    java.lang.String tableName() -> tableName
    java.lang.Class daoClass() -> daoClass
com.j256.ormlite.table.DatabaseTableConfig -> com.j256.ormlite.table.DatabaseTableConfig:
    java.lang.Class dataClass -> dataClass
    java.lang.String tableName -> tableName
    java.util.List fieldConfigs -> fieldConfigs
    com.j256.ormlite.field.FieldType[] fieldTypes -> fieldTypes
    java.lang.reflect.Constructor constructor -> constructor
    void initialize() -> initialize
    java.lang.Class getDataClass() -> getDataClass
    void setDataClass(java.lang.Class) -> setDataClass
    java.lang.String getTableName() -> getTableName
    void setTableName(java.lang.String) -> setTableName
    void setFieldConfigs(java.util.List) -> setFieldConfigs
    void extractFieldTypes(com.j256.ormlite.support.ConnectionSource) -> extractFieldTypes
    com.j256.ormlite.field.FieldType[] getFieldTypes(com.j256.ormlite.db.DatabaseType) -> getFieldTypes
    java.util.List getFieldConfigs() -> getFieldConfigs
    java.lang.reflect.Constructor getConstructor() -> getConstructor
    void setConstructor(java.lang.reflect.Constructor) -> setConstructor
    com.j256.ormlite.table.DatabaseTableConfig fromClass(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> fromClass
    java.lang.String extractTableName(java.lang.Class) -> extractTableName
    java.lang.reflect.Constructor findNoArgConstructor(java.lang.Class) -> findNoArgConstructor
    com.j256.ormlite.field.FieldType[] extractFieldTypes(com.j256.ormlite.support.ConnectionSource,java.lang.Class,java.lang.String) -> extractFieldTypes
    com.j256.ormlite.field.FieldType[] convertFieldConfigs(com.j256.ormlite.support.ConnectionSource,java.lang.String,java.util.List) -> convertFieldConfigs
com.j256.ormlite.table.DatabaseTableConfigLoader -> com.j256.ormlite.table.DatabaseTableConfigLoader:
    java.lang.String CONFIG_FILE_START_MARKER -> CONFIG_FILE_START_MARKER
    java.lang.String CONFIG_FILE_END_MARKER -> CONFIG_FILE_END_MARKER
    java.lang.String CONFIG_FILE_FIELDS_START -> CONFIG_FILE_FIELDS_START
    java.lang.String CONFIG_FILE_FIELDS_END -> CONFIG_FILE_FIELDS_END
    java.lang.String FIELD_NAME_DATA_CLASS -> FIELD_NAME_DATA_CLASS
    java.lang.String FIELD_NAME_TABLE_NAME -> FIELD_NAME_TABLE_NAME
    java.util.List loadDatabaseConfigFromReader(java.io.BufferedReader) -> loadDatabaseConfigFromReader
    com.j256.ormlite.table.DatabaseTableConfig fromReader(java.io.BufferedReader) -> fromReader
    void write(java.io.BufferedWriter,com.j256.ormlite.table.DatabaseTableConfig) -> write
    void writeConfig(java.io.BufferedWriter,com.j256.ormlite.table.DatabaseTableConfig) -> writeConfig
    void readTableField(com.j256.ormlite.table.DatabaseTableConfig,java.lang.String,java.lang.String) -> readTableField
    void readFields(java.io.BufferedReader,com.j256.ormlite.table.DatabaseTableConfig) -> readFields
com.j256.ormlite.table.ObjectFactory -> com.j256.ormlite.table.ObjectFactory:
    java.lang.Object createObject(java.lang.reflect.Constructor,java.lang.Class) -> createObject
com.j256.ormlite.table.TableInfo -> com.j256.ormlite.table.TableInfo:
    com.j256.ormlite.field.FieldType[] NO_FOREIGN_COLLECTIONS -> NO_FOREIGN_COLLECTIONS
    com.j256.ormlite.dao.BaseDaoImpl baseDaoImpl -> baseDaoImpl
    java.lang.Class dataClass -> dataClass
    java.lang.String tableName -> tableName
    com.j256.ormlite.field.FieldType[] fieldTypes -> fieldTypes
    com.j256.ormlite.field.FieldType[] foreignCollections -> foreignCollections
    com.j256.ormlite.field.FieldType idField -> idField
    java.lang.reflect.Constructor constructor -> constructor
    boolean foreignAutoCreate -> foreignAutoCreate
    java.util.Map fieldNameMap -> fieldNameMap
    java.lang.Class getDataClass() -> getDataClass
    java.lang.String getTableName() -> getTableName
    com.j256.ormlite.field.FieldType[] getFieldTypes() -> getFieldTypes
    com.j256.ormlite.field.FieldType getFieldTypeByColumnName(java.lang.String) -> getFieldTypeByColumnName
    com.j256.ormlite.field.FieldType getIdField() -> getIdField
    java.lang.reflect.Constructor getConstructor() -> getConstructor
    java.lang.String objectToString(java.lang.Object) -> objectToString
    java.lang.Object createObject() -> createObject
    boolean isUpdatable() -> isUpdatable
    boolean isForeignAutoCreate() -> isForeignAutoCreate
    com.j256.ormlite.field.FieldType[] getForeignCollections() -> getForeignCollections
    boolean hasColumnName(java.lang.String) -> hasColumnName
    void wireNewInstance(com.j256.ormlite.dao.BaseDaoImpl,java.lang.Object) -> wireNewInstance
com.j256.ormlite.table.TableUtils -> com.j256.ormlite.table.TableUtils:
    com.j256.ormlite.logger.Logger logger -> logger
    com.j256.ormlite.field.FieldType[] noFieldTypes -> noFieldTypes
    int createTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createTable
    int createTableIfNotExists(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> createTableIfNotExists
    int createTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createTable
    int createTableIfNotExists(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> createTableIfNotExists
    java.util.List getCreateTableStatements(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> getCreateTableStatements
    java.util.List getCreateTableStatements(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> getCreateTableStatements
    int dropTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class,boolean) -> dropTable
    int dropTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig,boolean) -> dropTable
    int clearTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> clearTable
    int clearTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> clearTable
    int createTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class,boolean) -> createTable
    int createTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig,boolean) -> createTable
    int clearTable(com.j256.ormlite.support.ConnectionSource,java.lang.String) -> clearTable
    int doDropTable(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.TableInfo,boolean) -> doDropTable
    void addDropIndexStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List) -> addDropIndexStatements
    void addCreateTableStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List,java.util.List,boolean) -> addCreateTableStatements
    void addCreateIndexStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List,boolean,boolean) -> addCreateIndexStatements
    void addDropTableStatements(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List) -> addDropTableStatements
    int doCreateTable(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.TableInfo,boolean) -> doCreateTable
    int doStatements(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.util.Collection,boolean,boolean,boolean) -> doStatements
    int doCreateTestQueries(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.db.DatabaseType,java.util.List) -> doCreateTestQueries
    java.util.List addCreateTableStatements(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.TableInfo,boolean) -> addCreateTableStatements
com.prize.weather.IBDLocationRefreshListener -> com.prize.weather.a:
    void refreshMenuFragment() -> a
com.prize.weather.MainActivity -> com.prize.weather.MainActivity:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
com.prize.weather.WeatherFragmentPagerAdapter -> com.prize.weather.b:
    java.util.ArrayList list -> a
    android.support.v4.app.Fragment getItem(int) -> getItem
    int getCount() -> getCount
com.prize.weather.WeatherHomeActivity -> com.prize.weather.WeatherHomeActivity:
    android.support.v4.widget.DrawerLayout drawerlayout_home -> h
    android.widget.FrameLayout weather_content -> i
    android.widget.LinearLayout weather_content_front -> j
    android.widget.FrameLayout move_layout -> k
    android.widget.ImageView top_iv_leftmenu -> l
    android.widget.ImageView top_iv_rightadd -> m
    android.widget.TextView top_tv_name -> n
    android.widget.TextView top_tv_time -> o
    android.widget.LinearLayout cityNumLiearLayout -> p
    java.util.List listBottomIVs -> q
    android.support.v4.view.ViewPager viewPager -> r
    java.util.ArrayList mFragmentList -> s
    com.prize.weather.WeatherFragmentPagerAdapter mWeatherFragmentPagerAdapter -> t
    int cityNum -> u
    com.prize.weather.IBDLocationRefreshListener mIBDLocationRefreshListener -> v
    int mCurrentScrollY -> w
    int mCurrnetPosition -> x
    com.prize.weather.util.WeatherImageUtils mWeatherImageUtils -> a
    long exitTime -> y
    int j -> b
    int getViewpagerCurrentItem() -> a
    int getViewpagerHeight() -> b
    void setCurrentCityName(java.lang.String) -> a
    void setRefreshTime(java.lang.String) -> b
    int getCityNum() -> c
    void setmCurrentScrollY(int) -> a
    int getmCurrentScrollY() -> d
    int getmCurrnetPosition() -> k
    java.lang.String getFragmentTitle(int) -> c
    java.lang.String getFragmentRefreshTime(int) -> d
    void setWeatherBG(int) -> b
    void initInfo() -> e
    void initView() -> f
    void initData() -> g
    void showFullTopView() -> h
    void initBottomView() -> l
    void setBottomViewPosition(int) -> e
    void onResume() -> onResume
    void onBDLocationFinishedListener() -> i
    boolean onCityDeleteListener$134632() -> j
    void onBackPressed() -> onBackPressed
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onDestroy() -> onDestroy
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    java.util.ArrayList access$2(com.prize.weather.WeatherHomeActivity) -> a
    java.lang.String access$3(com.prize.weather.WeatherHomeActivity,int) -> a
    java.lang.String access$4(com.prize.weather.WeatherHomeActivity,int) -> b
    int access$5(com.prize.weather.WeatherHomeActivity,int) -> c
    void access$6(com.prize.weather.WeatherHomeActivity,int) -> d
    android.support.v4.view.ViewPager access$7(com.prize.weather.WeatherHomeActivity) -> b
    int access$8(com.prize.weather.WeatherHomeActivity) -> c
com.prize.weather.WeatherHomeActivity$1 -> com.prize.weather.c:
    com.prize.weather.WeatherHomeActivity this$0 -> a
    void onPageSelected(int) -> onPageSelected
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
com.prize.weather.WeatherHomeActivity$2 -> com.prize.weather.d:
    com.prize.weather.WeatherHomeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.weather.WeatherHomeActivity$3 -> com.prize.weather.e:
    com.prize.weather.WeatherHomeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.weather.city.CharacterParser -> com.prize.weather.city.a:
    int[] pyvalue -> b
    java.lang.String[] pystr -> a
    java.lang.StringBuilder buffer -> c
    com.prize.weather.city.CharacterParser characterParser -> d
    com.prize.weather.city.CharacterParser getInstance() -> a
    int getChsAscii(java.lang.String) -> b
    java.lang.String convert(java.lang.String) -> c
    java.lang.String getSelling(java.lang.String) -> a
com.prize.weather.city.CityEntity -> com.prize.weather.city.b:
    int id -> a
    int pid -> b
    int cCode -> c
    int dCode -> d
    int type -> e
    java.lang.String name -> f
    int isEnable -> g
    int isHot -> h
com.prize.weather.city.CitySelectActivity -> com.prize.weather.city.CitySelectActivity:
    com.prize.weather.db.DBManager db -> a
    android.widget.TextView hotCityTv -> b
    android.widget.TextView cityTv -> c
    android.widget.TextView back -> d
    int backFlag -> e
    android.widget.EditText mClearEditText -> f
    com.prize.weather.city.SortAdapter adapter -> D
    android.widget.ListView sortListView -> E
    com.prize.weather.city.CharacterParser characterParser -> F
    android.widget.GridView hotCityGrid -> g
    com.prize.weather.city.GridAdapter hotCityAdapter -> h
    java.util.ArrayList hotCityList -> i
    java.util.ArrayList hotCitycCodeList -> j
    android.widget.GridView provGrid -> k
    com.prize.weather.city.GridAdapter provGridAdapter -> l
    java.util.ArrayList provList -> m
    java.util.ArrayList provIdList -> n
    java.util.ArrayList provTypeList -> o
    android.widget.GridView cityGrid -> p
    com.prize.weather.city.GridAdapter cityGridAdapter -> q
    java.util.ArrayList cityList -> r
    java.util.ArrayList cityIdList -> s
    java.util.ArrayList citycCodeList -> t
    android.widget.GridView countyGrid -> u
    com.prize.weather.city.GridAdapter countyGridAdapter -> v
    java.util.ArrayList countyList -> w
    java.util.ArrayList countycCodeList -> x
    android.widget.LinearLayout city_content -> G
    int mStatusBarHeight -> H
    android.widget.AdapterView$OnItemClickListener hotCityItemSelectListener -> y
    android.widget.AdapterView$OnItemClickListener provinceItemSelectListener -> z
    android.widget.AdapterView$OnItemClickListener cityItemSelectListener -> A
    android.widget.AdapterView$OnItemClickListener countyItemSelectListener -> I
    android.view.View$OnClickListener backOnClickListener -> B
    java.util.List filterDateList -> C
    int getStatusBarHeight() -> a
    void onCreate(android.os.Bundle) -> onCreate
    void initView() -> b
    int selectCityCode(int) -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void backKey() -> c
    void searchCityPerNum(java.lang.String,int) -> a
    void access$0(com.prize.weather.city.CitySelectActivity,int,java.lang.String) -> a
    void access$1(com.prize.weather.city.CitySelectActivity,int) -> a
    void access$2(com.prize.weather.city.CitySelectActivity,int) -> b
    void access$3(com.prize.weather.city.CitySelectActivity) -> a
    com.prize.weather.city.SortAdapter access$4(com.prize.weather.city.CitySelectActivity) -> b
    android.widget.ListView access$5(com.prize.weather.city.CitySelectActivity) -> c
    void access$6(com.prize.weather.city.CitySelectActivity,java.lang.String) -> a
com.prize.weather.city.CitySelectActivity$1 -> com.prize.weather.city.c:
    com.prize.weather.city.CitySelectActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.prize.weather.city.CitySelectActivity$2 -> com.prize.weather.city.d:
    com.prize.weather.city.CitySelectActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.prize.weather.city.CitySelectActivity$3 -> com.prize.weather.city.e:
    com.prize.weather.city.CitySelectActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.prize.weather.city.CitySelectActivity$4 -> com.prize.weather.city.f:
    com.prize.weather.city.CitySelectActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.prize.weather.city.CitySelectActivity$5 -> com.prize.weather.city.g:
    com.prize.weather.city.CitySelectActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.weather.city.CitySelectActivity$6 -> com.prize.weather.city.h:
    com.prize.weather.city.CitySelectActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.prize.weather.city.CitySelectActivity$7 -> com.prize.weather.city.i:
    com.prize.weather.city.CitySelectActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.weather.city.CitySelectActivity$8 -> com.prize.weather.city.j:
    com.prize.weather.city.CitySelectActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.prize.weather.city.GridAdapter -> com.prize.weather.city.k:
    android.content.Context mContext -> a
    java.util.List mItems -> b
    int resourceId -> c
    int selectedPosition -> d
    void setListItems(java.util.List) -> a
    int getCount() -> getCount
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.prize.weather.city.GridAdapter$GridViewWrapper -> com.prize.weather.city.l:
    android.view.View base -> a
    android.widget.TextView city -> b
    com.prize.weather.city.GridAdapter this$0 -> c
    android.widget.TextView getCityTextView() -> a
com.prize.weather.city.PinyinComparator -> com.prize.weather.city.m:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.prize.weather.city.SortAdapter -> com.prize.weather.city.n:
    java.util.List list -> a
    android.content.Context mContext -> b
    void updateListView(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int getSectionForPosition(int) -> getSectionForPosition
    int getPositionForSection(int) -> getPositionForSection
    java.lang.Object[] getSections() -> getSections
com.prize.weather.city.SortAdapter$ViewHolder -> com.prize.weather.city.o:
    android.widget.TextView tvLetter -> a
    android.widget.TextView tvTitle -> b
com.prize.weather.city.SortModel -> com.prize.weather.city.p:
    java.lang.String name -> a
    java.lang.String sortLetters -> b
    int code -> c
    int getCode() -> a
    void setCode(int) -> a
    java.lang.String getName() -> b
    void setName(java.lang.String) -> a
    java.lang.String getSortLetters() -> c
    void setSortLetters(java.lang.String) -> b
com.prize.weather.db.AssetsDatabaseManager -> com.prize.weather.a.a:
    java.lang.String tag -> a
    java.lang.String databasepath -> b
    java.util.Map databases -> c
    android.content.Context context -> d
    com.prize.weather.db.AssetsDatabaseManager mInstance -> e
    void initManager(android.content.Context) -> a
    com.prize.weather.db.AssetsDatabaseManager getManager() -> a
    android.database.sqlite.SQLiteDatabase getDatabase(java.lang.String) -> a
    java.lang.String getDatabaseFilepath() -> b
    boolean copyAssetsToFilesystem(java.lang.String,java.lang.String) -> a
com.prize.weather.db.DBManager -> com.prize.weather.a.b:
    boolean isUser -> a
    com.prize.weather.db.AssetsDatabaseManager mg -> b
    android.database.sqlite.SQLiteDatabase db -> c
    java.util.List queryAllCitys() -> a
    java.util.List queryCity(int) -> a
    java.util.List parseEntityData(android.database.Cursor) -> a
com.prize.weather.detail.HourWeatherAdapter -> com.prize.weather.detail.HourWeatherAdapter:
    com.prize.weather.detail.HourWeatherAdapter$ViewHolder holder -> holder
    android.content.Context mContext -> mContext
    java.util.List list -> list
    int getCount() -> getCount
    java.util.Map getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.prize.weather.detail.HourWeatherAdapter$ViewHolder -> com.prize.weather.detail.HourWeatherAdapter$ViewHolder:
    android.widget.TextView hour_weather_time -> hour_weather_time
    android.widget.ImageView hour_weather_icon -> hour_weather_icon
    android.widget.TextView hour_weather_temp -> hour_weather_temp
com.prize.weather.detail.IWeatherDetailView -> com.prize.weather.detail.IWeatherDetailView:
    boolean isLocation() -> isLocation
    boolean isFirst() -> isFirst
    boolean isSave() -> isSave
    int getID() -> getID
    java.lang.String getName() -> getName
com.prize.weather.detail.WeatherDetailArrBean -> com.prize.weather.detail.WeatherDetailArrBean:
    java.lang.String city_name -> city_name
    java.lang.String city_id -> city_id
    java.lang.String last_update -> last_update
    com.prize.weather.detail.WeatherNowBean now -> now
    com.prize.weather.detail.WeatherTodayBean today -> today
    java.util.List hourly -> hourly
    java.util.List future -> future
    java.lang.String getCity_name() -> getCity_name
    void setCity_name(java.lang.String) -> setCity_name
    java.lang.String getCity_id() -> getCity_id
    void setCity_id(java.lang.String) -> setCity_id
    java.lang.String getLast_update() -> getLast_update
    void setLast_update(java.lang.String) -> setLast_update
    com.prize.weather.detail.WeatherNowBean getNow() -> getNow
    void setNow(com.prize.weather.detail.WeatherNowBean) -> setNow
    com.prize.weather.detail.WeatherTodayBean getToday() -> getToday
    void setToday(com.prize.weather.detail.WeatherTodayBean) -> setToday
    java.util.List getHourly() -> getHourly
    void setHourly(java.util.List) -> setHourly
    java.util.List getFuture() -> getFuture
    void setFuture(java.util.List) -> setFuture
com.prize.weather.detail.WeatherDetailBean -> com.prize.weather.detail.WeatherDetailBean:
    java.lang.String status -> status
    java.util.List weather -> weather
    java.lang.String getStatus() -> getStatus
    void setStatus(java.lang.String) -> setStatus
    java.util.List getWeather() -> getWeather
    void setWeather(java.util.List) -> setWeather
com.prize.weather.detail.WeatherDetailFragment -> com.prize.weather.detail.WeatherDetailFragment:
    java.lang.String TAG -> TAG
    java.lang.String TEMPORARILY_NO_DATA -> TEMPORARILY_NO_DATA
    android.support.v4.widget.SwipeRefreshLayout refreshableView -> refreshableView
    com.prize.weather.view.BlurScrollView blurScrollView -> blurScrollView
    android.widget.RelativeLayout rl_nodata -> rl_nodata
    android.widget.LinearLayout ll_havedata -> ll_havedata
    android.widget.LinearLayout wfm_ll_main -> wfm_ll_main
    android.widget.TextView wfm_iv_txt -> wfm_iv_txt
    android.widget.ImageView wfm_iv_ten -> wfm_iv_ten
    android.widget.ImageView wfm_iv_one -> wfm_iv_one
    android.widget.TextView wfm_tv_up -> wfm_tv_up
    android.widget.TextView wfm_tv_down -> wfm_tv_down
    android.widget.ImageView wfm_iv_weather_icon -> wfm_iv_weather_icon
    android.widget.TextView wfm_tv_weather_text -> wfm_tv_weather_text
    android.widget.TextView wfm_tv_wind_direction -> wfm_tv_wind_direction
    android.widget.TextView wfm_tv_air_quality_text -> wfm_tv_air_quality_text
    android.widget.TextView wfm_tv_air_quality_quality -> wfm_tv_air_quality_quality
    com.prize.weather.view.DialChartView pm_dcv -> pm_dcv
    android.widget.TextView pm_tips -> pm_tips
    com.prize.weather.view.HourWeatherLayout mHourWeatherLayout -> mHourWeatherLayout
    java.util.List listHourWeather -> listHourWeather
    com.prize.weather.detail.HourWeatherAdapter mHourWeatherAdapter -> mHourWeatherAdapter
    android.widget.LinearLayout weather_future_list -> weather_future_list
    android.widget.TextView wfp_humidity -> wfp_humidity
    android.widget.TextView wfp_ultraviolet -> wfp_ultraviolet
    android.widget.TextView wfp_wind -> wfp_wind
    android.widget.TextView wfp_sunrise -> wfp_sunrise
    android.widget.TextView wfp_sunset -> wfp_sunset
    android.widget.TextView wfi_dressing -> wfi_dressing
    android.widget.TextView wfi_travel -> wfi_travel
    android.widget.TextView wfi_car_washing -> wfi_car_washing
    android.widget.TextView wfi_flu -> wfi_flu
    android.widget.TextView wfi_shopping -> wfi_shopping
    android.widget.TextView wfi_traffic -> wfi_traffic
    android.widget.TextView wfi_morning -> wfi_morning
    android.widget.TextView wfi_air -> wfi_air
    int index -> index
    int weatherCode -> weatherCode
    boolean isFirst -> isFirst
    boolean isSave -> isSave
    android.widget.LinearLayout contentLayout -> contentLayout
    int isBlur -> isBlur
    android.graphics.drawable.BitmapDrawable bd -> bd
    android.animation.ValueAnimator animator -> animator
    android.graphics.Bitmap blurbitmap -> blurbitmap
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable r -> r
    android.graphics.Bitmap outBitmap -> outBitmap
    int getIndex() -> getIndex
    void setIndex(int) -> setIndex
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void initRefreshWeather() -> initRefreshWeather
    void initPresenter() -> initPresenter
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onDestroyView() -> onDestroyView
    void openUpdateStatus() -> openUpdateStatus
    void closeUpdateStatus() -> closeUpdateStatus
    void showNodataView(boolean) -> showNodataView
    boolean isLocation() -> isLocation
    int getID() -> getID
    boolean isFirst() -> isFirst
    boolean isSave() -> isSave
    java.lang.String getName() -> getName
    java.lang.String getTitle() -> getTitle
    java.lang.String getRefreshTime() -> getRefreshTime
    int getWeatherCode() -> getWeatherCode
    void setScrollViewScrollTo(int) -> setScrollViewScrollTo
    void updateView(java.lang.Object) -> updateView
    void setImageViewSRCWithTemperature(java.lang.String) -> setImageViewSRCWithTemperature
    void setSRCWithTemperature(java.lang.String) -> setSRCWithTemperature
    void onResume() -> onResume
    void onRefresh() -> onRefresh
    void saveCacheData(com.prize.weather.framework.model.WeatherDBCache) -> saveCacheData
    void initBlurView() -> initBlurView
    android.graphics.Bitmap blurBitmap(android.graphics.Bitmap) -> blurBitmap
    android.graphics.Bitmap blurBitmap() -> blurBitmap
    android.graphics.Bitmap access$0(com.prize.weather.detail.WeatherDetailFragment) -> access$0
    void access$1(com.prize.weather.detail.WeatherDetailFragment,android.graphics.Bitmap) -> access$1
    void access$2(com.prize.weather.detail.WeatherDetailFragment,android.graphics.drawable.BitmapDrawable) -> access$2
    android.widget.LinearLayout access$3(com.prize.weather.detail.WeatherDetailFragment) -> access$3
    android.graphics.drawable.BitmapDrawable access$4(com.prize.weather.detail.WeatherDetailFragment) -> access$4
    void access$5(com.prize.weather.detail.WeatherDetailFragment,android.animation.ValueAnimator) -> access$5
    android.animation.ValueAnimator access$6(com.prize.weather.detail.WeatherDetailFragment) -> access$6
    android.app.Activity access$7(com.prize.weather.detail.WeatherDetailFragment) -> access$7
    int access$8(com.prize.weather.detail.WeatherDetailFragment) -> access$8
    void access$9(com.prize.weather.detail.WeatherDetailFragment,int) -> access$9
    int access$10(com.prize.weather.detail.WeatherDetailFragment) -> access$10
    java.lang.Runnable access$11(com.prize.weather.detail.WeatherDetailFragment) -> access$11
com.prize.weather.detail.WeatherDetailFragment$1 -> com.prize.weather.detail.WeatherDetailFragment$1:
    com.prize.weather.detail.WeatherDetailFragment this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
    com.prize.weather.detail.WeatherDetailFragment access$0(com.prize.weather.detail.WeatherDetailFragment$1) -> access$0
com.prize.weather.detail.WeatherDetailFragment$1$1 -> com.prize.weather.detail.WeatherDetailFragment$1$1:
    com.prize.weather.detail.WeatherDetailFragment$1 this$1 -> this$1
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.prize.weather.detail.WeatherDetailFragment$1$2 -> com.prize.weather.detail.WeatherDetailFragment$1$2:
    com.prize.weather.detail.WeatherDetailFragment$1 this$1 -> this$1
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.prize.weather.detail.WeatherDetailFragment$2 -> com.prize.weather.detail.WeatherDetailFragment$2:
    com.prize.weather.detail.WeatherDetailFragment this$0 -> this$0
    void run() -> run
com.prize.weather.detail.WeatherDetailFragment$3 -> com.prize.weather.detail.WeatherDetailFragment$3:
    com.prize.weather.detail.WeatherDetailFragment this$0 -> this$0
    com.prize.weather.util.WeatherImageUtils val$mWeatherImageUtils -> val$mWeatherImageUtils
    void onScroll(int) -> onScroll
com.prize.weather.detail.WeatherDetailModel -> com.prize.weather.detail.WeatherDetailModel:
    com.prize.weather.detail.WeatherDetailBean parseData(java.lang.String) -> parseData
    com.prize.weather.detail.WeatherDetailBean getCacheWithSQLite(android.content.Context,java.lang.String,boolean) -> getCacheWithSQLite
    boolean saveDataToSQLite(android.content.Context,com.prize.weather.framework.model.WeatherDBCache) -> saveDataToSQLite
    com.prize.weather.detail.WeatherDetailBean obtainWeatherDataByCityID(int,boolean) -> obtainWeatherDataByCityID
    com.prize.weather.detail.WeatherDetailBean obtainWeatherDataByCityName(java.lang.String,boolean) -> obtainWeatherDataByCityName
com.prize.weather.detail.WeatherDetailPresenter -> com.prize.weather.detail.WeatherDetailPresenter:
    com.prize.weather.framework.model.WeatherDBCache weatherDBCache -> weatherDBCache
    void obtainWeatherData() -> obtainWeatherData
    void obtainCacheData() -> obtainCacheData
    void saveDataToSQLite(com.prize.weather.framework.model.WeatherDBCache) -> saveDataToSQLite
    com.prize.weather.detail.WeatherDetailBean doInBackground() -> doInBackground
    void updateView(com.prize.weather.detail.WeatherDetailBean) -> updateView
    void updateView(java.lang.Object) -> updateView
    java.lang.Object doInBackground() -> doInBackground
com.prize.weather.detail.WeatherFuture7DayBean -> com.prize.weather.detail.WeatherFuture7DayBean:
    java.lang.String CITY_STATE -> CITY_STATE
    java.lang.String DATELINE -> DATELINE
    java.lang.String DAY_WEATHER -> DAY_WEATHER
    java.lang.String DAYWIND_POWER -> DAYWIND_POWER
    java.lang.String DAY_TEMPERATURE -> DAY_TEMPERATURE
    java.lang.String NIGHT_TEMPERATURE -> NIGHT_TEMPERATURE
    java.lang.String[] forecastProjection -> forecastProjection
    java.lang.String date -> date
    java.lang.String day -> day
    java.lang.String text -> text
    java.lang.String code -> code
    java.lang.String high -> high
    java.lang.String low -> low
    java.lang.String wind -> wind
    java.lang.String getDate() -> getDate
    void setDate(java.lang.String) -> setDate
    java.lang.String getDay() -> getDay
    void setDay(java.lang.String) -> setDay
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
    java.lang.String getCode() -> getCode
    void setCode(java.lang.String) -> setCode
    java.lang.String getHigh() -> getHigh
    void setHigh(java.lang.String) -> setHigh
    java.lang.String getLow() -> getLow
    void setLow(java.lang.String) -> setLow
    java.lang.String getWind() -> getWind
    void setWind(java.lang.String) -> setWind
com.prize.weather.detail.WeatherFutureBean -> com.prize.weather.detail.WeatherFutureBean:
    java.lang.String date -> date
    java.lang.String day -> day
    java.lang.String text -> text
    java.lang.String code -> code
    java.lang.String high -> high
    java.lang.String low -> low
    java.lang.String wind -> wind
    java.lang.String getDate() -> getDate
    void setDate(java.lang.String) -> setDate
    java.lang.String getDay() -> getDay
    void setDay(java.lang.String) -> setDay
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
    java.lang.String getCode() -> getCode
    void setCode(java.lang.String) -> setCode
    java.lang.String getHigh() -> getHigh
    void setHigh(java.lang.String) -> setHigh
    java.lang.String getLow() -> getLow
    void setLow(java.lang.String) -> setLow
    java.lang.String getWind() -> getWind
    void setWind(java.lang.String) -> setWind
com.prize.weather.detail.WeatherFutureListItemAdapter -> com.prize.weather.detail.WeatherFutureListItemAdapter:
    com.prize.weather.detail.WeatherFutureListItemAdapter$ViewHolder holder -> holder
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.prize.weather.detail.WeatherFutureListItemAdapter$ViewHolder -> com.prize.weather.detail.WeatherFutureListItemAdapter$ViewHolder:
    android.widget.TextView future_date -> future_date
    android.widget.TextView future_day -> future_day
    android.widget.ImageView future_icon -> future_icon
    android.widget.TextView future_temp -> future_temp
    android.widget.ImageView future_select -> future_select
com.prize.weather.detail.WeatherHourlyBean -> com.prize.weather.detail.WeatherHourlyBean:
    java.lang.String time -> time
    java.lang.String text -> text
    java.lang.String code -> code
    java.lang.String temperature -> temperature
    java.lang.String getTime() -> getTime
    void setTime(java.lang.String) -> setTime
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
    java.lang.String getCode() -> getCode
    void setCode(java.lang.String) -> setCode
    java.lang.String getTemperature() -> getTemperature
    void setTemperature(java.lang.String) -> setTemperature
com.prize.weather.detail.WeatherNowAirQualityBean -> com.prize.weather.detail.WeatherNowAirQualityBean:
    com.prize.weather.detail.WeatherNowAirQualityCityBean city -> city
    com.prize.weather.detail.WeatherNowAirQualityCityBean getCity() -> getCity
    void setCity(com.prize.weather.detail.WeatherNowAirQualityCityBean) -> setCity
com.prize.weather.detail.WeatherNowAirQualityCityBean -> com.prize.weather.detail.WeatherNowAirQualityCityBean:
    java.lang.String aqi -> aqi
    java.lang.String pm25 -> pm25
    java.lang.String quality -> quality
    java.lang.String last_update -> last_update
    java.lang.String getAqi() -> getAqi
    void setAqi(java.lang.String) -> setAqi
    java.lang.String getPm25() -> getPm25
    void setPm25(java.lang.String) -> setPm25
    java.lang.String getQuality() -> getQuality
    void setQuality(java.lang.String) -> setQuality
    java.lang.String getLast_update() -> getLast_update
    void setLast_update(java.lang.String) -> setLast_update
com.prize.weather.detail.WeatherNowAlarmsBean -> com.prize.weather.detail.WeatherNowAlarmsBean:
    java.lang.String title -> title
    java.lang.String type -> type
    java.lang.String level -> level
    java.lang.String status -> status
    java.lang.String description -> description
    java.lang.String pubdate -> pubdate
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getType() -> getType
    void setType(java.lang.String) -> setType
    java.lang.String getLevel() -> getLevel
    void setLevel(java.lang.String) -> setLevel
    java.lang.String getStatus() -> getStatus
    void setStatus(java.lang.String) -> setStatus
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.String getPubdate() -> getPubdate
    void setPubdate(java.lang.String) -> setPubdate
com.prize.weather.detail.WeatherNowBean -> com.prize.weather.detail.WeatherNowBean:
    java.lang.String text -> text
    java.lang.String code -> code
    java.lang.String temperature -> temperature
    java.lang.String wind_direction -> wind_direction
    java.lang.String wind_speed -> wind_speed
    java.lang.String humidity -> humidity
    com.prize.weather.detail.WeatherNowAirQualityBean air_quality -> air_quality
    java.util.List alarms -> alarms
    java.lang.String now_high -> now_high
    java.lang.String now_low -> now_low
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
    java.lang.String getCode() -> getCode
    void setCode(java.lang.String) -> setCode
    java.lang.String getTemperature() -> getTemperature
    void setTemperature(java.lang.String) -> setTemperature
    java.lang.String getWind_direction() -> getWind_direction
    void setWind_direction(java.lang.String) -> setWind_direction
    java.lang.String getWind_speed() -> getWind_speed
    void setWind_speed(java.lang.String) -> setWind_speed
    java.lang.String getHumidity() -> getHumidity
    void setHumidity(java.lang.String) -> setHumidity
    com.prize.weather.detail.WeatherNowAirQualityBean getAir_quality() -> getAir_quality
    void setAir_quality(com.prize.weather.detail.WeatherNowAirQualityBean) -> setAir_quality
    java.util.List getAlarms() -> getAlarms
    void setAlarms(java.util.List) -> setAlarms
    java.lang.String getNow_high() -> getNow_high
    void setNow_high(java.lang.String) -> setNow_high
    java.lang.String getNow_low() -> getNow_low
    void setNow_low(java.lang.String) -> setNow_low
com.prize.weather.detail.WeatherTodayBean -> com.prize.weather.detail.WeatherTodayBean:
    java.lang.String sunrise -> sunrise
    java.lang.String sunset -> sunset
    com.prize.weather.detail.WeatherTodaySuggestionBean suggestion -> suggestion
    java.lang.String getSunrise() -> getSunrise
    void setSunrise(java.lang.String) -> setSunrise
    java.lang.String getSunset() -> getSunset
    void setSunset(java.lang.String) -> setSunset
    com.prize.weather.detail.WeatherTodaySuggestionBean getSuggestion() -> getSuggestion
    void setSuggestion(com.prize.weather.detail.WeatherTodaySuggestionBean) -> setSuggestion
com.prize.weather.detail.WeatherTodaySuggestionBean -> com.prize.weather.detail.WeatherTodaySuggestionBean:
    com.prize.weather.detail.WeatherTodaySuggestionDetailBean dressing -> dressing
    com.prize.weather.detail.WeatherTodaySuggestionDetailBean travel -> travel
    com.prize.weather.detail.WeatherTodaySuggestionDetailBean car_washing -> car_washing
    com.prize.weather.detail.WeatherTodaySuggestionDetailBean flu -> flu
    com.prize.weather.detail.WeatherTodaySuggestionDetailBean uv -> uv
    com.prize.weather.detail.WeatherTodaySuggestionDetailBean shopping -> shopping
    com.prize.weather.detail.WeatherTodaySuggestionDetailBean traffic -> traffic
    com.prize.weather.detail.WeatherTodaySuggestionDetailBean morning -> morning
    com.prize.weather.detail.WeatherTodaySuggestionDetailBean air -> air
    com.prize.weather.detail.WeatherTodaySuggestionDetailBean getDressing() -> getDressing
    void setDressing(com.prize.weather.detail.WeatherTodaySuggestionDetailBean) -> setDressing
    com.prize.weather.detail.WeatherTodaySuggestionDetailBean getTravel() -> getTravel
    void setTravel(com.prize.weather.detail.WeatherTodaySuggestionDetailBean) -> setTravel
    com.prize.weather.detail.WeatherTodaySuggestionDetailBean getCar_washing() -> getCar_washing
    void setCar_washing(com.prize.weather.detail.WeatherTodaySuggestionDetailBean) -> setCar_washing
    com.prize.weather.detail.WeatherTodaySuggestionDetailBean getFlu() -> getFlu
    void setFlu(com.prize.weather.detail.WeatherTodaySuggestionDetailBean) -> setFlu
    com.prize.weather.detail.WeatherTodaySuggestionDetailBean getUv() -> getUv
    void setUv(com.prize.weather.detail.WeatherTodaySuggestionDetailBean) -> setUv
    com.prize.weather.detail.WeatherTodaySuggestionDetailBean getShopping() -> getShopping
    void setShopping(com.prize.weather.detail.WeatherTodaySuggestionDetailBean) -> setShopping
    com.prize.weather.detail.WeatherTodaySuggestionDetailBean getTraffic() -> getTraffic
    void setTraffic(com.prize.weather.detail.WeatherTodaySuggestionDetailBean) -> setTraffic
    com.prize.weather.detail.WeatherTodaySuggestionDetailBean getMorning() -> getMorning
    void setMorning(com.prize.weather.detail.WeatherTodaySuggestionDetailBean) -> setMorning
    com.prize.weather.detail.WeatherTodaySuggestionDetailBean getAir() -> getAir
    void setAir(com.prize.weather.detail.WeatherTodaySuggestionDetailBean) -> setAir
com.prize.weather.detail.WeatherTodaySuggestionDetailBean -> com.prize.weather.detail.WeatherTodaySuggestionDetailBean:
    java.lang.String brief -> brief
    java.lang.String details -> details
    java.lang.String getBrief() -> getBrief
    void setBrief(java.lang.String) -> setBrief
    java.lang.String getDetails() -> getDetails
    void setDetails(java.lang.String) -> setDetails
com.prize.weather.framework.BaseActivity -> com.prize.weather.framework.BaseActivity:
    android.view.LayoutInflater mLayoutInflater -> c
    android.content.res.Resources mResources -> d
    android.view.WindowManager mWindowManager -> e
    int mScreenWidth -> f
    int mScreenHeight -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onBDLocationFinishedListener() -> i
    void initInfo() -> e
    void initView() -> f
    void initData() -> g
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
com.prize.weather.framework.BaseFragment -> com.prize.weather.framework.a:
    android.view.View mView -> mView
    com.prize.weather.framework.mvp.presenter.BasePresenter mPresenter -> mPresenter
    android.app.Activity mActivity -> mActivity
    void onCreate(android.os.Bundle) -> onCreate
    android.content.Context getContext() -> getContext
    void handleException(java.lang.Exception) -> handleException
    void handleJsonExcetpion(com.alibaba.fastjson.JSONException) -> handleJsonExcetpion
    void showWarningMessage(java.lang.String) -> showWarningMessage
com.prize.weather.framework.BaseService -> com.prize.weather.framework.BaseService:
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void initLocation() -> a
com.prize.weather.framework.FrameApplication -> com.prize.weather.framework.FrameApplication:
    com.prize.weather.framework.FrameApplication appInstance -> b
    android.content.SharedPreferences mSharedPreferences -> c
    android.content.SharedPreferences$Editor mSPEdit -> d
    com.baidu.location.LocationClient mLocationClient -> a
    com.prize.weather.framework.IBDLocationFinishedListener mIBDLocationFinishedListener -> e
    com.baidu.location.BDLocationListener mBDLocationListener -> f
    com.prize.weather.framework.FrameApplication getInstance() -> a
    android.content.SharedPreferences getSharedPreferences() -> b
    android.content.SharedPreferences$Editor getSPEdit() -> c
    void setmIBDLocationFinishedListener(com.prize.weather.framework.IBDLocationFinishedListener) -> a
    void onCreate() -> onCreate
    void initBDLocation() -> f
    void stopBDLocation() -> d
    void setLocationOption() -> e
    android.content.SharedPreferences access$0(com.prize.weather.framework.FrameApplication) -> a
    android.content.SharedPreferences$Editor access$1(com.prize.weather.framework.FrameApplication) -> b
    com.prize.weather.framework.IBDLocationFinishedListener access$2(com.prize.weather.framework.FrameApplication) -> c
com.prize.weather.framework.FrameApplication$1 -> com.prize.weather.framework.b:
    com.prize.weather.framework.FrameApplication this$0 -> a
    void onReceivePoi(com.baidu.location.BDLocation) -> onReceivePoi
    void onReceiveLocation(com.baidu.location.BDLocation) -> onReceiveLocation
com.prize.weather.framework.IBDLocationFinishedListener -> com.prize.weather.framework.c:
    void onBDLocationFinishedListener() -> i
com.prize.weather.framework.MyBaseAdapter -> com.prize.weather.framework.d:
    android.view.LayoutInflater layoutInflater -> layoutInflater
    java.util.List list -> list
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.prize.weather.framework.SysAppList -> com.prize.weather.framework.e:
    java.util.List mList -> a
    com.prize.weather.framework.SysAppList instance -> b
    com.prize.weather.framework.SysAppList getInstance() -> a
    void addActivity(android.app.Activity) -> a
    void exit() -> b
com.prize.weather.framework.db.WeatherCacheDataBaseDao -> com.prize.weather.framework.a.a:
    android.content.Context mContext -> a
    com.j256.ormlite.dao.Dao dao -> b
    void initDao() -> a
    int create(com.prize.weather.framework.model.WeatherDBCache) -> a
    java.util.List queryByLike(java.lang.String) -> a
    int update(com.prize.weather.framework.model.WeatherDBCache) -> b
com.prize.weather.framework.db.WeatherCacheDataBaseHelper -> com.prize.weather.framework.a.b:
    com.prize.weather.framework.db.WeatherCacheDataBaseHelper mWeatherCacheDataBaseHelper -> a
    com.prize.weather.framework.db.WeatherCacheDataBaseHelper getInstance(android.content.Context) -> a
    void onCreate(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,com.j256.ormlite.support.ConnectionSource,int,int) -> onUpgrade
com.prize.weather.framework.http.HttpBus -> com.prize.weather.framework.http.a:
    java.lang.String TAG -> a
    com.prize.weather.framework.http.HttpBus instance -> b
    org.apache.http.impl.client.DefaultHttpClient mHttpClient -> c
    org.apache.http.client.methods.HttpPost mHttpPost -> d
    org.apache.http.client.methods.HttpGet mHttpGet -> e
    org.apache.http.client.CookieStore mCookieStore -> f
    com.prize.weather.framework.http.INetworkExcetpionHandler mINetworkExcetpionHandler -> g
    void setNetWorkExcetpionHandler(com.prize.weather.framework.http.INetworkExcetpionHandler) -> a
    com.prize.weather.framework.http.HttpBus getInstance() -> a
    void abort() -> b
    org.apache.http.HttpResponse hreGet(java.lang.String) -> b
    java.lang.String strGet(java.lang.String) -> a
com.prize.weather.framework.http.HttpConnection -> com.prize.weather.framework.http.b:
    com.prize.weather.framework.http.HttpConnectionConfig mConfig -> a
    com.prize.weather.framework.http.HttpBus mHttpBus -> b
    java.lang.String mResultData -> c
    com.prize.weather.framework.http.INetworkExcetpionHandler mINetworkExcetpionHandler -> d
    com.prize.weather.framework.http.HttpConnection obtainConnection() -> a
    void setFullURL(java.lang.String) -> a
    void setINetworkExcetpionHandler(com.prize.weather.framework.http.INetworkExcetpionHandler) -> a
    void resetConnection() -> b
    void abort() -> c
    java.lang.String doGet() -> d
com.prize.weather.framework.http.HttpConnectionConfig -> com.prize.weather.framework.http.c:
    java.lang.String mFullURL -> a
    java.lang.String mMethod -> b
    boolean isEncryptData -> c
    boolean isCompressData -> d
    java.lang.String getFullURL() -> a
    void setFullURL(java.lang.String) -> a
    void setMethod$552c4e01() -> b
com.prize.weather.framework.http.IJsonParseExceptionHandler -> com.prize.weather.framework.http.d:
    void handleParseException(com.alibaba.fastjson.JSONException) -> handleParseException
com.prize.weather.framework.http.INetworkExcetpionHandler -> com.prize.weather.framework.http.e:
    void handleNetworkException(java.lang.Exception,java.lang.String) -> handleNetworkException
com.prize.weather.framework.http.NetworkException -> com.prize.weather.framework.http.NetworkException:
    long serialVersionUID -> serialVersionUID
    com.prize.weather.framework.http.NetworkException$ExceptionType exceptionType -> a
    com.prize.weather.framework.http.NetworkException$ExceptionType getExceptionType() -> getExceptionType
com.prize.weather.framework.http.NetworkException$ExceptionType -> com.prize.weather.framework.http.NetworkException$ExceptionType:
    com.prize.weather.framework.http.NetworkException$ExceptionType NetworkNotActivie -> NetworkNotActivie
    com.prize.weather.framework.http.NetworkException$ExceptionType NetworkTooSlow -> NetworkTooSlow
    com.prize.weather.framework.http.NetworkException$ExceptionType[] ENUM$VALUES -> a
    com.prize.weather.framework.http.NetworkException$ExceptionType[] values() -> values
    com.prize.weather.framework.http.NetworkException$ExceptionType valueOf(java.lang.String) -> valueOf
com.prize.weather.framework.model.WeatherDBCache -> com.prize.weather.framework.b.a:
    int id -> a
    java.lang.String created_date -> b
    java.lang.String city_code -> c
    java.lang.String city_name -> d
    java.lang.String weather_code -> e
    java.lang.String weather_text -> f
    java.lang.String weather_temperature -> g
    java.lang.String weather_data -> h
    boolean is_complete -> i
    int getId() -> a
    void setId(int) -> a
    java.lang.String getCreated_date() -> b
    void setCreated_date(java.lang.String) -> a
    void setCity_code(java.lang.String) -> b
    java.lang.String getCity_name() -> c
    void setCity_name(java.lang.String) -> c
    java.lang.String getWeather_code() -> d
    void setWeather_code(java.lang.String) -> d
    java.lang.String getWeather_text() -> e
    void setWeather_text(java.lang.String) -> e
    java.lang.String getWeather_temperature() -> f
    void setWeather_temperature(java.lang.String) -> f
    java.lang.String getWeather_data() -> g
    void setWeather_data(java.lang.String) -> g
    boolean isIs_complete() -> h
    void setIs_complete(boolean) -> a
com.prize.weather.framework.mvp.model.BaseModel -> com.prize.weather.framework.c.a.a:
    com.prize.weather.framework.http.HttpConnection mHttpConnection -> mHttpConnection
    com.prize.weather.framework.http.IJsonParseExceptionHandler mIJsonParseExceptionHandler -> mIJsonParseExceptionHandler
    void abortRequest() -> abortRequest
    void cancelRequest() -> cancelRequest
    boolean canConnectToHttpServer() -> canConnectToHttpServer
    void handleJsonParseException(com.alibaba.fastjson.JSONException) -> handleJsonParseException
com.prize.weather.framework.mvp.presenter.BasePresenter -> com.prize.weather.framework.c.b.a:
    int TO_HANDLE_HTTP_EXCEPTION -> TO_HANDLE_HTTP_EXCEPTION
    int TO_HANDLE_JSONPARSE_EXCEPTION -> TO_HANDLE_JSONPARSE_EXCEPTION
    int TO_CANCEL -> TO_CANCEL
    int TO_SHOW_PROGRESSDIALOG -> TO_SHOW_PROGRESSDIALOG
    int TO_START_BACKGROUND_TASK -> TO_START_BACKGROUND_TASK
    int BACKGROUND_SUCCESS -> BACKGROUND_SUCCESS
    int BACKGROUND_FAIL -> BACKGROUND_FAIL
    com.prize.weather.framework.mvp.view.IView mView -> mView
    com.prize.weather.framework.mvp.model.BaseModel mModel -> mModel
    java.lang.Object mBackgroundResult -> mBackgroundResult
    android.os.HandlerThread mHandlerThread -> mHandlerThread
    android.os.Handler mBackgroundHandler -> mBackgroundHandler
    android.os.Handler mViewHanlder -> mViewHanlder
    boolean isHttpRequest -> isHttpRequest
    boolean isCancelUpdateViewTask -> isCancelUpdateViewTask
    boolean isTimeOutExceptionHappened -> isTimeOutExceptionHappened
    boolean isHttpRefusedError -> isHttpRefusedError
    boolean isHttpRequest() -> isHttpRequest
    void setHttpRequest(boolean) -> setHttpRequest
    void exeuteMultiTasks() -> exeuteMultiTasks
    void initMultiTasks() -> initMultiTasks
    void shutdownBackgroundThread() -> shutdownBackgroundThread
    void closeUpdateViewStatus() -> closeUpdateViewStatus
    void reset() -> reset
    void handleMsgInBackgroundThread(android.os.Message) -> handleMsgInBackgroundThread
    void customProcessMsgInBackgroundThread(android.os.Message) -> customProcessMsgInBackgroundThread
    boolean processCommonMsgInBackgroundThread(android.os.Message) -> processCommonMsgInBackgroundThread
    void executeBackgroundTask(android.os.Message) -> executeBackgroundTask
    void handleMsgInMainThread(android.os.Message) -> handleMsgInMainThread
    void customProcessMsgInMainThread(android.os.Message) -> customProcessMsgInMainThread
    boolean processCommonMsgInMainThread(android.os.Message) -> processCommonMsgInMainThread
    void onCancel() -> onCancel
    void handleParseException(com.alibaba.fastjson.JSONException) -> handleParseException
    void handleNetworkException(java.lang.Exception,java.lang.String) -> handleNetworkException
    void access$0(com.prize.weather.framework.mvp.presenter.BasePresenter) -> access$0
    void access$1(com.prize.weather.framework.mvp.presenter.BasePresenter,android.os.Message) -> access$1
    void access$2(com.prize.weather.framework.mvp.presenter.BasePresenter,android.os.Message) -> access$2
com.prize.weather.framework.mvp.presenter.BasePresenter$1 -> com.prize.weather.framework.c.b.b:
    com.prize.weather.framework.mvp.presenter.BasePresenter this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.prize.weather.framework.mvp.presenter.BasePresenter$2 -> com.prize.weather.framework.c.b.c:
    com.prize.weather.framework.mvp.presenter.BasePresenter this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.prize.weather.framework.mvp.presenter.IUpdate -> com.prize.weather.framework.c.b.d:
    java.lang.Object doInBackground() -> doInBackground
    void updateView(java.lang.Object) -> updateView
com.prize.weather.framework.mvp.view.IView -> com.prize.weather.framework.c.c.a:
    android.content.Context getContext() -> getContext
    void handleException(java.lang.Exception) -> handleException
    void handleJsonExcetpion(com.alibaba.fastjson.JSONException) -> handleJsonExcetpion
    void updateView(java.lang.Object) -> updateView
    void showNodataView(boolean) -> showNodataView
com.prize.weather.framework.mvp.view.IViewUpdateStatusListener -> com.prize.weather.framework.c.c.b:
    void openUpdateStatus() -> openUpdateStatus
    void closeUpdateStatus() -> closeUpdateStatus
com.prize.weather.menu.ICityDeleteListener -> com.prize.weather.menu.a:
    boolean onCityDeleteListener$134632() -> j
com.prize.weather.menu.MenuCityListAdapter -> com.prize.weather.menu.b:
    android.content.Context mContext -> b
    java.util.ArrayList cityNameList -> c
    java.util.ArrayList cityFlagList -> d
    java.util.ArrayList cityCodeList -> e
    boolean isEdit -> a
    boolean isDeleting -> f
    com.prize.weather.menu.ICityDeleteListener mICityDeleteListener -> g
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void getCityNames() -> a
    boolean access$0() -> b
    void access$1(boolean) -> a
    android.content.Context access$2(com.prize.weather.menu.MenuCityListAdapter) -> a
    java.util.ArrayList access$3(com.prize.weather.menu.MenuCityListAdapter) -> b
    java.util.ArrayList access$4(com.prize.weather.menu.MenuCityListAdapter) -> c
    java.util.ArrayList access$5(com.prize.weather.menu.MenuCityListAdapter) -> d
    com.prize.weather.menu.ICityDeleteListener access$6(com.prize.weather.menu.MenuCityListAdapter) -> e
com.prize.weather.menu.MenuCityListAdapter$1 -> com.prize.weather.menu.c:
    com.prize.weather.menu.MenuCityListAdapter this$0 -> a
    android.widget.Button val$deleteCity -> b
    int val$position -> c
    void onClick(android.view.View) -> onClick
com.prize.weather.menu.MenuFragment -> com.prize.weather.menu.MenuFragment:
    android.widget.ListView cityList -> a
    com.prize.weather.menu.MenuCityListAdapter cityAdapter -> b
    android.widget.RelativeLayout notiTimeLayout -> c
    android.widget.ImageButton cityAddBt -> d
    android.widget.ImageButton cityEditBt -> e
    java.util.ArrayList cityFlagList -> f
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void openUpdateStatus() -> openUpdateStatus
    void closeUpdateStatus() -> closeUpdateStatus
    void onResume() -> onResume
    void updateView(java.lang.Object) -> updateView
    void refreshMenuFragment() -> a
    void onClick(android.view.View) -> onClick
    void showNodataView(boolean) -> showNodataView
    android.app.Activity access$0(com.prize.weather.menu.MenuFragment) -> a
    com.prize.weather.menu.MenuCityListAdapter access$1(com.prize.weather.menu.MenuFragment) -> b
    android.widget.ImageButton access$2(com.prize.weather.menu.MenuFragment) -> c
    android.widget.ImageButton access$3(com.prize.weather.menu.MenuFragment) -> d
    java.util.ArrayList access$4(com.prize.weather.menu.MenuFragment) -> e
com.prize.weather.menu.MenuFragment$1 -> com.prize.weather.menu.d:
    com.prize.weather.menu.MenuFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.weather.menu.MenuFragment$2 -> com.prize.weather.menu.e:
    com.prize.weather.menu.MenuFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.prize.weather.menu.MenuFragment$3 -> com.prize.weather.menu.f:
    com.prize.weather.menu.MenuFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.prize.weather.menu.WeatherMenuActivity -> com.prize.weather.menu.WeatherMenuActivity:
    void initInfo() -> e
    void initView() -> f
    void initData() -> g
    void onBDLocationFinishedListener() -> i
    void onBackPressed() -> onBackPressed
    android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
com.prize.weather.service.LocationSvc -> com.prize.weather.service.LocationSvc:
    android.location.LocationManager locationManager -> b
    android.location.Location location -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onStart(android.content.Intent,int) -> onStart
    boolean stopService(android.content.Intent) -> stopService
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
com.prize.weather.util.CalendarUtils -> com.prize.weather.b.a:
    boolean isDayTime() -> a
    java.util.Date formatDate(java.lang.String) -> a
com.prize.weather.util.CityUtil -> com.prize.weather.b.b:
    com.prize.weather.db.DBManager db -> f
    java.lang.Thread thread -> g
    java.lang.String[] names -> a
    java.lang.Integer[] codes -> b
    java.util.List SourceDateList -> c
    com.prize.weather.city.SortModel[][] fs -> d
    android.os.Handler mHandler -> e
    java.lang.Runnable r -> h
    void getAllCity(android.content.Context) -> a
    com.prize.weather.db.DBManager access$0() -> a
    java.util.List access$1(java.lang.String[],java.lang.Integer[],com.prize.weather.city.CharacterParser) -> a
    com.prize.weather.city.SortModel[][] access$2(java.util.List,com.prize.weather.city.CharacterParser) -> a
com.prize.weather.util.CityUtil$1 -> com.prize.weather.b.c:
    void handleMessage(android.os.Message) -> handleMessage
com.prize.weather.util.CityUtil$2 -> com.prize.weather.b.d:
    void run() -> run
com.prize.weather.util.DeviceUtils -> com.prize.weather.b.e:
    int getStatusBarHeight(android.content.Context) -> a
com.prize.weather.util.MathUtils -> com.prize.weather.b.f:
    boolean isNumeric(java.lang.String) -> a
com.prize.weather.util.NetworkUtils -> com.prize.weather.b.g:
    boolean isNetWorkActive() -> a
com.prize.weather.util.OptimizeImage -> com.prize.weather.b.h:
    android.support.v4.util.LruCache mMemoryCache -> a
    com.prize.weather.util.OptimizeImage optimizeImage -> b
    void initLruCache() -> a
    com.prize.weather.util.OptimizeImage initializeInstance() -> b
com.prize.weather.util.OptimizeImage$1 -> com.prize.weather.b.i:
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.prize.weather.util.WeatherImageUtils -> com.prize.weather.b.j:
    com.prize.weather.util.WeatherImageUtils mWeatherImageUtils -> a
    com.prize.weather.util.OptimizeImage mOptimizeImage -> b
    com.prize.weather.view.MovingPictureView move_haze_cloud -> e
    com.prize.weather.view.MovingPictureView move_sandstorm1 -> f
    com.prize.weather.view.MovingPictureView move_sandstorm2 -> g
    com.prize.weather.view.MovingPictureView move_sandstorm3 -> h
    com.prize.weather.view.MovingPictureView move_sandstorm_sha -> i
    com.prize.weather.view.MovingPictureView move_sandcloud1 -> j
    com.prize.weather.view.MovingPictureView move_sandcloud3 -> k
    com.prize.weather.view.MovingPictureView move_sandcloud_sha -> l
    com.prize.weather.view.MovingPictureView move_sun1 -> m
    com.prize.weather.view.MovingPictureView move_star_1 -> n
    com.prize.weather.view.MovingPictureView move_star_2 -> o
    com.prize.weather.view.MovingPictureView move_sun_night -> p
    android.view.animation.Animation animation -> q
    android.view.animation.Animation animation2 -> r
    android.view.animation.Animation animation3 -> s
    android.view.animation.Animation anim -> t
    com.prize.weather.view.MovingPictureView move_cloudy1 -> u
    com.prize.weather.view.MovingPictureView move_cloudy2 -> v
    com.prize.weather.view.MovingPictureView move_cloudy3 -> w
    com.prize.weather.view.MovingPictureView move_cloudy4 -> x
    com.prize.weather.view.MovingPictureView move_cloudy_night_1 -> y
    com.prize.weather.view.MovingPictureView move_cloudy_night_2 -> z
    com.prize.weather.view.MovingPictureView move_cloudy_night_3 -> A
    com.prize.weather.view.MovingPictureView move_cloudy_night_4 -> B
    com.prize.weather.view.MovingPictureView move_yin1 -> C
    com.prize.weather.view.MovingPictureView move_yin2 -> D
    com.prize.weather.view.MovingPictureView move_yin3 -> E
    com.prize.weather.view.MovingPictureView move_yin4 -> F
    com.prize.weather.view.MovingPictureView move_yin5 -> G
    com.prize.weather.view.MovingPictureView move_fog1 -> H
    com.prize.weather.view.MovingPictureView move_fog2 -> I
    com.prize.weather.view.SnowView move_snow1 -> J
    com.prize.weather.view.SnowView move_snow2 -> K
    com.prize.weather.view.SnowView move_snow3 -> L
    com.prize.weather.view.SnowView move_snow4 -> M
    com.prize.weather.view.SnowView move_rain1 -> N
    com.prize.weather.view.SnowView move_rain2 -> O
    com.prize.weather.view.SnowView move_rain3 -> P
    com.prize.weather.view.SnowView move_snow5 -> Q
    com.prize.weather.view.MovingPictureView move_thunder_cloud1 -> R
    com.prize.weather.view.MovingPictureView move_thunder_cloud2 -> S
    com.prize.weather.view.MovingPictureView move_thunder1 -> T
    com.prize.weather.view.MovingPictureView move_thunder2 -> U
    com.prize.weather.view.MovingPictureView move_thunder3 -> V
    android.view.animation.Animation animation4 -> W
    android.view.animation.Animation animation5 -> X
    android.animation.ValueAnimator animator -> Y
    android.os.Handler mHandler -> Z
    int width -> c
    int height -> d
    void setTemperatureImage(int,android.widget.ImageView) -> a
    void setWeatherImage(int,android.widget.ImageView,boolean) -> a
    int[] setWeatherImage(int,android.view.View,boolean,int) -> a
    void setDynamicBackground(android.content.Context,android.view.View,int,boolean) -> a
    void move_sandStorm(android.content.Context,android.view.View) -> a
    void move_sandCloud(android.content.Context,android.view.View) -> b
    void move_snow$5605e244(android.content.Context,android.view.View,int,int) -> a
    void move_rain(android.content.Context,android.view.View,int,int,int) -> a
    void move_thunder_rain$5605e244(android.content.Context,android.view.View,int) -> a
    void OnMoveStop(int) -> a
    void OnMoveRestart(int) -> b
    com.prize.weather.view.MovingPictureView access$0() -> a
    com.prize.weather.view.MovingPictureView access$1() -> b
    com.prize.weather.view.MovingPictureView access$2() -> c
    void access$3$43f026ec(com.prize.weather.view.MovingPictureView,com.prize.weather.view.MovingPictureView,com.prize.weather.view.MovingPictureView) -> a
    android.os.Handler access$4() -> d
com.prize.weather.util.WeatherImageUtils$1 -> com.prize.weather.b.k:
    void handleMessage(android.os.Message) -> handleMessage
com.prize.weather.util.WeatherImageUtils$2 -> com.prize.weather.b.l:
    void onPrepared(android.media.MediaPlayer) -> onPrepared
com.prize.weather.util.WeatherImageUtils$3 -> com.prize.weather.b.m:
    com.prize.weather.view.MovingPictureView val$view1 -> a
    com.prize.weather.view.MovingPictureView val$view2 -> b
    com.prize.weather.view.MovingPictureView val$view3 -> c
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.prize.weather.view.BlurScrollView -> com.prize.weather.view.BlurScrollView:
    com.prize.weather.view.BlurScrollView$OnScrollListener onScrollListener -> a
    void scrollTo(int,int) -> scrollTo
    void setOnScrollListener(com.prize.weather.view.BlurScrollView$OnScrollListener) -> setOnScrollListener
    void onScrollChanged(int,int,int,int) -> onScrollChanged
com.prize.weather.view.BlurScrollView$OnScrollListener -> com.prize.weather.view.a:
    void onScroll(int) -> onScroll
com.prize.weather.view.ClearEditText -> com.prize.weather.view.ClearEditText:
    android.graphics.drawable.Drawable mClearDrawable -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onFocusChange(android.view.View,boolean) -> onFocusChange
    void setClearIconVisible(boolean) -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void setShakeAnimation() -> setShakeAnimation
com.prize.weather.view.DialChartView -> com.prize.weather.view.DialChartView:
    java.lang.String TAG -> a
    org.xclcharts.chart.DialChart chart -> b
    int mMaxLabel -> c
    int mMinLabel -> d
    int mCurrentLabel -> e
    void setmMaxLabel(int) -> setmMaxLabel
    void setmMinLabel(int) -> setmMinLabel
    void setmCurrentLabel(int) -> setmCurrentLabel
    void initView() -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void addAxis() -> b
    void addAttrInfo() -> c
    void setCurrentStatus(int) -> setCurrentStatus
    void render(android.graphics.Canvas) -> render
com.prize.weather.view.Focusedtrue4TextView -> com.prize.weather.view.Focusedtrue4TextView:
    boolean isFocused() -> isFocused
com.prize.weather.view.HourWeatherLayout -> com.prize.weather.view.HourWeatherLayout:
    android.content.Context mContext -> b
    com.prize.weather.detail.HourWeatherAdapter mHourWeatherAdapter -> a
    void setAdapter(com.prize.weather.detail.HourWeatherAdapter) -> setAdapter
com.prize.weather.view.MovingPictureView -> com.prize.weather.view.MovingPictureView:
    int moveType -> a
    float downXValue -> b
    long downTime -> c
    float lastTouchX -> q
    float lastTouchY -> r
    boolean hasMoved -> s
    android.graphics.Bitmap bitmap -> d
    boolean isRuning -> e
    int left -> f
    int top -> g
    android.os.Handler handler -> h
    com.prize.weather.view.MovingPictureView$MoveHandler movehandler -> i
    int sleepSeconds -> j
    int dx -> k
    int dy -> l
    java.lang.Thread moving -> m
    boolean isstarted -> n
    int sandLeft -> o
    int sandTop -> p
    java.util.Random random -> t
    void move$13462e() -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void run() -> run
com.prize.weather.view.MovingPictureView$MoveHandler -> com.prize.weather.view.b:
    com.prize.weather.view.MovingPictureView this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.prize.weather.view.SnowView -> com.prize.weather.view.SnowView:
    int MAX_SNOW_COUNT -> a
    android.graphics.Bitmap bitmap_snows -> b
    android.graphics.Paint mPaint -> i
    java.util.Random random -> j
    com.prize.weather.view.SnowView$Snow[] snows -> k
    int view_height -> c
    int view_width -> d
    int MAX_SPEED -> e
    android.os.Handler handler -> f
    int sleepSeconds -> g
    int type -> l
    com.prize.weather.view.SnowView$RefreshHandler mRedrawHandler -> m
    java.lang.Thread moving -> h
    void onDraw(android.graphics.Canvas) -> onDraw
    void update() -> a
    void run() -> run
com.prize.weather.view.SnowView$Coordinate -> com.prize.weather.view.c:
    int x -> a
    int y -> b
    com.prize.weather.view.SnowView this$0 -> c
    java.lang.String toString() -> toString
com.prize.weather.view.SnowView$RefreshHandler -> com.prize.weather.view.d:
    com.prize.weather.view.SnowView this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    void sleep(long) -> a
com.prize.weather.view.SnowView$Snow -> com.prize.weather.view.e:
    com.prize.weather.view.SnowView$Coordinate coordinate -> a
    int speed -> b
    com.prize.weather.view.SnowView this$0 -> c
com.prize.weather.widget.IWeatherWidgetView -> com.prize.weather.widget.a:
    boolean isSave() -> a
    java.lang.String getName() -> b
    int getID() -> c
com.prize.weather.widget.WeatherBootReceiver -> com.prize.weather.widget.WeatherBootReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.prize.weather.widget.WeatherWidgetModel -> com.prize.weather.widget.b:
    com.prize.weather.detail.WeatherDetailBean getCacheWithSQLite(android.content.Context,java.lang.String) -> a
    boolean saveDataToSQLite(android.content.Context,com.prize.weather.framework.model.WeatherDBCache) -> saveDataToSQLite
    com.prize.weather.detail.WeatherDetailBean obtainNowWeatherDataByCityID(int) -> a
    com.prize.weather.detail.WeatherDetailBean obtainNowWeatherDataByCityName(java.lang.String) -> a
com.prize.weather.widget.WeatherWidgetPresenter -> com.prize.weather.widget.c:
    com.prize.weather.framework.model.WeatherDBCache weatherDBCache -> a
    void obtainWeatherData() -> a
    void obtainCacheData() -> b
    void saveDataToSQLite(com.prize.weather.framework.model.WeatherDBCache) -> a
    com.prize.weather.framework.model.WeatherDBCache doInBackground() -> c
    void updateView(java.lang.Object) -> updateView
    java.lang.Object doInBackground() -> doInBackground
com.prize.weather.widget.WeatherWidgetProvider_4x2 -> com.prize.weather.widget.WeatherWidgetProvider_4x2:
    android.content.ComponentName THIS_APPWIDGET -> a
    com.prize.weather.widget.WeatherWidgetProvider_4x2 sInstance -> f
    int cityNum -> g
    java.util.ArrayList cityNameList -> b
    java.util.ArrayList cityFlagList -> c
    java.util.ArrayList cityCodeList -> d
    com.prize.weather.widget.WeatherWidgetPresenter mPresenter -> h
    android.content.Context mContext -> i
    java.lang.String keyWord -> j
    int cityCode -> k
    boolean isSave -> l
    android.widget.RemoteViews remontView -> e
    com.prize.weather.widget.WeatherWidgetProvider_4x2 getInstance() -> d
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void onDeleted(android.content.Context,int[]) -> onDeleted
    void onDisabled(android.content.Context) -> onDisabled
    void onEnabled(android.content.Context) -> onEnabled
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void updateViews(android.content.Context) -> a
    void updateCity$1a552341(android.content.Context) -> b
    void defaultView(android.content.Context) -> c
    void notifyChange(com.prize.weather.widget.WidgetService,java.lang.String) -> a
    void pushUpdate$30502c41(android.content.Context) -> d
    void clickListener(android.content.Context) -> e
    void initPresenter() -> e
    android.content.Context getContext() -> getContext
    void handleException(java.lang.Exception) -> handleException
    void handleJsonExcetpion(com.alibaba.fastjson.JSONException) -> handleJsonExcetpion
    void updateView(java.lang.Object) -> updateView
    void openUpdateStatus() -> openUpdateStatus
    void closeUpdateStatus() -> closeUpdateStatus
    void showNodataView(boolean) -> showNodataView
    java.lang.String getName() -> b
    int getID() -> c
    boolean isSave() -> a
com.prize.weather.widget.WidgetService -> com.prize.weather.widget.WidgetService:
    com.prize.weather.widget.WeatherWidgetProvider_4x2 mAppWidgetProvider_4x2 -> a
    android.os.Handler mHandler -> b
    android.content.BroadcastReceiver tickReceiver -> c
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onBDLocationFinishedListener() -> i
    com.prize.weather.widget.WeatherWidgetProvider_4x2 access$0(com.prize.weather.widget.WidgetService) -> a
    android.os.Handler access$1(com.prize.weather.widget.WidgetService) -> b
com.prize.weather.widget.WidgetService$1 -> com.prize.weather.widget.d:
    com.prize.weather.widget.WidgetService this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.prize.weather.widget.WidgetService$2 -> com.prize.weather.widget.e:
    com.prize.weather.widget.WidgetService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.apache.http.ConnectionClosedException -> org.apache.http.ConnectionClosedException:
    long serialVersionUID -> serialVersionUID
org.apache.http.ConnectionReuseStrategy -> org.apache.http.ConnectionReuseStrategy:
    boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> keepAlive
org.apache.http.Consts -> org.apache.http.Consts:
    int CR -> CR
    int LF -> LF
    int SP -> SP
    int HT -> HT
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.nio.charset.Charset ASCII -> ASCII
    java.nio.charset.Charset ISO_8859_1 -> ISO_8859_1
org.apache.http.ContentTooLongException -> org.apache.http.ContentTooLongException:
    long serialVersionUID -> serialVersionUID
org.apache.http.FormattedHeader -> org.apache.http.FormattedHeader:
    org.apache.http.util.CharArrayBuffer getBuffer() -> getBuffer
    int getValuePos() -> getValuePos
org.apache.http.Header -> org.apache.http.Header:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    org.apache.http.HeaderElement[] getElements() -> getElements
org.apache.http.HeaderElement -> org.apache.http.HeaderElement:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    org.apache.http.NameValuePair[] getParameters() -> getParameters
    org.apache.http.NameValuePair getParameterByName(java.lang.String) -> getParameterByName
    int getParameterCount() -> getParameterCount
    org.apache.http.NameValuePair getParameter(int) -> getParameter
org.apache.http.HeaderElementIterator -> org.apache.http.HeaderElementIterator:
    boolean hasNext() -> hasNext
    org.apache.http.HeaderElement nextElement() -> nextElement
org.apache.http.HeaderIterator -> org.apache.http.HeaderIterator:
    boolean hasNext() -> hasNext
    org.apache.http.Header nextHeader() -> nextHeader
org.apache.http.HttpClientConnection -> org.apache.http.HttpClientConnection:
    boolean isResponseAvailable(int) -> isResponseAvailable
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    void flush() -> flush
org.apache.http.HttpConnection -> org.apache.http.HttpConnection:
    void close() -> close
    boolean isOpen() -> isOpen
    boolean isStale() -> isStale
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    void shutdown() -> shutdown
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
org.apache.http.HttpConnectionFactory -> org.apache.http.HttpConnectionFactory:
    org.apache.http.HttpConnection createConnection(java.net.Socket) -> createConnection
org.apache.http.HttpConnectionMetrics -> org.apache.http.HttpConnectionMetrics:
    long getRequestCount() -> getRequestCount
    long getResponseCount() -> getResponseCount
    long getSentBytesCount() -> getSentBytesCount
    long getReceivedBytesCount() -> getReceivedBytesCount
    java.lang.Object getMetric(java.lang.String) -> getMetric
    void reset() -> reset
org.apache.http.HttpEntity -> org.apache.http.HttpEntity:
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
org.apache.http.HttpEntityEnclosingRequest -> org.apache.http.HttpEntityEnclosingRequest:
    boolean expectContinue() -> expectContinue
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    org.apache.http.HttpEntity getEntity() -> getEntity
org.apache.http.HttpException -> org.apache.http.HttpException:
    long serialVersionUID -> serialVersionUID
org.apache.http.HttpHeaders -> org.apache.http.HttpHeaders:
    java.lang.String ACCEPT -> ACCEPT
    java.lang.String ACCEPT_CHARSET -> ACCEPT_CHARSET
    java.lang.String ACCEPT_ENCODING -> ACCEPT_ENCODING
    java.lang.String ACCEPT_LANGUAGE -> ACCEPT_LANGUAGE
    java.lang.String ACCEPT_RANGES -> ACCEPT_RANGES
    java.lang.String AGE -> AGE
    java.lang.String ALLOW -> ALLOW
    java.lang.String AUTHORIZATION -> AUTHORIZATION
    java.lang.String CACHE_CONTROL -> CACHE_CONTROL
    java.lang.String CONNECTION -> CONNECTION
    java.lang.String CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.String CONTENT_LANGUAGE -> CONTENT_LANGUAGE
    java.lang.String CONTENT_LENGTH -> CONTENT_LENGTH
    java.lang.String CONTENT_LOCATION -> CONTENT_LOCATION
    java.lang.String CONTENT_MD5 -> CONTENT_MD5
    java.lang.String CONTENT_RANGE -> CONTENT_RANGE
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String DATE -> DATE
    java.lang.String DAV -> DAV
    java.lang.String DEPTH -> DEPTH
    java.lang.String DESTINATION -> DESTINATION
    java.lang.String ETAG -> ETAG
    java.lang.String EXPECT -> EXPECT
    java.lang.String EXPIRES -> EXPIRES
    java.lang.String FROM -> FROM
    java.lang.String HOST -> HOST
    java.lang.String IF -> IF
    java.lang.String IF_MATCH -> IF_MATCH
    java.lang.String IF_MODIFIED_SINCE -> IF_MODIFIED_SINCE
    java.lang.String IF_NONE_MATCH -> IF_NONE_MATCH
    java.lang.String IF_RANGE -> IF_RANGE
    java.lang.String IF_UNMODIFIED_SINCE -> IF_UNMODIFIED_SINCE
    java.lang.String LAST_MODIFIED -> LAST_MODIFIED
    java.lang.String LOCATION -> LOCATION
    java.lang.String LOCK_TOKEN -> LOCK_TOKEN
    java.lang.String MAX_FORWARDS -> MAX_FORWARDS
    java.lang.String OVERWRITE -> OVERWRITE
    java.lang.String PRAGMA -> PRAGMA
    java.lang.String PROXY_AUTHENTICATE -> PROXY_AUTHENTICATE
    java.lang.String PROXY_AUTHORIZATION -> PROXY_AUTHORIZATION
    java.lang.String RANGE -> RANGE
    java.lang.String REFERER -> REFERER
    java.lang.String RETRY_AFTER -> RETRY_AFTER
    java.lang.String SERVER -> SERVER
    java.lang.String STATUS_URI -> STATUS_URI
    java.lang.String TE -> TE
    java.lang.String TIMEOUT -> TIMEOUT
    java.lang.String TRAILER -> TRAILER
    java.lang.String TRANSFER_ENCODING -> TRANSFER_ENCODING
    java.lang.String UPGRADE -> UPGRADE
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String VARY -> VARY
    java.lang.String VIA -> VIA
    java.lang.String WARNING -> WARNING
    java.lang.String WWW_AUTHENTICATE -> WWW_AUTHENTICATE
org.apache.http.HttpHost -> org.apache.http.HttpHost:
    long serialVersionUID -> serialVersionUID
    java.lang.String DEFAULT_SCHEME_NAME -> DEFAULT_SCHEME_NAME
    java.lang.String hostname -> hostname
    java.lang.String lcHostname -> lcHostname
    int port -> port
    java.lang.String schemeName -> schemeName
    java.net.InetAddress address -> address
    java.lang.String getHostName() -> getHostName
    int getPort() -> getPort
    java.lang.String getSchemeName() -> getSchemeName
    java.net.InetAddress getAddress() -> getAddress
    java.lang.String toURI() -> toURI
    java.lang.String toHostString() -> toHostString
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object clone() -> clone
org.apache.http.HttpInetConnection -> org.apache.http.HttpInetConnection:
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
org.apache.http.HttpMessage -> org.apache.http.HttpMessage:
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    boolean containsHeader(java.lang.String) -> containsHeader
    org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
    org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    void addHeader(org.apache.http.Header) -> addHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setHeader(org.apache.http.Header) -> setHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setHeaders(org.apache.http.Header[]) -> setHeaders
    void removeHeader(org.apache.http.Header) -> removeHeader
    void removeHeaders(java.lang.String) -> removeHeaders
    org.apache.http.HeaderIterator headerIterator() -> headerIterator
    org.apache.http.HeaderIterator headerIterator(java.lang.String) -> headerIterator
    org.apache.http.params.HttpParams getParams() -> getParams
    void setParams(org.apache.http.params.HttpParams) -> setParams
org.apache.http.HttpRequest -> org.apache.http.HttpRequest:
    org.apache.http.RequestLine getRequestLine() -> getRequestLine
org.apache.http.HttpRequestFactory -> org.apache.http.HttpRequestFactory:
    org.apache.http.HttpRequest newHttpRequest(org.apache.http.RequestLine) -> newHttpRequest
    org.apache.http.HttpRequest newHttpRequest(java.lang.String,java.lang.String) -> newHttpRequest
org.apache.http.HttpRequestInterceptor -> org.apache.http.HttpRequestInterceptor:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.HttpResponse -> org.apache.http.HttpResponse:
    org.apache.http.StatusLine getStatusLine() -> getStatusLine
    void setStatusLine(org.apache.http.StatusLine) -> setStatusLine
    void setStatusLine(org.apache.http.ProtocolVersion,int) -> setStatusLine
    void setStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String) -> setStatusLine
    void setStatusCode(int) -> setStatusCode
    void setReasonPhrase(java.lang.String) -> setReasonPhrase
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    java.util.Locale getLocale() -> getLocale
    void setLocale(java.util.Locale) -> setLocale
org.apache.http.HttpResponseFactory -> org.apache.http.HttpResponseFactory:
    org.apache.http.HttpResponse newHttpResponse(org.apache.http.ProtocolVersion,int,org.apache.http.protocol.HttpContext) -> newHttpResponse
    org.apache.http.HttpResponse newHttpResponse(org.apache.http.StatusLine,org.apache.http.protocol.HttpContext) -> newHttpResponse
org.apache.http.HttpResponseInterceptor -> org.apache.http.HttpResponseInterceptor:
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.HttpServerConnection -> org.apache.http.HttpServerConnection:
    org.apache.http.HttpRequest receiveRequestHeader() -> receiveRequestHeader
    void receiveRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> receiveRequestEntity
    void sendResponseHeader(org.apache.http.HttpResponse) -> sendResponseHeader
    void sendResponseEntity(org.apache.http.HttpResponse) -> sendResponseEntity
    void flush() -> flush
org.apache.http.HttpStatus -> org.apache.http.HttpStatus:
    int SC_CONTINUE -> SC_CONTINUE
    int SC_SWITCHING_PROTOCOLS -> SC_SWITCHING_PROTOCOLS
    int SC_PROCESSING -> SC_PROCESSING
    int SC_OK -> SC_OK
    int SC_CREATED -> SC_CREATED
    int SC_ACCEPTED -> SC_ACCEPTED
    int SC_NON_AUTHORITATIVE_INFORMATION -> SC_NON_AUTHORITATIVE_INFORMATION
    int SC_NO_CONTENT -> SC_NO_CONTENT
    int SC_RESET_CONTENT -> SC_RESET_CONTENT
    int SC_PARTIAL_CONTENT -> SC_PARTIAL_CONTENT
    int SC_MULTI_STATUS -> SC_MULTI_STATUS
    int SC_MULTIPLE_CHOICES -> SC_MULTIPLE_CHOICES
    int SC_MOVED_PERMANENTLY -> SC_MOVED_PERMANENTLY
    int SC_MOVED_TEMPORARILY -> SC_MOVED_TEMPORARILY
    int SC_SEE_OTHER -> SC_SEE_OTHER
    int SC_NOT_MODIFIED -> SC_NOT_MODIFIED
    int SC_USE_PROXY -> SC_USE_PROXY
    int SC_TEMPORARY_REDIRECT -> SC_TEMPORARY_REDIRECT
    int SC_BAD_REQUEST -> SC_BAD_REQUEST
    int SC_UNAUTHORIZED -> SC_UNAUTHORIZED
    int SC_PAYMENT_REQUIRED -> SC_PAYMENT_REQUIRED
    int SC_FORBIDDEN -> SC_FORBIDDEN
    int SC_NOT_FOUND -> SC_NOT_FOUND
    int SC_METHOD_NOT_ALLOWED -> SC_METHOD_NOT_ALLOWED
    int SC_NOT_ACCEPTABLE -> SC_NOT_ACCEPTABLE
    int SC_PROXY_AUTHENTICATION_REQUIRED -> SC_PROXY_AUTHENTICATION_REQUIRED
    int SC_REQUEST_TIMEOUT -> SC_REQUEST_TIMEOUT
    int SC_CONFLICT -> SC_CONFLICT
    int SC_GONE -> SC_GONE
    int SC_LENGTH_REQUIRED -> SC_LENGTH_REQUIRED
    int SC_PRECONDITION_FAILED -> SC_PRECONDITION_FAILED
    int SC_REQUEST_TOO_LONG -> SC_REQUEST_TOO_LONG
    int SC_REQUEST_URI_TOO_LONG -> SC_REQUEST_URI_TOO_LONG
    int SC_UNSUPPORTED_MEDIA_TYPE -> SC_UNSUPPORTED_MEDIA_TYPE
    int SC_REQUESTED_RANGE_NOT_SATISFIABLE -> SC_REQUESTED_RANGE_NOT_SATISFIABLE
    int SC_EXPECTATION_FAILED -> SC_EXPECTATION_FAILED
    int SC_INSUFFICIENT_SPACE_ON_RESOURCE -> SC_INSUFFICIENT_SPACE_ON_RESOURCE
    int SC_METHOD_FAILURE -> SC_METHOD_FAILURE
    int SC_UNPROCESSABLE_ENTITY -> SC_UNPROCESSABLE_ENTITY
    int SC_LOCKED -> SC_LOCKED
    int SC_FAILED_DEPENDENCY -> SC_FAILED_DEPENDENCY
    int SC_INTERNAL_SERVER_ERROR -> SC_INTERNAL_SERVER_ERROR
    int SC_NOT_IMPLEMENTED -> SC_NOT_IMPLEMENTED
    int SC_BAD_GATEWAY -> SC_BAD_GATEWAY
    int SC_SERVICE_UNAVAILABLE -> SC_SERVICE_UNAVAILABLE
    int SC_GATEWAY_TIMEOUT -> SC_GATEWAY_TIMEOUT
    int SC_HTTP_VERSION_NOT_SUPPORTED -> SC_HTTP_VERSION_NOT_SUPPORTED
    int SC_INSUFFICIENT_STORAGE -> SC_INSUFFICIENT_STORAGE
org.apache.http.HttpVersion -> org.apache.http.HttpVersion:
    long serialVersionUID -> serialVersionUID
    java.lang.String HTTP -> HTTP
    org.apache.http.HttpVersion HTTP_0_9 -> HTTP_0_9
    org.apache.http.HttpVersion HTTP_1_0 -> HTTP_1_0
    org.apache.http.HttpVersion HTTP_1_1 -> HTTP_1_1
    org.apache.http.ProtocolVersion forVersion(int,int) -> forVersion
org.apache.http.MalformedChunkCodingException -> org.apache.http.MalformedChunkCodingException:
    long serialVersionUID -> serialVersionUID
org.apache.http.MessageConstraintException -> org.apache.http.MessageConstraintException:
    long serialVersionUID -> serialVersionUID
org.apache.http.MethodNotSupportedException -> org.apache.http.MethodNotSupportedException:
    long serialVersionUID -> serialVersionUID
org.apache.http.NameValuePair -> org.apache.http.NameValuePair:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
org.apache.http.NoHttpResponseException -> org.apache.http.NoHttpResponseException:
    long serialVersionUID -> serialVersionUID
org.apache.http.ParseException -> org.apache.http.ParseException:
    long serialVersionUID -> serialVersionUID
org.apache.http.ProtocolException -> org.apache.http.ProtocolException:
    long serialVersionUID -> serialVersionUID
org.apache.http.ProtocolVersion -> org.apache.http.ProtocolVersion:
    long serialVersionUID -> serialVersionUID
    java.lang.String protocol -> protocol
    int major -> major
    int minor -> minor
    java.lang.String getProtocol() -> getProtocol
    int getMajor() -> getMajor
    int getMinor() -> getMinor
    org.apache.http.ProtocolVersion forVersion(int,int) -> forVersion
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean isComparable(org.apache.http.ProtocolVersion) -> isComparable
    int compareToVersion(org.apache.http.ProtocolVersion) -> compareToVersion
    boolean greaterEquals(org.apache.http.ProtocolVersion) -> greaterEquals
    boolean lessEquals(org.apache.http.ProtocolVersion) -> lessEquals
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.ReasonPhraseCatalog -> org.apache.http.ReasonPhraseCatalog:
    java.lang.String getReason(int,java.util.Locale) -> getReason
org.apache.http.RequestLine -> org.apache.http.RequestLine:
    java.lang.String getMethod() -> getMethod
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.lang.String getUri() -> getUri
org.apache.http.StatusLine -> org.apache.http.StatusLine:
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    int getStatusCode() -> getStatusCode
    java.lang.String getReasonPhrase() -> getReasonPhrase
org.apache.http.TokenIterator -> org.apache.http.TokenIterator:
    boolean hasNext() -> hasNext
    java.lang.String nextToken() -> nextToken
org.apache.http.TruncatedChunkException -> org.apache.http.TruncatedChunkException:
    long serialVersionUID -> serialVersionUID
org.apache.http.UnsupportedHttpVersionException -> org.apache.http.UnsupportedHttpVersionException:
    long serialVersionUID -> serialVersionUID
org.apache.http.annotation.GuardedBy -> org.apache.http.annotation.GuardedBy:
    java.lang.String value() -> value
org.apache.http.annotation.Immutable -> org.apache.http.annotation.Immutable:
org.apache.http.annotation.NotThreadSafe -> org.apache.http.annotation.NotThreadSafe:
org.apache.http.annotation.ThreadSafe -> org.apache.http.annotation.ThreadSafe:
org.apache.http.auth.AUTH -> org.apache.http.auth.AUTH:
    java.lang.String WWW_AUTH -> WWW_AUTH
    java.lang.String WWW_AUTH_RESP -> WWW_AUTH_RESP
    java.lang.String PROXY_AUTH -> PROXY_AUTH
    java.lang.String PROXY_AUTH_RESP -> PROXY_AUTH_RESP
org.apache.http.auth.AuthOption -> org.apache.http.auth.AuthOption:
    org.apache.http.auth.AuthScheme authScheme -> authScheme
    org.apache.http.auth.Credentials creds -> creds
    org.apache.http.auth.AuthScheme getAuthScheme() -> getAuthScheme
    org.apache.http.auth.Credentials getCredentials() -> getCredentials
    java.lang.String toString() -> toString
org.apache.http.auth.AuthProtocolState -> org.apache.http.auth.AuthProtocolState:
    org.apache.http.auth.AuthProtocolState UNCHALLENGED -> UNCHALLENGED
    org.apache.http.auth.AuthProtocolState CHALLENGED -> CHALLENGED
    org.apache.http.auth.AuthProtocolState HANDSHAKE -> HANDSHAKE
    org.apache.http.auth.AuthProtocolState FAILURE -> FAILURE
    org.apache.http.auth.AuthProtocolState SUCCESS -> SUCCESS
    org.apache.http.auth.AuthProtocolState[] $VALUES -> $VALUES
    org.apache.http.auth.AuthProtocolState[] values() -> values
    org.apache.http.auth.AuthProtocolState valueOf(java.lang.String) -> valueOf
org.apache.http.auth.AuthScheme -> org.apache.http.auth.AuthScheme:
    void processChallenge(org.apache.http.Header) -> processChallenge
    java.lang.String getSchemeName() -> getSchemeName
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    boolean isConnectionBased() -> isConnectionBased
    boolean isComplete() -> isComplete
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
org.apache.http.auth.AuthSchemeFactory -> org.apache.http.auth.AuthSchemeFactory:
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.auth.AuthSchemeProvider -> org.apache.http.auth.AuthSchemeProvider:
    org.apache.http.auth.AuthScheme create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.auth.AuthSchemeRegistry -> org.apache.http.auth.AuthSchemeRegistry:
    java.util.concurrent.ConcurrentHashMap registeredSchemes -> registeredSchemes
    void register(java.lang.String,org.apache.http.auth.AuthSchemeFactory) -> register
    void unregister(java.lang.String) -> unregister
    org.apache.http.auth.AuthScheme getAuthScheme(java.lang.String,org.apache.http.params.HttpParams) -> getAuthScheme
    java.util.List getSchemeNames() -> getSchemeNames
    void setItems(java.util.Map) -> setItems
    org.apache.http.auth.AuthSchemeProvider lookup(java.lang.String) -> lookup
    java.lang.Object lookup(java.lang.String) -> lookup
org.apache.http.auth.AuthSchemeRegistry$1 -> org.apache.http.auth.AuthSchemeRegistry$1:
    java.lang.String val$name -> val$name
    org.apache.http.auth.AuthSchemeRegistry this$0 -> this$0
    org.apache.http.auth.AuthScheme create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.auth.AuthScope -> org.apache.http.auth.AuthScope:
    java.lang.String ANY_HOST -> ANY_HOST
    int ANY_PORT -> ANY_PORT
    java.lang.String ANY_REALM -> ANY_REALM
    java.lang.String ANY_SCHEME -> ANY_SCHEME
    org.apache.http.auth.AuthScope ANY -> ANY
    java.lang.String scheme -> scheme
    java.lang.String realm -> realm
    java.lang.String host -> host
    int port -> port
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getRealm() -> getRealm
    java.lang.String getScheme() -> getScheme
    int match(org.apache.http.auth.AuthScope) -> match
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
org.apache.http.auth.AuthState -> org.apache.http.auth.AuthState:
    org.apache.http.auth.AuthProtocolState state -> state
    org.apache.http.auth.AuthScheme authScheme -> authScheme
    org.apache.http.auth.AuthScope authScope -> authScope
    org.apache.http.auth.Credentials credentials -> credentials
    java.util.Queue authOptions -> authOptions
    void reset() -> reset
    org.apache.http.auth.AuthProtocolState getState() -> getState
    void setState(org.apache.http.auth.AuthProtocolState) -> setState
    org.apache.http.auth.AuthScheme getAuthScheme() -> getAuthScheme
    org.apache.http.auth.Credentials getCredentials() -> getCredentials
    void update(org.apache.http.auth.AuthScheme,org.apache.http.auth.Credentials) -> update
    java.util.Queue getAuthOptions() -> getAuthOptions
    boolean hasAuthOptions() -> hasAuthOptions
    void update(java.util.Queue) -> update
    void invalidate() -> invalidate
    boolean isValid() -> isValid
    void setAuthScheme(org.apache.http.auth.AuthScheme) -> setAuthScheme
    void setCredentials(org.apache.http.auth.Credentials) -> setCredentials
    org.apache.http.auth.AuthScope getAuthScope() -> getAuthScope
    void setAuthScope(org.apache.http.auth.AuthScope) -> setAuthScope
    java.lang.String toString() -> toString
org.apache.http.auth.AuthenticationException -> org.apache.http.auth.AuthenticationException:
    long serialVersionUID -> serialVersionUID
org.apache.http.auth.BasicUserPrincipal -> org.apache.http.auth.BasicUserPrincipal:
    long serialVersionUID -> serialVersionUID
    java.lang.String username -> username
    java.lang.String getName() -> getName
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.apache.http.auth.ChallengeState -> org.apache.http.auth.ChallengeState:
    org.apache.http.auth.ChallengeState TARGET -> TARGET
    org.apache.http.auth.ChallengeState PROXY -> PROXY
    org.apache.http.auth.ChallengeState[] $VALUES -> $VALUES
    org.apache.http.auth.ChallengeState[] values() -> values
    org.apache.http.auth.ChallengeState valueOf(java.lang.String) -> valueOf
org.apache.http.auth.ContextAwareAuthScheme -> org.apache.http.auth.ContextAwareAuthScheme:
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
org.apache.http.auth.Credentials -> org.apache.http.auth.Credentials:
    java.security.Principal getUserPrincipal() -> getUserPrincipal
    java.lang.String getPassword() -> getPassword
org.apache.http.auth.InvalidCredentialsException -> org.apache.http.auth.InvalidCredentialsException:
    long serialVersionUID -> serialVersionUID
org.apache.http.auth.MalformedChallengeException -> org.apache.http.auth.MalformedChallengeException:
    long serialVersionUID -> serialVersionUID
org.apache.http.auth.NTCredentials -> org.apache.http.auth.NTCredentials:
    long serialVersionUID -> serialVersionUID
    org.apache.http.auth.NTUserPrincipal principal -> principal
    java.lang.String password -> password
    java.lang.String workstation -> workstation
    java.security.Principal getUserPrincipal() -> getUserPrincipal
    java.lang.String getUserName() -> getUserName
    java.lang.String getPassword() -> getPassword
    java.lang.String getDomain() -> getDomain
    java.lang.String getWorkstation() -> getWorkstation
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.apache.http.auth.NTUserPrincipal -> org.apache.http.auth.NTUserPrincipal:
    long serialVersionUID -> serialVersionUID
    java.lang.String username -> username
    java.lang.String domain -> domain
    java.lang.String ntname -> ntname
    java.lang.String getName() -> getName
    java.lang.String getDomain() -> getDomain
    java.lang.String getUsername() -> getUsername
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.apache.http.auth.UsernamePasswordCredentials -> org.apache.http.auth.UsernamePasswordCredentials:
    long serialVersionUID -> serialVersionUID
    org.apache.http.auth.BasicUserPrincipal principal -> principal
    java.lang.String password -> password
    java.security.Principal getUserPrincipal() -> getUserPrincipal
    java.lang.String getUserName() -> getUserName
    java.lang.String getPassword() -> getPassword
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.apache.http.auth.params.AuthPNames -> org.apache.http.auth.params.AuthPNames:
    java.lang.String CREDENTIAL_CHARSET -> CREDENTIAL_CHARSET
    java.lang.String TARGET_AUTH_PREF -> TARGET_AUTH_PREF
    java.lang.String PROXY_AUTH_PREF -> PROXY_AUTH_PREF
org.apache.http.auth.params.AuthParamBean -> org.apache.http.auth.params.AuthParamBean:
    void setCredentialCharset(java.lang.String) -> setCredentialCharset
org.apache.http.auth.params.AuthParams -> org.apache.http.auth.params.AuthParams:
    java.lang.String getCredentialCharset(org.apache.http.params.HttpParams) -> getCredentialCharset
    void setCredentialCharset(org.apache.http.params.HttpParams,java.lang.String) -> setCredentialCharset
org.apache.http.client.AuthCache -> org.apache.http.client.AuthCache:
    void put(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme) -> put
    org.apache.http.auth.AuthScheme get(org.apache.http.HttpHost) -> get
    void remove(org.apache.http.HttpHost) -> remove
    void clear() -> clear
org.apache.http.client.AuthenticationHandler -> org.apache.http.client.AuthenticationHandler:
    boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    org.apache.http.auth.AuthScheme selectScheme(java.util.Map,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> selectScheme
org.apache.http.client.AuthenticationStrategy -> org.apache.http.client.AuthenticationStrategy:
    boolean isAuthenticationRequested(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    java.util.Queue select(java.util.Map,org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> select
    void authSucceeded(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authSucceeded
    void authFailed(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authFailed
org.apache.http.client.BackoffManager -> org.apache.http.client.BackoffManager:
    void backOff(org.apache.http.conn.routing.HttpRoute) -> backOff
    void probe(org.apache.http.conn.routing.HttpRoute) -> probe
org.apache.http.client.CircularRedirectException -> org.apache.http.client.CircularRedirectException:
    long serialVersionUID -> serialVersionUID
org.apache.http.client.ClientProtocolException -> org.apache.http.client.ClientProtocolException:
    long serialVersionUID -> serialVersionUID
org.apache.http.client.ConnectionBackoffStrategy -> org.apache.http.client.ConnectionBackoffStrategy:
    boolean shouldBackoff(java.lang.Throwable) -> shouldBackoff
    boolean shouldBackoff(org.apache.http.HttpResponse) -> shouldBackoff
org.apache.http.client.CookieStore -> org.apache.http.client.CookieStore:
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    java.util.List getCookies() -> getCookies
    boolean clearExpired(java.util.Date) -> clearExpired
    void clear() -> clear
org.apache.http.client.CredentialsProvider -> org.apache.http.client.CredentialsProvider:
    void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials) -> setCredentials
    org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope) -> getCredentials
    void clear() -> clear
org.apache.http.client.HttpClient -> org.apache.http.client.HttpClient:
    org.apache.http.params.HttpParams getParams() -> getParams
    org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
org.apache.http.client.HttpRequestRetryHandler -> org.apache.http.client.HttpRequestRetryHandler:
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
org.apache.http.client.HttpResponseException -> org.apache.http.client.HttpResponseException:
    long serialVersionUID -> serialVersionUID
    int statusCode -> statusCode
    int getStatusCode() -> getStatusCode
org.apache.http.client.NonRepeatableRequestException -> org.apache.http.client.NonRepeatableRequestException:
    long serialVersionUID -> serialVersionUID
org.apache.http.client.RedirectException -> org.apache.http.client.RedirectException:
    long serialVersionUID -> serialVersionUID
org.apache.http.client.RedirectHandler -> org.apache.http.client.RedirectHandler:
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
org.apache.http.client.RedirectStrategy -> org.apache.http.client.RedirectStrategy:
    boolean isRedirected(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirected
    org.apache.http.client.methods.HttpUriRequest getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getRedirect
org.apache.http.client.RequestDirector -> org.apache.http.client.RequestDirector:
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
org.apache.http.client.ResponseHandler -> org.apache.http.client.ResponseHandler:
    java.lang.Object handleResponse(org.apache.http.HttpResponse) -> handleResponse
org.apache.http.client.ServiceUnavailableRetryStrategy -> org.apache.http.client.ServiceUnavailableRetryStrategy:
    boolean retryRequest(org.apache.http.HttpResponse,int,org.apache.http.protocol.HttpContext) -> retryRequest
    long getRetryInterval() -> getRetryInterval
org.apache.http.client.UserTokenHandler -> org.apache.http.client.UserTokenHandler:
    java.lang.Object getUserToken(org.apache.http.protocol.HttpContext) -> getUserToken
org.apache.http.client.config.AuthSchemes -> org.apache.http.client.config.AuthSchemes:
    java.lang.String BASIC -> BASIC
    java.lang.String DIGEST -> DIGEST
    java.lang.String NTLM -> NTLM
    java.lang.String SPNEGO -> SPNEGO
    java.lang.String KERBEROS -> KERBEROS
org.apache.http.client.config.CookieSpecs -> org.apache.http.client.config.CookieSpecs:
    java.lang.String BROWSER_COMPATIBILITY -> BROWSER_COMPATIBILITY
    java.lang.String NETSCAPE -> NETSCAPE
    java.lang.String STANDARD -> STANDARD
    java.lang.String BEST_MATCH -> BEST_MATCH
    java.lang.String IGNORE_COOKIES -> IGNORE_COOKIES
org.apache.http.client.config.RequestConfig -> org.apache.http.client.config.RequestConfig:
    org.apache.http.client.config.RequestConfig DEFAULT -> DEFAULT
    boolean expectContinueEnabled -> expectContinueEnabled
    org.apache.http.HttpHost proxy -> proxy
    java.net.InetAddress localAddress -> localAddress
    boolean staleConnectionCheckEnabled -> staleConnectionCheckEnabled
    java.lang.String cookieSpec -> cookieSpec
    boolean redirectsEnabled -> redirectsEnabled
    boolean relativeRedirectsAllowed -> relativeRedirectsAllowed
    boolean circularRedirectsAllowed -> circularRedirectsAllowed
    int maxRedirects -> maxRedirects
    boolean authenticationEnabled -> authenticationEnabled
    java.util.Collection targetPreferredAuthSchemes -> targetPreferredAuthSchemes
    java.util.Collection proxyPreferredAuthSchemes -> proxyPreferredAuthSchemes
    int connectionRequestTimeout -> connectionRequestTimeout
    int connectTimeout -> connectTimeout
    int socketTimeout -> socketTimeout
    boolean isExpectContinueEnabled() -> isExpectContinueEnabled
    org.apache.http.HttpHost getProxy() -> getProxy
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    boolean isStaleConnectionCheckEnabled() -> isStaleConnectionCheckEnabled
    java.lang.String getCookieSpec() -> getCookieSpec
    boolean isRedirectsEnabled() -> isRedirectsEnabled
    boolean isRelativeRedirectsAllowed() -> isRelativeRedirectsAllowed
    boolean isCircularRedirectsAllowed() -> isCircularRedirectsAllowed
    int getMaxRedirects() -> getMaxRedirects
    boolean isAuthenticationEnabled() -> isAuthenticationEnabled
    java.util.Collection getTargetPreferredAuthSchemes() -> getTargetPreferredAuthSchemes
    java.util.Collection getProxyPreferredAuthSchemes() -> getProxyPreferredAuthSchemes
    int getConnectionRequestTimeout() -> getConnectionRequestTimeout
    int getConnectTimeout() -> getConnectTimeout
    int getSocketTimeout() -> getSocketTimeout
    org.apache.http.client.config.RequestConfig clone() -> clone
    java.lang.String toString() -> toString
    org.apache.http.client.config.RequestConfig$Builder custom() -> custom
    org.apache.http.client.config.RequestConfig$Builder copy(org.apache.http.client.config.RequestConfig) -> copy
    java.lang.Object clone() -> clone
org.apache.http.client.config.RequestConfig$Builder -> org.apache.http.client.config.RequestConfig$Builder:
    boolean expectContinueEnabled -> expectContinueEnabled
    org.apache.http.HttpHost proxy -> proxy
    java.net.InetAddress localAddress -> localAddress
    boolean staleConnectionCheckEnabled -> staleConnectionCheckEnabled
    java.lang.String cookieSpec -> cookieSpec
    boolean redirectsEnabled -> redirectsEnabled
    boolean relativeRedirectsAllowed -> relativeRedirectsAllowed
    boolean circularRedirectsAllowed -> circularRedirectsAllowed
    int maxRedirects -> maxRedirects
    boolean authenticationEnabled -> authenticationEnabled
    java.util.Collection targetPreferredAuthSchemes -> targetPreferredAuthSchemes
    java.util.Collection proxyPreferredAuthSchemes -> proxyPreferredAuthSchemes
    int connectionRequestTimeout -> connectionRequestTimeout
    int connectTimeout -> connectTimeout
    int socketTimeout -> socketTimeout
    org.apache.http.client.config.RequestConfig$Builder setExpectContinueEnabled(boolean) -> setExpectContinueEnabled
    org.apache.http.client.config.RequestConfig$Builder setProxy(org.apache.http.HttpHost) -> setProxy
    org.apache.http.client.config.RequestConfig$Builder setLocalAddress(java.net.InetAddress) -> setLocalAddress
    org.apache.http.client.config.RequestConfig$Builder setStaleConnectionCheckEnabled(boolean) -> setStaleConnectionCheckEnabled
    org.apache.http.client.config.RequestConfig$Builder setCookieSpec(java.lang.String) -> setCookieSpec
    org.apache.http.client.config.RequestConfig$Builder setRedirectsEnabled(boolean) -> setRedirectsEnabled
    org.apache.http.client.config.RequestConfig$Builder setRelativeRedirectsAllowed(boolean) -> setRelativeRedirectsAllowed
    org.apache.http.client.config.RequestConfig$Builder setCircularRedirectsAllowed(boolean) -> setCircularRedirectsAllowed
    org.apache.http.client.config.RequestConfig$Builder setMaxRedirects(int) -> setMaxRedirects
    org.apache.http.client.config.RequestConfig$Builder setAuthenticationEnabled(boolean) -> setAuthenticationEnabled
    org.apache.http.client.config.RequestConfig$Builder setTargetPreferredAuthSchemes(java.util.Collection) -> setTargetPreferredAuthSchemes
    org.apache.http.client.config.RequestConfig$Builder setProxyPreferredAuthSchemes(java.util.Collection) -> setProxyPreferredAuthSchemes
    org.apache.http.client.config.RequestConfig$Builder setConnectionRequestTimeout(int) -> setConnectionRequestTimeout
    org.apache.http.client.config.RequestConfig$Builder setConnectTimeout(int) -> setConnectTimeout
    org.apache.http.client.config.RequestConfig$Builder setSocketTimeout(int) -> setSocketTimeout
    org.apache.http.client.config.RequestConfig build() -> build
org.apache.http.client.entity.DecompressingEntity -> org.apache.http.client.entity.DecompressingEntity:
    int BUFFER_SIZE -> BUFFER_SIZE
    java.io.InputStream content -> content
    java.io.InputStream decorate(java.io.InputStream) -> decorate
    java.io.InputStream getDecompressingStream() -> getDecompressingStream
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.client.entity.DeflateDecompressingEntity -> org.apache.http.client.entity.DeflateDecompressingEntity:
    java.io.InputStream decorate(java.io.InputStream) -> decorate
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    void writeTo(java.io.OutputStream) -> writeTo
    java.io.InputStream getContent() -> getContent
org.apache.http.client.entity.DeflateInputStream -> org.apache.http.client.entity.DeflateInputStream:
    java.io.InputStream sourceStream -> sourceStream
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
    void mark(int) -> mark
    void reset() -> reset
    boolean markSupported() -> markSupported
    void close() -> close
org.apache.http.client.entity.DeflateInputStream$DeflateStream -> org.apache.http.client.entity.DeflateInputStream$DeflateStream:
    boolean closed -> closed
    void close() -> close
org.apache.http.client.entity.EntityBuilder -> org.apache.http.client.entity.EntityBuilder:
    java.lang.String text -> text
    byte[] binary -> binary
    java.io.InputStream stream -> stream
    java.util.List parameters -> parameters
    java.io.Serializable serializable -> serializable
    java.io.File file -> file
    org.apache.http.entity.ContentType contentType -> contentType
    java.lang.String contentEncoding -> contentEncoding
    boolean chunked -> chunked
    boolean gzipCompress -> gzipCompress
    org.apache.http.client.entity.EntityBuilder create() -> create
    void clearContent() -> clearContent
    java.lang.String getText() -> getText
    org.apache.http.client.entity.EntityBuilder setText(java.lang.String) -> setText
    byte[] getBinary() -> getBinary
    org.apache.http.client.entity.EntityBuilder setBinary(byte[]) -> setBinary
    java.io.InputStream getStream() -> getStream
    org.apache.http.client.entity.EntityBuilder setStream(java.io.InputStream) -> setStream
    java.util.List getParameters() -> getParameters
    org.apache.http.client.entity.EntityBuilder setParameters(java.util.List) -> setParameters
    org.apache.http.client.entity.EntityBuilder setParameters(org.apache.http.NameValuePair[]) -> setParameters
    java.io.Serializable getSerializable() -> getSerializable
    org.apache.http.client.entity.EntityBuilder setSerializable(java.io.Serializable) -> setSerializable
    java.io.File getFile() -> getFile
    org.apache.http.client.entity.EntityBuilder setFile(java.io.File) -> setFile
    org.apache.http.entity.ContentType getContentType() -> getContentType
    org.apache.http.client.entity.EntityBuilder setContentType(org.apache.http.entity.ContentType) -> setContentType
    java.lang.String getContentEncoding() -> getContentEncoding
    org.apache.http.client.entity.EntityBuilder setContentEncoding(java.lang.String) -> setContentEncoding
    boolean isChunked() -> isChunked
    org.apache.http.client.entity.EntityBuilder chunked() -> chunked
    boolean isGzipCompress() -> isGzipCompress
    org.apache.http.client.entity.EntityBuilder gzipCompress() -> gzipCompress
    org.apache.http.entity.ContentType getContentOrDefault(org.apache.http.entity.ContentType) -> getContentOrDefault
    org.apache.http.HttpEntity build() -> build
org.apache.http.client.entity.GzipCompressingEntity -> org.apache.http.client.entity.GzipCompressingEntity:
    java.lang.String GZIP_CODEC -> GZIP_CODEC
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    boolean isChunked() -> isChunked
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.client.entity.GzipDecompressingEntity -> org.apache.http.client.entity.GzipDecompressingEntity:
    java.io.InputStream decorate(java.io.InputStream) -> decorate
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    void writeTo(java.io.OutputStream) -> writeTo
    java.io.InputStream getContent() -> getContent
org.apache.http.client.entity.LazyDecompressingInputStream -> org.apache.http.client.entity.LazyDecompressingInputStream:
    java.io.InputStream wrappedStream -> wrappedStream
    org.apache.http.client.entity.DecompressingEntity decompressingEntity -> decompressingEntity
    java.io.InputStream wrapperStream -> wrapperStream
    void initWrapper() -> initWrapper
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    boolean markSupported() -> markSupported
    int available() -> available
    void close() -> close
org.apache.http.client.entity.UrlEncodedFormEntity -> org.apache.http.client.entity.UrlEncodedFormEntity:
org.apache.http.client.methods.AbortableHttpRequest -> org.apache.http.client.methods.AbortableHttpRequest:
    void setConnectionRequest(org.apache.http.conn.ClientConnectionRequest) -> setConnectionRequest
    void setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger) -> setReleaseTrigger
    void abort() -> abort
org.apache.http.client.methods.AbstractExecutionAwareRequest -> org.apache.http.client.methods.AbstractExecutionAwareRequest:
    java.util.concurrent.atomic.AtomicBoolean aborted -> aborted
    java.util.concurrent.atomic.AtomicReference cancellableRef -> cancellableRef
    void setConnectionRequest(org.apache.http.conn.ClientConnectionRequest) -> setConnectionRequest
    void setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger) -> setReleaseTrigger
    void abort() -> abort
    boolean isAborted() -> isAborted
    void setCancellable(org.apache.http.concurrent.Cancellable) -> setCancellable
    java.lang.Object clone() -> clone
    void completed() -> completed
    void reset() -> reset
org.apache.http.client.methods.AbstractExecutionAwareRequest$1 -> org.apache.http.client.methods.AbstractExecutionAwareRequest$1:
    org.apache.http.conn.ClientConnectionRequest val$connRequest -> val$connRequest
    org.apache.http.client.methods.AbstractExecutionAwareRequest this$0 -> this$0
    boolean cancel() -> cancel
org.apache.http.client.methods.AbstractExecutionAwareRequest$2 -> org.apache.http.client.methods.AbstractExecutionAwareRequest$2:
    org.apache.http.conn.ConnectionReleaseTrigger val$releaseTrigger -> val$releaseTrigger
    org.apache.http.client.methods.AbstractExecutionAwareRequest this$0 -> this$0
    boolean cancel() -> cancel
org.apache.http.client.methods.CloseableHttpResponse -> org.apache.http.client.methods.CloseableHttpResponse:
org.apache.http.client.methods.Configurable -> org.apache.http.client.methods.Configurable:
    org.apache.http.client.config.RequestConfig getConfig() -> getConfig
org.apache.http.client.methods.HttpDelete -> org.apache.http.client.methods.HttpDelete:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpEntityEnclosingRequestBase -> org.apache.http.client.methods.HttpEntityEnclosingRequestBase:
    org.apache.http.HttpEntity entity -> entity
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
    java.lang.Object clone() -> clone
org.apache.http.client.methods.HttpExecutionAware -> org.apache.http.client.methods.HttpExecutionAware:
    boolean isAborted() -> isAborted
    void setCancellable(org.apache.http.concurrent.Cancellable) -> setCancellable
org.apache.http.client.methods.HttpGet -> org.apache.http.client.methods.HttpGet:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpHead -> org.apache.http.client.methods.HttpHead:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpOptions -> org.apache.http.client.methods.HttpOptions:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
    java.util.Set getAllowedMethods(org.apache.http.HttpResponse) -> getAllowedMethods
org.apache.http.client.methods.HttpPatch -> org.apache.http.client.methods.HttpPatch:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpPost -> org.apache.http.client.methods.HttpPost:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpPut -> org.apache.http.client.methods.HttpPut:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpRequestBase -> org.apache.http.client.methods.HttpRequestBase:
    org.apache.http.ProtocolVersion version -> version
    java.net.URI uri -> uri
    org.apache.http.client.config.RequestConfig config -> config
    java.lang.String getMethod() -> getMethod
    void setProtocolVersion(org.apache.http.ProtocolVersion) -> setProtocolVersion
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.net.URI getURI() -> getURI
    org.apache.http.RequestLine getRequestLine() -> getRequestLine
    org.apache.http.client.config.RequestConfig getConfig() -> getConfig
    void setConfig(org.apache.http.client.config.RequestConfig) -> setConfig
    void setURI(java.net.URI) -> setURI
    void started() -> started
    void releaseConnection() -> releaseConnection
    java.lang.String toString() -> toString
org.apache.http.client.methods.HttpRequestWrapper -> org.apache.http.client.methods.HttpRequestWrapper:
    org.apache.http.HttpRequest original -> original
    java.lang.String method -> method
    org.apache.http.ProtocolVersion version -> version
    java.net.URI uri -> uri
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    void setProtocolVersion(org.apache.http.ProtocolVersion) -> setProtocolVersion
    java.net.URI getURI() -> getURI
    void setURI(java.net.URI) -> setURI
    java.lang.String getMethod() -> getMethod
    void abort() -> abort
    boolean isAborted() -> isAborted
    org.apache.http.RequestLine getRequestLine() -> getRequestLine
    org.apache.http.HttpRequest getOriginal() -> getOriginal
    java.lang.String toString() -> toString
    org.apache.http.client.methods.HttpRequestWrapper wrap(org.apache.http.HttpRequest) -> wrap
    org.apache.http.params.HttpParams getParams() -> getParams
org.apache.http.client.methods.HttpRequestWrapper$1 -> org.apache.http.client.methods.HttpRequestWrapper$1:
org.apache.http.client.methods.HttpRequestWrapper$HttpEntityEnclosingRequestWrapper -> org.apache.http.client.methods.HttpRequestWrapper$HttpEntityEnclosingRequestWrapper:
    org.apache.http.HttpEntity entity -> entity
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
org.apache.http.client.methods.HttpTrace -> org.apache.http.client.methods.HttpTrace:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpUriRequest -> org.apache.http.client.methods.HttpUriRequest:
    java.lang.String getMethod() -> getMethod
    java.net.URI getURI() -> getURI
    void abort() -> abort
    boolean isAborted() -> isAborted
org.apache.http.client.methods.RequestBuilder -> org.apache.http.client.methods.RequestBuilder:
    java.lang.String method -> method
    org.apache.http.ProtocolVersion version -> version
    java.net.URI uri -> uri
    org.apache.http.message.HeaderGroup headergroup -> headergroup
    org.apache.http.HttpEntity entity -> entity
    java.util.LinkedList parameters -> parameters
    org.apache.http.client.config.RequestConfig config -> config
    org.apache.http.client.methods.RequestBuilder create(java.lang.String) -> create
    org.apache.http.client.methods.RequestBuilder get() -> get
    org.apache.http.client.methods.RequestBuilder head() -> head
    org.apache.http.client.methods.RequestBuilder post() -> post
    org.apache.http.client.methods.RequestBuilder put() -> put
    org.apache.http.client.methods.RequestBuilder delete() -> delete
    org.apache.http.client.methods.RequestBuilder trace() -> trace
    org.apache.http.client.methods.RequestBuilder options() -> options
    org.apache.http.client.methods.RequestBuilder copy(org.apache.http.HttpRequest) -> copy
    org.apache.http.client.methods.RequestBuilder doCopy(org.apache.http.HttpRequest) -> doCopy
    java.lang.String getMethod() -> getMethod
    org.apache.http.ProtocolVersion getVersion() -> getVersion
    org.apache.http.client.methods.RequestBuilder setVersion(org.apache.http.ProtocolVersion) -> setVersion
    java.net.URI getUri() -> getUri
    org.apache.http.client.methods.RequestBuilder setUri(java.net.URI) -> setUri
    org.apache.http.client.methods.RequestBuilder setUri(java.lang.String) -> setUri
    org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
    org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    org.apache.http.client.methods.RequestBuilder addHeader(org.apache.http.Header) -> addHeader
    org.apache.http.client.methods.RequestBuilder addHeader(java.lang.String,java.lang.String) -> addHeader
    org.apache.http.client.methods.RequestBuilder removeHeader(org.apache.http.Header) -> removeHeader
    org.apache.http.client.methods.RequestBuilder removeHeaders(java.lang.String) -> removeHeaders
    org.apache.http.client.methods.RequestBuilder setHeader(org.apache.http.Header) -> setHeader
    org.apache.http.client.methods.RequestBuilder setHeader(java.lang.String,java.lang.String) -> setHeader
    org.apache.http.HttpEntity getEntity() -> getEntity
    org.apache.http.client.methods.RequestBuilder setEntity(org.apache.http.HttpEntity) -> setEntity
    java.util.List getParameters() -> getParameters
    org.apache.http.client.methods.RequestBuilder addParameter(org.apache.http.NameValuePair) -> addParameter
    org.apache.http.client.methods.RequestBuilder addParameter(java.lang.String,java.lang.String) -> addParameter
    org.apache.http.client.methods.RequestBuilder addParameters(org.apache.http.NameValuePair[]) -> addParameters
    org.apache.http.client.config.RequestConfig getConfig() -> getConfig
    org.apache.http.client.methods.RequestBuilder setConfig(org.apache.http.client.config.RequestConfig) -> setConfig
    org.apache.http.client.methods.HttpUriRequest build() -> build
org.apache.http.client.methods.RequestBuilder$InternalEntityEclosingRequest -> org.apache.http.client.methods.RequestBuilder$InternalEntityEclosingRequest:
    java.lang.String method -> method
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.RequestBuilder$InternalRequest -> org.apache.http.client.methods.RequestBuilder$InternalRequest:
    java.lang.String method -> method
    java.lang.String getMethod() -> getMethod
org.apache.http.client.params.AllClientPNames -> org.apache.http.client.params.AllClientPNames:
org.apache.http.client.params.AuthPolicy -> org.apache.http.client.params.AuthPolicy:
    java.lang.String NTLM -> NTLM
    java.lang.String DIGEST -> DIGEST
    java.lang.String BASIC -> BASIC
    java.lang.String SPNEGO -> SPNEGO
    java.lang.String KERBEROS -> KERBEROS
org.apache.http.client.params.ClientPNames -> org.apache.http.client.params.ClientPNames:
    java.lang.String CONNECTION_MANAGER_FACTORY_CLASS_NAME -> CONNECTION_MANAGER_FACTORY_CLASS_NAME
    java.lang.String HANDLE_REDIRECTS -> HANDLE_REDIRECTS
    java.lang.String REJECT_RELATIVE_REDIRECT -> REJECT_RELATIVE_REDIRECT
    java.lang.String MAX_REDIRECTS -> MAX_REDIRECTS
    java.lang.String ALLOW_CIRCULAR_REDIRECTS -> ALLOW_CIRCULAR_REDIRECTS
    java.lang.String HANDLE_AUTHENTICATION -> HANDLE_AUTHENTICATION
    java.lang.String COOKIE_POLICY -> COOKIE_POLICY
    java.lang.String VIRTUAL_HOST -> VIRTUAL_HOST
    java.lang.String DEFAULT_HEADERS -> DEFAULT_HEADERS
    java.lang.String DEFAULT_HOST -> DEFAULT_HOST
    java.lang.String CONN_MANAGER_TIMEOUT -> CONN_MANAGER_TIMEOUT
org.apache.http.client.params.ClientParamBean -> org.apache.http.client.params.ClientParamBean:
    void setConnectionManagerFactoryClassName(java.lang.String) -> setConnectionManagerFactoryClassName
    void setHandleRedirects(boolean) -> setHandleRedirects
    void setRejectRelativeRedirect(boolean) -> setRejectRelativeRedirect
    void setMaxRedirects(int) -> setMaxRedirects
    void setAllowCircularRedirects(boolean) -> setAllowCircularRedirects
    void setHandleAuthentication(boolean) -> setHandleAuthentication
    void setCookiePolicy(java.lang.String) -> setCookiePolicy
    void setVirtualHost(org.apache.http.HttpHost) -> setVirtualHost
    void setDefaultHeaders(java.util.Collection) -> setDefaultHeaders
    void setDefaultHost(org.apache.http.HttpHost) -> setDefaultHost
    void setConnectionManagerTimeout(long) -> setConnectionManagerTimeout
org.apache.http.client.params.CookiePolicy -> org.apache.http.client.params.CookiePolicy:
    java.lang.String BROWSER_COMPATIBILITY -> BROWSER_COMPATIBILITY
    java.lang.String NETSCAPE -> NETSCAPE
    java.lang.String RFC_2109 -> RFC_2109
    java.lang.String RFC_2965 -> RFC_2965
    java.lang.String BEST_MATCH -> BEST_MATCH
    java.lang.String IGNORE_COOKIES -> IGNORE_COOKIES
org.apache.http.client.params.HttpClientParamConfig -> org.apache.http.client.params.HttpClientParamConfig:
    org.apache.http.client.config.RequestConfig getRequestConfig(org.apache.http.params.HttpParams) -> getRequestConfig
org.apache.http.client.params.HttpClientParams -> org.apache.http.client.params.HttpClientParams:
    boolean isRedirecting(org.apache.http.params.HttpParams) -> isRedirecting
    void setRedirecting(org.apache.http.params.HttpParams,boolean) -> setRedirecting
    boolean isAuthenticating(org.apache.http.params.HttpParams) -> isAuthenticating
    void setAuthenticating(org.apache.http.params.HttpParams,boolean) -> setAuthenticating
    java.lang.String getCookiePolicy(org.apache.http.params.HttpParams) -> getCookiePolicy
    void setCookiePolicy(org.apache.http.params.HttpParams,java.lang.String) -> setCookiePolicy
    void setConnectionManagerTimeout(org.apache.http.params.HttpParams,long) -> setConnectionManagerTimeout
    long getConnectionManagerTimeout(org.apache.http.params.HttpParams) -> getConnectionManagerTimeout
org.apache.http.client.protocol.ClientContext -> org.apache.http.client.protocol.ClientContext:
    java.lang.String ROUTE -> ROUTE
    java.lang.String SCHEME_REGISTRY -> SCHEME_REGISTRY
    java.lang.String COOKIESPEC_REGISTRY -> COOKIESPEC_REGISTRY
    java.lang.String COOKIE_SPEC -> COOKIE_SPEC
    java.lang.String COOKIE_ORIGIN -> COOKIE_ORIGIN
    java.lang.String COOKIE_STORE -> COOKIE_STORE
    java.lang.String CREDS_PROVIDER -> CREDS_PROVIDER
    java.lang.String AUTH_CACHE -> AUTH_CACHE
    java.lang.String TARGET_AUTH_STATE -> TARGET_AUTH_STATE
    java.lang.String PROXY_AUTH_STATE -> PROXY_AUTH_STATE
    java.lang.String AUTH_SCHEME_PREF -> AUTH_SCHEME_PREF
    java.lang.String USER_TOKEN -> USER_TOKEN
    java.lang.String AUTHSCHEME_REGISTRY -> AUTHSCHEME_REGISTRY
    java.lang.String SOCKET_FACTORY_REGISTRY -> SOCKET_FACTORY_REGISTRY
    java.lang.String REQUEST_CONFIG -> REQUEST_CONFIG
org.apache.http.client.protocol.ClientContextConfigurer -> org.apache.http.client.protocol.ClientContextConfigurer:
    org.apache.http.protocol.HttpContext context -> context
    void setCookieSpecRegistry(org.apache.http.cookie.CookieSpecRegistry) -> setCookieSpecRegistry
    void setAuthSchemeRegistry(org.apache.http.auth.AuthSchemeRegistry) -> setAuthSchemeRegistry
    void setCookieStore(org.apache.http.client.CookieStore) -> setCookieStore
    void setCredentialsProvider(org.apache.http.client.CredentialsProvider) -> setCredentialsProvider
org.apache.http.client.protocol.HttpClientContext -> org.apache.http.client.protocol.HttpClientContext:
    java.lang.String HTTP_ROUTE -> HTTP_ROUTE
    java.lang.String REDIRECT_LOCATIONS -> REDIRECT_LOCATIONS
    java.lang.String COOKIESPEC_REGISTRY -> COOKIESPEC_REGISTRY
    java.lang.String COOKIE_SPEC -> COOKIE_SPEC
    java.lang.String COOKIE_ORIGIN -> COOKIE_ORIGIN
    java.lang.String COOKIE_STORE -> COOKIE_STORE
    java.lang.String CREDS_PROVIDER -> CREDS_PROVIDER
    java.lang.String AUTH_CACHE -> AUTH_CACHE
    java.lang.String TARGET_AUTH_STATE -> TARGET_AUTH_STATE
    java.lang.String PROXY_AUTH_STATE -> PROXY_AUTH_STATE
    java.lang.String USER_TOKEN -> USER_TOKEN
    java.lang.String AUTHSCHEME_REGISTRY -> AUTHSCHEME_REGISTRY
    java.lang.String REQUEST_CONFIG -> REQUEST_CONFIG
    org.apache.http.client.protocol.HttpClientContext adapt(org.apache.http.protocol.HttpContext) -> adapt
    org.apache.http.client.protocol.HttpClientContext create() -> create
    org.apache.http.conn.routing.RouteInfo getHttpRoute() -> getHttpRoute
    java.util.List getRedirectLocations() -> getRedirectLocations
    org.apache.http.client.CookieStore getCookieStore() -> getCookieStore
    void setCookieStore(org.apache.http.client.CookieStore) -> setCookieStore
    org.apache.http.cookie.CookieSpec getCookieSpec() -> getCookieSpec
    org.apache.http.cookie.CookieOrigin getCookieOrigin() -> getCookieOrigin
    org.apache.http.config.Lookup getLookup(java.lang.String,java.lang.Class) -> getLookup
    org.apache.http.config.Lookup getCookieSpecRegistry() -> getCookieSpecRegistry
    void setCookieSpecRegistry(org.apache.http.config.Lookup) -> setCookieSpecRegistry
    org.apache.http.config.Lookup getAuthSchemeRegistry() -> getAuthSchemeRegistry
    void setAuthSchemeRegistry(org.apache.http.config.Lookup) -> setAuthSchemeRegistry
    org.apache.http.client.CredentialsProvider getCredentialsProvider() -> getCredentialsProvider
    void setCredentialsProvider(org.apache.http.client.CredentialsProvider) -> setCredentialsProvider
    org.apache.http.client.AuthCache getAuthCache() -> getAuthCache
    void setAuthCache(org.apache.http.client.AuthCache) -> setAuthCache
    org.apache.http.auth.AuthState getTargetAuthState() -> getTargetAuthState
    org.apache.http.auth.AuthState getProxyAuthState() -> getProxyAuthState
    java.lang.Object getUserToken(java.lang.Class) -> getUserToken
    java.lang.Object getUserToken() -> getUserToken
    void setUserToken(java.lang.Object) -> setUserToken
    org.apache.http.client.config.RequestConfig getRequestConfig() -> getRequestConfig
    void setRequestConfig(org.apache.http.client.config.RequestConfig) -> setRequestConfig
org.apache.http.client.protocol.RequestAcceptEncoding -> org.apache.http.client.protocol.RequestAcceptEncoding:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestAddCookies -> org.apache.http.client.protocol.RequestAddCookies:
    org.apache.commons.logging.Log log -> log
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestAuthCache -> org.apache.http.client.protocol.RequestAuthCache:
    org.apache.commons.logging.Log log -> log
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
    void doPreemptiveAuth(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.auth.AuthState,org.apache.http.client.CredentialsProvider) -> doPreemptiveAuth
org.apache.http.client.protocol.RequestAuthenticationBase -> org.apache.http.client.protocol.RequestAuthenticationBase:
    org.apache.commons.logging.Log log -> log
    void process(org.apache.http.auth.AuthState,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
    void ensureAuthScheme(org.apache.http.auth.AuthScheme) -> ensureAuthScheme
    org.apache.http.Header authenticate(org.apache.http.auth.AuthScheme,org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
org.apache.http.client.protocol.RequestAuthenticationBase$1 -> org.apache.http.client.protocol.RequestAuthenticationBase$1:
    int[] $SwitchMap$org$apache$http$auth$AuthProtocolState -> $SwitchMap$org$apache$http$auth$AuthProtocolState
org.apache.http.client.protocol.RequestClientConnControl -> org.apache.http.client.protocol.RequestClientConnControl:
    org.apache.commons.logging.Log log -> log
    java.lang.String PROXY_CONN_DIRECTIVE -> PROXY_CONN_DIRECTIVE
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestDefaultHeaders -> org.apache.http.client.protocol.RequestDefaultHeaders:
    java.util.Collection defaultHeaders -> defaultHeaders
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestExpectContinue -> org.apache.http.client.protocol.RequestExpectContinue:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestProxyAuthentication -> org.apache.http.client.protocol.RequestProxyAuthentication:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestTargetAuthentication -> org.apache.http.client.protocol.RequestTargetAuthentication:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.ResponseAuthCache -> org.apache.http.client.protocol.ResponseAuthCache:
    org.apache.commons.logging.Log log -> log
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
    boolean isCachable(org.apache.http.auth.AuthState) -> isCachable
    void cache(org.apache.http.client.AuthCache,org.apache.http.HttpHost,org.apache.http.auth.AuthScheme) -> cache
    void uncache(org.apache.http.client.AuthCache,org.apache.http.HttpHost,org.apache.http.auth.AuthScheme) -> uncache
org.apache.http.client.protocol.ResponseAuthCache$1 -> org.apache.http.client.protocol.ResponseAuthCache$1:
    int[] $SwitchMap$org$apache$http$auth$AuthProtocolState -> $SwitchMap$org$apache$http$auth$AuthProtocolState
org.apache.http.client.protocol.ResponseContentEncoding -> org.apache.http.client.protocol.ResponseContentEncoding:
    java.lang.String UNCOMPRESSED -> UNCOMPRESSED
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.ResponseProcessCookies -> org.apache.http.client.protocol.ResponseProcessCookies:
    org.apache.commons.logging.Log log -> log
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
    void processCookies(org.apache.http.HeaderIterator,org.apache.http.cookie.CookieSpec,org.apache.http.cookie.CookieOrigin,org.apache.http.client.CookieStore) -> processCookies
    java.lang.String formatCooke(org.apache.http.cookie.Cookie) -> formatCooke
org.apache.http.client.utils.CloneUtils -> org.apache.http.client.utils.CloneUtils:
    java.lang.Object cloneObject(java.lang.Object) -> cloneObject
    java.lang.Object clone(java.lang.Object) -> clone
org.apache.http.client.utils.DateUtils -> org.apache.http.client.utils.DateUtils:
    java.lang.String PATTERN_RFC1123 -> PATTERN_RFC1123
    java.lang.String PATTERN_RFC1036 -> PATTERN_RFC1036
    java.lang.String PATTERN_ASCTIME -> PATTERN_ASCTIME
    java.lang.String[] DEFAULT_PATTERNS -> DEFAULT_PATTERNS
    java.util.Date DEFAULT_TWO_DIGIT_YEAR_START -> DEFAULT_TWO_DIGIT_YEAR_START
    java.util.TimeZone GMT -> GMT
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.util.Date parseDate(java.lang.String,java.lang.String[]) -> parseDate
    java.util.Date parseDate(java.lang.String,java.lang.String[],java.util.Date) -> parseDate
    java.lang.String formatDate(java.util.Date) -> formatDate
    java.lang.String formatDate(java.util.Date,java.lang.String) -> formatDate
    void clearThreadLocal() -> clearThreadLocal
org.apache.http.client.utils.DateUtils$DateFormatHolder -> org.apache.http.client.utils.DateUtils$DateFormatHolder:
    java.lang.ThreadLocal THREADLOCAL_FORMATS -> THREADLOCAL_FORMATS
    java.text.SimpleDateFormat formatFor(java.lang.String) -> formatFor
    void clearThreadLocal() -> clearThreadLocal
org.apache.http.client.utils.DateUtils$DateFormatHolder$1 -> org.apache.http.client.utils.DateUtils$DateFormatHolder$1:
    java.lang.ref.SoftReference initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
org.apache.http.client.utils.HttpClientUtils -> org.apache.http.client.utils.HttpClientUtils:
    void closeQuietly(org.apache.http.HttpResponse) -> closeQuietly
    void closeQuietly(org.apache.http.client.methods.CloseableHttpResponse) -> closeQuietly
    void closeQuietly(org.apache.http.client.HttpClient) -> closeQuietly
org.apache.http.client.utils.Idn -> org.apache.http.client.utils.Idn:
    java.lang.String toUnicode(java.lang.String) -> toUnicode
org.apache.http.client.utils.JdkIdn -> org.apache.http.client.utils.JdkIdn:
    java.lang.reflect.Method toUnicode -> toUnicode
    java.lang.String toUnicode(java.lang.String) -> toUnicode
org.apache.http.client.utils.Punycode -> org.apache.http.client.utils.Punycode:
    org.apache.http.client.utils.Idn impl -> impl
    java.lang.String toUnicode(java.lang.String) -> toUnicode
org.apache.http.client.utils.Rfc3492Idn -> org.apache.http.client.utils.Rfc3492Idn:
    int base -> base
    int tmin -> tmin
    int tmax -> tmax
    int skew -> skew
    int damp -> damp
    int initial_bias -> initial_bias
    int initial_n -> initial_n
    char delimiter -> delimiter
    java.lang.String ACE_PREFIX -> ACE_PREFIX
    int adapt(int,int,boolean) -> adapt
    int digit(char) -> digit
    java.lang.String toUnicode(java.lang.String) -> toUnicode
    java.lang.String decode(java.lang.String) -> decode
org.apache.http.client.utils.URIBuilder -> org.apache.http.client.utils.URIBuilder:
    java.lang.String scheme -> scheme
    java.lang.String encodedSchemeSpecificPart -> encodedSchemeSpecificPart
    java.lang.String encodedAuthority -> encodedAuthority
    java.lang.String userInfo -> userInfo
    java.lang.String encodedUserInfo -> encodedUserInfo
    java.lang.String host -> host
    int port -> port
    java.lang.String path -> path
    java.lang.String encodedPath -> encodedPath
    java.lang.String encodedQuery -> encodedQuery
    java.util.List queryParams -> queryParams
    java.lang.String query -> query
    java.lang.String fragment -> fragment
    java.lang.String encodedFragment -> encodedFragment
    java.util.List parseQuery(java.lang.String,java.nio.charset.Charset) -> parseQuery
    java.net.URI build() -> build
    java.lang.String buildString() -> buildString
    void digestURI(java.net.URI) -> digestURI
    java.lang.String encodeUserInfo(java.lang.String) -> encodeUserInfo
    java.lang.String encodePath(java.lang.String) -> encodePath
    java.lang.String encodeUrlForm(java.util.List) -> encodeUrlForm
    java.lang.String encodeUric(java.lang.String) -> encodeUric
    org.apache.http.client.utils.URIBuilder setScheme(java.lang.String) -> setScheme
    org.apache.http.client.utils.URIBuilder setUserInfo(java.lang.String) -> setUserInfo
    org.apache.http.client.utils.URIBuilder setUserInfo(java.lang.String,java.lang.String) -> setUserInfo
    org.apache.http.client.utils.URIBuilder setHost(java.lang.String) -> setHost
    org.apache.http.client.utils.URIBuilder setPort(int) -> setPort
    org.apache.http.client.utils.URIBuilder setPath(java.lang.String) -> setPath
    org.apache.http.client.utils.URIBuilder removeQuery() -> removeQuery
    org.apache.http.client.utils.URIBuilder setQuery(java.lang.String) -> setQuery
    org.apache.http.client.utils.URIBuilder setParameters(java.util.List) -> setParameters
    org.apache.http.client.utils.URIBuilder addParameters(java.util.List) -> addParameters
    org.apache.http.client.utils.URIBuilder setParameters(org.apache.http.NameValuePair[]) -> setParameters
    org.apache.http.client.utils.URIBuilder addParameter(java.lang.String,java.lang.String) -> addParameter
    org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String) -> setParameter
    org.apache.http.client.utils.URIBuilder clearParameters() -> clearParameters
    org.apache.http.client.utils.URIBuilder setCustomQuery(java.lang.String) -> setCustomQuery
    org.apache.http.client.utils.URIBuilder setFragment(java.lang.String) -> setFragment
    boolean isAbsolute() -> isAbsolute
    boolean isOpaque() -> isOpaque
    java.lang.String getScheme() -> getScheme
    java.lang.String getUserInfo() -> getUserInfo
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getPath() -> getPath
    java.util.List getQueryParams() -> getQueryParams
    java.lang.String getFragment() -> getFragment
    java.lang.String toString() -> toString
    java.lang.String normalizePath(java.lang.String) -> normalizePath
org.apache.http.client.utils.URIUtils -> org.apache.http.client.utils.URIUtils:
    java.net.URI createURI(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String) -> createURI
    java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost,boolean) -> rewriteURI
    java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost) -> rewriteURI
    java.net.URI rewriteURI(java.net.URI) -> rewriteURI
    java.net.URI resolve(java.net.URI,java.lang.String) -> resolve
    java.net.URI resolve(java.net.URI,java.net.URI) -> resolve
    java.net.URI resolveReferenceStartingWithQueryString(java.net.URI,java.net.URI) -> resolveReferenceStartingWithQueryString
    java.net.URI normalizeSyntax(java.net.URI) -> normalizeSyntax
    org.apache.http.HttpHost extractHost(java.net.URI) -> extractHost
    java.net.URI resolve(java.net.URI,org.apache.http.HttpHost,java.util.List) -> resolve
org.apache.http.client.utils.URLEncodedUtils -> org.apache.http.client.utils.URLEncodedUtils:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    char QP_SEP_A -> QP_SEP_A
    char QP_SEP_S -> QP_SEP_S
    java.lang.String NAME_VALUE_SEPARATOR -> NAME_VALUE_SEPARATOR
    char[] QP_SEPS -> QP_SEPS
    java.lang.String QP_SEP_PATTERN -> QP_SEP_PATTERN
    java.util.BitSet UNRESERVED -> UNRESERVED
    java.util.BitSet PUNCT -> PUNCT
    java.util.BitSet USERINFO -> USERINFO
    java.util.BitSet PATHSAFE -> PATHSAFE
    java.util.BitSet URIC -> URIC
    java.util.BitSet RESERVED -> RESERVED
    java.util.BitSet URLENCODER -> URLENCODER
    int RADIX -> RADIX
    java.util.List parse(java.net.URI,java.lang.String) -> parse
    java.util.List parse(org.apache.http.HttpEntity) -> parse
    boolean isEncoded(org.apache.http.HttpEntity) -> isEncoded
    void parse(java.util.List,java.util.Scanner,java.lang.String) -> parse
    void parse(java.util.List,java.util.Scanner,java.lang.String,java.lang.String) -> parse
    java.util.List parse(java.lang.String,java.nio.charset.Charset) -> parse
    java.util.List parse(java.lang.String,java.nio.charset.Charset,char[]) -> parse
    java.lang.String format(java.util.List,java.lang.String) -> format
    java.lang.String format(java.util.List,char,java.lang.String) -> format
    java.lang.String format(java.lang.Iterable,java.nio.charset.Charset) -> format
    java.lang.String format(java.lang.Iterable,char,java.nio.charset.Charset) -> format
    java.lang.String urlEncode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean) -> urlEncode
    java.lang.String urlDecode(java.lang.String,java.nio.charset.Charset,boolean) -> urlDecode
    java.lang.String decodeFormFields(java.lang.String,java.lang.String) -> decodeFormFields
    java.lang.String decodeFormFields(java.lang.String,java.nio.charset.Charset) -> decodeFormFields
    java.lang.String encodeFormFields(java.lang.String,java.lang.String) -> encodeFormFields
    java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset) -> encodeFormFields
    java.lang.String encUserInfo(java.lang.String,java.nio.charset.Charset) -> encUserInfo
    java.lang.String encUric(java.lang.String,java.nio.charset.Charset) -> encUric
    java.lang.String encPath(java.lang.String,java.nio.charset.Charset) -> encPath
org.apache.http.concurrent.BasicFuture -> org.apache.http.concurrent.BasicFuture:
    org.apache.http.concurrent.FutureCallback callback -> callback
    boolean completed -> completed
    boolean cancelled -> cancelled
    java.lang.Object result -> result
    java.lang.Exception ex -> ex
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
    java.lang.Object getResult() -> getResult
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    boolean completed(java.lang.Object) -> completed
    boolean failed(java.lang.Exception) -> failed
    boolean cancel(boolean) -> cancel
    boolean cancel() -> cancel
org.apache.http.concurrent.Cancellable -> org.apache.http.concurrent.Cancellable:
    boolean cancel() -> cancel
org.apache.http.concurrent.FutureCallback -> org.apache.http.concurrent.FutureCallback:
    void completed(java.lang.Object) -> completed
    void failed(java.lang.Exception) -> failed
    void cancelled() -> cancelled
org.apache.http.config.ConnectionConfig -> org.apache.http.config.ConnectionConfig:
    org.apache.http.config.ConnectionConfig DEFAULT -> DEFAULT
    int bufferSize -> bufferSize
    int fragmentSizeHint -> fragmentSizeHint
    java.nio.charset.Charset charset -> charset
    java.nio.charset.CodingErrorAction malformedInputAction -> malformedInputAction
    java.nio.charset.CodingErrorAction unmappableInputAction -> unmappableInputAction
    org.apache.http.config.MessageConstraints messageConstraints -> messageConstraints
    int getBufferSize() -> getBufferSize
    int getFragmentSizeHint() -> getFragmentSizeHint
    java.nio.charset.Charset getCharset() -> getCharset
    java.nio.charset.CodingErrorAction getMalformedInputAction() -> getMalformedInputAction
    java.nio.charset.CodingErrorAction getUnmappableInputAction() -> getUnmappableInputAction
    org.apache.http.config.MessageConstraints getMessageConstraints() -> getMessageConstraints
    org.apache.http.config.ConnectionConfig clone() -> clone
    java.lang.String toString() -> toString
    org.apache.http.config.ConnectionConfig$Builder custom() -> custom
    org.apache.http.config.ConnectionConfig$Builder copy(org.apache.http.config.ConnectionConfig) -> copy
    java.lang.Object clone() -> clone
org.apache.http.config.ConnectionConfig$Builder -> org.apache.http.config.ConnectionConfig$Builder:
    int bufferSize -> bufferSize
    int fragmentSizeHint -> fragmentSizeHint
    java.nio.charset.Charset charset -> charset
    java.nio.charset.CodingErrorAction malformedInputAction -> malformedInputAction
    java.nio.charset.CodingErrorAction unmappableInputAction -> unmappableInputAction
    org.apache.http.config.MessageConstraints messageConstraints -> messageConstraints
    org.apache.http.config.ConnectionConfig$Builder setBufferSize(int) -> setBufferSize
    org.apache.http.config.ConnectionConfig$Builder setFragmentSizeHint(int) -> setFragmentSizeHint
    org.apache.http.config.ConnectionConfig$Builder setCharset(java.nio.charset.Charset) -> setCharset
    org.apache.http.config.ConnectionConfig$Builder setMalformedInputAction(java.nio.charset.CodingErrorAction) -> setMalformedInputAction
    org.apache.http.config.ConnectionConfig$Builder setUnmappableInputAction(java.nio.charset.CodingErrorAction) -> setUnmappableInputAction
    org.apache.http.config.ConnectionConfig$Builder setMessageConstraints(org.apache.http.config.MessageConstraints) -> setMessageConstraints
    org.apache.http.config.ConnectionConfig build() -> build
org.apache.http.config.Lookup -> org.apache.http.config.Lookup:
    java.lang.Object lookup(java.lang.String) -> lookup
org.apache.http.config.MessageConstraints -> org.apache.http.config.MessageConstraints:
    org.apache.http.config.MessageConstraints DEFAULT -> DEFAULT
    int maxLineLength -> maxLineLength
    int maxHeaderCount -> maxHeaderCount
    int getMaxLineLength() -> getMaxLineLength
    int getMaxHeaderCount() -> getMaxHeaderCount
    org.apache.http.config.MessageConstraints clone() -> clone
    java.lang.String toString() -> toString
    org.apache.http.config.MessageConstraints lineLen(int) -> lineLen
    org.apache.http.config.MessageConstraints$Builder custom() -> custom
    org.apache.http.config.MessageConstraints$Builder copy(org.apache.http.config.MessageConstraints) -> copy
    java.lang.Object clone() -> clone
org.apache.http.config.MessageConstraints$Builder -> org.apache.http.config.MessageConstraints$Builder:
    int maxLineLength -> maxLineLength
    int maxHeaderCount -> maxHeaderCount
    org.apache.http.config.MessageConstraints$Builder setMaxLineLength(int) -> setMaxLineLength
    org.apache.http.config.MessageConstraints$Builder setMaxHeaderCount(int) -> setMaxHeaderCount
    org.apache.http.config.MessageConstraints build() -> build
org.apache.http.config.Registry -> org.apache.http.config.Registry:
    java.util.Map map -> map
    java.lang.Object lookup(java.lang.String) -> lookup
    java.lang.String toString() -> toString
org.apache.http.config.RegistryBuilder -> org.apache.http.config.RegistryBuilder:
    java.util.Map items -> items
    org.apache.http.config.RegistryBuilder create() -> create
    org.apache.http.config.RegistryBuilder register(java.lang.String,java.lang.Object) -> register
    org.apache.http.config.Registry build() -> build
    java.lang.String toString() -> toString
org.apache.http.config.SocketConfig -> org.apache.http.config.SocketConfig:
    org.apache.http.config.SocketConfig DEFAULT -> DEFAULT
    int soTimeout -> soTimeout
    boolean soReuseAddress -> soReuseAddress
    int soLinger -> soLinger
    boolean soKeepAlive -> soKeepAlive
    boolean tcpNoDelay -> tcpNoDelay
    int getSoTimeout() -> getSoTimeout
    boolean isSoReuseAddress() -> isSoReuseAddress
    int getSoLinger() -> getSoLinger
    boolean isSoKeepAlive() -> isSoKeepAlive
    boolean isTcpNoDelay() -> isTcpNoDelay
    org.apache.http.config.SocketConfig clone() -> clone
    java.lang.String toString() -> toString
    org.apache.http.config.SocketConfig$Builder custom() -> custom
    org.apache.http.config.SocketConfig$Builder copy(org.apache.http.config.SocketConfig) -> copy
    java.lang.Object clone() -> clone
org.apache.http.config.SocketConfig$Builder -> org.apache.http.config.SocketConfig$Builder:
    int soTimeout -> soTimeout
    boolean soReuseAddress -> soReuseAddress
    int soLinger -> soLinger
    boolean soKeepAlive -> soKeepAlive
    boolean tcpNoDelay -> tcpNoDelay
    org.apache.http.config.SocketConfig$Builder setSoTimeout(int) -> setSoTimeout
    org.apache.http.config.SocketConfig$Builder setSoReuseAddress(boolean) -> setSoReuseAddress
    org.apache.http.config.SocketConfig$Builder setSoLinger(int) -> setSoLinger
    org.apache.http.config.SocketConfig$Builder setSoKeepAlive(boolean) -> setSoKeepAlive
    org.apache.http.config.SocketConfig$Builder setTcpNoDelay(boolean) -> setTcpNoDelay
    org.apache.http.config.SocketConfig build() -> build
org.apache.http.conn.BasicEofSensorWatcher -> org.apache.http.conn.BasicEofSensorWatcher:
    org.apache.http.conn.ManagedClientConnection managedConn -> managedConn
    boolean attemptReuse -> attemptReuse
    boolean eofDetected(java.io.InputStream) -> eofDetected
    boolean streamClosed(java.io.InputStream) -> streamClosed
    boolean streamAbort(java.io.InputStream) -> streamAbort
org.apache.http.conn.BasicManagedEntity -> org.apache.http.conn.BasicManagedEntity:
    org.apache.http.conn.ManagedClientConnection managedConn -> managedConn
    boolean attemptReuse -> attemptReuse
    boolean isRepeatable() -> isRepeatable
    java.io.InputStream getContent() -> getContent
    void ensureConsumed() -> ensureConsumed
    void consumeContent() -> consumeContent
    void writeTo(java.io.OutputStream) -> writeTo
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
    boolean eofDetected(java.io.InputStream) -> eofDetected
    boolean streamClosed(java.io.InputStream) -> streamClosed
    boolean streamAbort(java.io.InputStream) -> streamAbort
    void releaseManagedConnection() -> releaseManagedConnection
org.apache.http.conn.ClientConnectionManager -> org.apache.http.conn.ClientConnectionManager:
    org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    void shutdown() -> shutdown
org.apache.http.conn.ClientConnectionManagerFactory -> org.apache.http.conn.ClientConnectionManagerFactory:
    org.apache.http.conn.ClientConnectionManager newInstance(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry) -> newInstance
org.apache.http.conn.ClientConnectionOperator -> org.apache.http.conn.ClientConnectionOperator:
    org.apache.http.conn.OperatedClientConnection createConnection() -> createConnection
    void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> openConnection
    void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> updateSecureConnection
org.apache.http.conn.ClientConnectionRequest -> org.apache.http.conn.ClientConnectionRequest:
    org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
    void abortRequest() -> abortRequest
org.apache.http.conn.ConnectTimeoutException -> org.apache.http.conn.ConnectTimeoutException:
    long serialVersionUID -> serialVersionUID
    org.apache.http.HttpHost host -> host
    org.apache.http.HttpHost getHost() -> getHost
org.apache.http.conn.ConnectionKeepAliveStrategy -> org.apache.http.conn.ConnectionKeepAliveStrategy:
    long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getKeepAliveDuration
org.apache.http.conn.ConnectionPoolTimeoutException -> org.apache.http.conn.ConnectionPoolTimeoutException:
    long serialVersionUID -> serialVersionUID
org.apache.http.conn.ConnectionReleaseTrigger -> org.apache.http.conn.ConnectionReleaseTrigger:
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
org.apache.http.conn.ConnectionRequest -> org.apache.http.conn.ConnectionRequest:
    org.apache.http.HttpClientConnection get(long,java.util.concurrent.TimeUnit) -> get
org.apache.http.conn.DnsResolver -> org.apache.http.conn.DnsResolver:
    java.net.InetAddress[] resolve(java.lang.String) -> resolve
org.apache.http.conn.EofSensorInputStream -> org.apache.http.conn.EofSensorInputStream:
    java.io.InputStream wrappedStream -> wrappedStream
    boolean selfClosed -> selfClosed
    org.apache.http.conn.EofSensorWatcher eofWatcher -> eofWatcher
    boolean isSelfClosed() -> isSelfClosed
    java.io.InputStream getWrappedStream() -> getWrappedStream
    boolean isReadAllowed() -> isReadAllowed
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int available() -> available
    void close() -> close
    void checkEOF(int) -> checkEOF
    void checkClose() -> checkClose
    void checkAbort() -> checkAbort
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
org.apache.http.conn.EofSensorWatcher -> org.apache.http.conn.EofSensorWatcher:
    boolean eofDetected(java.io.InputStream) -> eofDetected
    boolean streamClosed(java.io.InputStream) -> streamClosed
    boolean streamAbort(java.io.InputStream) -> streamAbort
org.apache.http.conn.HttpClientConnectionManager -> org.apache.http.conn.HttpClientConnectionManager:
    org.apache.http.conn.ConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void releaseConnection(org.apache.http.HttpClientConnection,java.lang.Object,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void connect(org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,int,org.apache.http.protocol.HttpContext) -> connect
    void upgrade(org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> upgrade
    void routeComplete(org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> routeComplete
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    void shutdown() -> shutdown
org.apache.http.conn.HttpConnectionFactory -> org.apache.http.conn.HttpConnectionFactory:
    org.apache.http.HttpConnection create(java.lang.Object,org.apache.http.config.ConnectionConfig) -> create
org.apache.http.conn.HttpHostConnectException -> org.apache.http.conn.HttpHostConnectException:
    long serialVersionUID -> serialVersionUID
    org.apache.http.HttpHost host -> host
    org.apache.http.HttpHost getHost() -> getHost
org.apache.http.conn.HttpInetSocketAddress -> org.apache.http.conn.HttpInetSocketAddress:
    long serialVersionUID -> serialVersionUID
    org.apache.http.HttpHost httphost -> httphost
    org.apache.http.HttpHost getHttpHost() -> getHttpHost
    java.lang.String toString() -> toString
org.apache.http.conn.HttpRoutedConnection -> org.apache.http.conn.HttpRoutedConnection:
    boolean isSecure() -> isSecure
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
org.apache.http.conn.ManagedClientConnection -> org.apache.http.conn.ManagedClientConnection:
    boolean isSecure() -> isSecure
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> open
    void tunnelTarget(boolean,org.apache.http.params.HttpParams) -> tunnelTarget
    void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> tunnelProxy
    void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> layerProtocol
    void markReusable() -> markReusable
    void unmarkReusable() -> unmarkReusable
    boolean isMarkedReusable() -> isMarkedReusable
    void setState(java.lang.Object) -> setState
    java.lang.Object getState() -> getState
    void setIdleDuration(long,java.util.concurrent.TimeUnit) -> setIdleDuration
org.apache.http.conn.ManagedHttpClientConnection -> org.apache.http.conn.ManagedHttpClientConnection:
    java.lang.String getId() -> getId
    void bind(java.net.Socket) -> bind
    java.net.Socket getSocket() -> getSocket
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
org.apache.http.conn.MultihomePlainSocketFactory -> org.apache.http.conn.MultihomePlainSocketFactory:
    org.apache.http.conn.MultihomePlainSocketFactory DEFAULT_FACTORY -> DEFAULT_FACTORY
    org.apache.http.conn.MultihomePlainSocketFactory getSocketFactory() -> getSocketFactory
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
org.apache.http.conn.OperatedClientConnection -> org.apache.http.conn.OperatedClientConnection:
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    boolean isSecure() -> isSecure
    java.net.Socket getSocket() -> getSocket
    void opening(java.net.Socket,org.apache.http.HttpHost) -> opening
    void openCompleted(boolean,org.apache.http.params.HttpParams) -> openCompleted
    void update(java.net.Socket,org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> update
org.apache.http.conn.SchemePortResolver -> org.apache.http.conn.SchemePortResolver:
    int resolve(org.apache.http.HttpHost) -> resolve
org.apache.http.conn.UnsupportedSchemeException -> org.apache.http.conn.UnsupportedSchemeException:
    long serialVersionUID -> serialVersionUID
org.apache.http.conn.params.ConnConnectionPNames -> org.apache.http.conn.params.ConnConnectionPNames:
    java.lang.String MAX_STATUS_LINE_GARBAGE -> MAX_STATUS_LINE_GARBAGE
org.apache.http.conn.params.ConnConnectionParamBean -> org.apache.http.conn.params.ConnConnectionParamBean:
    void setMaxStatusLineGarbage(int) -> setMaxStatusLineGarbage
org.apache.http.conn.params.ConnManagerPNames -> org.apache.http.conn.params.ConnManagerPNames:
    java.lang.String TIMEOUT -> TIMEOUT
    java.lang.String MAX_CONNECTIONS_PER_ROUTE -> MAX_CONNECTIONS_PER_ROUTE
    java.lang.String MAX_TOTAL_CONNECTIONS -> MAX_TOTAL_CONNECTIONS
org.apache.http.conn.params.ConnManagerParamBean -> org.apache.http.conn.params.ConnManagerParamBean:
    void setTimeout(long) -> setTimeout
    void setMaxTotalConnections(int) -> setMaxTotalConnections
    void setConnectionsPerRoute(org.apache.http.conn.params.ConnPerRouteBean) -> setConnectionsPerRoute
org.apache.http.conn.params.ConnManagerParams -> org.apache.http.conn.params.ConnManagerParams:
    int DEFAULT_MAX_TOTAL_CONNECTIONS -> DEFAULT_MAX_TOTAL_CONNECTIONS
    org.apache.http.conn.params.ConnPerRoute DEFAULT_CONN_PER_ROUTE -> DEFAULT_CONN_PER_ROUTE
    long getTimeout(org.apache.http.params.HttpParams) -> getTimeout
    void setTimeout(org.apache.http.params.HttpParams,long) -> setTimeout
    void setMaxConnectionsPerRoute(org.apache.http.params.HttpParams,org.apache.http.conn.params.ConnPerRoute) -> setMaxConnectionsPerRoute
    org.apache.http.conn.params.ConnPerRoute getMaxConnectionsPerRoute(org.apache.http.params.HttpParams) -> getMaxConnectionsPerRoute
    void setMaxTotalConnections(org.apache.http.params.HttpParams,int) -> setMaxTotalConnections
    int getMaxTotalConnections(org.apache.http.params.HttpParams) -> getMaxTotalConnections
org.apache.http.conn.params.ConnManagerParams$1 -> org.apache.http.conn.params.ConnManagerParams$1:
    int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
org.apache.http.conn.params.ConnPerRoute -> org.apache.http.conn.params.ConnPerRoute:
    int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
org.apache.http.conn.params.ConnPerRouteBean -> org.apache.http.conn.params.ConnPerRouteBean:
    int DEFAULT_MAX_CONNECTIONS_PER_ROUTE -> DEFAULT_MAX_CONNECTIONS_PER_ROUTE
    java.util.concurrent.ConcurrentHashMap maxPerHostMap -> maxPerHostMap
    int defaultMax -> defaultMax
    int getDefaultMax() -> getDefaultMax
    int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    void setMaxForRoute(org.apache.http.conn.routing.HttpRoute,int) -> setMaxForRoute
    int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
    void setMaxForRoutes(java.util.Map) -> setMaxForRoutes
    java.lang.String toString() -> toString
org.apache.http.conn.params.ConnRoutePNames -> org.apache.http.conn.params.ConnRoutePNames:
    java.lang.String DEFAULT_PROXY -> DEFAULT_PROXY
    java.lang.String LOCAL_ADDRESS -> LOCAL_ADDRESS
    java.lang.String FORCED_ROUTE -> FORCED_ROUTE
org.apache.http.conn.params.ConnRouteParamBean -> org.apache.http.conn.params.ConnRouteParamBean:
    void setDefaultProxy(org.apache.http.HttpHost) -> setDefaultProxy
    void setLocalAddress(java.net.InetAddress) -> setLocalAddress
    void setForcedRoute(org.apache.http.conn.routing.HttpRoute) -> setForcedRoute
org.apache.http.conn.params.ConnRouteParams -> org.apache.http.conn.params.ConnRouteParams:
    org.apache.http.HttpHost NO_HOST -> NO_HOST
    org.apache.http.conn.routing.HttpRoute NO_ROUTE -> NO_ROUTE
    org.apache.http.HttpHost getDefaultProxy(org.apache.http.params.HttpParams) -> getDefaultProxy
    void setDefaultProxy(org.apache.http.params.HttpParams,org.apache.http.HttpHost) -> setDefaultProxy
    org.apache.http.conn.routing.HttpRoute getForcedRoute(org.apache.http.params.HttpParams) -> getForcedRoute
    void setForcedRoute(org.apache.http.params.HttpParams,org.apache.http.conn.routing.HttpRoute) -> setForcedRoute
    java.net.InetAddress getLocalAddress(org.apache.http.params.HttpParams) -> getLocalAddress
    void setLocalAddress(org.apache.http.params.HttpParams,java.net.InetAddress) -> setLocalAddress
org.apache.http.conn.routing.BasicRouteDirector -> org.apache.http.conn.routing.BasicRouteDirector:
    int nextStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> nextStep
    int firstStep(org.apache.http.conn.routing.RouteInfo) -> firstStep
    int directStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> directStep
    int proxiedStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> proxiedStep
org.apache.http.conn.routing.HttpRoute -> org.apache.http.conn.routing.HttpRoute:
    org.apache.http.HttpHost targetHost -> targetHost
    java.net.InetAddress localAddress -> localAddress
    java.util.List proxyChain -> proxyChain
    org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled -> tunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType layered -> layered
    boolean secure -> secure
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    java.net.InetSocketAddress getLocalSocketAddress() -> getLocalSocketAddress
    int getHopCount() -> getHopCount
    org.apache.http.HttpHost getHopTarget(int) -> getHopTarget
    org.apache.http.HttpHost getProxyHost() -> getProxyHost
    org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType() -> getTunnelType
    boolean isTunnelled() -> isTunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType getLayerType() -> getLayerType
    boolean isLayered() -> isLayered
    boolean isSecure() -> isSecure
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.conn.routing.HttpRouteDirector -> org.apache.http.conn.routing.HttpRouteDirector:
    int UNREACHABLE -> UNREACHABLE
    int COMPLETE -> COMPLETE
    int CONNECT_TARGET -> CONNECT_TARGET
    int CONNECT_PROXY -> CONNECT_PROXY
    int TUNNEL_TARGET -> TUNNEL_TARGET
    int TUNNEL_PROXY -> TUNNEL_PROXY
    int LAYER_PROTOCOL -> LAYER_PROTOCOL
    int nextStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> nextStep
org.apache.http.conn.routing.HttpRoutePlanner -> org.apache.http.conn.routing.HttpRoutePlanner:
    org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
org.apache.http.conn.routing.RouteInfo -> org.apache.http.conn.routing.RouteInfo:
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getHopCount() -> getHopCount
    org.apache.http.HttpHost getHopTarget(int) -> getHopTarget
    org.apache.http.HttpHost getProxyHost() -> getProxyHost
    org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType() -> getTunnelType
    boolean isTunnelled() -> isTunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType getLayerType() -> getLayerType
    boolean isLayered() -> isLayered
    boolean isSecure() -> isSecure
org.apache.http.conn.routing.RouteInfo$LayerType -> org.apache.http.conn.routing.RouteInfo$LayerType:
    org.apache.http.conn.routing.RouteInfo$LayerType PLAIN -> PLAIN
    org.apache.http.conn.routing.RouteInfo$LayerType LAYERED -> LAYERED
    org.apache.http.conn.routing.RouteInfo$LayerType[] $VALUES -> $VALUES
    org.apache.http.conn.routing.RouteInfo$LayerType[] values() -> values
    org.apache.http.conn.routing.RouteInfo$LayerType valueOf(java.lang.String) -> valueOf
org.apache.http.conn.routing.RouteInfo$TunnelType -> org.apache.http.conn.routing.RouteInfo$TunnelType:
    org.apache.http.conn.routing.RouteInfo$TunnelType PLAIN -> PLAIN
    org.apache.http.conn.routing.RouteInfo$TunnelType TUNNELLED -> TUNNELLED
    org.apache.http.conn.routing.RouteInfo$TunnelType[] $VALUES -> $VALUES
    org.apache.http.conn.routing.RouteInfo$TunnelType[] values() -> values
    org.apache.http.conn.routing.RouteInfo$TunnelType valueOf(java.lang.String) -> valueOf
org.apache.http.conn.routing.RouteTracker -> org.apache.http.conn.routing.RouteTracker:
    org.apache.http.HttpHost targetHost -> targetHost
    java.net.InetAddress localAddress -> localAddress
    boolean connected -> connected
    org.apache.http.HttpHost[] proxyChain -> proxyChain
    org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled -> tunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType layered -> layered
    boolean secure -> secure
    void reset() -> reset
    void connectTarget(boolean) -> connectTarget
    void connectProxy(org.apache.http.HttpHost,boolean) -> connectProxy
    void tunnelTarget(boolean) -> tunnelTarget
    void tunnelProxy(org.apache.http.HttpHost,boolean) -> tunnelProxy
    void layerProtocol(boolean) -> layerProtocol
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getHopCount() -> getHopCount
    org.apache.http.HttpHost getHopTarget(int) -> getHopTarget
    org.apache.http.HttpHost getProxyHost() -> getProxyHost
    boolean isConnected() -> isConnected
    org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType() -> getTunnelType
    boolean isTunnelled() -> isTunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType getLayerType() -> getLayerType
    boolean isLayered() -> isLayered
    boolean isSecure() -> isSecure
    org.apache.http.conn.routing.HttpRoute toRoute() -> toRoute
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.conn.scheme.HostNameResolver -> org.apache.http.conn.scheme.HostNameResolver:
    java.net.InetAddress resolve(java.lang.String) -> resolve
org.apache.http.conn.scheme.LayeredSchemeSocketFactory -> org.apache.http.conn.scheme.LayeredSchemeSocketFactory:
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,boolean) -> createLayeredSocket
org.apache.http.conn.scheme.LayeredSocketFactory -> org.apache.http.conn.scheme.LayeredSocketFactory:
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
org.apache.http.conn.scheme.LayeredSocketFactoryAdaptor -> org.apache.http.conn.scheme.LayeredSocketFactoryAdaptor:
    org.apache.http.conn.scheme.LayeredSchemeSocketFactory factory -> factory
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
org.apache.http.conn.scheme.PlainSocketFactory -> org.apache.http.conn.scheme.PlainSocketFactory:
    org.apache.http.conn.scheme.HostNameResolver nameResolver -> nameResolver
    org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory() -> getSocketFactory
    java.net.Socket createSocket(org.apache.http.params.HttpParams) -> createSocket
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
org.apache.http.conn.scheme.Scheme -> org.apache.http.conn.scheme.Scheme:
    java.lang.String name -> name
    org.apache.http.conn.scheme.SchemeSocketFactory socketFactory -> socketFactory
    int defaultPort -> defaultPort
    boolean layered -> layered
    java.lang.String stringRep -> stringRep
    int getDefaultPort() -> getDefaultPort
    org.apache.http.conn.scheme.SocketFactory getSocketFactory() -> getSocketFactory
    org.apache.http.conn.scheme.SchemeSocketFactory getSchemeSocketFactory() -> getSchemeSocketFactory
    java.lang.String getName() -> getName
    boolean isLayered() -> isLayered
    int resolvePort(int) -> resolvePort
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.http.conn.scheme.SchemeLayeredSocketFactory -> org.apache.http.conn.scheme.SchemeLayeredSocketFactory:
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.params.HttpParams) -> createLayeredSocket
org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor -> org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor:
    org.apache.http.conn.scheme.LayeredSocketFactory factory -> factory
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.params.HttpParams) -> createLayeredSocket
org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2 -> org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2:
    org.apache.http.conn.scheme.LayeredSchemeSocketFactory factory -> factory
    java.net.Socket createSocket(org.apache.http.params.HttpParams) -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.params.HttpParams) -> createLayeredSocket
org.apache.http.conn.scheme.SchemeRegistry -> org.apache.http.conn.scheme.SchemeRegistry:
    java.util.concurrent.ConcurrentHashMap registeredSchemes -> registeredSchemes
    org.apache.http.conn.scheme.Scheme getScheme(java.lang.String) -> getScheme
    org.apache.http.conn.scheme.Scheme getScheme(org.apache.http.HttpHost) -> getScheme
    org.apache.http.conn.scheme.Scheme get(java.lang.String) -> get
    org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme) -> register
    org.apache.http.conn.scheme.Scheme unregister(java.lang.String) -> unregister
    java.util.List getSchemeNames() -> getSchemeNames
    void setItems(java.util.Map) -> setItems
org.apache.http.conn.scheme.SchemeSocketFactory -> org.apache.http.conn.scheme.SchemeSocketFactory:
    java.net.Socket createSocket(org.apache.http.params.HttpParams) -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor -> org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor:
    org.apache.http.conn.scheme.SocketFactory factory -> factory
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams) -> connectSocket
    java.net.Socket createSocket(org.apache.http.params.HttpParams) -> createSocket
    boolean isSecure(java.net.Socket) -> isSecure
    org.apache.http.conn.scheme.SocketFactory getFactory() -> getFactory
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.http.conn.scheme.SocketFactory -> org.apache.http.conn.scheme.SocketFactory:
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
org.apache.http.conn.scheme.SocketFactoryAdaptor -> org.apache.http.conn.scheme.SocketFactoryAdaptor:
    org.apache.http.conn.scheme.SchemeSocketFactory factory -> factory
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
    org.apache.http.conn.scheme.SchemeSocketFactory getFactory() -> getFactory
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.http.conn.socket.ConnectionSocketFactory -> org.apache.http.conn.socket.ConnectionSocketFactory:
    java.net.Socket createSocket(org.apache.http.protocol.HttpContext) -> createSocket
    java.net.Socket connectSocket(int,java.net.Socket,org.apache.http.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.protocol.HttpContext) -> connectSocket
org.apache.http.conn.socket.LayeredConnectionSocketFactory -> org.apache.http.conn.socket.LayeredConnectionSocketFactory:
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.protocol.HttpContext) -> createLayeredSocket
org.apache.http.conn.socket.PlainConnectionSocketFactory -> org.apache.http.conn.socket.PlainConnectionSocketFactory:
    org.apache.http.conn.socket.PlainConnectionSocketFactory INSTANCE -> INSTANCE
    org.apache.http.conn.socket.PlainConnectionSocketFactory getSocketFactory() -> getSocketFactory
    java.net.Socket createSocket(org.apache.http.protocol.HttpContext) -> createSocket
    java.net.Socket connectSocket(int,java.net.Socket,org.apache.http.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.protocol.HttpContext) -> connectSocket
org.apache.http.conn.ssl.AbstractVerifier -> org.apache.http.conn.ssl.AbstractVerifier:
    java.lang.String[] BAD_COUNTRY_2LDS -> BAD_COUNTRY_2LDS
    org.apache.commons.logging.Log log -> log
    void verify(java.lang.String,javax.net.ssl.SSLSocket) -> verify
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
    void verify(java.lang.String,java.security.cert.X509Certificate) -> verify
    void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean) -> verify
    boolean acceptableCountryWildcard(java.lang.String) -> acceptableCountryWildcard
    boolean validCountryWildcard(java.lang.String) -> validCountryWildcard
    java.lang.String[] getCNs(java.security.cert.X509Certificate) -> getCNs
    java.lang.String[] extractCNs(java.lang.String) -> extractCNs
    java.lang.String[] getSubjectAlts(java.security.cert.X509Certificate,java.lang.String) -> getSubjectAlts
    java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate) -> getDNSSubjectAlts
    int countDots(java.lang.String) -> countDots
    boolean isIPAddress(java.lang.String) -> isIPAddress
    java.lang.String normaliseIPv6Address(java.lang.String) -> normaliseIPv6Address
org.apache.http.conn.ssl.AllowAllHostnameVerifier -> org.apache.http.conn.ssl.AllowAllHostnameVerifier:
    void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
    java.lang.String toString() -> toString
org.apache.http.conn.ssl.BrowserCompatHostnameVerifier -> org.apache.http.conn.ssl.BrowserCompatHostnameVerifier:
    void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
    boolean validCountryWildcard(java.lang.String) -> validCountryWildcard
    java.lang.String toString() -> toString
org.apache.http.conn.ssl.PrivateKeyDetails -> org.apache.http.conn.ssl.PrivateKeyDetails:
    java.lang.String type -> type
    java.security.cert.X509Certificate[] certChain -> certChain
    java.lang.String getType() -> getType
    java.security.cert.X509Certificate[] getCertChain() -> getCertChain
    java.lang.String toString() -> toString
org.apache.http.conn.ssl.PrivateKeyStrategy -> org.apache.http.conn.ssl.PrivateKeyStrategy:
    java.lang.String chooseAlias(java.util.Map,java.net.Socket) -> chooseAlias
org.apache.http.conn.ssl.SSLConnectionSocketFactory -> org.apache.http.conn.ssl.SSLConnectionSocketFactory:
    java.lang.String TLS -> TLS
    java.lang.String SSL -> SSL
    java.lang.String SSLV2 -> SSLV2
    org.apache.http.conn.ssl.X509HostnameVerifier ALLOW_ALL_HOSTNAME_VERIFIER -> ALLOW_ALL_HOSTNAME_VERIFIER
    org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER -> BROWSER_COMPATIBLE_HOSTNAME_VERIFIER
    org.apache.http.conn.ssl.X509HostnameVerifier STRICT_HOSTNAME_VERIFIER -> STRICT_HOSTNAME_VERIFIER
    javax.net.ssl.SSLSocketFactory socketfactory -> socketfactory
    org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier -> hostnameVerifier
    java.lang.String[] supportedProtocols -> supportedProtocols
    java.lang.String[] supportedCipherSuites -> supportedCipherSuites
    org.apache.http.conn.ssl.SSLConnectionSocketFactory getSocketFactory() -> getSocketFactory
    java.lang.String[] split(java.lang.String) -> split
    org.apache.http.conn.ssl.SSLConnectionSocketFactory getSystemSocketFactory() -> getSystemSocketFactory
    void prepareSocket(javax.net.ssl.SSLSocket) -> prepareSocket
    java.net.Socket createSocket(org.apache.http.protocol.HttpContext) -> createSocket
    java.net.Socket connectSocket(int,java.net.Socket,org.apache.http.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.protocol.HttpContext) -> connectSocket
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.protocol.HttpContext) -> createLayeredSocket
    org.apache.http.conn.ssl.X509HostnameVerifier getHostnameVerifier() -> getHostnameVerifier
    void verifyHostname(javax.net.ssl.SSLSocket,java.lang.String) -> verifyHostname
org.apache.http.conn.ssl.SSLContextBuilder -> org.apache.http.conn.ssl.SSLContextBuilder:
    java.lang.String TLS -> TLS
    java.lang.String SSL -> SSL
    java.lang.String protocol -> protocol
    java.util.Set keymanagers -> keymanagers
    java.util.Set trustmanagers -> trustmanagers
    java.security.SecureRandom secureRandom -> secureRandom
    org.apache.http.conn.ssl.SSLContextBuilder useTLS() -> useTLS
    org.apache.http.conn.ssl.SSLContextBuilder useSSL() -> useSSL
    org.apache.http.conn.ssl.SSLContextBuilder useProtocol(java.lang.String) -> useProtocol
    org.apache.http.conn.ssl.SSLContextBuilder setSecureRandom(java.security.SecureRandom) -> setSecureRandom
    org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,org.apache.http.conn.ssl.TrustStrategy) -> loadTrustMaterial
    org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore) -> loadTrustMaterial
    org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[]) -> loadKeyMaterial
    org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[],org.apache.http.conn.ssl.PrivateKeyStrategy) -> loadKeyMaterial
    javax.net.ssl.SSLContext build() -> build
org.apache.http.conn.ssl.SSLContextBuilder$KeyManagerDelegate -> org.apache.http.conn.ssl.SSLContextBuilder$KeyManagerDelegate:
    javax.net.ssl.X509KeyManager keyManager -> keyManager
    org.apache.http.conn.ssl.PrivateKeyStrategy aliasStrategy -> aliasStrategy
    java.lang.String[] getClientAliases(java.lang.String,java.security.Principal[]) -> getClientAliases
    java.lang.String chooseClientAlias(java.lang.String[],java.security.Principal[],java.net.Socket) -> chooseClientAlias
    java.lang.String[] getServerAliases(java.lang.String,java.security.Principal[]) -> getServerAliases
    java.lang.String chooseServerAlias(java.lang.String,java.security.Principal[],java.net.Socket) -> chooseServerAlias
    java.security.cert.X509Certificate[] getCertificateChain(java.lang.String) -> getCertificateChain
    java.security.PrivateKey getPrivateKey(java.lang.String) -> getPrivateKey
org.apache.http.conn.ssl.SSLContextBuilder$TrustManagerDelegate -> org.apache.http.conn.ssl.SSLContextBuilder$TrustManagerDelegate:
    javax.net.ssl.X509TrustManager trustManager -> trustManager
    org.apache.http.conn.ssl.TrustStrategy trustStrategy -> trustStrategy
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
org.apache.http.conn.ssl.SSLContexts -> org.apache.http.conn.ssl.SSLContexts:
    javax.net.ssl.SSLContext createDefault() -> createDefault
    javax.net.ssl.SSLContext createSystemDefault() -> createSystemDefault
    org.apache.http.conn.ssl.SSLContextBuilder custom() -> custom
org.apache.http.conn.ssl.SSLInitializationException -> org.apache.http.conn.ssl.SSLInitializationException:
    long serialVersionUID -> serialVersionUID
org.apache.http.conn.ssl.SSLSocketFactory -> org.apache.http.conn.ssl.SSLSocketFactory:
    java.lang.String TLS -> TLS
    java.lang.String SSL -> SSL
    java.lang.String SSLV2 -> SSLV2
    org.apache.http.conn.ssl.X509HostnameVerifier ALLOW_ALL_HOSTNAME_VERIFIER -> ALLOW_ALL_HOSTNAME_VERIFIER
    org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER -> BROWSER_COMPATIBLE_HOSTNAME_VERIFIER
    org.apache.http.conn.ssl.X509HostnameVerifier STRICT_HOSTNAME_VERIFIER -> STRICT_HOSTNAME_VERIFIER
    javax.net.ssl.SSLSocketFactory socketfactory -> socketfactory
    org.apache.http.conn.scheme.HostNameResolver nameResolver -> nameResolver
    org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier -> hostnameVerifier
    java.lang.String[] supportedProtocols -> supportedProtocols
    java.lang.String[] supportedCipherSuites -> supportedCipherSuites
    org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory() -> getSocketFactory
    java.lang.String[] split(java.lang.String) -> split
    org.apache.http.conn.ssl.SSLSocketFactory getSystemSocketFactory() -> getSystemSocketFactory
    java.net.Socket createSocket(org.apache.http.params.HttpParams) -> createSocket
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.params.HttpParams) -> createLayeredSocket
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,boolean) -> createLayeredSocket
    void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier) -> setHostnameVerifier
    org.apache.http.conn.ssl.X509HostnameVerifier getHostnameVerifier() -> getHostnameVerifier
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    void prepareSocket(javax.net.ssl.SSLSocket) -> prepareSocket
    void internalPrepareSocket(javax.net.ssl.SSLSocket) -> internalPrepareSocket
    java.net.Socket createSocket(org.apache.http.protocol.HttpContext) -> createSocket
    java.net.Socket connectSocket(int,java.net.Socket,org.apache.http.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.protocol.HttpContext) -> connectSocket
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.protocol.HttpContext) -> createLayeredSocket
    void verifyHostname(javax.net.ssl.SSLSocket,java.lang.String) -> verifyHostname
org.apache.http.conn.ssl.StrictHostnameVerifier -> org.apache.http.conn.ssl.StrictHostnameVerifier:
    void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
    java.lang.String toString() -> toString
org.apache.http.conn.ssl.TrustSelfSignedStrategy -> org.apache.http.conn.ssl.TrustSelfSignedStrategy:
    boolean isTrusted(java.security.cert.X509Certificate[],java.lang.String) -> isTrusted
org.apache.http.conn.ssl.TrustStrategy -> org.apache.http.conn.ssl.TrustStrategy:
    boolean isTrusted(java.security.cert.X509Certificate[],java.lang.String) -> isTrusted
org.apache.http.conn.ssl.X509HostnameVerifier -> org.apache.http.conn.ssl.X509HostnameVerifier:
    void verify(java.lang.String,javax.net.ssl.SSLSocket) -> verify
    void verify(java.lang.String,java.security.cert.X509Certificate) -> verify
    void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
org.apache.http.conn.util.InetAddressUtils -> org.apache.http.conn.util.InetAddressUtils:
    java.lang.String IPV4_BASIC_PATTERN_STRING -> IPV4_BASIC_PATTERN_STRING
    java.util.regex.Pattern IPV4_PATTERN -> IPV4_PATTERN
    java.util.regex.Pattern IPV4_MAPPED_IPV6_PATTERN -> IPV4_MAPPED_IPV6_PATTERN
    java.util.regex.Pattern IPV6_STD_PATTERN -> IPV6_STD_PATTERN
    java.util.regex.Pattern IPV6_HEX_COMPRESSED_PATTERN -> IPV6_HEX_COMPRESSED_PATTERN
    char COLON_CHAR -> COLON_CHAR
    int MAX_COLON_COUNT -> MAX_COLON_COUNT
    boolean isIPv4Address(java.lang.String) -> isIPv4Address
    boolean isIPv4MappedIPv64Address(java.lang.String) -> isIPv4MappedIPv64Address
    boolean isIPv6StdAddress(java.lang.String) -> isIPv6StdAddress
    boolean isIPv6HexCompressedAddress(java.lang.String) -> isIPv6HexCompressedAddress
    boolean isIPv6Address(java.lang.String) -> isIPv6Address
org.apache.http.cookie.ClientCookie -> org.apache.http.cookie.ClientCookie:
    java.lang.String VERSION_ATTR -> VERSION_ATTR
    java.lang.String PATH_ATTR -> PATH_ATTR
    java.lang.String DOMAIN_ATTR -> DOMAIN_ATTR
    java.lang.String MAX_AGE_ATTR -> MAX_AGE_ATTR
    java.lang.String SECURE_ATTR -> SECURE_ATTR
    java.lang.String COMMENT_ATTR -> COMMENT_ATTR
    java.lang.String EXPIRES_ATTR -> EXPIRES_ATTR
    java.lang.String PORT_ATTR -> PORT_ATTR
    java.lang.String COMMENTURL_ATTR -> COMMENTURL_ATTR
    java.lang.String DISCARD_ATTR -> DISCARD_ATTR
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    boolean containsAttribute(java.lang.String) -> containsAttribute
org.apache.http.cookie.Cookie -> org.apache.http.cookie.Cookie:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String getComment() -> getComment
    java.lang.String getCommentURL() -> getCommentURL
    java.util.Date getExpiryDate() -> getExpiryDate
    boolean isPersistent() -> isPersistent
    java.lang.String getDomain() -> getDomain
    java.lang.String getPath() -> getPath
    int[] getPorts() -> getPorts
    boolean isSecure() -> isSecure
    int getVersion() -> getVersion
    boolean isExpired(java.util.Date) -> isExpired
org.apache.http.cookie.CookieAttributeHandler -> org.apache.http.cookie.CookieAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.cookie.CookieIdentityComparator -> org.apache.http.cookie.CookieIdentityComparator:
    long serialVersionUID -> serialVersionUID
    int compare(org.apache.http.cookie.Cookie,org.apache.http.cookie.Cookie) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.http.cookie.CookieOrigin -> org.apache.http.cookie.CookieOrigin:
    java.lang.String host -> host
    int port -> port
    java.lang.String path -> path
    boolean secure -> secure
    java.lang.String getHost() -> getHost
    java.lang.String getPath() -> getPath
    int getPort() -> getPort
    boolean isSecure() -> isSecure
    java.lang.String toString() -> toString
org.apache.http.cookie.CookiePathComparator -> org.apache.http.cookie.CookiePathComparator:
    long serialVersionUID -> serialVersionUID
    java.lang.String normalizePath(org.apache.http.cookie.Cookie) -> normalizePath
    int compare(org.apache.http.cookie.Cookie,org.apache.http.cookie.Cookie) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.http.cookie.CookieRestrictionViolationException -> org.apache.http.cookie.CookieRestrictionViolationException:
    long serialVersionUID -> serialVersionUID
org.apache.http.cookie.CookieSpec -> org.apache.http.cookie.CookieSpec:
    int getVersion() -> getVersion
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
    java.util.List formatCookies(java.util.List) -> formatCookies
    org.apache.http.Header getVersionHeader() -> getVersionHeader
org.apache.http.cookie.CookieSpecFactory -> org.apache.http.cookie.CookieSpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.cookie.CookieSpecProvider -> org.apache.http.cookie.CookieSpecProvider:
    org.apache.http.cookie.CookieSpec create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.cookie.CookieSpecRegistry -> org.apache.http.cookie.CookieSpecRegistry:
    java.util.concurrent.ConcurrentHashMap registeredSpecs -> registeredSpecs
    void register(java.lang.String,org.apache.http.cookie.CookieSpecFactory) -> register
    void unregister(java.lang.String) -> unregister
    org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams) -> getCookieSpec
    org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String) -> getCookieSpec
    java.util.List getSpecNames() -> getSpecNames
    void setItems(java.util.Map) -> setItems
    org.apache.http.cookie.CookieSpecProvider lookup(java.lang.String) -> lookup
    java.lang.Object lookup(java.lang.String) -> lookup
org.apache.http.cookie.CookieSpecRegistry$1 -> org.apache.http.cookie.CookieSpecRegistry$1:
    java.lang.String val$name -> val$name
    org.apache.http.cookie.CookieSpecRegistry this$0 -> this$0
    org.apache.http.cookie.CookieSpec create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.cookie.MalformedCookieException -> org.apache.http.cookie.MalformedCookieException:
    long serialVersionUID -> serialVersionUID
org.apache.http.cookie.SM -> org.apache.http.cookie.SM:
    java.lang.String COOKIE -> COOKIE
    java.lang.String COOKIE2 -> COOKIE2
    java.lang.String SET_COOKIE -> SET_COOKIE
    java.lang.String SET_COOKIE2 -> SET_COOKIE2
org.apache.http.cookie.SetCookie -> org.apache.http.cookie.SetCookie:
    void setValue(java.lang.String) -> setValue
    void setComment(java.lang.String) -> setComment
    void setExpiryDate(java.util.Date) -> setExpiryDate
    void setDomain(java.lang.String) -> setDomain
    void setPath(java.lang.String) -> setPath
    void setSecure(boolean) -> setSecure
    void setVersion(int) -> setVersion
org.apache.http.cookie.SetCookie2 -> org.apache.http.cookie.SetCookie2:
    void setCommentURL(java.lang.String) -> setCommentURL
    void setPorts(int[]) -> setPorts
    void setDiscard(boolean) -> setDiscard
org.apache.http.cookie.params.CookieSpecPNames -> org.apache.http.cookie.params.CookieSpecPNames:
    java.lang.String DATE_PATTERNS -> DATE_PATTERNS
    java.lang.String SINGLE_COOKIE_HEADER -> SINGLE_COOKIE_HEADER
org.apache.http.cookie.params.CookieSpecParamBean -> org.apache.http.cookie.params.CookieSpecParamBean:
    void setDatePatterns(java.util.Collection) -> setDatePatterns
    void setSingleHeader(boolean) -> setSingleHeader
org.apache.http.entity.AbstractHttpEntity -> org.apache.http.entity.AbstractHttpEntity:
    int OUTPUT_BUFFER_SIZE -> OUTPUT_BUFFER_SIZE
    org.apache.http.Header contentType -> contentType
    org.apache.http.Header contentEncoding -> contentEncoding
    boolean chunked -> chunked
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    boolean isChunked() -> isChunked
    void setContentType(org.apache.http.Header) -> setContentType
    void setContentType(java.lang.String) -> setContentType
    void setContentEncoding(org.apache.http.Header) -> setContentEncoding
    void setContentEncoding(java.lang.String) -> setContentEncoding
    void setChunked(boolean) -> setChunked
    void consumeContent() -> consumeContent
org.apache.http.entity.BasicHttpEntity -> org.apache.http.entity.BasicHttpEntity:
    java.io.InputStream content -> content
    long length -> length
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    boolean isRepeatable() -> isRepeatable
    void setContentLength(long) -> setContentLength
    void setContent(java.io.InputStream) -> setContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
org.apache.http.entity.BufferedHttpEntity -> org.apache.http.entity.BufferedHttpEntity:
    byte[] buffer -> buffer
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    boolean isChunked() -> isChunked
    boolean isRepeatable() -> isRepeatable
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
org.apache.http.entity.ByteArrayEntity -> org.apache.http.entity.ByteArrayEntity:
    byte[] content -> content
    byte[] b -> b
    int off -> off
    int len -> len
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    java.lang.Object clone() -> clone
org.apache.http.entity.ContentLengthStrategy -> org.apache.http.entity.ContentLengthStrategy:
    int IDENTITY -> IDENTITY
    int CHUNKED -> CHUNKED
    long determineLength(org.apache.http.HttpMessage) -> determineLength
org.apache.http.entity.ContentProducer -> org.apache.http.entity.ContentProducer:
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.ContentType -> org.apache.http.entity.ContentType:
    long serialVersionUID -> serialVersionUID
    org.apache.http.entity.ContentType APPLICATION_ATOM_XML -> APPLICATION_ATOM_XML
    org.apache.http.entity.ContentType APPLICATION_FORM_URLENCODED -> APPLICATION_FORM_URLENCODED
    org.apache.http.entity.ContentType APPLICATION_JSON -> APPLICATION_JSON
    org.apache.http.entity.ContentType APPLICATION_OCTET_STREAM -> APPLICATION_OCTET_STREAM
    org.apache.http.entity.ContentType APPLICATION_SVG_XML -> APPLICATION_SVG_XML
    org.apache.http.entity.ContentType APPLICATION_XHTML_XML -> APPLICATION_XHTML_XML
    org.apache.http.entity.ContentType APPLICATION_XML -> APPLICATION_XML
    org.apache.http.entity.ContentType MULTIPART_FORM_DATA -> MULTIPART_FORM_DATA
    org.apache.http.entity.ContentType TEXT_HTML -> TEXT_HTML
    org.apache.http.entity.ContentType TEXT_PLAIN -> TEXT_PLAIN
    org.apache.http.entity.ContentType TEXT_XML -> TEXT_XML
    org.apache.http.entity.ContentType WILDCARD -> WILDCARD
    org.apache.http.entity.ContentType DEFAULT_TEXT -> DEFAULT_TEXT
    org.apache.http.entity.ContentType DEFAULT_BINARY -> DEFAULT_BINARY
    java.lang.String mimeType -> mimeType
    java.nio.charset.Charset charset -> charset
    org.apache.http.NameValuePair[] params -> params
    java.lang.String getMimeType() -> getMimeType
    java.nio.charset.Charset getCharset() -> getCharset
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String toString() -> toString
    boolean valid(java.lang.String) -> valid
    org.apache.http.entity.ContentType create(java.lang.String,java.nio.charset.Charset) -> create
    org.apache.http.entity.ContentType create(java.lang.String) -> create
    org.apache.http.entity.ContentType create(java.lang.String,java.lang.String) -> create
    org.apache.http.entity.ContentType create(org.apache.http.HeaderElement) -> create
    org.apache.http.entity.ContentType parse(java.lang.String) -> parse
    org.apache.http.entity.ContentType get(org.apache.http.HttpEntity) -> get
    org.apache.http.entity.ContentType getOrDefault(org.apache.http.HttpEntity) -> getOrDefault
    org.apache.http.entity.ContentType withCharset(java.nio.charset.Charset) -> withCharset
    org.apache.http.entity.ContentType withCharset(java.lang.String) -> withCharset
org.apache.http.entity.EntityTemplate -> org.apache.http.entity.EntityTemplate:
    org.apache.http.entity.ContentProducer contentproducer -> contentproducer
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    boolean isRepeatable() -> isRepeatable
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
org.apache.http.entity.FileEntity -> org.apache.http.entity.FileEntity:
    java.io.File file -> file
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    java.lang.Object clone() -> clone
org.apache.http.entity.HttpEntityWrapper -> org.apache.http.entity.HttpEntityWrapper:
    org.apache.http.HttpEntity wrappedEntity -> wrappedEntity
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
org.apache.http.entity.InputStreamEntity -> org.apache.http.entity.InputStreamEntity:
    java.io.InputStream content -> content
    long length -> length
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
org.apache.http.entity.SerializableEntity -> org.apache.http.entity.SerializableEntity:
    byte[] objSer -> objSer
    java.io.Serializable objRef -> objRef
    void createBytes(java.io.Serializable) -> createBytes
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
    boolean isRepeatable() -> isRepeatable
    boolean isStreaming() -> isStreaming
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.StringEntity -> org.apache.http.entity.StringEntity:
    byte[] content -> content
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    java.lang.Object clone() -> clone
org.apache.http.entity.mime.AbstractMultipartForm -> org.apache.http.entity.mime.AbstractMultipartForm:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> FIELD_SEP
    org.apache.http.util.ByteArrayBuffer CR_LF -> CR_LF
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> TWO_DASHES
    java.lang.String subType -> subType
    java.nio.charset.Charset charset -> charset
    java.lang.String boundary -> boundary
    org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> encode
    void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.io.OutputStream) -> writeBytes
    void writeField(org.apache.http.entity.mime.MinimalField,java.io.OutputStream) -> writeField
    void writeField(org.apache.http.entity.mime.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> writeField
    java.lang.String getSubType() -> getSubType
    java.nio.charset.Charset getCharset() -> getCharset
    java.util.List getBodyParts() -> getBodyParts
    java.lang.String getBoundary() -> getBoundary
    void doWriteTo(java.io.OutputStream,boolean) -> doWriteTo
    void formatMultipartHeader(org.apache.http.entity.mime.FormBodyPart,java.io.OutputStream) -> formatMultipartHeader
    void writeTo(java.io.OutputStream) -> writeTo
    long getTotalLength() -> getTotalLength
org.apache.http.entity.mime.FormBodyPart -> org.apache.http.entity.mime.FormBodyPart:
    java.lang.String name -> name
    org.apache.http.entity.mime.Header header -> header
    org.apache.http.entity.mime.content.ContentBody body -> body
    java.lang.String getName() -> getName
    org.apache.http.entity.mime.content.ContentBody getBody() -> getBody
    org.apache.http.entity.mime.Header getHeader() -> getHeader
    void addField(java.lang.String,java.lang.String) -> addField
    void generateContentDisp(org.apache.http.entity.mime.content.ContentBody) -> generateContentDisp
    void generateContentType(org.apache.http.entity.mime.content.ContentBody) -> generateContentType
    void generateTransferEncoding(org.apache.http.entity.mime.content.ContentBody) -> generateTransferEncoding
org.apache.http.entity.mime.Header -> org.apache.http.entity.mime.Header:
    java.util.List fields -> fields
    java.util.Map fieldMap -> fieldMap
    void addField(org.apache.http.entity.mime.MinimalField) -> addField
    java.util.List getFields() -> getFields
    org.apache.http.entity.mime.MinimalField getField(java.lang.String) -> getField
    java.util.List getFields(java.lang.String) -> getFields
    int removeFields(java.lang.String) -> removeFields
    void setField(org.apache.http.entity.mime.MinimalField) -> setField
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
org.apache.http.entity.mime.HttpBrowserCompatibleMultipart -> org.apache.http.entity.mime.HttpBrowserCompatibleMultipart:
    java.util.List parts -> parts
    java.util.List getBodyParts() -> getBodyParts
    void formatMultipartHeader(org.apache.http.entity.mime.FormBodyPart,java.io.OutputStream) -> formatMultipartHeader
org.apache.http.entity.mime.HttpMultipart -> org.apache.http.entity.mime.HttpMultipart:
    org.apache.http.entity.mime.HttpMultipartMode mode -> mode
    java.util.List parts -> parts
    org.apache.http.entity.mime.HttpMultipartMode getMode() -> getMode
    void formatMultipartHeader(org.apache.http.entity.mime.FormBodyPart,java.io.OutputStream) -> formatMultipartHeader
    java.util.List getBodyParts() -> getBodyParts
    void addBodyPart(org.apache.http.entity.mime.FormBodyPart) -> addBodyPart
    long getTotalLength() -> getTotalLength
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getBoundary() -> getBoundary
    java.nio.charset.Charset getCharset() -> getCharset
    java.lang.String getSubType() -> getSubType
org.apache.http.entity.mime.HttpMultipart$1 -> org.apache.http.entity.mime.HttpMultipart$1:
    int[] $SwitchMap$org$apache$http$entity$mime$HttpMultipartMode -> $SwitchMap$org$apache$http$entity$mime$HttpMultipartMode
org.apache.http.entity.mime.HttpMultipartMode -> org.apache.http.entity.mime.HttpMultipartMode:
    org.apache.http.entity.mime.HttpMultipartMode STRICT -> STRICT
    org.apache.http.entity.mime.HttpMultipartMode BROWSER_COMPATIBLE -> BROWSER_COMPATIBLE
    org.apache.http.entity.mime.HttpMultipartMode RFC6532 -> RFC6532
    org.apache.http.entity.mime.HttpMultipartMode[] $VALUES -> $VALUES
    org.apache.http.entity.mime.HttpMultipartMode[] values() -> values
    org.apache.http.entity.mime.HttpMultipartMode valueOf(java.lang.String) -> valueOf
org.apache.http.entity.mime.HttpRFC6532Multipart -> org.apache.http.entity.mime.HttpRFC6532Multipart:
    java.util.List parts -> parts
    java.util.List getBodyParts() -> getBodyParts
    void formatMultipartHeader(org.apache.http.entity.mime.FormBodyPart,java.io.OutputStream) -> formatMultipartHeader
org.apache.http.entity.mime.HttpStrictMultipart -> org.apache.http.entity.mime.HttpStrictMultipart:
    java.util.List parts -> parts
    java.util.List getBodyParts() -> getBodyParts
    void formatMultipartHeader(org.apache.http.entity.mime.FormBodyPart,java.io.OutputStream) -> formatMultipartHeader
org.apache.http.entity.mime.MIME -> org.apache.http.entity.mime.MIME:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_TRANSFER_ENC -> CONTENT_TRANSFER_ENC
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String ENC_8BIT -> ENC_8BIT
    java.lang.String ENC_BINARY -> ENC_BINARY
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.nio.charset.Charset UTF8_CHARSET -> UTF8_CHARSET
org.apache.http.entity.mime.MinimalField -> org.apache.http.entity.mime.MinimalField:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getBody() -> getBody
    java.lang.String toString() -> toString
org.apache.http.entity.mime.MultipartEntity -> org.apache.http.entity.mime.MultipartEntity:
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    org.apache.http.entity.mime.MultipartEntityBuilder builder -> builder
    org.apache.http.entity.mime.MultipartFormEntity entity -> entity
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> generateContentType
    java.lang.String generateBoundary() -> generateBoundary
    org.apache.http.entity.mime.MultipartFormEntity getEntity() -> getEntity
    void addPart(org.apache.http.entity.mime.FormBodyPart) -> addPart
    void addPart(java.lang.String,org.apache.http.entity.mime.content.ContentBody) -> addPart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.mime.MultipartEntityBuilder -> org.apache.http.entity.mime.MultipartEntityBuilder:
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    java.lang.String DEFAULT_SUBTYPE -> DEFAULT_SUBTYPE
    java.lang.String subType -> subType
    org.apache.http.entity.mime.HttpMultipartMode mode -> mode
    java.lang.String boundary -> boundary
    java.nio.charset.Charset charset -> charset
    java.util.List bodyParts -> bodyParts
    org.apache.http.entity.mime.MultipartEntityBuilder create() -> create
    org.apache.http.entity.mime.MultipartEntityBuilder setMode(org.apache.http.entity.mime.HttpMultipartMode) -> setMode
    org.apache.http.entity.mime.MultipartEntityBuilder setLaxMode() -> setLaxMode
    org.apache.http.entity.mime.MultipartEntityBuilder setStrictMode() -> setStrictMode
    org.apache.http.entity.mime.MultipartEntityBuilder setBoundary(java.lang.String) -> setBoundary
    org.apache.http.entity.mime.MultipartEntityBuilder setCharset(java.nio.charset.Charset) -> setCharset
    org.apache.http.entity.mime.MultipartEntityBuilder addPart(org.apache.http.entity.mime.FormBodyPart) -> addPart
    org.apache.http.entity.mime.MultipartEntityBuilder addPart(java.lang.String,org.apache.http.entity.mime.content.ContentBody) -> addPart
    org.apache.http.entity.mime.MultipartEntityBuilder addTextBody(java.lang.String,java.lang.String,org.apache.http.entity.ContentType) -> addTextBody
    org.apache.http.entity.mime.MultipartEntityBuilder addTextBody(java.lang.String,java.lang.String) -> addTextBody
    org.apache.http.entity.mime.MultipartEntityBuilder addBinaryBody(java.lang.String,byte[],org.apache.http.entity.ContentType,java.lang.String) -> addBinaryBody
    org.apache.http.entity.mime.MultipartEntityBuilder addBinaryBody(java.lang.String,byte[]) -> addBinaryBody
    org.apache.http.entity.mime.MultipartEntityBuilder addBinaryBody(java.lang.String,java.io.File,org.apache.http.entity.ContentType,java.lang.String) -> addBinaryBody
    org.apache.http.entity.mime.MultipartEntityBuilder addBinaryBody(java.lang.String,java.io.File) -> addBinaryBody
    org.apache.http.entity.mime.MultipartEntityBuilder addBinaryBody(java.lang.String,java.io.InputStream,org.apache.http.entity.ContentType,java.lang.String) -> addBinaryBody
    org.apache.http.entity.mime.MultipartEntityBuilder addBinaryBody(java.lang.String,java.io.InputStream) -> addBinaryBody
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> generateContentType
    java.lang.String generateBoundary() -> generateBoundary
    org.apache.http.entity.mime.MultipartFormEntity buildEntity() -> buildEntity
    org.apache.http.HttpEntity build() -> build
org.apache.http.entity.mime.MultipartEntityBuilder$1 -> org.apache.http.entity.mime.MultipartEntityBuilder$1:
    int[] $SwitchMap$org$apache$http$entity$mime$HttpMultipartMode -> $SwitchMap$org$apache$http$entity$mime$HttpMultipartMode
org.apache.http.entity.mime.MultipartFormEntity -> org.apache.http.entity.mime.MultipartFormEntity:
    org.apache.http.entity.mime.AbstractMultipartForm multipart -> multipart
    org.apache.http.Header contentType -> contentType
    long contentLength -> contentLength
    org.apache.http.entity.mime.AbstractMultipartForm getMultipart() -> getMultipart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.mime.content.AbstractContentBody -> org.apache.http.entity.mime.content.AbstractContentBody:
    org.apache.http.entity.ContentType contentType -> contentType
    org.apache.http.entity.ContentType getContentType() -> getContentType
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    java.lang.String getCharset() -> getCharset
org.apache.http.entity.mime.content.ByteArrayBody -> org.apache.http.entity.mime.content.ByteArrayBody:
    byte[] data -> data
    java.lang.String filename -> filename
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
org.apache.http.entity.mime.content.ContentBody -> org.apache.http.entity.mime.content.ContentBody:
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.mime.content.ContentDescriptor -> org.apache.http.entity.mime.content.ContentDescriptor:
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
org.apache.http.entity.mime.content.FileBody -> org.apache.http.entity.mime.content.FileBody:
    java.io.File file -> file
    java.lang.String filename -> filename
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
    java.io.File getFile() -> getFile
org.apache.http.entity.mime.content.InputStreamBody -> org.apache.http.entity.mime.content.InputStreamBody:
    java.io.InputStream in -> in
    java.lang.String filename -> filename
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
org.apache.http.entity.mime.content.StringBody -> org.apache.http.entity.mime.content.StringBody:
    byte[] content -> content
    org.apache.http.entity.mime.content.StringBody create(java.lang.String,java.lang.String,java.nio.charset.Charset) -> create
    org.apache.http.entity.mime.content.StringBody create(java.lang.String,java.nio.charset.Charset) -> create
    org.apache.http.entity.mime.content.StringBody create(java.lang.String) -> create
    java.io.Reader getReader() -> getReader
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
org.apache.http.impl.AbstractHttpClientConnection -> org.apache.http.impl.AbstractHttpClientConnection:
    org.apache.http.impl.entity.EntitySerializer entityserializer -> entityserializer
    org.apache.http.impl.entity.EntityDeserializer entitydeserializer -> entitydeserializer
    org.apache.http.io.SessionInputBuffer inbuffer -> inbuffer
    org.apache.http.io.SessionOutputBuffer outbuffer -> outbuffer
    org.apache.http.io.EofSensor eofSensor -> eofSensor
    org.apache.http.io.HttpMessageParser responseParser -> responseParser
    org.apache.http.io.HttpMessageWriter requestWriter -> requestWriter
    org.apache.http.impl.HttpConnectionMetricsImpl metrics -> metrics
    void assertOpen() -> assertOpen
    org.apache.http.impl.entity.EntityDeserializer createEntityDeserializer() -> createEntityDeserializer
    org.apache.http.impl.entity.EntitySerializer createEntitySerializer() -> createEntitySerializer
    org.apache.http.HttpResponseFactory createHttpResponseFactory() -> createHttpResponseFactory
    org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams) -> createResponseParser
    org.apache.http.io.HttpMessageWriter createRequestWriter(org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> createRequestWriter
    org.apache.http.impl.HttpConnectionMetricsImpl createConnectionMetrics(org.apache.http.io.HttpTransportMetrics,org.apache.http.io.HttpTransportMetrics) -> createConnectionMetrics
    void init(org.apache.http.io.SessionInputBuffer,org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> init
    boolean isResponseAvailable(int) -> isResponseAvailable
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    void doFlush() -> doFlush
    void flush() -> flush
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    boolean isEof() -> isEof
    boolean isStale() -> isStale
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
org.apache.http.impl.AbstractHttpServerConnection -> org.apache.http.impl.AbstractHttpServerConnection:
    org.apache.http.impl.entity.EntitySerializer entityserializer -> entityserializer
    org.apache.http.impl.entity.EntityDeserializer entitydeserializer -> entitydeserializer
    org.apache.http.io.SessionInputBuffer inbuffer -> inbuffer
    org.apache.http.io.SessionOutputBuffer outbuffer -> outbuffer
    org.apache.http.io.EofSensor eofSensor -> eofSensor
    org.apache.http.io.HttpMessageParser requestParser -> requestParser
    org.apache.http.io.HttpMessageWriter responseWriter -> responseWriter
    org.apache.http.impl.HttpConnectionMetricsImpl metrics -> metrics
    void assertOpen() -> assertOpen
    org.apache.http.impl.entity.EntityDeserializer createEntityDeserializer() -> createEntityDeserializer
    org.apache.http.impl.entity.EntitySerializer createEntitySerializer() -> createEntitySerializer
    org.apache.http.HttpRequestFactory createHttpRequestFactory() -> createHttpRequestFactory
    org.apache.http.io.HttpMessageParser createRequestParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpRequestFactory,org.apache.http.params.HttpParams) -> createRequestParser
    org.apache.http.io.HttpMessageWriter createResponseWriter(org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> createResponseWriter
    org.apache.http.impl.HttpConnectionMetricsImpl createConnectionMetrics(org.apache.http.io.HttpTransportMetrics,org.apache.http.io.HttpTransportMetrics) -> createConnectionMetrics
    void init(org.apache.http.io.SessionInputBuffer,org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams) -> init
    org.apache.http.HttpRequest receiveRequestHeader() -> receiveRequestHeader
    void receiveRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> receiveRequestEntity
    void doFlush() -> doFlush
    void flush() -> flush
    void sendResponseHeader(org.apache.http.HttpResponse) -> sendResponseHeader
    void sendResponseEntity(org.apache.http.HttpResponse) -> sendResponseEntity
    boolean isEof() -> isEof
    boolean isStale() -> isStale
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
org.apache.http.impl.BHttpConnectionBase -> org.apache.http.impl.BHttpConnectionBase:
    org.apache.http.impl.io.SessionInputBufferImpl inbuffer -> inbuffer
    org.apache.http.impl.io.SessionOutputBufferImpl outbuffer -> outbuffer
    org.apache.http.impl.HttpConnectionMetricsImpl connMetrics -> connMetrics
    org.apache.http.entity.ContentLengthStrategy incomingContentStrategy -> incomingContentStrategy
    org.apache.http.entity.ContentLengthStrategy outgoingContentStrategy -> outgoingContentStrategy
    boolean open -> open
    java.net.Socket socket -> socket
    void ensureOpen() -> ensureOpen
    java.io.InputStream getSocketInputStream(java.net.Socket) -> getSocketInputStream
    java.io.OutputStream getSocketOutputStream(java.net.Socket) -> getSocketOutputStream
    void bind(java.net.Socket) -> bind
    org.apache.http.io.SessionInputBuffer getSessionInputBuffer() -> getSessionInputBuffer
    org.apache.http.io.SessionOutputBuffer getSessionOutputBuffer() -> getSessionOutputBuffer
    void doFlush() -> doFlush
    boolean isOpen() -> isOpen
    java.net.Socket getSocket() -> getSocket
    java.io.OutputStream createOutputStream(long,org.apache.http.io.SessionOutputBuffer) -> createOutputStream
    java.io.OutputStream prepareOutput(org.apache.http.HttpMessage) -> prepareOutput
    java.io.InputStream createInputStream(long,org.apache.http.io.SessionInputBuffer) -> createInputStream
    org.apache.http.HttpEntity prepareInput(org.apache.http.HttpMessage) -> prepareInput
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    void shutdown() -> shutdown
    void close() -> close
    int fillInputBuffer(int) -> fillInputBuffer
    boolean awaitInput(int) -> awaitInput
    boolean isStale() -> isStale
    void incrementRequestCount() -> incrementRequestCount
    void incrementResponseCount() -> incrementResponseCount
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
    java.lang.String toString() -> toString
org.apache.http.impl.ConnSupport -> org.apache.http.impl.ConnSupport:
    java.nio.charset.CharsetDecoder createDecoder(org.apache.http.config.ConnectionConfig) -> createDecoder
    java.nio.charset.CharsetEncoder createEncoder(org.apache.http.config.ConnectionConfig) -> createEncoder
org.apache.http.impl.DefaultBHttpClientConnection -> org.apache.http.impl.DefaultBHttpClientConnection:
    org.apache.http.io.HttpMessageParser responseParser -> responseParser
    org.apache.http.io.HttpMessageWriter requestWriter -> requestWriter
    void onResponseReceived(org.apache.http.HttpResponse) -> onResponseReceived
    void onRequestSubmitted(org.apache.http.HttpRequest) -> onRequestSubmitted
    void bind(java.net.Socket) -> bind
    boolean isResponseAvailable(int) -> isResponseAvailable
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    void flush() -> flush
org.apache.http.impl.DefaultBHttpClientConnectionFactory -> org.apache.http.impl.DefaultBHttpClientConnectionFactory:
    org.apache.http.impl.DefaultBHttpClientConnectionFactory INSTANCE -> INSTANCE
    org.apache.http.config.ConnectionConfig cconfig -> cconfig
    org.apache.http.entity.ContentLengthStrategy incomingContentStrategy -> incomingContentStrategy
    org.apache.http.entity.ContentLengthStrategy outgoingContentStrategy -> outgoingContentStrategy
    org.apache.http.io.HttpMessageWriterFactory requestWriterFactory -> requestWriterFactory
    org.apache.http.io.HttpMessageParserFactory responseParserFactory -> responseParserFactory
    org.apache.http.impl.DefaultBHttpClientConnection createConnection(java.net.Socket) -> createConnection
    org.apache.http.HttpConnection createConnection(java.net.Socket) -> createConnection
org.apache.http.impl.DefaultBHttpServerConnection -> org.apache.http.impl.DefaultBHttpServerConnection:
    org.apache.http.io.HttpMessageParser requestParser -> requestParser
    org.apache.http.io.HttpMessageWriter responseWriter -> responseWriter
    void onRequestReceived(org.apache.http.HttpRequest) -> onRequestReceived
    void onResponseSubmitted(org.apache.http.HttpResponse) -> onResponseSubmitted
    void bind(java.net.Socket) -> bind
    org.apache.http.HttpRequest receiveRequestHeader() -> receiveRequestHeader
    void receiveRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> receiveRequestEntity
    void sendResponseHeader(org.apache.http.HttpResponse) -> sendResponseHeader
    void sendResponseEntity(org.apache.http.HttpResponse) -> sendResponseEntity
    void flush() -> flush
org.apache.http.impl.DefaultBHttpServerConnectionFactory -> org.apache.http.impl.DefaultBHttpServerConnectionFactory:
    org.apache.http.impl.DefaultBHttpServerConnectionFactory INSTANCE -> INSTANCE
    org.apache.http.config.ConnectionConfig cconfig -> cconfig
    org.apache.http.entity.ContentLengthStrategy incomingContentStrategy -> incomingContentStrategy
    org.apache.http.entity.ContentLengthStrategy outgoingContentStrategy -> outgoingContentStrategy
    org.apache.http.io.HttpMessageParserFactory requestParserFactory -> requestParserFactory
    org.apache.http.io.HttpMessageWriterFactory responseWriterFactory -> responseWriterFactory
    org.apache.http.impl.DefaultBHttpServerConnection createConnection(java.net.Socket) -> createConnection
    org.apache.http.HttpConnection createConnection(java.net.Socket) -> createConnection
org.apache.http.impl.DefaultConnectionReuseStrategy -> org.apache.http.impl.DefaultConnectionReuseStrategy:
    org.apache.http.impl.DefaultConnectionReuseStrategy INSTANCE -> INSTANCE
    boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> keepAlive
    org.apache.http.TokenIterator createTokenIterator(org.apache.http.HeaderIterator) -> createTokenIterator
    boolean canResponseHaveBody(org.apache.http.HttpResponse) -> canResponseHaveBody
org.apache.http.impl.DefaultHttpClientConnection -> org.apache.http.impl.DefaultHttpClientConnection:
    void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
org.apache.http.impl.DefaultHttpRequestFactory -> org.apache.http.impl.DefaultHttpRequestFactory:
    org.apache.http.impl.DefaultHttpRequestFactory INSTANCE -> INSTANCE
    java.lang.String[] RFC2616_COMMON_METHODS -> RFC2616_COMMON_METHODS
    java.lang.String[] RFC2616_ENTITY_ENC_METHODS -> RFC2616_ENTITY_ENC_METHODS
    java.lang.String[] RFC2616_SPECIAL_METHODS -> RFC2616_SPECIAL_METHODS
    boolean isOneOf(java.lang.String[],java.lang.String) -> isOneOf
    org.apache.http.HttpRequest newHttpRequest(org.apache.http.RequestLine) -> newHttpRequest
    org.apache.http.HttpRequest newHttpRequest(java.lang.String,java.lang.String) -> newHttpRequest
org.apache.http.impl.DefaultHttpResponseFactory -> org.apache.http.impl.DefaultHttpResponseFactory:
    org.apache.http.impl.DefaultHttpResponseFactory INSTANCE -> INSTANCE
    org.apache.http.ReasonPhraseCatalog reasonCatalog -> reasonCatalog
    org.apache.http.HttpResponse newHttpResponse(org.apache.http.ProtocolVersion,int,org.apache.http.protocol.HttpContext) -> newHttpResponse
    org.apache.http.HttpResponse newHttpResponse(org.apache.http.StatusLine,org.apache.http.protocol.HttpContext) -> newHttpResponse
    java.util.Locale determineLocale(org.apache.http.protocol.HttpContext) -> determineLocale
org.apache.http.impl.DefaultHttpServerConnection -> org.apache.http.impl.DefaultHttpServerConnection:
    void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
org.apache.http.impl.EnglishReasonPhraseCatalog -> org.apache.http.impl.EnglishReasonPhraseCatalog:
    org.apache.http.impl.EnglishReasonPhraseCatalog INSTANCE -> INSTANCE
    java.lang.String[][] REASON_PHRASES -> REASON_PHRASES
    java.lang.String getReason(int,java.util.Locale) -> getReason
    void setReason(int,java.lang.String) -> setReason
org.apache.http.impl.HttpConnectionMetricsImpl -> org.apache.http.impl.HttpConnectionMetricsImpl:
    java.lang.String REQUEST_COUNT -> REQUEST_COUNT
    java.lang.String RESPONSE_COUNT -> RESPONSE_COUNT
    java.lang.String SENT_BYTES_COUNT -> SENT_BYTES_COUNT
    java.lang.String RECEIVED_BYTES_COUNT -> RECEIVED_BYTES_COUNT
    org.apache.http.io.HttpTransportMetrics inTransportMetric -> inTransportMetric
    org.apache.http.io.HttpTransportMetrics outTransportMetric -> outTransportMetric
    long requestCount -> requestCount
    long responseCount -> responseCount
    java.util.Map metricsCache -> metricsCache
    long getReceivedBytesCount() -> getReceivedBytesCount
    long getSentBytesCount() -> getSentBytesCount
    long getRequestCount() -> getRequestCount
    void incrementRequestCount() -> incrementRequestCount
    long getResponseCount() -> getResponseCount
    void incrementResponseCount() -> incrementResponseCount
    java.lang.Object getMetric(java.lang.String) -> getMetric
    void setMetric(java.lang.String,java.lang.Object) -> setMetric
    void reset() -> reset
org.apache.http.impl.NoConnectionReuseStrategy -> org.apache.http.impl.NoConnectionReuseStrategy:
    org.apache.http.impl.NoConnectionReuseStrategy INSTANCE -> INSTANCE
    boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> keepAlive
org.apache.http.impl.SocketHttpClientConnection -> org.apache.http.impl.SocketHttpClientConnection:
    boolean open -> open
    java.net.Socket socket -> socket
    void assertNotOpen() -> assertNotOpen
    void assertOpen() -> assertOpen
    org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionInputBuffer
    org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionOutputBuffer
    void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
    boolean isOpen() -> isOpen
    java.net.Socket getSocket() -> getSocket
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    void shutdown() -> shutdown
    void close() -> close
    void formatAddress(java.lang.StringBuilder,java.net.SocketAddress) -> formatAddress
    java.lang.String toString() -> toString
org.apache.http.impl.SocketHttpServerConnection -> org.apache.http.impl.SocketHttpServerConnection:
    boolean open -> open
    java.net.Socket socket -> socket
    void assertNotOpen() -> assertNotOpen
    void assertOpen() -> assertOpen
    org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionInputBuffer
    org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionOutputBuffer
    void bind(java.net.Socket,org.apache.http.params.HttpParams) -> bind
    java.net.Socket getSocket() -> getSocket
    boolean isOpen() -> isOpen
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    void shutdown() -> shutdown
    void close() -> close
    void formatAddress(java.lang.StringBuilder,java.net.SocketAddress) -> formatAddress
    java.lang.String toString() -> toString
org.apache.http.impl.auth.AuthSchemeBase -> org.apache.http.impl.auth.AuthSchemeBase:
    org.apache.http.auth.ChallengeState challengeState -> challengeState
    void processChallenge(org.apache.http.Header) -> processChallenge
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int) -> parseChallenge
    boolean isProxy() -> isProxy
    org.apache.http.auth.ChallengeState getChallengeState() -> getChallengeState
    java.lang.String toString() -> toString
org.apache.http.impl.auth.BasicScheme -> org.apache.http.impl.auth.BasicScheme:
    org.apache.commons.codec.binary.Base64 base64codec -> base64codec
    boolean complete -> complete
    java.lang.String getSchemeName() -> getSchemeName
    void processChallenge(org.apache.http.Header) -> processChallenge
    boolean isComplete() -> isComplete
    boolean isConnectionBased() -> isConnectionBased
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,java.lang.String,boolean) -> authenticate
org.apache.http.impl.auth.BasicSchemeFactory -> org.apache.http.impl.auth.BasicSchemeFactory:
    java.nio.charset.Charset charset -> charset
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
    org.apache.http.auth.AuthScheme create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.impl.auth.DigestScheme -> org.apache.http.impl.auth.DigestScheme:
    char[] HEXADECIMAL -> HEXADECIMAL
    boolean complete -> complete
    int QOP_UNKNOWN -> QOP_UNKNOWN
    int QOP_MISSING -> QOP_MISSING
    int QOP_AUTH_INT -> QOP_AUTH_INT
    int QOP_AUTH -> QOP_AUTH
    java.lang.String lastNonce -> lastNonce
    long nounceCount -> nounceCount
    java.lang.String cnonce -> cnonce
    java.lang.String a1 -> a1
    java.lang.String a2 -> a2
    void processChallenge(org.apache.http.Header) -> processChallenge
    boolean isComplete() -> isComplete
    java.lang.String getSchemeName() -> getSchemeName
    boolean isConnectionBased() -> isConnectionBased
    void overrideParamter(java.lang.String,java.lang.String) -> overrideParamter
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    java.security.MessageDigest createMessageDigest(java.lang.String) -> createMessageDigest
    org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> createDigestHeader
    java.lang.String getCnonce() -> getCnonce
    java.lang.String getA1() -> getA1
    java.lang.String getA2() -> getA2
    java.lang.String encode(byte[]) -> encode
    java.lang.String createCnonce() -> createCnonce
    java.lang.String toString() -> toString
org.apache.http.impl.auth.DigestSchemeFactory -> org.apache.http.impl.auth.DigestSchemeFactory:
    java.nio.charset.Charset charset -> charset
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
    org.apache.http.auth.AuthScheme create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.impl.auth.GGSSchemeBase -> org.apache.http.impl.auth.GGSSchemeBase:
    org.apache.commons.logging.Log log -> log
    org.apache.commons.codec.binary.Base64 base64codec -> base64codec
    boolean stripPort -> stripPort
    org.apache.http.impl.auth.GGSSchemeBase$State state -> state
    byte[] token -> token
    org.ietf.jgss.GSSManager getManager() -> getManager
    byte[] generateGSSToken(byte[],org.ietf.jgss.Oid,java.lang.String) -> generateGSSToken
    byte[] generateToken(byte[],java.lang.String) -> generateToken
    boolean isComplete() -> isComplete
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int) -> parseChallenge
org.apache.http.impl.auth.GGSSchemeBase$1 -> org.apache.http.impl.auth.GGSSchemeBase$1:
    int[] $SwitchMap$org$apache$http$impl$auth$GGSSchemeBase$State -> $SwitchMap$org$apache$http$impl$auth$GGSSchemeBase$State
org.apache.http.impl.auth.GGSSchemeBase$State -> org.apache.http.impl.auth.GGSSchemeBase$State:
    org.apache.http.impl.auth.GGSSchemeBase$State UNINITIATED -> UNINITIATED
    org.apache.http.impl.auth.GGSSchemeBase$State CHALLENGE_RECEIVED -> CHALLENGE_RECEIVED
    org.apache.http.impl.auth.GGSSchemeBase$State TOKEN_GENERATED -> TOKEN_GENERATED
    org.apache.http.impl.auth.GGSSchemeBase$State FAILED -> FAILED
    org.apache.http.impl.auth.GGSSchemeBase$State[] $VALUES -> $VALUES
    org.apache.http.impl.auth.GGSSchemeBase$State[] values() -> values
    org.apache.http.impl.auth.GGSSchemeBase$State valueOf(java.lang.String) -> valueOf
org.apache.http.impl.auth.HttpAuthenticator -> org.apache.http.impl.auth.HttpAuthenticator:
    org.apache.commons.logging.Log log -> log
    boolean isAuthenticationRequested(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.client.AuthenticationStrategy,org.apache.http.auth.AuthState,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    boolean handleAuthChallenge(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.client.AuthenticationStrategy,org.apache.http.auth.AuthState,org.apache.http.protocol.HttpContext) -> handleAuthChallenge
    void generateAuthResponse(org.apache.http.HttpRequest,org.apache.http.auth.AuthState,org.apache.http.protocol.HttpContext) -> generateAuthResponse
    void ensureAuthScheme(org.apache.http.auth.AuthScheme) -> ensureAuthScheme
    org.apache.http.Header doAuth(org.apache.http.auth.AuthScheme,org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> doAuth
org.apache.http.impl.auth.HttpAuthenticator$1 -> org.apache.http.impl.auth.HttpAuthenticator$1:
    int[] $SwitchMap$org$apache$http$auth$AuthProtocolState -> $SwitchMap$org$apache$http$auth$AuthProtocolState
org.apache.http.impl.auth.HttpEntityDigester -> org.apache.http.impl.auth.HttpEntityDigester:
    java.security.MessageDigest digester -> digester
    boolean closed -> closed
    byte[] digest -> digest
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    byte[] getDigest() -> getDigest
org.apache.http.impl.auth.KerberosScheme -> org.apache.http.impl.auth.KerberosScheme:
    java.lang.String KERBEROS_OID -> KERBEROS_OID
    java.lang.String getSchemeName() -> getSchemeName
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    byte[] generateToken(byte[],java.lang.String) -> generateToken
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    boolean isConnectionBased() -> isConnectionBased
org.apache.http.impl.auth.KerberosSchemeFactory -> org.apache.http.impl.auth.KerberosSchemeFactory:
    boolean stripPort -> stripPort
    boolean isStripPort() -> isStripPort
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
    org.apache.http.auth.AuthScheme create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.impl.auth.NTLMEngine -> org.apache.http.impl.auth.NTLMEngine:
    java.lang.String generateType1Msg(java.lang.String,java.lang.String) -> generateType1Msg
    java.lang.String generateType3Msg(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> generateType3Msg
org.apache.http.impl.auth.NTLMEngineException -> org.apache.http.impl.auth.NTLMEngineException:
    long serialVersionUID -> serialVersionUID
org.apache.http.impl.auth.NTLMEngineImpl -> org.apache.http.impl.auth.NTLMEngineImpl:
    int FLAG_REQUEST_UNICODE_ENCODING -> FLAG_REQUEST_UNICODE_ENCODING
    int FLAG_REQUEST_TARGET -> FLAG_REQUEST_TARGET
    int FLAG_REQUEST_SIGN -> FLAG_REQUEST_SIGN
    int FLAG_REQUEST_SEAL -> FLAG_REQUEST_SEAL
    int FLAG_REQUEST_LAN_MANAGER_KEY -> FLAG_REQUEST_LAN_MANAGER_KEY
    int FLAG_REQUEST_NTLMv1 -> FLAG_REQUEST_NTLMv1
    int FLAG_DOMAIN_PRESENT -> FLAG_DOMAIN_PRESENT
    int FLAG_WORKSTATION_PRESENT -> FLAG_WORKSTATION_PRESENT
    int FLAG_REQUEST_ALWAYS_SIGN -> FLAG_REQUEST_ALWAYS_SIGN
    int FLAG_REQUEST_NTLM2_SESSION -> FLAG_REQUEST_NTLM2_SESSION
    int FLAG_REQUEST_VERSION -> FLAG_REQUEST_VERSION
    int FLAG_TARGETINFO_PRESENT -> FLAG_TARGETINFO_PRESENT
    int FLAG_REQUEST_128BIT_KEY_EXCH -> FLAG_REQUEST_128BIT_KEY_EXCH
    int FLAG_REQUEST_EXPLICIT_KEY_EXCH -> FLAG_REQUEST_EXPLICIT_KEY_EXCH
    int FLAG_REQUEST_56BIT_ENCRYPTION -> FLAG_REQUEST_56BIT_ENCRYPTION
    java.security.SecureRandom RND_GEN -> RND_GEN
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.lang.String credentialCharset -> credentialCharset
    byte[] SIGNATURE -> SIGNATURE
    java.lang.String getResponseFor(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getResponseFor
    java.lang.String getType1Message(java.lang.String,java.lang.String) -> getType1Message
    java.lang.String getType3Message(java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[],int,java.lang.String,byte[]) -> getType3Message
    java.lang.String getCredentialCharset() -> getCredentialCharset
    void setCredentialCharset(java.lang.String) -> setCredentialCharset
    java.lang.String stripDotSuffix(java.lang.String) -> stripDotSuffix
    java.lang.String convertHost(java.lang.String) -> convertHost
    java.lang.String convertDomain(java.lang.String) -> convertDomain
    int readULong(byte[],int) -> readULong
    int readUShort(byte[],int) -> readUShort
    byte[] readSecurityBuffer(byte[],int) -> readSecurityBuffer
    byte[] makeRandomChallenge() -> makeRandomChallenge
    byte[] makeSecondaryKey() -> makeSecondaryKey
    byte[] hmacMD5(byte[],byte[]) -> hmacMD5
    byte[] RC4(byte[],byte[]) -> RC4
    byte[] ntlm2SessionResponse(byte[],byte[],byte[]) -> ntlm2SessionResponse
    byte[] lmHash(java.lang.String) -> lmHash
    byte[] ntlmHash(java.lang.String) -> ntlmHash
    byte[] lmv2Hash(java.lang.String,java.lang.String,byte[]) -> lmv2Hash
    byte[] ntlmv2Hash(java.lang.String,java.lang.String,byte[]) -> ntlmv2Hash
    byte[] lmResponse(byte[],byte[]) -> lmResponse
    byte[] lmv2Response(byte[],byte[],byte[]) -> lmv2Response
    byte[] createBlob(byte[],byte[],byte[]) -> createBlob
    java.security.Key createDESKey(byte[],int) -> createDESKey
    void oddParity(byte[]) -> oddParity
    void writeULong(byte[],int,int) -> writeULong
    int F(int,int,int) -> F
    int G(int,int,int) -> G
    int H(int,int,int) -> H
    int rotintlft(int,int) -> rotintlft
    java.lang.String generateType1Msg(java.lang.String,java.lang.String) -> generateType1Msg
    java.lang.String generateType3Msg(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> generateType3Msg
    byte[] access$000() -> access$000
    byte[] access$100() -> access$100
    byte[] access$200(java.lang.String) -> access$200
    byte[] access$300(byte[],byte[]) -> access$300
    byte[] access$400(java.lang.String) -> access$400
    byte[] access$500(java.lang.String,java.lang.String,byte[]) -> access$500
    byte[] access$600(java.lang.String,java.lang.String,byte[]) -> access$600
    byte[] access$700(byte[],byte[],byte[]) -> access$700
    byte[] access$800(byte[],byte[],byte[]) -> access$800
    java.security.Key access$900(byte[],int) -> access$900
    byte[] access$1000() -> access$1000
    int access$1100(byte[],int) -> access$1100
    int access$1200(byte[],int) -> access$1200
    byte[] access$1300(byte[],int) -> access$1300
    java.lang.String access$1400(java.lang.String) -> access$1400
    java.lang.String access$1500(java.lang.String) -> access$1500
org.apache.http.impl.auth.NTLMEngineImpl$CipherGen -> org.apache.http.impl.auth.NTLMEngineImpl$CipherGen:
    java.lang.String domain -> domain
    java.lang.String user -> user
    java.lang.String password -> password
    byte[] challenge -> challenge
    java.lang.String target -> target
    byte[] targetInformation -> targetInformation
    byte[] clientChallenge -> clientChallenge
    byte[] clientChallenge2 -> clientChallenge2
    byte[] secondaryKey -> secondaryKey
    byte[] timestamp -> timestamp
    byte[] lmHash -> lmHash
    byte[] lmResponse -> lmResponse
    byte[] ntlmHash -> ntlmHash
    byte[] ntlmResponse -> ntlmResponse
    byte[] ntlmv2Hash -> ntlmv2Hash
    byte[] lmv2Hash -> lmv2Hash
    byte[] lmv2Response -> lmv2Response
    byte[] ntlmv2Blob -> ntlmv2Blob
    byte[] ntlmv2Response -> ntlmv2Response
    byte[] ntlm2SessionResponse -> ntlm2SessionResponse
    byte[] lm2SessionResponse -> lm2SessionResponse
    byte[] lmUserSessionKey -> lmUserSessionKey
    byte[] ntlmUserSessionKey -> ntlmUserSessionKey
    byte[] ntlmv2UserSessionKey -> ntlmv2UserSessionKey
    byte[] ntlm2SessionResponseUserSessionKey -> ntlm2SessionResponseUserSessionKey
    byte[] lanManagerSessionKey -> lanManagerSessionKey
    byte[] getClientChallenge() -> getClientChallenge
    byte[] getClientChallenge2() -> getClientChallenge2
    byte[] getSecondaryKey() -> getSecondaryKey
    byte[] getLMHash() -> getLMHash
    byte[] getLMResponse() -> getLMResponse
    byte[] getNTLMHash() -> getNTLMHash
    byte[] getNTLMResponse() -> getNTLMResponse
    byte[] getLMv2Hash() -> getLMv2Hash
    byte[] getNTLMv2Hash() -> getNTLMv2Hash
    byte[] getTimestamp() -> getTimestamp
    byte[] getNTLMv2Blob() -> getNTLMv2Blob
    byte[] getNTLMv2Response() -> getNTLMv2Response
    byte[] getLMv2Response() -> getLMv2Response
    byte[] getNTLM2SessionResponse() -> getNTLM2SessionResponse
    byte[] getLM2SessionResponse() -> getLM2SessionResponse
    byte[] getLMUserSessionKey() -> getLMUserSessionKey
    byte[] getNTLMUserSessionKey() -> getNTLMUserSessionKey
    byte[] getNTLMv2UserSessionKey() -> getNTLMv2UserSessionKey
    byte[] getNTLM2SessionResponseUserSessionKey() -> getNTLM2SessionResponseUserSessionKey
    byte[] getLanManagerSessionKey() -> getLanManagerSessionKey
org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5 -> org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5:
    byte[] ipad -> ipad
    byte[] opad -> opad
    java.security.MessageDigest md5 -> md5
    byte[] getOutput() -> getOutput
    void update(byte[]) -> update
    void update(byte[],int,int) -> update
org.apache.http.impl.auth.NTLMEngineImpl$MD4 -> org.apache.http.impl.auth.NTLMEngineImpl$MD4:
    int A -> A
    int B -> B
    int C -> C
    int D -> D
    long count -> count
    byte[] dataBuffer -> dataBuffer
    void update(byte[]) -> update
    byte[] getOutput() -> getOutput
    void processBuffer() -> processBuffer
    void round1(int[]) -> round1
    void round2(int[]) -> round2
    void round3(int[]) -> round3
org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage -> org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage:
    byte[] messageContents -> messageContents
    int currentOutputPosition -> currentOutputPosition
    int getPreambleLength() -> getPreambleLength
    int getMessageLength() -> getMessageLength
    byte readByte(int) -> readByte
    void readBytes(byte[],int) -> readBytes
    int readUShort(int) -> readUShort
    int readULong(int) -> readULong
    byte[] readSecurityBuffer(int) -> readSecurityBuffer
    void prepareResponse(int,int) -> prepareResponse
    void addByte(byte) -> addByte
    void addBytes(byte[]) -> addBytes
    void addUShort(int) -> addUShort
    void addULong(int) -> addULong
    java.lang.String getResponse() -> getResponse
org.apache.http.impl.auth.NTLMEngineImpl$Type1Message -> org.apache.http.impl.auth.NTLMEngineImpl$Type1Message:
    byte[] hostBytes -> hostBytes
    byte[] domainBytes -> domainBytes
    java.lang.String getResponse() -> getResponse
org.apache.http.impl.auth.NTLMEngineImpl$Type2Message -> org.apache.http.impl.auth.NTLMEngineImpl$Type2Message:
    byte[] challenge -> challenge
    java.lang.String target -> target
    byte[] targetInfo -> targetInfo
    int flags -> flags
    byte[] getChallenge() -> getChallenge
    java.lang.String getTarget() -> getTarget
    byte[] getTargetInfo() -> getTargetInfo
    int getFlags() -> getFlags
org.apache.http.impl.auth.NTLMEngineImpl$Type3Message -> org.apache.http.impl.auth.NTLMEngineImpl$Type3Message:
    int type2Flags -> type2Flags
    byte[] domainBytes -> domainBytes
    byte[] hostBytes -> hostBytes
    byte[] userBytes -> userBytes
    byte[] lmResp -> lmResp
    byte[] ntResp -> ntResp
    byte[] sessionKey -> sessionKey
    java.lang.String getResponse() -> getResponse
org.apache.http.impl.auth.NTLMScheme -> org.apache.http.impl.auth.NTLMScheme:
    org.apache.http.impl.auth.NTLMEngine engine -> engine
    org.apache.http.impl.auth.NTLMScheme$State state -> state
    java.lang.String challenge -> challenge
    java.lang.String getSchemeName() -> getSchemeName
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    boolean isConnectionBased() -> isConnectionBased
    void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int) -> parseChallenge
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    boolean isComplete() -> isComplete
org.apache.http.impl.auth.NTLMScheme$State -> org.apache.http.impl.auth.NTLMScheme$State:
    org.apache.http.impl.auth.NTLMScheme$State UNINITIATED -> UNINITIATED
    org.apache.http.impl.auth.NTLMScheme$State CHALLENGE_RECEIVED -> CHALLENGE_RECEIVED
    org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE1_GENERATED -> MSG_TYPE1_GENERATED
    org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE2_RECEVIED -> MSG_TYPE2_RECEVIED
    org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE3_GENERATED -> MSG_TYPE3_GENERATED
    org.apache.http.impl.auth.NTLMScheme$State FAILED -> FAILED
    org.apache.http.impl.auth.NTLMScheme$State[] $VALUES -> $VALUES
    org.apache.http.impl.auth.NTLMScheme$State[] values() -> values
    org.apache.http.impl.auth.NTLMScheme$State valueOf(java.lang.String) -> valueOf
org.apache.http.impl.auth.NTLMSchemeFactory -> org.apache.http.impl.auth.NTLMSchemeFactory:
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
    org.apache.http.auth.AuthScheme create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.impl.auth.NegotiateScheme -> org.apache.http.impl.auth.NegotiateScheme:
    org.apache.commons.logging.Log log -> log
    java.lang.String SPNEGO_OID -> SPNEGO_OID
    java.lang.String KERBEROS_OID -> KERBEROS_OID
    org.apache.http.impl.auth.SpnegoTokenGenerator spengoGenerator -> spengoGenerator
    java.lang.String getSchemeName() -> getSchemeName
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    byte[] generateToken(byte[],java.lang.String) -> generateToken
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    boolean isConnectionBased() -> isConnectionBased
org.apache.http.impl.auth.NegotiateSchemeFactory -> org.apache.http.impl.auth.NegotiateSchemeFactory:
    org.apache.http.impl.auth.SpnegoTokenGenerator spengoGenerator -> spengoGenerator
    boolean stripPort -> stripPort
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
    boolean isStripPort() -> isStripPort
    org.apache.http.impl.auth.SpnegoTokenGenerator getSpengoGenerator() -> getSpengoGenerator
org.apache.http.impl.auth.RFC2617Scheme -> org.apache.http.impl.auth.RFC2617Scheme:
    java.util.Map params -> params
    java.nio.charset.Charset credentialsCharset -> credentialsCharset
    java.nio.charset.Charset getCredentialsCharset() -> getCredentialsCharset
    java.lang.String getCredentialsCharset(org.apache.http.HttpRequest) -> getCredentialsCharset
    void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int) -> parseChallenge
    java.util.Map getParameters() -> getParameters
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
org.apache.http.impl.auth.SPNegoScheme -> org.apache.http.impl.auth.SPNegoScheme:
    java.lang.String SPNEGO_OID -> SPNEGO_OID
    java.lang.String getSchemeName() -> getSchemeName
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    byte[] generateToken(byte[],java.lang.String) -> generateToken
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    boolean isConnectionBased() -> isConnectionBased
org.apache.http.impl.auth.SPNegoSchemeFactory -> org.apache.http.impl.auth.SPNegoSchemeFactory:
    boolean stripPort -> stripPort
    boolean isStripPort() -> isStripPort
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
    org.apache.http.auth.AuthScheme create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.impl.auth.SpnegoTokenGenerator -> org.apache.http.impl.auth.SpnegoTokenGenerator:
    byte[] generateSpnegoDERObject(byte[]) -> generateSpnegoDERObject
org.apache.http.impl.auth.UnsupportedDigestAlgorithmException -> org.apache.http.impl.auth.UnsupportedDigestAlgorithmException:
    long serialVersionUID -> serialVersionUID
org.apache.http.impl.client.AIMDBackoffManager -> org.apache.http.impl.client.AIMDBackoffManager:
    org.apache.http.pool.ConnPoolControl connPerRoute -> connPerRoute
    org.apache.http.impl.client.Clock clock -> clock
    java.util.Map lastRouteProbes -> lastRouteProbes
    java.util.Map lastRouteBackoffs -> lastRouteBackoffs
    long coolDown -> coolDown
    double backoffFactor -> backoffFactor
    int cap -> cap
    void backOff(org.apache.http.conn.routing.HttpRoute) -> backOff
    int getBackedOffPoolSize(int) -> getBackedOffPoolSize
    void probe(org.apache.http.conn.routing.HttpRoute) -> probe
    java.lang.Long getLastUpdate(java.util.Map,org.apache.http.conn.routing.HttpRoute) -> getLastUpdate
    void setBackoffFactor(double) -> setBackoffFactor
    void setCooldownMillis(long) -> setCooldownMillis
    void setPerHostConnectionCap(int) -> setPerHostConnectionCap
org.apache.http.impl.client.AbstractAuthenticationHandler -> org.apache.http.impl.client.AbstractAuthenticationHandler:
    org.apache.commons.logging.Log log -> log
    java.util.List DEFAULT_SCHEME_PRIORITY -> DEFAULT_SCHEME_PRIORITY
    java.util.Map parseChallenges(org.apache.http.Header[]) -> parseChallenges
    java.util.List getAuthPreferences() -> getAuthPreferences
    java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getAuthPreferences
    org.apache.http.auth.AuthScheme selectScheme(java.util.Map,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> selectScheme
org.apache.http.impl.client.AbstractHttpClient -> org.apache.http.impl.client.AbstractHttpClient:
    org.apache.commons.logging.Log log -> log
    org.apache.http.params.HttpParams defaultParams -> defaultParams
    org.apache.http.protocol.HttpRequestExecutor requestExec -> requestExec
    org.apache.http.conn.ClientConnectionManager connManager -> connManager
    org.apache.http.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy -> keepAliveStrategy
    org.apache.http.cookie.CookieSpecRegistry supportedCookieSpecs -> supportedCookieSpecs
    org.apache.http.auth.AuthSchemeRegistry supportedAuthSchemes -> supportedAuthSchemes
    org.apache.http.protocol.BasicHttpProcessor mutableProcessor -> mutableProcessor
    org.apache.http.protocol.ImmutableHttpProcessor protocolProcessor -> protocolProcessor
    org.apache.http.client.HttpRequestRetryHandler retryHandler -> retryHandler
    org.apache.http.client.RedirectStrategy redirectStrategy -> redirectStrategy
    org.apache.http.client.AuthenticationStrategy targetAuthStrategy -> targetAuthStrategy
    org.apache.http.client.AuthenticationStrategy proxyAuthStrategy -> proxyAuthStrategy
    org.apache.http.client.CookieStore cookieStore -> cookieStore
    org.apache.http.client.CredentialsProvider credsProvider -> credsProvider
    org.apache.http.conn.routing.HttpRoutePlanner routePlanner -> routePlanner
    org.apache.http.client.UserTokenHandler userTokenHandler -> userTokenHandler
    org.apache.http.client.ConnectionBackoffStrategy connectionBackoffStrategy -> connectionBackoffStrategy
    org.apache.http.client.BackoffManager backoffManager -> backoffManager
    org.apache.http.params.HttpParams createHttpParams() -> createHttpParams
    org.apache.http.protocol.BasicHttpProcessor createHttpProcessor() -> createHttpProcessor
    org.apache.http.protocol.HttpContext createHttpContext() -> createHttpContext
    org.apache.http.conn.ClientConnectionManager createClientConnectionManager() -> createClientConnectionManager
    org.apache.http.auth.AuthSchemeRegistry createAuthSchemeRegistry() -> createAuthSchemeRegistry
    org.apache.http.cookie.CookieSpecRegistry createCookieSpecRegistry() -> createCookieSpecRegistry
    org.apache.http.protocol.HttpRequestExecutor createRequestExecutor() -> createRequestExecutor
    org.apache.http.ConnectionReuseStrategy createConnectionReuseStrategy() -> createConnectionReuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy createConnectionKeepAliveStrategy() -> createConnectionKeepAliveStrategy
    org.apache.http.client.HttpRequestRetryHandler createHttpRequestRetryHandler() -> createHttpRequestRetryHandler
    org.apache.http.client.RedirectHandler createRedirectHandler() -> createRedirectHandler
    org.apache.http.client.AuthenticationStrategy createTargetAuthenticationStrategy() -> createTargetAuthenticationStrategy
    org.apache.http.client.AuthenticationHandler createTargetAuthenticationHandler() -> createTargetAuthenticationHandler
    org.apache.http.client.AuthenticationStrategy createProxyAuthenticationStrategy() -> createProxyAuthenticationStrategy
    org.apache.http.client.AuthenticationHandler createProxyAuthenticationHandler() -> createProxyAuthenticationHandler
    org.apache.http.client.CookieStore createCookieStore() -> createCookieStore
    org.apache.http.client.CredentialsProvider createCredentialsProvider() -> createCredentialsProvider
    org.apache.http.conn.routing.HttpRoutePlanner createHttpRoutePlanner() -> createHttpRoutePlanner
    org.apache.http.client.UserTokenHandler createUserTokenHandler() -> createUserTokenHandler
    org.apache.http.params.HttpParams getParams() -> getParams
    void setParams(org.apache.http.params.HttpParams) -> setParams
    org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.http.protocol.HttpRequestExecutor getRequestExecutor() -> getRequestExecutor
    org.apache.http.auth.AuthSchemeRegistry getAuthSchemes() -> getAuthSchemes
    void setAuthSchemes(org.apache.http.auth.AuthSchemeRegistry) -> setAuthSchemes
    org.apache.http.client.ConnectionBackoffStrategy getConnectionBackoffStrategy() -> getConnectionBackoffStrategy
    void setConnectionBackoffStrategy(org.apache.http.client.ConnectionBackoffStrategy) -> setConnectionBackoffStrategy
    org.apache.http.cookie.CookieSpecRegistry getCookieSpecs() -> getCookieSpecs
    org.apache.http.client.BackoffManager getBackoffManager() -> getBackoffManager
    void setBackoffManager(org.apache.http.client.BackoffManager) -> setBackoffManager
    void setCookieSpecs(org.apache.http.cookie.CookieSpecRegistry) -> setCookieSpecs
    org.apache.http.ConnectionReuseStrategy getConnectionReuseStrategy() -> getConnectionReuseStrategy
    void setReuseStrategy(org.apache.http.ConnectionReuseStrategy) -> setReuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy getConnectionKeepAliveStrategy() -> getConnectionKeepAliveStrategy
    void setKeepAliveStrategy(org.apache.http.conn.ConnectionKeepAliveStrategy) -> setKeepAliveStrategy
    org.apache.http.client.HttpRequestRetryHandler getHttpRequestRetryHandler() -> getHttpRequestRetryHandler
    void setHttpRequestRetryHandler(org.apache.http.client.HttpRequestRetryHandler) -> setHttpRequestRetryHandler
    org.apache.http.client.RedirectHandler getRedirectHandler() -> getRedirectHandler
    void setRedirectHandler(org.apache.http.client.RedirectHandler) -> setRedirectHandler
    org.apache.http.client.RedirectStrategy getRedirectStrategy() -> getRedirectStrategy
    void setRedirectStrategy(org.apache.http.client.RedirectStrategy) -> setRedirectStrategy
    org.apache.http.client.AuthenticationHandler getTargetAuthenticationHandler() -> getTargetAuthenticationHandler
    void setTargetAuthenticationHandler(org.apache.http.client.AuthenticationHandler) -> setTargetAuthenticationHandler
    org.apache.http.client.AuthenticationStrategy getTargetAuthenticationStrategy() -> getTargetAuthenticationStrategy
    void setTargetAuthenticationStrategy(org.apache.http.client.AuthenticationStrategy) -> setTargetAuthenticationStrategy
    org.apache.http.client.AuthenticationHandler getProxyAuthenticationHandler() -> getProxyAuthenticationHandler
    void setProxyAuthenticationHandler(org.apache.http.client.AuthenticationHandler) -> setProxyAuthenticationHandler
    org.apache.http.client.AuthenticationStrategy getProxyAuthenticationStrategy() -> getProxyAuthenticationStrategy
    void setProxyAuthenticationStrategy(org.apache.http.client.AuthenticationStrategy) -> setProxyAuthenticationStrategy
    org.apache.http.client.CookieStore getCookieStore() -> getCookieStore
    void setCookieStore(org.apache.http.client.CookieStore) -> setCookieStore
    org.apache.http.client.CredentialsProvider getCredentialsProvider() -> getCredentialsProvider
    void setCredentialsProvider(org.apache.http.client.CredentialsProvider) -> setCredentialsProvider
    org.apache.http.conn.routing.HttpRoutePlanner getRoutePlanner() -> getRoutePlanner
    void setRoutePlanner(org.apache.http.conn.routing.HttpRoutePlanner) -> setRoutePlanner
    org.apache.http.client.UserTokenHandler getUserTokenHandler() -> getUserTokenHandler
    void setUserTokenHandler(org.apache.http.client.UserTokenHandler) -> setUserTokenHandler
    org.apache.http.protocol.BasicHttpProcessor getHttpProcessor() -> getHttpProcessor
    org.apache.http.protocol.HttpProcessor getProtocolProcessor() -> getProtocolProcessor
    int getResponseInterceptorCount() -> getResponseInterceptorCount
    org.apache.http.HttpResponseInterceptor getResponseInterceptor(int) -> getResponseInterceptor
    org.apache.http.HttpRequestInterceptor getRequestInterceptor(int) -> getRequestInterceptor
    int getRequestInterceptorCount() -> getRequestInterceptorCount
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor) -> addResponseInterceptor
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addResponseInterceptor
    void clearResponseInterceptors() -> clearResponseInterceptors
    void removeResponseInterceptorByClass(java.lang.Class) -> removeResponseInterceptorByClass
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor) -> addRequestInterceptor
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addRequestInterceptor
    void clearRequestInterceptors() -> clearRequestInterceptors
    void removeRequestInterceptorByClass(java.lang.Class) -> removeRequestInterceptorByClass
    org.apache.http.client.methods.CloseableHttpResponse doExecute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> doExecute
    org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams) -> createClientRequestDirector
    org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams) -> createClientRequestDirector
    org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationStrategy,org.apache.http.client.AuthenticationStrategy,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams) -> createClientRequestDirector
    org.apache.http.params.HttpParams determineParams(org.apache.http.HttpRequest) -> determineParams
    void close() -> close
org.apache.http.impl.client.AuthenticationStrategyAdaptor -> org.apache.http.impl.client.AuthenticationStrategyAdaptor:
    org.apache.commons.logging.Log log -> log
    org.apache.http.client.AuthenticationHandler handler -> handler
    boolean isAuthenticationRequested(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    java.util.Queue select(java.util.Map,org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> select
    void authSucceeded(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authSucceeded
    void authFailed(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authFailed
    boolean isCachable(org.apache.http.auth.AuthScheme) -> isCachable
    org.apache.http.client.AuthenticationHandler getHandler() -> getHandler
org.apache.http.impl.client.AuthenticationStrategyImpl -> org.apache.http.impl.client.AuthenticationStrategyImpl:
    org.apache.commons.logging.Log log -> log
    java.util.List DEFAULT_SCHEME_PRIORITY -> DEFAULT_SCHEME_PRIORITY
    int challengeCode -> challengeCode
    java.lang.String headerName -> headerName
    boolean isAuthenticationRequested(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    java.util.Collection getPreferredAuthSchemes(org.apache.http.client.config.RequestConfig) -> getPreferredAuthSchemes
    java.util.Queue select(java.util.Map,org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> select
    void authSucceeded(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authSucceeded
    boolean isCachable(org.apache.http.auth.AuthScheme) -> isCachable
    void authFailed(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authFailed
org.apache.http.impl.client.AutoRetryHttpClient -> org.apache.http.impl.client.AutoRetryHttpClient:
    org.apache.http.client.HttpClient backend -> backend
    org.apache.http.client.ServiceUnavailableRetryStrategy retryStrategy -> retryStrategy
    org.apache.commons.logging.Log log -> log
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.http.params.HttpParams getParams() -> getParams
org.apache.http.impl.client.BasicAuthCache -> org.apache.http.impl.client.BasicAuthCache:
    java.util.HashMap map -> map
    org.apache.http.conn.SchemePortResolver schemePortResolver -> schemePortResolver
    org.apache.http.HttpHost getKey(org.apache.http.HttpHost) -> getKey
    void put(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme) -> put
    org.apache.http.auth.AuthScheme get(org.apache.http.HttpHost) -> get
    void remove(org.apache.http.HttpHost) -> remove
    void clear() -> clear
    java.lang.String toString() -> toString
org.apache.http.impl.client.BasicCookieStore -> org.apache.http.impl.client.BasicCookieStore:
    long serialVersionUID -> serialVersionUID
    java.util.TreeSet cookies -> cookies
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    void addCookies(org.apache.http.cookie.Cookie[]) -> addCookies
    java.util.List getCookies() -> getCookies
    boolean clearExpired(java.util.Date) -> clearExpired
    void clear() -> clear
    java.lang.String toString() -> toString
org.apache.http.impl.client.BasicCredentialsProvider -> org.apache.http.impl.client.BasicCredentialsProvider:
    java.util.concurrent.ConcurrentHashMap credMap -> credMap
    void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials) -> setCredentials
    org.apache.http.auth.Credentials matchCredentials(java.util.Map,org.apache.http.auth.AuthScope) -> matchCredentials
    org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope) -> getCredentials
    void clear() -> clear
    java.lang.String toString() -> toString
org.apache.http.impl.client.BasicResponseHandler -> org.apache.http.impl.client.BasicResponseHandler:
    java.lang.String handleResponse(org.apache.http.HttpResponse) -> handleResponse
    java.lang.Object handleResponse(org.apache.http.HttpResponse) -> handleResponse
org.apache.http.impl.client.ClientParamsStack -> org.apache.http.impl.client.ClientParamsStack:
    org.apache.http.params.HttpParams applicationParams -> applicationParams
    org.apache.http.params.HttpParams clientParams -> clientParams
    org.apache.http.params.HttpParams requestParams -> requestParams
    org.apache.http.params.HttpParams overrideParams -> overrideParams
    org.apache.http.params.HttpParams getApplicationParams() -> getApplicationParams
    org.apache.http.params.HttpParams getClientParams() -> getClientParams
    org.apache.http.params.HttpParams getRequestParams() -> getRequestParams
    org.apache.http.params.HttpParams getOverrideParams() -> getOverrideParams
    java.lang.Object getParameter(java.lang.String) -> getParameter
    org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    boolean removeParameter(java.lang.String) -> removeParameter
    org.apache.http.params.HttpParams copy() -> copy
org.apache.http.impl.client.Clock -> org.apache.http.impl.client.Clock:
    long getCurrentTime() -> getCurrentTime
org.apache.http.impl.client.CloseableHttpClient -> org.apache.http.impl.client.CloseableHttpClient:
    org.apache.commons.logging.Log log -> log
    org.apache.http.client.methods.CloseableHttpResponse doExecute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> doExecute
    org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpHost determineTarget(org.apache.http.client.methods.HttpUriRequest) -> determineTarget
    org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
org.apache.http.impl.client.CloseableHttpResponseProxy -> org.apache.http.impl.client.CloseableHttpResponseProxy:
    java.lang.reflect.Constructor CONSTRUCTOR -> CONSTRUCTOR
    org.apache.http.HttpResponse original -> original
    void close() -> close
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    org.apache.http.client.methods.CloseableHttpResponse newProxy(org.apache.http.HttpResponse) -> newProxy
org.apache.http.impl.client.ContentEncodingHttpClient -> org.apache.http.impl.client.ContentEncodingHttpClient:
    org.apache.http.protocol.BasicHttpProcessor createHttpProcessor() -> createHttpProcessor
org.apache.http.impl.client.DecompressingHttpClient -> org.apache.http.impl.client.DecompressingHttpClient:
    org.apache.http.client.HttpClient backend -> backend
    org.apache.http.HttpRequestInterceptor acceptEncodingInterceptor -> acceptEncodingInterceptor
    org.apache.http.HttpResponseInterceptor contentEncodingInterceptor -> contentEncodingInterceptor
    org.apache.http.params.HttpParams getParams() -> getParams
    org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    org.apache.http.HttpHost getHttpHost(org.apache.http.client.methods.HttpUriRequest) -> getHttpHost
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
org.apache.http.impl.client.DefaultBackoffStrategy -> org.apache.http.impl.client.DefaultBackoffStrategy:
    boolean shouldBackoff(java.lang.Throwable) -> shouldBackoff
    boolean shouldBackoff(org.apache.http.HttpResponse) -> shouldBackoff
org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy -> org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy:
    org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy INSTANCE -> INSTANCE
    long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getKeepAliveDuration
org.apache.http.impl.client.DefaultHttpClient -> org.apache.http.impl.client.DefaultHttpClient:
    org.apache.http.params.HttpParams createHttpParams() -> createHttpParams
    void setDefaultHttpParams(org.apache.http.params.HttpParams) -> setDefaultHttpParams
    org.apache.http.protocol.BasicHttpProcessor createHttpProcessor() -> createHttpProcessor
org.apache.http.impl.client.DefaultHttpRequestRetryHandler -> org.apache.http.impl.client.DefaultHttpRequestRetryHandler:
    org.apache.http.impl.client.DefaultHttpRequestRetryHandler INSTANCE -> INSTANCE
    int retryCount -> retryCount
    boolean requestSentRetryEnabled -> requestSentRetryEnabled
    java.util.Set nonRetriableClasses -> nonRetriableClasses
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
    boolean isRequestSentRetryEnabled() -> isRequestSentRetryEnabled
    int getRetryCount() -> getRetryCount
    boolean handleAsIdempotent(org.apache.http.HttpRequest) -> handleAsIdempotent
    boolean requestIsAborted(org.apache.http.HttpRequest) -> requestIsAborted
org.apache.http.impl.client.DefaultProxyAuthenticationHandler -> org.apache.http.impl.client.DefaultProxyAuthenticationHandler:
    boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getAuthPreferences
org.apache.http.impl.client.DefaultRedirectHandler -> org.apache.http.impl.client.DefaultRedirectHandler:
    org.apache.commons.logging.Log log -> log
    java.lang.String REDIRECT_LOCATIONS -> REDIRECT_LOCATIONS
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
org.apache.http.impl.client.DefaultRedirectStrategy -> org.apache.http.impl.client.DefaultRedirectStrategy:
    org.apache.commons.logging.Log log -> log
    java.lang.String REDIRECT_LOCATIONS -> REDIRECT_LOCATIONS
    org.apache.http.impl.client.DefaultRedirectStrategy INSTANCE -> INSTANCE
    java.lang.String[] REDIRECT_METHODS -> REDIRECT_METHODS
    boolean isRedirected(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirected
    java.net.URI getLocationURI(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
    java.net.URI createLocationURI(java.lang.String) -> createLocationURI
    boolean isRedirectable(java.lang.String) -> isRedirectable
    org.apache.http.client.methods.HttpUriRequest getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getRedirect
org.apache.http.impl.client.DefaultRedirectStrategyAdaptor -> org.apache.http.impl.client.DefaultRedirectStrategyAdaptor:
    org.apache.http.client.RedirectHandler handler -> handler
    boolean isRedirected(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirected
    org.apache.http.client.methods.HttpUriRequest getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getRedirect
    org.apache.http.client.RedirectHandler getHandler() -> getHandler
org.apache.http.impl.client.DefaultRequestDirector -> org.apache.http.impl.client.DefaultRequestDirector:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.ClientConnectionManager connManager -> connManager
    org.apache.http.conn.routing.HttpRoutePlanner routePlanner -> routePlanner
    org.apache.http.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy -> keepAliveStrategy
    org.apache.http.protocol.HttpRequestExecutor requestExec -> requestExec
    org.apache.http.protocol.HttpProcessor httpProcessor -> httpProcessor
    org.apache.http.client.HttpRequestRetryHandler retryHandler -> retryHandler
    org.apache.http.client.RedirectHandler redirectHandler -> redirectHandler
    org.apache.http.client.RedirectStrategy redirectStrategy -> redirectStrategy
    org.apache.http.client.AuthenticationHandler targetAuthHandler -> targetAuthHandler
    org.apache.http.client.AuthenticationStrategy targetAuthStrategy -> targetAuthStrategy
    org.apache.http.client.AuthenticationHandler proxyAuthHandler -> proxyAuthHandler
    org.apache.http.client.AuthenticationStrategy proxyAuthStrategy -> proxyAuthStrategy
    org.apache.http.client.UserTokenHandler userTokenHandler -> userTokenHandler
    org.apache.http.params.HttpParams params -> params
    org.apache.http.conn.ManagedClientConnection managedConn -> managedConn
    org.apache.http.auth.AuthState targetAuthState -> targetAuthState
    org.apache.http.auth.AuthState proxyAuthState -> proxyAuthState
    org.apache.http.impl.client.HttpAuthenticator authenticator -> authenticator
    int execCount -> execCount
    int redirectCount -> redirectCount
    int maxRedirects -> maxRedirects
    org.apache.http.HttpHost virtualHost -> virtualHost
    org.apache.http.impl.client.RequestWrapper wrapRequest(org.apache.http.HttpRequest) -> wrapRequest
    void rewriteRequestURI(org.apache.http.impl.client.RequestWrapper,org.apache.http.conn.routing.HttpRoute) -> rewriteRequestURI
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext) -> tryConnect
    org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext) -> tryExecute
    void releaseConnection() -> releaseConnection
    org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
    void establishRoute(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> establishRoute
    boolean createTunnelToTarget(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> createTunnelToTarget
    boolean createTunnelToProxy(org.apache.http.conn.routing.HttpRoute,int,org.apache.http.protocol.HttpContext) -> createTunnelToProxy
    org.apache.http.HttpRequest createConnectRequest(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> createConnectRequest
    org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> handleResponse
    void abortConnection() -> abortConnection
org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy -> org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy:
    int maxRetries -> maxRetries
    long retryInterval -> retryInterval
    boolean retryRequest(org.apache.http.HttpResponse,int,org.apache.http.protocol.HttpContext) -> retryRequest
    long getRetryInterval() -> getRetryInterval
org.apache.http.impl.client.DefaultTargetAuthenticationHandler -> org.apache.http.impl.client.DefaultTargetAuthenticationHandler:
    boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getAuthPreferences
org.apache.http.impl.client.DefaultUserTokenHandler -> org.apache.http.impl.client.DefaultUserTokenHandler:
    org.apache.http.impl.client.DefaultUserTokenHandler INSTANCE -> INSTANCE
    java.lang.Object getUserToken(org.apache.http.protocol.HttpContext) -> getUserToken
    java.security.Principal getAuthPrincipal(org.apache.http.auth.AuthState) -> getAuthPrincipal
org.apache.http.impl.client.EntityEnclosingRequestWrapper -> org.apache.http.impl.client.EntityEnclosingRequestWrapper:
    org.apache.http.HttpEntity entity -> entity
    boolean consumed -> consumed
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
    boolean isRepeatable() -> isRepeatable
    boolean access$002(org.apache.http.impl.client.EntityEnclosingRequestWrapper,boolean) -> access$002
org.apache.http.impl.client.EntityEnclosingRequestWrapper$EntityWrapper -> org.apache.http.impl.client.EntityEnclosingRequestWrapper$EntityWrapper:
    org.apache.http.impl.client.EntityEnclosingRequestWrapper this$0 -> this$0
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.impl.client.FutureRequestExecutionMetrics -> org.apache.http.impl.client.FutureRequestExecutionMetrics:
    java.util.concurrent.atomic.AtomicLong activeConnections -> activeConnections
    java.util.concurrent.atomic.AtomicLong scheduledConnections -> scheduledConnections
    org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter successfulConnections -> successfulConnections
    org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter failedConnections -> failedConnections
    org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter requests -> requests
    org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter tasks -> tasks
    java.util.concurrent.atomic.AtomicLong getActiveConnections() -> getActiveConnections
    java.util.concurrent.atomic.AtomicLong getScheduledConnections() -> getScheduledConnections
    org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter getSuccessfulConnections() -> getSuccessfulConnections
    org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter getFailedConnections() -> getFailedConnections
    org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter getRequests() -> getRequests
    org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter getTasks() -> getTasks
    long getActiveConnectionCount() -> getActiveConnectionCount
    long getScheduledConnectionCount() -> getScheduledConnectionCount
    long getSuccessfulConnectionCount() -> getSuccessfulConnectionCount
    long getSuccessfulConnectionAverageDuration() -> getSuccessfulConnectionAverageDuration
    long getFailedConnectionCount() -> getFailedConnectionCount
    long getFailedConnectionAverageDuration() -> getFailedConnectionAverageDuration
    long getRequestCount() -> getRequestCount
    long getRequestAverageDuration() -> getRequestAverageDuration
    long getTaskCount() -> getTaskCount
    long getTaskAverageDuration() -> getTaskAverageDuration
    java.lang.String toString() -> toString
org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter -> org.apache.http.impl.client.FutureRequestExecutionMetrics$DurationCounter:
    java.util.concurrent.atomic.AtomicLong count -> count
    java.util.concurrent.atomic.AtomicLong cumulativeDuration -> cumulativeDuration
    void increment(long) -> increment
    long count() -> count
    long averageDuration() -> averageDuration
    java.lang.String toString() -> toString
org.apache.http.impl.client.FutureRequestExecutionService -> org.apache.http.impl.client.FutureRequestExecutionService:
    org.apache.http.client.HttpClient httpclient -> httpclient
    java.util.concurrent.ExecutorService executorService -> executorService
    org.apache.http.impl.client.FutureRequestExecutionMetrics metrics -> metrics
    java.util.concurrent.atomic.AtomicBoolean closed -> closed
    org.apache.http.impl.client.HttpRequestFutureTask execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext,org.apache.http.client.ResponseHandler) -> execute
    org.apache.http.impl.client.HttpRequestFutureTask execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext,org.apache.http.client.ResponseHandler,org.apache.http.concurrent.FutureCallback) -> execute
    org.apache.http.impl.client.FutureRequestExecutionMetrics metrics() -> metrics
    void close() -> close
org.apache.http.impl.client.HttpAuthenticator -> org.apache.http.impl.client.HttpAuthenticator:
    boolean authenticate(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.client.AuthenticationStrategy,org.apache.http.auth.AuthState,org.apache.http.protocol.HttpContext) -> authenticate
org.apache.http.impl.client.HttpClientBuilder -> org.apache.http.impl.client.HttpClientBuilder:
    org.apache.http.protocol.HttpRequestExecutor requestExec -> requestExec
    org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier -> hostnameVerifier
    org.apache.http.conn.socket.LayeredConnectionSocketFactory sslSocketFactory -> sslSocketFactory
    javax.net.ssl.SSLContext sslcontext -> sslcontext
    org.apache.http.conn.HttpClientConnectionManager connManager -> connManager
    org.apache.http.conn.SchemePortResolver schemePortResolver -> schemePortResolver
    org.apache.http.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy -> keepAliveStrategy
    org.apache.http.client.AuthenticationStrategy targetAuthStrategy -> targetAuthStrategy
    org.apache.http.client.AuthenticationStrategy proxyAuthStrategy -> proxyAuthStrategy
    org.apache.http.client.UserTokenHandler userTokenHandler -> userTokenHandler
    org.apache.http.protocol.HttpProcessor httpprocessor -> httpprocessor
    java.util.LinkedList requestFirst -> requestFirst
    java.util.LinkedList requestLast -> requestLast
    java.util.LinkedList responseFirst -> responseFirst
    java.util.LinkedList responseLast -> responseLast
    org.apache.http.client.HttpRequestRetryHandler retryHandler -> retryHandler
    org.apache.http.conn.routing.HttpRoutePlanner routePlanner -> routePlanner
    org.apache.http.client.RedirectStrategy redirectStrategy -> redirectStrategy
    org.apache.http.client.ConnectionBackoffStrategy connectionBackoffStrategy -> connectionBackoffStrategy
    org.apache.http.client.BackoffManager backoffManager -> backoffManager
    org.apache.http.client.ServiceUnavailableRetryStrategy serviceUnavailStrategy -> serviceUnavailStrategy
    org.apache.http.config.Lookup authSchemeRegistry -> authSchemeRegistry
    org.apache.http.config.Lookup cookieSpecRegistry -> cookieSpecRegistry
    org.apache.http.client.CookieStore cookieStore -> cookieStore
    org.apache.http.client.CredentialsProvider credentialsProvider -> credentialsProvider
    java.lang.String userAgent -> userAgent
    org.apache.http.HttpHost proxy -> proxy
    java.util.Collection defaultHeaders -> defaultHeaders
    org.apache.http.config.SocketConfig defaultSocketConfig -> defaultSocketConfig
    org.apache.http.config.ConnectionConfig defaultConnectionConfig -> defaultConnectionConfig
    org.apache.http.client.config.RequestConfig defaultRequestConfig -> defaultRequestConfig
    boolean systemProperties -> systemProperties
    boolean redirectHandlingDisabled -> redirectHandlingDisabled
    boolean automaticRetriesDisabled -> automaticRetriesDisabled
    boolean contentCompressionDisabled -> contentCompressionDisabled
    boolean cookieManagementDisabled -> cookieManagementDisabled
    boolean authCachingDisabled -> authCachingDisabled
    boolean connectionStateDisabled -> connectionStateDisabled
    int maxConnTotal -> maxConnTotal
    int maxConnPerRoute -> maxConnPerRoute
    java.util.List closeables -> closeables
    java.lang.String DEFAULT_USER_AGENT -> DEFAULT_USER_AGENT
    org.apache.http.impl.client.HttpClientBuilder create() -> create
    org.apache.http.impl.client.HttpClientBuilder setRequestExecutor(org.apache.http.protocol.HttpRequestExecutor) -> setRequestExecutor
    org.apache.http.impl.client.HttpClientBuilder setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier) -> setHostnameVerifier
    org.apache.http.impl.client.HttpClientBuilder setSslcontext(javax.net.ssl.SSLContext) -> setSslcontext
    org.apache.http.impl.client.HttpClientBuilder setSSLSocketFactory(org.apache.http.conn.socket.LayeredConnectionSocketFactory) -> setSSLSocketFactory
    org.apache.http.impl.client.HttpClientBuilder setMaxConnTotal(int) -> setMaxConnTotal
    org.apache.http.impl.client.HttpClientBuilder setMaxConnPerRoute(int) -> setMaxConnPerRoute
    org.apache.http.impl.client.HttpClientBuilder setDefaultSocketConfig(org.apache.http.config.SocketConfig) -> setDefaultSocketConfig
    org.apache.http.impl.client.HttpClientBuilder setDefaultConnectionConfig(org.apache.http.config.ConnectionConfig) -> setDefaultConnectionConfig
    org.apache.http.impl.client.HttpClientBuilder setConnectionManager(org.apache.http.conn.HttpClientConnectionManager) -> setConnectionManager
    org.apache.http.impl.client.HttpClientBuilder setConnectionReuseStrategy(org.apache.http.ConnectionReuseStrategy) -> setConnectionReuseStrategy
    org.apache.http.impl.client.HttpClientBuilder setKeepAliveStrategy(org.apache.http.conn.ConnectionKeepAliveStrategy) -> setKeepAliveStrategy
    org.apache.http.impl.client.HttpClientBuilder setTargetAuthenticationStrategy(org.apache.http.client.AuthenticationStrategy) -> setTargetAuthenticationStrategy
    org.apache.http.impl.client.HttpClientBuilder setProxyAuthenticationStrategy(org.apache.http.client.AuthenticationStrategy) -> setProxyAuthenticationStrategy
    org.apache.http.impl.client.HttpClientBuilder setUserTokenHandler(org.apache.http.client.UserTokenHandler) -> setUserTokenHandler
    org.apache.http.impl.client.HttpClientBuilder disableConnectionState() -> disableConnectionState
    org.apache.http.impl.client.HttpClientBuilder setSchemePortResolver(org.apache.http.conn.SchemePortResolver) -> setSchemePortResolver
    org.apache.http.impl.client.HttpClientBuilder setUserAgent(java.lang.String) -> setUserAgent
    org.apache.http.impl.client.HttpClientBuilder setDefaultHeaders(java.util.Collection) -> setDefaultHeaders
    org.apache.http.impl.client.HttpClientBuilder addInterceptorFirst(org.apache.http.HttpResponseInterceptor) -> addInterceptorFirst
    org.apache.http.impl.client.HttpClientBuilder addInterceptorLast(org.apache.http.HttpResponseInterceptor) -> addInterceptorLast
    org.apache.http.impl.client.HttpClientBuilder addInterceptorFirst(org.apache.http.HttpRequestInterceptor) -> addInterceptorFirst
    org.apache.http.impl.client.HttpClientBuilder addInterceptorLast(org.apache.http.HttpRequestInterceptor) -> addInterceptorLast
    org.apache.http.impl.client.HttpClientBuilder disableCookieManagement() -> disableCookieManagement
    org.apache.http.impl.client.HttpClientBuilder disableContentCompression() -> disableContentCompression
    org.apache.http.impl.client.HttpClientBuilder disableAuthCaching() -> disableAuthCaching
    org.apache.http.impl.client.HttpClientBuilder setHttpProcessor(org.apache.http.protocol.HttpProcessor) -> setHttpProcessor
    org.apache.http.impl.client.HttpClientBuilder setRetryHandler(org.apache.http.client.HttpRequestRetryHandler) -> setRetryHandler
    org.apache.http.impl.client.HttpClientBuilder disableAutomaticRetries() -> disableAutomaticRetries
    org.apache.http.impl.client.HttpClientBuilder setProxy(org.apache.http.HttpHost) -> setProxy
    org.apache.http.impl.client.HttpClientBuilder setRoutePlanner(org.apache.http.conn.routing.HttpRoutePlanner) -> setRoutePlanner
    org.apache.http.impl.client.HttpClientBuilder setRedirectStrategy(org.apache.http.client.RedirectStrategy) -> setRedirectStrategy
    org.apache.http.impl.client.HttpClientBuilder disableRedirectHandling() -> disableRedirectHandling
    org.apache.http.impl.client.HttpClientBuilder setConnectionBackoffStrategy(org.apache.http.client.ConnectionBackoffStrategy) -> setConnectionBackoffStrategy
    org.apache.http.impl.client.HttpClientBuilder setBackoffManager(org.apache.http.client.BackoffManager) -> setBackoffManager
    org.apache.http.impl.client.HttpClientBuilder setServiceUnavailableRetryStrategy(org.apache.http.client.ServiceUnavailableRetryStrategy) -> setServiceUnavailableRetryStrategy
    org.apache.http.impl.client.HttpClientBuilder setDefaultCookieStore(org.apache.http.client.CookieStore) -> setDefaultCookieStore
    org.apache.http.impl.client.HttpClientBuilder setDefaultCredentialsProvider(org.apache.http.client.CredentialsProvider) -> setDefaultCredentialsProvider
    org.apache.http.impl.client.HttpClientBuilder setDefaultAuthSchemeRegistry(org.apache.http.config.Lookup) -> setDefaultAuthSchemeRegistry
    org.apache.http.impl.client.HttpClientBuilder setDefaultCookieSpecRegistry(org.apache.http.config.Lookup) -> setDefaultCookieSpecRegistry
    org.apache.http.impl.client.HttpClientBuilder setDefaultRequestConfig(org.apache.http.client.config.RequestConfig) -> setDefaultRequestConfig
    org.apache.http.impl.client.HttpClientBuilder useSystemProperties() -> useSystemProperties
    org.apache.http.impl.execchain.ClientExecChain decorateMainExec(org.apache.http.impl.execchain.ClientExecChain) -> decorateMainExec
    org.apache.http.impl.execchain.ClientExecChain decorateProtocolExec(org.apache.http.impl.execchain.ClientExecChain) -> decorateProtocolExec
    void addCloseable(java.io.Closeable) -> addCloseable
    java.lang.String[] split(java.lang.String) -> split
    org.apache.http.impl.client.CloseableHttpClient build() -> build
org.apache.http.impl.client.HttpClients -> org.apache.http.impl.client.HttpClients:
    org.apache.http.impl.client.HttpClientBuilder custom() -> custom
    org.apache.http.impl.client.CloseableHttpClient createDefault() -> createDefault
    org.apache.http.impl.client.CloseableHttpClient createSystem() -> createSystem
    org.apache.http.impl.client.CloseableHttpClient createMinimal() -> createMinimal
    org.apache.http.impl.client.CloseableHttpClient createMinimal(org.apache.http.conn.HttpClientConnectionManager) -> createMinimal
org.apache.http.impl.client.HttpRequestFutureTask -> org.apache.http.impl.client.HttpRequestFutureTask:
    org.apache.http.client.methods.HttpUriRequest request -> request
    org.apache.http.impl.client.HttpRequestTaskCallable callable -> callable
    boolean cancel(boolean) -> cancel
    long scheduledTime() -> scheduledTime
    long startedTime() -> startedTime
    long endedTime() -> endedTime
    long requestDuration() -> requestDuration
    long taskDuration() -> taskDuration
    java.lang.String toString() -> toString
org.apache.http.impl.client.HttpRequestTaskCallable -> org.apache.http.impl.client.HttpRequestTaskCallable:
    org.apache.http.client.methods.HttpUriRequest request -> request
    org.apache.http.client.HttpClient httpclient -> httpclient
    java.util.concurrent.atomic.AtomicBoolean cancelled -> cancelled
    long scheduled -> scheduled
    long started -> started
    long ended -> ended
    org.apache.http.protocol.HttpContext context -> context
    org.apache.http.client.ResponseHandler responseHandler -> responseHandler
    org.apache.http.concurrent.FutureCallback callback -> callback
    org.apache.http.impl.client.FutureRequestExecutionMetrics metrics -> metrics
    long getScheduled() -> getScheduled
    long getStarted() -> getStarted
    long getEnded() -> getEnded
    java.lang.Object call() -> call
    void cancel() -> cancel
org.apache.http.impl.client.InternalHttpClient -> org.apache.http.impl.client.InternalHttpClient:
    org.apache.commons.logging.Log log -> log
    org.apache.http.impl.execchain.ClientExecChain execChain -> execChain
    org.apache.http.conn.HttpClientConnectionManager connManager -> connManager
    org.apache.http.conn.routing.HttpRoutePlanner routePlanner -> routePlanner
    org.apache.http.config.Lookup cookieSpecRegistry -> cookieSpecRegistry
    org.apache.http.config.Lookup authSchemeRegistry -> authSchemeRegistry
    org.apache.http.client.CookieStore cookieStore -> cookieStore
    org.apache.http.client.CredentialsProvider credentialsProvider -> credentialsProvider
    org.apache.http.client.config.RequestConfig defaultConfig -> defaultConfig
    java.util.List closeables -> closeables
    org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
    void setupContext(org.apache.http.client.protocol.HttpClientContext) -> setupContext
    org.apache.http.client.methods.CloseableHttpResponse doExecute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> doExecute
    void close() -> close
    org.apache.http.params.HttpParams getParams() -> getParams
    org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.http.conn.HttpClientConnectionManager access$000(org.apache.http.impl.client.InternalHttpClient) -> access$000
org.apache.http.impl.client.InternalHttpClient$1 -> org.apache.http.impl.client.InternalHttpClient$1:
    org.apache.http.impl.client.InternalHttpClient this$0 -> this$0
    void shutdown() -> shutdown
    org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
org.apache.http.impl.client.LaxRedirectStrategy -> org.apache.http.impl.client.LaxRedirectStrategy:
    java.lang.String[] REDIRECT_METHODS -> REDIRECT_METHODS
    boolean isRedirectable(java.lang.String) -> isRedirectable
org.apache.http.impl.client.MinimalHttpClient -> org.apache.http.impl.client.MinimalHttpClient:
    org.apache.http.conn.HttpClientConnectionManager connManager -> connManager
    org.apache.http.impl.execchain.MinimalClientExec requestExecutor -> requestExecutor
    org.apache.http.params.HttpParams params -> params
    org.apache.http.client.methods.CloseableHttpResponse doExecute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> doExecute
    org.apache.http.params.HttpParams getParams() -> getParams
    void close() -> close
    org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.http.conn.HttpClientConnectionManager access$000(org.apache.http.impl.client.MinimalHttpClient) -> access$000
org.apache.http.impl.client.MinimalHttpClient$1 -> org.apache.http.impl.client.MinimalHttpClient$1:
    org.apache.http.impl.client.MinimalHttpClient this$0 -> this$0
    void shutdown() -> shutdown
    org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
org.apache.http.impl.client.NoopUserTokenHandler -> org.apache.http.impl.client.NoopUserTokenHandler:
    org.apache.http.impl.client.NoopUserTokenHandler INSTANCE -> INSTANCE
    java.lang.Object getUserToken(org.apache.http.protocol.HttpContext) -> getUserToken
org.apache.http.impl.client.NullBackoffStrategy -> org.apache.http.impl.client.NullBackoffStrategy:
    boolean shouldBackoff(java.lang.Throwable) -> shouldBackoff
    boolean shouldBackoff(org.apache.http.HttpResponse) -> shouldBackoff
org.apache.http.impl.client.ProxyAuthenticationStrategy -> org.apache.http.impl.client.ProxyAuthenticationStrategy:
    org.apache.http.impl.client.ProxyAuthenticationStrategy INSTANCE -> INSTANCE
    java.util.Collection getPreferredAuthSchemes(org.apache.http.client.config.RequestConfig) -> getPreferredAuthSchemes
    void authFailed(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authFailed
    void authSucceeded(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authSucceeded
    java.util.Queue select(java.util.Map,org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> select
    java.util.Map getChallenges(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    boolean isAuthenticationRequested(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
org.apache.http.impl.client.ProxyClient -> org.apache.http.impl.client.ProxyClient:
    org.apache.http.conn.HttpConnectionFactory connFactory -> connFactory
    org.apache.http.config.ConnectionConfig connectionConfig -> connectionConfig
    org.apache.http.client.config.RequestConfig requestConfig -> requestConfig
    org.apache.http.protocol.HttpProcessor httpProcessor -> httpProcessor
    org.apache.http.protocol.HttpRequestExecutor requestExec -> requestExec
    org.apache.http.impl.client.ProxyAuthenticationStrategy proxyAuthStrategy -> proxyAuthStrategy
    org.apache.http.impl.auth.HttpAuthenticator authenticator -> authenticator
    org.apache.http.auth.AuthState proxyAuthState -> proxyAuthState
    org.apache.http.auth.AuthSchemeRegistry authSchemeRegistry -> authSchemeRegistry
    org.apache.http.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    org.apache.http.params.HttpParams getParams() -> getParams
    org.apache.http.auth.AuthSchemeRegistry getAuthSchemeRegistry() -> getAuthSchemeRegistry
    java.net.Socket tunnel(org.apache.http.HttpHost,org.apache.http.HttpHost,org.apache.http.auth.Credentials) -> tunnel
org.apache.http.impl.client.RedirectLocations -> org.apache.http.impl.client.RedirectLocations:
    java.util.Set unique -> unique
    java.util.List all -> all
    boolean contains(java.net.URI) -> contains
    void add(java.net.URI) -> add
    boolean remove(java.net.URI) -> remove
    java.util.List getAll() -> getAll
    java.net.URI get(int) -> get
    int size() -> size
    java.lang.Object set(int,java.lang.Object) -> set
    void add(int,java.lang.Object) -> add
    java.net.URI remove(int) -> remove
    boolean contains(java.lang.Object) -> contains
    java.lang.Object remove(int) -> remove
    java.lang.Object get(int) -> get
org.apache.http.impl.client.RequestWrapper -> org.apache.http.impl.client.RequestWrapper:
    org.apache.http.HttpRequest original -> original
    java.net.URI uri -> uri
    java.lang.String method -> method
    org.apache.http.ProtocolVersion version -> version
    int execCount -> execCount
    void resetHeaders() -> resetHeaders
    java.lang.String getMethod() -> getMethod
    void setMethod(java.lang.String) -> setMethod
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    void setProtocolVersion(org.apache.http.ProtocolVersion) -> setProtocolVersion
    java.net.URI getURI() -> getURI
    void setURI(java.net.URI) -> setURI
    org.apache.http.RequestLine getRequestLine() -> getRequestLine
    void abort() -> abort
    boolean isAborted() -> isAborted
    org.apache.http.HttpRequest getOriginal() -> getOriginal
    boolean isRepeatable() -> isRepeatable
    int getExecCount() -> getExecCount
    void incrementExecCount() -> incrementExecCount
org.apache.http.impl.client.RoutedRequest -> org.apache.http.impl.client.RoutedRequest:
    org.apache.http.impl.client.RequestWrapper request -> request
    org.apache.http.conn.routing.HttpRoute route -> route
    org.apache.http.impl.client.RequestWrapper getRequest() -> getRequest
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
org.apache.http.impl.client.StandardHttpRequestRetryHandler -> org.apache.http.impl.client.StandardHttpRequestRetryHandler:
    java.util.Map idempotentMethods -> idempotentMethods
    boolean handleAsIdempotent(org.apache.http.HttpRequest) -> handleAsIdempotent
org.apache.http.impl.client.SystemClock -> org.apache.http.impl.client.SystemClock:
    long getCurrentTime() -> getCurrentTime
org.apache.http.impl.client.SystemDefaultCredentialsProvider -> org.apache.http.impl.client.SystemDefaultCredentialsProvider:
    java.util.Map SCHEME_MAP -> SCHEME_MAP
    org.apache.http.impl.client.BasicCredentialsProvider internal -> internal
    java.lang.String translateScheme(java.lang.String) -> translateScheme
    void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials) -> setCredentials
    java.net.PasswordAuthentication getSystemCreds(org.apache.http.auth.AuthScope,java.net.Authenticator$RequestorType) -> getSystemCreds
    org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope) -> getCredentials
    void clear() -> clear
org.apache.http.impl.client.SystemDefaultHttpClient -> org.apache.http.impl.client.SystemDefaultHttpClient:
    org.apache.http.conn.ClientConnectionManager createClientConnectionManager() -> createClientConnectionManager
    org.apache.http.conn.routing.HttpRoutePlanner createHttpRoutePlanner() -> createHttpRoutePlanner
    org.apache.http.ConnectionReuseStrategy createConnectionReuseStrategy() -> createConnectionReuseStrategy
org.apache.http.impl.client.TargetAuthenticationStrategy -> org.apache.http.impl.client.TargetAuthenticationStrategy:
    org.apache.http.impl.client.TargetAuthenticationStrategy INSTANCE -> INSTANCE
    java.util.Collection getPreferredAuthSchemes(org.apache.http.client.config.RequestConfig) -> getPreferredAuthSchemes
    void authFailed(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authFailed
    void authSucceeded(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authSucceeded
    java.util.Queue select(java.util.Map,org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> select
    java.util.Map getChallenges(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    boolean isAuthenticationRequested(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
org.apache.http.impl.client.TunnelRefusedException -> org.apache.http.impl.client.TunnelRefusedException:
    long serialVersionUID -> serialVersionUID
    org.apache.http.HttpResponse response -> response
    org.apache.http.HttpResponse getResponse() -> getResponse
org.apache.http.impl.conn.AbstractClientConnAdapter -> org.apache.http.impl.conn.AbstractClientConnAdapter:
    org.apache.http.conn.ClientConnectionManager connManager -> connManager
    org.apache.http.conn.OperatedClientConnection wrappedConnection -> wrappedConnection
    boolean markedReusable -> markedReusable
    boolean released -> released
    long duration -> duration
    void detach() -> detach
    org.apache.http.conn.OperatedClientConnection getWrappedConnection() -> getWrappedConnection
    org.apache.http.conn.ClientConnectionManager getManager() -> getManager
    void assertNotAborted() -> assertNotAborted
    boolean isReleased() -> isReleased
    void assertValid(org.apache.http.conn.OperatedClientConnection) -> assertValid
    boolean isOpen() -> isOpen
    boolean isStale() -> isStale
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
    void flush() -> flush
    boolean isResponseAvailable(int) -> isResponseAvailable
    void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    boolean isSecure() -> isSecure
    void bind(java.net.Socket) -> bind
    java.net.Socket getSocket() -> getSocket
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    void markReusable() -> markReusable
    void unmarkReusable() -> unmarkReusable
    boolean isMarkedReusable() -> isMarkedReusable
    void setIdleDuration(long,java.util.concurrent.TimeUnit) -> setIdleDuration
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
org.apache.http.impl.conn.AbstractPoolEntry -> org.apache.http.impl.conn.AbstractPoolEntry:
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    org.apache.http.conn.OperatedClientConnection connection -> connection
    org.apache.http.conn.routing.HttpRoute route -> route
    java.lang.Object state -> state
    org.apache.http.conn.routing.RouteTracker tracker -> tracker
    java.lang.Object getState() -> getState
    void setState(java.lang.Object) -> setState
    void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> open
    void tunnelTarget(boolean,org.apache.http.params.HttpParams) -> tunnelTarget
    void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> tunnelProxy
    void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> layerProtocol
    void shutdownEntry() -> shutdownEntry
org.apache.http.impl.conn.AbstractPooledConnAdapter -> org.apache.http.impl.conn.AbstractPooledConnAdapter:
    org.apache.http.impl.conn.AbstractPoolEntry poolEntry -> poolEntry
    java.lang.String getId() -> getId
    org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry() -> getPoolEntry
    void assertValid(org.apache.http.impl.conn.AbstractPoolEntry) -> assertValid
    void assertAttached() -> assertAttached
    void detach() -> detach
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> open
    void tunnelTarget(boolean,org.apache.http.params.HttpParams) -> tunnelTarget
    void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> tunnelProxy
    void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> layerProtocol
    void close() -> close
    void shutdown() -> shutdown
    java.lang.Object getState() -> getState
    void setState(java.lang.Object) -> setState
org.apache.http.impl.conn.BasicClientConnectionManager -> org.apache.http.impl.conn.BasicClientConnectionManager:
    org.apache.commons.logging.Log log -> log
    java.util.concurrent.atomic.AtomicLong COUNTER -> COUNTER
    java.lang.String MISUSE_MESSAGE -> MISUSE_MESSAGE
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    org.apache.http.impl.conn.HttpPoolEntry poolEntry -> poolEntry
    org.apache.http.impl.conn.ManagedClientConnectionImpl conn -> conn
    boolean shutdown -> shutdown
    void finalize() -> finalize
    org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry) -> createConnectionOperator
    org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void assertNotShutdown() -> assertNotShutdown
    org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> getConnection
    void shutdownConnection(org.apache.http.HttpClientConnection) -> shutdownConnection
    void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void closeExpiredConnections() -> closeExpiredConnections
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void shutdown() -> shutdown
org.apache.http.impl.conn.BasicClientConnectionManager$1 -> org.apache.http.impl.conn.BasicClientConnectionManager$1:
    org.apache.http.conn.routing.HttpRoute val$route -> val$route
    java.lang.Object val$state -> val$state
    org.apache.http.impl.conn.BasicClientConnectionManager this$0 -> this$0
    void abortRequest() -> abortRequest
    org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
org.apache.http.impl.conn.BasicHttpClientConnectionManager -> org.apache.http.impl.conn.BasicHttpClientConnectionManager:
    org.apache.commons.logging.Log log -> log
    org.apache.http.impl.conn.HttpClientConnectionOperator connectionOperator -> connectionOperator
    org.apache.http.conn.HttpConnectionFactory connFactory -> connFactory
    org.apache.http.conn.ManagedHttpClientConnection conn -> conn
    org.apache.http.conn.routing.HttpRoute route -> route
    java.lang.Object state -> state
    long updated -> updated
    long expiry -> expiry
    boolean leased -> leased
    org.apache.http.config.SocketConfig socketConfig -> socketConfig
    org.apache.http.config.ConnectionConfig connConfig -> connConfig
    java.util.concurrent.atomic.AtomicBoolean isShutdown -> isShutdown
    org.apache.http.config.Registry getDefaultRegistry() -> getDefaultRegistry
    void finalize() -> finalize
    void close() -> close
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    java.lang.Object getState() -> getState
    org.apache.http.config.SocketConfig getSocketConfig() -> getSocketConfig
    void setSocketConfig(org.apache.http.config.SocketConfig) -> setSocketConfig
    org.apache.http.config.ConnectionConfig getConnectionConfig() -> getConnectionConfig
    void setConnectionConfig(org.apache.http.config.ConnectionConfig) -> setConnectionConfig
    org.apache.http.conn.ConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void closeConnection() -> closeConnection
    void shutdownConnection() -> shutdownConnection
    void checkExpiry() -> checkExpiry
    org.apache.http.HttpClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> getConnection
    void releaseConnection(org.apache.http.HttpClientConnection,java.lang.Object,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void connect(org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,int,org.apache.http.protocol.HttpContext) -> connect
    void upgrade(org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> upgrade
    void routeComplete(org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> routeComplete
    void closeExpiredConnections() -> closeExpiredConnections
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void shutdown() -> shutdown
org.apache.http.impl.conn.BasicHttpClientConnectionManager$1 -> org.apache.http.impl.conn.BasicHttpClientConnectionManager$1:
    org.apache.http.conn.routing.HttpRoute val$route -> val$route
    java.lang.Object val$state -> val$state
    org.apache.http.impl.conn.BasicHttpClientConnectionManager this$0 -> this$0
    boolean cancel() -> cancel
    org.apache.http.HttpClientConnection get(long,java.util.concurrent.TimeUnit) -> get
org.apache.http.impl.conn.CPool -> org.apache.http.impl.conn.CPool:
    java.util.concurrent.atomic.AtomicLong COUNTER -> COUNTER
    org.apache.commons.logging.Log log -> log
    long timeToLive -> timeToLive
    java.util.concurrent.TimeUnit tunit -> tunit
    org.apache.http.impl.conn.CPoolEntry createEntry(org.apache.http.conn.routing.HttpRoute,org.apache.http.conn.ManagedHttpClientConnection) -> createEntry
    org.apache.http.pool.PoolEntry createEntry(java.lang.Object,java.lang.Object) -> createEntry
org.apache.http.impl.conn.CPoolEntry -> org.apache.http.impl.conn.CPoolEntry:
    org.apache.commons.logging.Log log -> log
    boolean routeComplete -> routeComplete
    void markRouteComplete() -> markRouteComplete
    boolean isRouteComplete() -> isRouteComplete
    void closeConnection() -> closeConnection
    void shutdownConnection() -> shutdownConnection
    boolean isExpired(long) -> isExpired
    boolean isClosed() -> isClosed
    void close() -> close
org.apache.http.impl.conn.CPoolProxy -> org.apache.http.impl.conn.CPoolProxy:
    org.apache.http.impl.conn.CPoolEntry poolEntry -> poolEntry
    org.apache.http.impl.conn.CPoolEntry getPoolEntry() -> getPoolEntry
    org.apache.http.impl.conn.CPoolEntry detach() -> detach
    org.apache.http.conn.ManagedHttpClientConnection getConnection() -> getConnection
    org.apache.http.conn.ManagedHttpClientConnection getValidConnection() -> getValidConnection
    void close() -> close
    void shutdown() -> shutdown
    boolean isOpen() -> isOpen
    boolean isStale() -> isStale
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    java.lang.String getId() -> getId
    void bind(java.net.Socket) -> bind
    java.net.Socket getSocket() -> getSocket
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    boolean isResponseAvailable(int) -> isResponseAvailable
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    void flush() -> flush
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    java.lang.String toString() -> toString
    org.apache.http.HttpClientConnection newProxy(org.apache.http.impl.conn.CPoolEntry) -> newProxy
    org.apache.http.impl.conn.CPoolProxy getProxy(org.apache.http.HttpClientConnection) -> getProxy
    org.apache.http.impl.conn.CPoolEntry getPoolEntry(org.apache.http.HttpClientConnection) -> getPoolEntry
    org.apache.http.impl.conn.CPoolEntry detach(org.apache.http.HttpClientConnection) -> detach
org.apache.http.impl.conn.ConnectionShutdownException -> org.apache.http.impl.conn.ConnectionShutdownException:
    long serialVersionUID -> serialVersionUID
org.apache.http.impl.conn.DefaultClientConnection -> org.apache.http.impl.conn.DefaultClientConnection:
    org.apache.commons.logging.Log log -> log
    org.apache.commons.logging.Log headerLog -> headerLog
    org.apache.commons.logging.Log wireLog -> wireLog
    java.net.Socket socket -> socket
    org.apache.http.HttpHost targetHost -> targetHost
    boolean connSecure -> connSecure
    boolean shutdown -> shutdown
    java.util.Map attributes -> attributes
    java.lang.String getId() -> getId
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    boolean isSecure() -> isSecure
    java.net.Socket getSocket() -> getSocket
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    void opening(java.net.Socket,org.apache.http.HttpHost) -> opening
    void openCompleted(boolean,org.apache.http.params.HttpParams) -> openCompleted
    void shutdown() -> shutdown
    void close() -> close
    org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionInputBuffer
    org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionOutputBuffer
    org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams) -> createResponseParser
    void bind(java.net.Socket) -> bind
    void update(java.net.Socket,org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> update
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
org.apache.http.impl.conn.DefaultClientConnectionOperator -> org.apache.http.impl.conn.DefaultClientConnectionOperator:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.conn.DnsResolver dnsResolver -> dnsResolver
    org.apache.http.conn.OperatedClientConnection createConnection() -> createConnection
    org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry(org.apache.http.protocol.HttpContext) -> getSchemeRegistry
    void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> openConnection
    void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> updateSecureConnection
    void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> prepareSocket
    java.net.InetAddress[] resolveHostname(java.lang.String) -> resolveHostname
org.apache.http.impl.conn.DefaultHttpResponseParser -> org.apache.http.impl.conn.DefaultHttpResponseParser:
    org.apache.commons.logging.Log log -> log
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    org.apache.http.HttpResponse parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
    boolean reject(org.apache.http.util.CharArrayBuffer,int) -> reject
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.conn.DefaultHttpResponseParserFactory -> org.apache.http.impl.conn.DefaultHttpResponseParserFactory:
    org.apache.http.impl.conn.DefaultHttpResponseParserFactory INSTANCE -> INSTANCE
    org.apache.http.message.LineParser lineParser -> lineParser
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    org.apache.http.io.HttpMessageParser create(org.apache.http.io.SessionInputBuffer,org.apache.http.config.MessageConstraints) -> create
org.apache.http.impl.conn.DefaultHttpRoutePlanner -> org.apache.http.impl.conn.DefaultHttpRoutePlanner:
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
org.apache.http.impl.conn.DefaultManagedHttpClientConnection -> org.apache.http.impl.conn.DefaultManagedHttpClientConnection:
    java.lang.String id -> id
    java.util.Map attributes -> attributes
    boolean shutdown -> shutdown
    java.lang.String getId() -> getId
    void shutdown() -> shutdown
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    void bind(java.net.Socket) -> bind
    java.net.Socket getSocket() -> getSocket
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
org.apache.http.impl.conn.DefaultProxyRoutePlanner -> org.apache.http.impl.conn.DefaultProxyRoutePlanner:
    org.apache.http.HttpHost proxy -> proxy
    org.apache.http.HttpHost determineProxy(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineProxy
org.apache.http.impl.conn.DefaultResponseParser -> org.apache.http.impl.conn.DefaultResponseParser:
    org.apache.commons.logging.Log log -> log
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    int maxGarbageLines -> maxGarbageLines
    int getMaxGarbageLines(org.apache.http.params.HttpParams) -> getMaxGarbageLines
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.conn.DefaultRoutePlanner -> org.apache.http.impl.conn.DefaultRoutePlanner:
    org.apache.http.conn.SchemePortResolver schemePortResolver -> schemePortResolver
    org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
    org.apache.http.HttpHost determineProxy(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineProxy
org.apache.http.impl.conn.DefaultSchemePortResolver -> org.apache.http.impl.conn.DefaultSchemePortResolver:
    org.apache.http.impl.conn.DefaultSchemePortResolver INSTANCE -> INSTANCE
    int resolve(org.apache.http.HttpHost) -> resolve
org.apache.http.impl.conn.HttpClientConnectionOperator -> org.apache.http.impl.conn.HttpClientConnectionOperator:
    java.lang.String SOCKET_FACTORY_REGISTRY -> SOCKET_FACTORY_REGISTRY
    org.apache.commons.logging.Log log -> log
    org.apache.http.config.Lookup socketFactoryRegistry -> socketFactoryRegistry
    org.apache.http.conn.SchemePortResolver schemePortResolver -> schemePortResolver
    org.apache.http.conn.DnsResolver dnsResolver -> dnsResolver
    org.apache.http.config.Lookup getSocketFactoryRegistry(org.apache.http.protocol.HttpContext) -> getSocketFactoryRegistry
    void connect(org.apache.http.conn.ManagedHttpClientConnection,org.apache.http.HttpHost,java.net.InetSocketAddress,int,org.apache.http.config.SocketConfig,org.apache.http.protocol.HttpContext) -> connect
    void upgrade(org.apache.http.conn.ManagedHttpClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext) -> upgrade
org.apache.http.impl.conn.HttpConnPool -> org.apache.http.impl.conn.HttpConnPool:
    java.util.concurrent.atomic.AtomicLong COUNTER -> COUNTER
    org.apache.commons.logging.Log log -> log
    long timeToLive -> timeToLive
    java.util.concurrent.TimeUnit tunit -> tunit
    org.apache.http.impl.conn.HttpPoolEntry createEntry(org.apache.http.conn.routing.HttpRoute,org.apache.http.conn.OperatedClientConnection) -> createEntry
    org.apache.http.pool.PoolEntry createEntry(java.lang.Object,java.lang.Object) -> createEntry
org.apache.http.impl.conn.HttpConnPool$InternalConnFactory -> org.apache.http.impl.conn.HttpConnPool$InternalConnFactory:
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    org.apache.http.conn.OperatedClientConnection create(org.apache.http.conn.routing.HttpRoute) -> create
    java.lang.Object create(java.lang.Object) -> create
org.apache.http.impl.conn.HttpPoolEntry -> org.apache.http.impl.conn.HttpPoolEntry:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.routing.RouteTracker tracker -> tracker
    boolean isExpired(long) -> isExpired
    org.apache.http.conn.routing.RouteTracker getTracker() -> getTracker
    org.apache.http.conn.routing.HttpRoute getPlannedRoute() -> getPlannedRoute
    org.apache.http.conn.routing.HttpRoute getEffectiveRoute() -> getEffectiveRoute
    boolean isClosed() -> isClosed
    void close() -> close
org.apache.http.impl.conn.IdleConnectionHandler -> org.apache.http.impl.conn.IdleConnectionHandler:
    org.apache.commons.logging.Log log -> log
    java.util.Map connectionToTimes -> connectionToTimes
    void add(org.apache.http.HttpConnection,long,java.util.concurrent.TimeUnit) -> add
    boolean remove(org.apache.http.HttpConnection) -> remove
    void removeAll() -> removeAll
    void closeIdleConnections(long) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
org.apache.http.impl.conn.IdleConnectionHandler$TimeValues -> org.apache.http.impl.conn.IdleConnectionHandler$TimeValues:
    long timeAdded -> timeAdded
    long timeExpires -> timeExpires
    long access$000(org.apache.http.impl.conn.IdleConnectionHandler$TimeValues) -> access$000
    long access$100(org.apache.http.impl.conn.IdleConnectionHandler$TimeValues) -> access$100
org.apache.http.impl.conn.InMemoryDnsResolver -> org.apache.http.impl.conn.InMemoryDnsResolver:
    org.apache.commons.logging.Log log -> log
    java.util.Map dnsMap -> dnsMap
    void add(java.lang.String,java.net.InetAddress[]) -> add
    java.net.InetAddress[] resolve(java.lang.String) -> resolve
org.apache.http.impl.conn.LoggingInputStream -> org.apache.http.impl.conn.LoggingInputStream:
    java.io.InputStream in -> in
    org.apache.http.impl.conn.Wire wire -> wire
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
    void mark(int) -> mark
    void reset() -> reset
    boolean markSupported() -> markSupported
    void close() -> close
org.apache.http.impl.conn.LoggingManagedHttpClientConnection -> org.apache.http.impl.conn.LoggingManagedHttpClientConnection:
    org.apache.commons.logging.Log log -> log
    org.apache.commons.logging.Log headerlog -> headerlog
    org.apache.http.impl.conn.Wire wire -> wire
    void close() -> close
    void shutdown() -> shutdown
    java.io.InputStream getSocketInputStream(java.net.Socket) -> getSocketInputStream
    java.io.OutputStream getSocketOutputStream(java.net.Socket) -> getSocketOutputStream
    void onResponseReceived(org.apache.http.HttpResponse) -> onResponseReceived
    void onRequestSubmitted(org.apache.http.HttpRequest) -> onRequestSubmitted
org.apache.http.impl.conn.LoggingOutputStream -> org.apache.http.impl.conn.LoggingOutputStream:
    java.io.OutputStream out -> out
    org.apache.http.impl.conn.Wire wire -> wire
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
org.apache.http.impl.conn.LoggingSessionInputBuffer -> org.apache.http.impl.conn.LoggingSessionInputBuffer:
    org.apache.http.io.SessionInputBuffer in -> in
    org.apache.http.io.EofSensor eofSensor -> eofSensor
    org.apache.http.impl.conn.Wire wire -> wire
    java.lang.String charset -> charset
    boolean isDataAvailable(int) -> isDataAvailable
    int read(byte[],int,int) -> read
    int read() -> read
    int read(byte[]) -> read
    java.lang.String readLine() -> readLine
    int readLine(org.apache.http.util.CharArrayBuffer) -> readLine
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
    boolean isEof() -> isEof
org.apache.http.impl.conn.LoggingSessionOutputBuffer -> org.apache.http.impl.conn.LoggingSessionOutputBuffer:
    org.apache.http.io.SessionOutputBuffer out -> out
    org.apache.http.impl.conn.Wire wire -> wire
    java.lang.String charset -> charset
    void write(byte[],int,int) -> write
    void write(int) -> write
    void write(byte[]) -> write
    void flush() -> flush
    void writeLine(org.apache.http.util.CharArrayBuffer) -> writeLine
    void writeLine(java.lang.String) -> writeLine
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.conn.ManagedClientConnectionImpl -> org.apache.http.impl.conn.ManagedClientConnectionImpl:
    org.apache.http.conn.ClientConnectionManager manager -> manager
    org.apache.http.conn.ClientConnectionOperator operator -> operator
    org.apache.http.impl.conn.HttpPoolEntry poolEntry -> poolEntry
    boolean reusable -> reusable
    long duration -> duration
    java.lang.String getId() -> getId
    org.apache.http.impl.conn.HttpPoolEntry getPoolEntry() -> getPoolEntry
    org.apache.http.impl.conn.HttpPoolEntry detach() -> detach
    org.apache.http.conn.ClientConnectionManager getManager() -> getManager
    org.apache.http.conn.OperatedClientConnection getConnection() -> getConnection
    org.apache.http.conn.OperatedClientConnection ensureConnection() -> ensureConnection
    org.apache.http.impl.conn.HttpPoolEntry ensurePoolEntry() -> ensurePoolEntry
    void close() -> close
    void shutdown() -> shutdown
    boolean isOpen() -> isOpen
    boolean isStale() -> isStale
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
    void flush() -> flush
    boolean isResponseAvailable(int) -> isResponseAvailable
    void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    boolean isSecure() -> isSecure
    void bind(java.net.Socket) -> bind
    java.net.Socket getSocket() -> getSocket
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> open
    void tunnelTarget(boolean,org.apache.http.params.HttpParams) -> tunnelTarget
    void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> tunnelProxy
    void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> layerProtocol
    java.lang.Object getState() -> getState
    void setState(java.lang.Object) -> setState
    void markReusable() -> markReusable
    void unmarkReusable() -> unmarkReusable
    boolean isMarkedReusable() -> isMarkedReusable
    void setIdleDuration(long,java.util.concurrent.TimeUnit) -> setIdleDuration
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
org.apache.http.impl.conn.ManagedHttpClientConnectionFactory -> org.apache.http.impl.conn.ManagedHttpClientConnectionFactory:
    java.util.concurrent.atomic.AtomicLong COUNTER -> COUNTER
    org.apache.http.impl.conn.ManagedHttpClientConnectionFactory INSTANCE -> INSTANCE
    org.apache.commons.logging.Log log -> log
    org.apache.commons.logging.Log headerlog -> headerlog
    org.apache.commons.logging.Log wirelog -> wirelog
    org.apache.http.io.HttpMessageWriterFactory requestWriterFactory -> requestWriterFactory
    org.apache.http.io.HttpMessageParserFactory responseParserFactory -> responseParserFactory
    org.apache.http.conn.ManagedHttpClientConnection create(org.apache.http.conn.routing.HttpRoute,org.apache.http.config.ConnectionConfig) -> create
    org.apache.http.HttpConnection create(java.lang.Object,org.apache.http.config.ConnectionConfig) -> create
org.apache.http.impl.conn.PoolingClientConnectionManager -> org.apache.http.impl.conn.PoolingClientConnectionManager:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.impl.conn.HttpConnPool pool -> pool
    org.apache.http.conn.ClientConnectionOperator operator -> operator
    org.apache.http.conn.DnsResolver dnsResolver -> dnsResolver
    void finalize() -> finalize
    org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry) -> createConnectionOperator
    org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    java.lang.String format(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> format
    java.lang.String formatStats(org.apache.http.conn.routing.HttpRoute) -> formatStats
    java.lang.String format(org.apache.http.impl.conn.HttpPoolEntry) -> format
    org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    org.apache.http.conn.ManagedClientConnection leaseConnection(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit) -> leaseConnection
    void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void shutdown() -> shutdown
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    int getMaxTotal() -> getMaxTotal
    void setMaxTotal(int) -> setMaxTotal
    int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    int getMaxPerRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxPerRoute
    void setMaxPerRoute(org.apache.http.conn.routing.HttpRoute,int) -> setMaxPerRoute
    org.apache.http.pool.PoolStats getTotalStats() -> getTotalStats
    org.apache.http.pool.PoolStats getStats(org.apache.http.conn.routing.HttpRoute) -> getStats
    org.apache.http.pool.PoolStats getStats(java.lang.Object) -> getStats
    int getMaxPerRoute(java.lang.Object) -> getMaxPerRoute
    void setMaxPerRoute(java.lang.Object,int) -> setMaxPerRoute
org.apache.http.impl.conn.PoolingClientConnectionManager$1 -> org.apache.http.impl.conn.PoolingClientConnectionManager$1:
    java.util.concurrent.Future val$future -> val$future
    org.apache.http.impl.conn.PoolingClientConnectionManager this$0 -> this$0
    void abortRequest() -> abortRequest
    org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
org.apache.http.impl.conn.PoolingHttpClientConnectionManager -> org.apache.http.impl.conn.PoolingHttpClientConnectionManager:
    org.apache.commons.logging.Log log -> log
    org.apache.http.impl.conn.PoolingHttpClientConnectionManager$ConfigData configData -> configData
    org.apache.http.impl.conn.CPool pool -> pool
    org.apache.http.impl.conn.HttpClientConnectionOperator connectionOperator -> connectionOperator
    java.util.concurrent.atomic.AtomicBoolean isShutDown -> isShutDown
    org.apache.http.config.Registry getDefaultRegistry() -> getDefaultRegistry
    void finalize() -> finalize
    void close() -> close
    java.lang.String format(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> format
    java.lang.String formatStats(org.apache.http.conn.routing.HttpRoute) -> formatStats
    java.lang.String format(org.apache.http.impl.conn.CPoolEntry) -> format
    org.apache.http.conn.ConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    org.apache.http.HttpClientConnection leaseConnection(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit) -> leaseConnection
    void releaseConnection(org.apache.http.HttpClientConnection,java.lang.Object,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void connect(org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,int,org.apache.http.protocol.HttpContext) -> connect
    void upgrade(org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> upgrade
    void routeComplete(org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> routeComplete
    void shutdown() -> shutdown
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    int getMaxTotal() -> getMaxTotal
    void setMaxTotal(int) -> setMaxTotal
    int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    int getMaxPerRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxPerRoute
    void setMaxPerRoute(org.apache.http.conn.routing.HttpRoute,int) -> setMaxPerRoute
    org.apache.http.pool.PoolStats getTotalStats() -> getTotalStats
    org.apache.http.pool.PoolStats getStats(org.apache.http.conn.routing.HttpRoute) -> getStats
    org.apache.http.config.SocketConfig getDefaultSocketConfig() -> getDefaultSocketConfig
    void setDefaultSocketConfig(org.apache.http.config.SocketConfig) -> setDefaultSocketConfig
    org.apache.http.config.ConnectionConfig getDefaultConnectionConfig() -> getDefaultConnectionConfig
    void setDefaultConnectionConfig(org.apache.http.config.ConnectionConfig) -> setDefaultConnectionConfig
    org.apache.http.config.SocketConfig getSocketConfig(org.apache.http.HttpHost) -> getSocketConfig
    void setSocketConfig(org.apache.http.HttpHost,org.apache.http.config.SocketConfig) -> setSocketConfig
    org.apache.http.config.ConnectionConfig getConnectionConfig(org.apache.http.HttpHost) -> getConnectionConfig
    void setConnectionConfig(org.apache.http.HttpHost,org.apache.http.config.ConnectionConfig) -> setConnectionConfig
    org.apache.http.pool.PoolStats getStats(java.lang.Object) -> getStats
    int getMaxPerRoute(java.lang.Object) -> getMaxPerRoute
    void setMaxPerRoute(java.lang.Object,int) -> setMaxPerRoute
org.apache.http.impl.conn.PoolingHttpClientConnectionManager$1 -> org.apache.http.impl.conn.PoolingHttpClientConnectionManager$1:
    java.util.concurrent.Future val$future -> val$future
    org.apache.http.impl.conn.PoolingHttpClientConnectionManager this$0 -> this$0
    boolean cancel() -> cancel
    org.apache.http.HttpClientConnection get(long,java.util.concurrent.TimeUnit) -> get
org.apache.http.impl.conn.PoolingHttpClientConnectionManager$ConfigData -> org.apache.http.impl.conn.PoolingHttpClientConnectionManager$ConfigData:
    java.util.Map socketConfigMap -> socketConfigMap
    java.util.Map connectionConfigMap -> connectionConfigMap
    org.apache.http.config.SocketConfig defaultSocketConfig -> defaultSocketConfig
    org.apache.http.config.ConnectionConfig defaultConnectionConfig -> defaultConnectionConfig
    org.apache.http.config.SocketConfig getDefaultSocketConfig() -> getDefaultSocketConfig
    void setDefaultSocketConfig(org.apache.http.config.SocketConfig) -> setDefaultSocketConfig
    org.apache.http.config.ConnectionConfig getDefaultConnectionConfig() -> getDefaultConnectionConfig
    void setDefaultConnectionConfig(org.apache.http.config.ConnectionConfig) -> setDefaultConnectionConfig
    org.apache.http.config.SocketConfig getSocketConfig(org.apache.http.HttpHost) -> getSocketConfig
    void setSocketConfig(org.apache.http.HttpHost,org.apache.http.config.SocketConfig) -> setSocketConfig
    org.apache.http.config.ConnectionConfig getConnectionConfig(org.apache.http.HttpHost) -> getConnectionConfig
    void setConnectionConfig(org.apache.http.HttpHost,org.apache.http.config.ConnectionConfig) -> setConnectionConfig
org.apache.http.impl.conn.PoolingHttpClientConnectionManager$InternalConnectionFactory -> org.apache.http.impl.conn.PoolingHttpClientConnectionManager$InternalConnectionFactory:
    org.apache.http.impl.conn.PoolingHttpClientConnectionManager$ConfigData configData -> configData
    org.apache.http.conn.HttpConnectionFactory connFactory -> connFactory
    org.apache.http.conn.ManagedHttpClientConnection create(org.apache.http.conn.routing.HttpRoute) -> create
    java.lang.Object create(java.lang.Object) -> create
org.apache.http.impl.conn.ProxySelectorRoutePlanner -> org.apache.http.impl.conn.ProxySelectorRoutePlanner:
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    java.net.ProxySelector proxySelector -> proxySelector
    java.net.ProxySelector getProxySelector() -> getProxySelector
    void setProxySelector(java.net.ProxySelector) -> setProxySelector
    org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
    org.apache.http.HttpHost determineProxy(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineProxy
    java.lang.String getHost(java.net.InetSocketAddress) -> getHost
    java.net.Proxy chooseProxy(java.util.List,org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> chooseProxy
org.apache.http.impl.conn.ProxySelectorRoutePlanner$1 -> org.apache.http.impl.conn.ProxySelectorRoutePlanner$1:
    int[] $SwitchMap$java$net$Proxy$Type -> $SwitchMap$java$net$Proxy$Type
org.apache.http.impl.conn.SchemeRegistryFactory -> org.apache.http.impl.conn.SchemeRegistryFactory:
    org.apache.http.conn.scheme.SchemeRegistry createDefault() -> createDefault
    org.apache.http.conn.scheme.SchemeRegistry createSystemDefault() -> createSystemDefault
org.apache.http.impl.conn.SingleClientConnManager -> org.apache.http.impl.conn.SingleClientConnManager:
    org.apache.commons.logging.Log log -> log
    java.lang.String MISUSE_MESSAGE -> MISUSE_MESSAGE
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    boolean alwaysShutDown -> alwaysShutDown
    org.apache.http.impl.conn.SingleClientConnManager$PoolEntry uniquePoolEntry -> uniquePoolEntry
    org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter managedConn -> managedConn
    long lastReleaseTime -> lastReleaseTime
    long connectionExpiresTime -> connectionExpiresTime
    boolean isShutDown -> isShutDown
    void finalize() -> finalize
    org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry) -> createConnectionOperator
    void assertStillUp() -> assertStillUp
    org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> getConnection
    void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void closeExpiredConnections() -> closeExpiredConnections
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void shutdown() -> shutdown
    void revokeConnection() -> revokeConnection
org.apache.http.impl.conn.SingleClientConnManager$1 -> org.apache.http.impl.conn.SingleClientConnManager$1:
    org.apache.http.conn.routing.HttpRoute val$route -> val$route
    java.lang.Object val$state -> val$state
    org.apache.http.impl.conn.SingleClientConnManager this$0 -> this$0
    void abortRequest() -> abortRequest
    org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter -> org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter:
    org.apache.http.impl.conn.SingleClientConnManager this$0 -> this$0
org.apache.http.impl.conn.SingleClientConnManager$PoolEntry -> org.apache.http.impl.conn.SingleClientConnManager$PoolEntry:
    org.apache.http.impl.conn.SingleClientConnManager this$0 -> this$0
    void close() -> close
    void shutdown() -> shutdown
org.apache.http.impl.conn.SystemDefaultDnsResolver -> org.apache.http.impl.conn.SystemDefaultDnsResolver:
    org.apache.http.impl.conn.SystemDefaultDnsResolver INSTANCE -> INSTANCE
    java.net.InetAddress[] resolve(java.lang.String) -> resolve
org.apache.http.impl.conn.SystemDefaultRoutePlanner -> org.apache.http.impl.conn.SystemDefaultRoutePlanner:
    java.net.ProxySelector proxySelector -> proxySelector
    org.apache.http.HttpHost determineProxy(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineProxy
    java.lang.String getHost(java.net.InetSocketAddress) -> getHost
    java.net.Proxy chooseProxy(java.util.List) -> chooseProxy
org.apache.http.impl.conn.SystemDefaultRoutePlanner$1 -> org.apache.http.impl.conn.SystemDefaultRoutePlanner$1:
    int[] $SwitchMap$java$net$Proxy$Type -> $SwitchMap$java$net$Proxy$Type
org.apache.http.impl.conn.Wire -> org.apache.http.impl.conn.Wire:
    org.apache.commons.logging.Log log -> log
    java.lang.String id -> id
    void wire(java.lang.String,java.io.InputStream) -> wire
    boolean enabled() -> enabled
    void output(java.io.InputStream) -> output
    void input(java.io.InputStream) -> input
    void output(byte[],int,int) -> output
    void input(byte[],int,int) -> input
    void output(byte[]) -> output
    void input(byte[]) -> input
    void output(int) -> output
    void input(int) -> input
    void output(java.lang.String) -> output
    void input(java.lang.String) -> input
org.apache.http.impl.conn.tsccm.AbstractConnPool -> org.apache.http.impl.conn.tsccm.AbstractConnPool:
    org.apache.commons.logging.Log log -> log
    java.util.concurrent.locks.Lock poolLock -> poolLock
    java.util.Set leasedConnections -> leasedConnections
    int numConnections -> numConnections
    boolean isShutDown -> isShutDown
    java.util.Set issuedConnections -> issuedConnections
    java.lang.ref.ReferenceQueue refQueue -> refQueue
    org.apache.http.impl.conn.IdleConnectionHandler idleConnHandler -> idleConnHandler
    void enableConnectionGC() -> enableConnectionGC
    org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit) -> getEntry
    org.apache.http.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestPoolEntry
    void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit) -> freeEntry
    void handleReference(java.lang.ref.Reference) -> handleReference
    void handleLostEntry(org.apache.http.conn.routing.HttpRoute) -> handleLostEntry
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    void deleteClosedConnections() -> deleteClosedConnections
    void shutdown() -> shutdown
    void closeConnection(org.apache.http.conn.OperatedClientConnection) -> closeConnection
org.apache.http.impl.conn.tsccm.BasicPoolEntry -> org.apache.http.impl.conn.tsccm.BasicPoolEntry:
    long created -> created
    long updated -> updated
    long validUntil -> validUntil
    long expiry -> expiry
    org.apache.http.conn.OperatedClientConnection getConnection() -> getConnection
    org.apache.http.conn.routing.HttpRoute getPlannedRoute() -> getPlannedRoute
    org.apache.http.impl.conn.tsccm.BasicPoolEntryRef getWeakRef() -> getWeakRef
    void shutdownEntry() -> shutdownEntry
    long getCreated() -> getCreated
    long getUpdated() -> getUpdated
    long getExpiry() -> getExpiry
    long getValidUntil() -> getValidUntil
    void updateExpiry(long,java.util.concurrent.TimeUnit) -> updateExpiry
    boolean isExpired(long) -> isExpired
org.apache.http.impl.conn.tsccm.BasicPoolEntryRef -> org.apache.http.impl.conn.tsccm.BasicPoolEntryRef:
    org.apache.http.conn.routing.HttpRoute route -> route
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter -> org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter:
    org.apache.http.conn.ClientConnectionManager getManager() -> getManager
    org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry() -> getPoolEntry
    void detach() -> detach
org.apache.http.impl.conn.tsccm.ConnPoolByRoute -> org.apache.http.impl.conn.tsccm.ConnPoolByRoute:
    org.apache.commons.logging.Log log -> log
    java.util.concurrent.locks.Lock poolLock -> poolLock
    org.apache.http.conn.ClientConnectionOperator operator -> operator
    org.apache.http.conn.params.ConnPerRoute connPerRoute -> connPerRoute
    java.util.Set leasedConnections -> leasedConnections
    java.util.Queue freeConnections -> freeConnections
    java.util.Queue waitingThreads -> waitingThreads
    java.util.Map routeToPool -> routeToPool
    long connTTL -> connTTL
    java.util.concurrent.TimeUnit connTTLTimeUnit -> connTTLTimeUnit
    boolean shutdown -> shutdown
    int maxTotalConnections -> maxTotalConnections
    int numConnections -> numConnections
    java.util.concurrent.locks.Lock getLock() -> getLock
    java.util.Queue createFreeConnQueue() -> createFreeConnQueue
    java.util.Queue createWaitingThreadQueue() -> createWaitingThreadQueue
    java.util.Map createRouteToPoolMap() -> createRouteToPoolMap
    org.apache.http.impl.conn.tsccm.RouteSpecificPool newRouteSpecificPool(org.apache.http.conn.routing.HttpRoute) -> newRouteSpecificPool
    org.apache.http.impl.conn.tsccm.WaitingThread newWaitingThread(java.util.concurrent.locks.Condition,org.apache.http.impl.conn.tsccm.RouteSpecificPool) -> newWaitingThread
    void closeConnection(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> closeConnection
    org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean) -> getRoutePool
    int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute) -> getConnectionsInPool
    int getConnectionsInPool() -> getConnectionsInPool
    org.apache.http.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestPoolEntry
    org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntryBlocking(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.impl.conn.tsccm.WaitingThreadAborter) -> getEntryBlocking
    void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit) -> freeEntry
    org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,java.lang.Object) -> getFreeEntry
    org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator) -> createEntry
    void deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> deleteEntry
    void deleteLeastUsedEntry() -> deleteLeastUsedEntry
    void handleLostEntry(org.apache.http.conn.routing.HttpRoute) -> handleLostEntry
    void notifyWaitingThread(org.apache.http.impl.conn.tsccm.RouteSpecificPool) -> notifyWaitingThread
    void deleteClosedConnections() -> deleteClosedConnections
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    void shutdown() -> shutdown
    void setMaxTotalConnections(int) -> setMaxTotalConnections
    int getMaxTotalConnections() -> getMaxTotalConnections
    java.util.concurrent.locks.Lock access$000(org.apache.http.impl.conn.tsccm.ConnPoolByRoute) -> access$000
org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1 -> org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1:
    org.apache.http.impl.conn.tsccm.WaitingThreadAborter val$aborter -> val$aborter
    org.apache.http.conn.routing.HttpRoute val$route -> val$route
    java.lang.Object val$state -> val$state
    org.apache.http.impl.conn.tsccm.ConnPoolByRoute this$0 -> this$0
    void abortRequest() -> abortRequest
    org.apache.http.impl.conn.tsccm.BasicPoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
org.apache.http.impl.conn.tsccm.PoolEntryRequest -> org.apache.http.impl.conn.tsccm.PoolEntryRequest:
    org.apache.http.impl.conn.tsccm.BasicPoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
    void abortRequest() -> abortRequest
org.apache.http.impl.conn.tsccm.RouteSpecificPool -> org.apache.http.impl.conn.tsccm.RouteSpecificPool:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.routing.HttpRoute route -> route
    int maxEntries -> maxEntries
    org.apache.http.conn.params.ConnPerRoute connPerRoute -> connPerRoute
    java.util.LinkedList freeEntries -> freeEntries
    java.util.Queue waitingThreads -> waitingThreads
    int numEntries -> numEntries
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    int getMaxEntries() -> getMaxEntries
    boolean isUnused() -> isUnused
    int getCapacity() -> getCapacity
    int getEntryCount() -> getEntryCount
    org.apache.http.impl.conn.tsccm.BasicPoolEntry allocEntry(java.lang.Object) -> allocEntry
    void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> freeEntry
    void createdEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> createdEntry
    boolean deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> deleteEntry
    void dropEntry() -> dropEntry
    void queueThread(org.apache.http.impl.conn.tsccm.WaitingThread) -> queueThread
    boolean hasThread() -> hasThread
    org.apache.http.impl.conn.tsccm.WaitingThread nextThread() -> nextThread
    void removeThread(org.apache.http.impl.conn.tsccm.WaitingThread) -> removeThread
org.apache.http.impl.conn.tsccm.RouteSpecificPool$1 -> org.apache.http.impl.conn.tsccm.RouteSpecificPool$1:
    org.apache.http.impl.conn.tsccm.RouteSpecificPool this$0 -> this$0
    int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager -> org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.impl.conn.tsccm.AbstractConnPool connectionPool -> connectionPool
    org.apache.http.impl.conn.tsccm.ConnPoolByRoute pool -> pool
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    org.apache.http.conn.params.ConnPerRouteBean connPerRoute -> connPerRoute
    void finalize() -> finalize
    org.apache.http.impl.conn.tsccm.AbstractConnPool createConnectionPool(org.apache.http.params.HttpParams) -> createConnectionPool
    org.apache.http.impl.conn.tsccm.ConnPoolByRoute createConnectionPool(long,java.util.concurrent.TimeUnit) -> createConnectionPool
    org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry) -> createConnectionOperator
    org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void shutdown() -> shutdown
    int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute) -> getConnectionsInPool
    int getConnectionsInPool() -> getConnectionsInPool
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    int getMaxTotal() -> getMaxTotal
    void setMaxTotal(int) -> setMaxTotal
    int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
    void setMaxForRoute(org.apache.http.conn.routing.HttpRoute,int) -> setMaxForRoute
    org.apache.commons.logging.Log access$000(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager) -> access$000
org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1 -> org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1:
    org.apache.http.impl.conn.tsccm.PoolEntryRequest val$poolRequest -> val$poolRequest
    org.apache.http.conn.routing.HttpRoute val$route -> val$route
    org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager this$0 -> this$0
    void abortRequest() -> abortRequest
    org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
org.apache.http.impl.conn.tsccm.WaitingThread -> org.apache.http.impl.conn.tsccm.WaitingThread:
    java.util.concurrent.locks.Condition cond -> cond
    org.apache.http.impl.conn.tsccm.RouteSpecificPool pool -> pool
    java.lang.Thread waiter -> waiter
    boolean aborted -> aborted
    java.util.concurrent.locks.Condition getCondition() -> getCondition
    org.apache.http.impl.conn.tsccm.RouteSpecificPool getPool() -> getPool
    java.lang.Thread getThread() -> getThread
    boolean await(java.util.Date) -> await
    void wakeup() -> wakeup
    void interrupt() -> interrupt
org.apache.http.impl.conn.tsccm.WaitingThreadAborter -> org.apache.http.impl.conn.tsccm.WaitingThreadAborter:
    org.apache.http.impl.conn.tsccm.WaitingThread waitingThread -> waitingThread
    boolean aborted -> aborted
    void abort() -> abort
    void setWaitingThread(org.apache.http.impl.conn.tsccm.WaitingThread) -> setWaitingThread
org.apache.http.impl.cookie.AbstractCookieAttributeHandler -> org.apache.http.impl.cookie.AbstractCookieAttributeHandler:
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.AbstractCookieSpec -> org.apache.http.impl.cookie.AbstractCookieSpec:
    java.util.Map attribHandlerMap -> attribHandlerMap
    void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler) -> registerAttribHandler
    org.apache.http.cookie.CookieAttributeHandler findAttribHandler(java.lang.String) -> findAttribHandler
    org.apache.http.cookie.CookieAttributeHandler getAttribHandler(java.lang.String) -> getAttribHandler
    java.util.Collection getAttribHandlers() -> getAttribHandlers
org.apache.http.impl.cookie.BasicClientCookie -> org.apache.http.impl.cookie.BasicClientCookie:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.util.Map attribs -> attribs
    java.lang.String value -> value
    java.lang.String cookieComment -> cookieComment
    java.lang.String cookieDomain -> cookieDomain
    java.util.Date cookieExpiryDate -> cookieExpiryDate
    java.lang.String cookiePath -> cookiePath
    boolean isSecure -> isSecure
    int cookieVersion -> cookieVersion
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    java.lang.String getComment() -> getComment
    void setComment(java.lang.String) -> setComment
    java.lang.String getCommentURL() -> getCommentURL
    java.util.Date getExpiryDate() -> getExpiryDate
    void setExpiryDate(java.util.Date) -> setExpiryDate
    boolean isPersistent() -> isPersistent
    java.lang.String getDomain() -> getDomain
    void setDomain(java.lang.String) -> setDomain
    java.lang.String getPath() -> getPath
    void setPath(java.lang.String) -> setPath
    boolean isSecure() -> isSecure
    void setSecure(boolean) -> setSecure
    int[] getPorts() -> getPorts
    int getVersion() -> getVersion
    void setVersion(int) -> setVersion
    boolean isExpired(java.util.Date) -> isExpired
    void setAttribute(java.lang.String,java.lang.String) -> setAttribute
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    boolean containsAttribute(java.lang.String) -> containsAttribute
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
org.apache.http.impl.cookie.BasicClientCookie2 -> org.apache.http.impl.cookie.BasicClientCookie2:
    long serialVersionUID -> serialVersionUID
    java.lang.String commentURL -> commentURL
    int[] ports -> ports
    boolean discard -> discard
    int[] getPorts() -> getPorts
    void setPorts(int[]) -> setPorts
    java.lang.String getCommentURL() -> getCommentURL
    void setCommentURL(java.lang.String) -> setCommentURL
    void setDiscard(boolean) -> setDiscard
    boolean isPersistent() -> isPersistent
    boolean isExpired(java.util.Date) -> isExpired
    java.lang.Object clone() -> clone
org.apache.http.impl.cookie.BasicCommentHandler -> org.apache.http.impl.cookie.BasicCommentHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
org.apache.http.impl.cookie.BasicDomainHandler -> org.apache.http.impl.cookie.BasicDomainHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.BasicExpiresHandler -> org.apache.http.impl.cookie.BasicExpiresHandler:
    java.lang.String[] datepatterns -> datepatterns
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
org.apache.http.impl.cookie.BasicMaxAgeHandler -> org.apache.http.impl.cookie.BasicMaxAgeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
org.apache.http.impl.cookie.BasicPathHandler -> org.apache.http.impl.cookie.BasicPathHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.BasicSecureHandler -> org.apache.http.impl.cookie.BasicSecureHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.BestMatchSpec -> org.apache.http.impl.cookie.BestMatchSpec:
    java.lang.String[] datepatterns -> datepatterns
    boolean oneHeader -> oneHeader
    org.apache.http.impl.cookie.RFC2965Spec strict -> strict
    org.apache.http.impl.cookie.RFC2109Spec obsoleteStrict -> obsoleteStrict
    org.apache.http.impl.cookie.BrowserCompatSpec compat -> compat
    org.apache.http.impl.cookie.RFC2965Spec getStrict() -> getStrict
    org.apache.http.impl.cookie.RFC2109Spec getObsoleteStrict() -> getObsoleteStrict
    org.apache.http.impl.cookie.BrowserCompatSpec getCompat() -> getCompat
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
    java.util.List formatCookies(java.util.List) -> formatCookies
    int getVersion() -> getVersion
    org.apache.http.Header getVersionHeader() -> getVersionHeader
    java.lang.String toString() -> toString
org.apache.http.impl.cookie.BestMatchSpecFactory -> org.apache.http.impl.cookie.BestMatchSpecFactory:
    java.lang.String[] datepatterns -> datepatterns
    boolean oneHeader -> oneHeader
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
    org.apache.http.cookie.CookieSpec create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.impl.cookie.BrowserCompatSpec -> org.apache.http.impl.cookie.BrowserCompatSpec:
    java.lang.String[] DEFAULT_DATE_PATTERNS -> DEFAULT_DATE_PATTERNS
    java.lang.String[] datepatterns -> datepatterns
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    boolean isQuoteEnclosed(java.lang.String) -> isQuoteEnclosed
    java.util.List formatCookies(java.util.List) -> formatCookies
    int getVersion() -> getVersion
    org.apache.http.Header getVersionHeader() -> getVersionHeader
    java.lang.String toString() -> toString
org.apache.http.impl.cookie.BrowserCompatSpec$1 -> org.apache.http.impl.cookie.BrowserCompatSpec$1:
    org.apache.http.impl.cookie.BrowserCompatSpec this$0 -> this$0
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
org.apache.http.impl.cookie.BrowserCompatSpec$2 -> org.apache.http.impl.cookie.BrowserCompatSpec$2:
    int[] $SwitchMap$org$apache$http$impl$cookie$BrowserCompatSpecFactory$SecurityLevel -> $SwitchMap$org$apache$http$impl$cookie$BrowserCompatSpecFactory$SecurityLevel
org.apache.http.impl.cookie.BrowserCompatSpecFactory -> org.apache.http.impl.cookie.BrowserCompatSpecFactory:
    java.lang.String[] datepatterns -> datepatterns
    org.apache.http.impl.cookie.BrowserCompatSpecFactory$SecurityLevel securityLevel -> securityLevel
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
    org.apache.http.cookie.CookieSpec create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.impl.cookie.BrowserCompatSpecFactory$SecurityLevel -> org.apache.http.impl.cookie.BrowserCompatSpecFactory$SecurityLevel:
    org.apache.http.impl.cookie.BrowserCompatSpecFactory$SecurityLevel SECURITYLEVEL_DEFAULT -> SECURITYLEVEL_DEFAULT
    org.apache.http.impl.cookie.BrowserCompatSpecFactory$SecurityLevel SECURITYLEVEL_IE_MEDIUM -> SECURITYLEVEL_IE_MEDIUM
    org.apache.http.impl.cookie.BrowserCompatSpecFactory$SecurityLevel[] $VALUES -> $VALUES
    org.apache.http.impl.cookie.BrowserCompatSpecFactory$SecurityLevel[] values() -> values
    org.apache.http.impl.cookie.BrowserCompatSpecFactory$SecurityLevel valueOf(java.lang.String) -> valueOf
org.apache.http.impl.cookie.BrowserCompatVersionAttributeHandler -> org.apache.http.impl.cookie.BrowserCompatVersionAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
org.apache.http.impl.cookie.CookieSpecBase -> org.apache.http.impl.cookie.CookieSpecBase:
    java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin) -> getDefaultPath
    java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin) -> getDefaultDomain
    java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.DateParseException -> org.apache.http.impl.cookie.DateParseException:
    long serialVersionUID -> serialVersionUID
org.apache.http.impl.cookie.DateUtils -> org.apache.http.impl.cookie.DateUtils:
    java.lang.String PATTERN_RFC1123 -> PATTERN_RFC1123
    java.lang.String PATTERN_RFC1036 -> PATTERN_RFC1036
    java.lang.String PATTERN_ASCTIME -> PATTERN_ASCTIME
    java.util.TimeZone GMT -> GMT
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.util.Date parseDate(java.lang.String,java.lang.String[]) -> parseDate
    java.util.Date parseDate(java.lang.String,java.lang.String[],java.util.Date) -> parseDate
    java.lang.String formatDate(java.util.Date) -> formatDate
    java.lang.String formatDate(java.util.Date,java.lang.String) -> formatDate
org.apache.http.impl.cookie.IgnoreSpec -> org.apache.http.impl.cookie.IgnoreSpec:
    int getVersion() -> getVersion
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    java.util.List formatCookies(java.util.List) -> formatCookies
    org.apache.http.Header getVersionHeader() -> getVersionHeader
org.apache.http.impl.cookie.IgnoreSpecFactory -> org.apache.http.impl.cookie.IgnoreSpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
    org.apache.http.cookie.CookieSpec create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.impl.cookie.NetscapeDomainHandler -> org.apache.http.impl.cookie.NetscapeDomainHandler:
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean isSpecialDomain(java.lang.String) -> isSpecialDomain
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.NetscapeDraftHeaderParser -> org.apache.http.impl.cookie.NetscapeDraftHeaderParser:
    org.apache.http.impl.cookie.NetscapeDraftHeaderParser DEFAULT -> DEFAULT
    org.apache.http.HeaderElement parseHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseHeader
    org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseNameValuePair
org.apache.http.impl.cookie.NetscapeDraftSpec -> org.apache.http.impl.cookie.NetscapeDraftSpec:
    java.lang.String EXPIRES_PATTERN -> EXPIRES_PATTERN
    java.lang.String[] datepatterns -> datepatterns
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    java.util.List formatCookies(java.util.List) -> formatCookies
    int getVersion() -> getVersion
    org.apache.http.Header getVersionHeader() -> getVersionHeader
    java.lang.String toString() -> toString
org.apache.http.impl.cookie.NetscapeDraftSpecFactory -> org.apache.http.impl.cookie.NetscapeDraftSpecFactory:
    java.lang.String[] datepatterns -> datepatterns
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
    org.apache.http.cookie.CookieSpec create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.impl.cookie.PublicSuffixFilter -> org.apache.http.impl.cookie.PublicSuffixFilter:
    org.apache.http.cookie.CookieAttributeHandler wrapped -> wrapped
    java.util.Set exceptions -> exceptions
    java.util.Set suffixes -> suffixes
    void setPublicSuffixes(java.util.Collection) -> setPublicSuffixes
    void setExceptions(java.util.Collection) -> setExceptions
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean isForPublicSuffix(org.apache.http.cookie.Cookie) -> isForPublicSuffix
org.apache.http.impl.cookie.PublicSuffixListParser -> org.apache.http.impl.cookie.PublicSuffixListParser:
    int MAX_LINE_LEN -> MAX_LINE_LEN
    org.apache.http.impl.cookie.PublicSuffixFilter filter -> filter
    void parse(java.io.Reader) -> parse
    boolean readLine(java.io.Reader,java.lang.StringBuilder) -> readLine
org.apache.http.impl.cookie.RFC2109DomainHandler -> org.apache.http.impl.cookie.RFC2109DomainHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2109Spec -> org.apache.http.impl.cookie.RFC2109Spec:
    org.apache.http.cookie.CookiePathComparator PATH_COMPARATOR -> PATH_COMPARATOR
    java.lang.String[] DATE_PATTERNS -> DATE_PATTERNS
    java.lang.String[] datepatterns -> datepatterns
    boolean oneHeader -> oneHeader
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    java.util.List formatCookies(java.util.List) -> formatCookies
    java.util.List doFormatOneHeader(java.util.List) -> doFormatOneHeader
    java.util.List doFormatManyHeaders(java.util.List) -> doFormatManyHeaders
    void formatParamAsVer(org.apache.http.util.CharArrayBuffer,java.lang.String,java.lang.String,int) -> formatParamAsVer
    void formatCookieAsVer(org.apache.http.util.CharArrayBuffer,org.apache.http.cookie.Cookie,int) -> formatCookieAsVer
    int getVersion() -> getVersion
    org.apache.http.Header getVersionHeader() -> getVersionHeader
    java.lang.String toString() -> toString
org.apache.http.impl.cookie.RFC2109SpecFactory -> org.apache.http.impl.cookie.RFC2109SpecFactory:
    java.lang.String[] datepatterns -> datepatterns
    boolean oneHeader -> oneHeader
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
    org.apache.http.cookie.CookieSpec create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.impl.cookie.RFC2109VersionHandler -> org.apache.http.impl.cookie.RFC2109VersionHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler -> org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler -> org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965DomainAttributeHandler -> org.apache.http.impl.cookie.RFC2965DomainAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    boolean domainMatch(java.lang.String,java.lang.String) -> domainMatch
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965PortAttributeHandler -> org.apache.http.impl.cookie.RFC2965PortAttributeHandler:
    int[] parsePortAttribute(java.lang.String) -> parsePortAttribute
    boolean portMatch(int,int[]) -> portMatch
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965Spec -> org.apache.http.impl.cookie.RFC2965Spec:
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin) -> parse
    java.util.List createCookies(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin) -> createCookies
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
    void formatCookieAsVer(org.apache.http.util.CharArrayBuffer,org.apache.http.cookie.Cookie,int) -> formatCookieAsVer
    org.apache.http.cookie.CookieOrigin adjustEffectiveHost(org.apache.http.cookie.CookieOrigin) -> adjustEffectiveHost
    int getVersion() -> getVersion
    org.apache.http.Header getVersionHeader() -> getVersionHeader
    java.lang.String toString() -> toString
org.apache.http.impl.cookie.RFC2965SpecFactory -> org.apache.http.impl.cookie.RFC2965SpecFactory:
    java.lang.String[] datepatterns -> datepatterns
    boolean oneHeader -> oneHeader
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
    org.apache.http.cookie.CookieSpec create(org.apache.http.protocol.HttpContext) -> create
org.apache.http.impl.cookie.RFC2965VersionAttributeHandler -> org.apache.http.impl.cookie.RFC2965VersionAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.entity.DisallowIdentityContentLengthStrategy -> org.apache.http.impl.entity.DisallowIdentityContentLengthStrategy:
    org.apache.http.impl.entity.DisallowIdentityContentLengthStrategy INSTANCE -> INSTANCE
    org.apache.http.entity.ContentLengthStrategy contentLengthStrategy -> contentLengthStrategy
    long determineLength(org.apache.http.HttpMessage) -> determineLength
org.apache.http.impl.entity.EntityDeserializer -> org.apache.http.impl.entity.EntityDeserializer:
    org.apache.http.entity.ContentLengthStrategy lenStrategy -> lenStrategy
    org.apache.http.entity.BasicHttpEntity doDeserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage) -> doDeserialize
    org.apache.http.HttpEntity deserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage) -> deserialize
org.apache.http.impl.entity.EntitySerializer -> org.apache.http.impl.entity.EntitySerializer:
    org.apache.http.entity.ContentLengthStrategy lenStrategy -> lenStrategy
    java.io.OutputStream doSerialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage) -> doSerialize
    void serialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage,org.apache.http.HttpEntity) -> serialize
org.apache.http.impl.entity.LaxContentLengthStrategy -> org.apache.http.impl.entity.LaxContentLengthStrategy:
    org.apache.http.impl.entity.LaxContentLengthStrategy INSTANCE -> INSTANCE
    int implicitLen -> implicitLen
    long determineLength(org.apache.http.HttpMessage) -> determineLength
org.apache.http.impl.entity.StrictContentLengthStrategy -> org.apache.http.impl.entity.StrictContentLengthStrategy:
    org.apache.http.impl.entity.StrictContentLengthStrategy INSTANCE -> INSTANCE
    int implicitLen -> implicitLen
    long determineLength(org.apache.http.HttpMessage) -> determineLength
org.apache.http.impl.execchain.BackoffStrategyExec -> org.apache.http.impl.execchain.BackoffStrategyExec:
    org.apache.http.impl.execchain.ClientExecChain requestExecutor -> requestExecutor
    org.apache.http.client.ConnectionBackoffStrategy connectionBackoffStrategy -> connectionBackoffStrategy
    org.apache.http.client.BackoffManager backoffManager -> backoffManager
    org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware) -> execute
org.apache.http.impl.execchain.ClientExecChain -> org.apache.http.impl.execchain.ClientExecChain:
    org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware) -> execute
org.apache.http.impl.execchain.ConnectionHolder -> org.apache.http.impl.execchain.ConnectionHolder:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.HttpClientConnectionManager manager -> manager
    org.apache.http.HttpClientConnection managedConn -> managedConn
    boolean reusable -> reusable
    java.lang.Object state -> state
    long validDuration -> validDuration
    java.util.concurrent.TimeUnit tunit -> tunit
    boolean released -> released
    boolean isReusable() -> isReusable
    void markReusable() -> markReusable
    void markNonReusable() -> markNonReusable
    void setState(java.lang.Object) -> setState
    void setValidFor(long,java.util.concurrent.TimeUnit) -> setValidFor
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
    boolean cancel() -> cancel
    boolean isReleased() -> isReleased
    void close() -> close
org.apache.http.impl.execchain.HttpResponseProxy -> org.apache.http.impl.execchain.HttpResponseProxy:
    org.apache.http.HttpResponse original -> original
    org.apache.http.impl.execchain.ConnectionHolder connHolder -> connHolder
    void close() -> close
    org.apache.http.StatusLine getStatusLine() -> getStatusLine
    void setStatusLine(org.apache.http.StatusLine) -> setStatusLine
    void setStatusLine(org.apache.http.ProtocolVersion,int) -> setStatusLine
    void setStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String) -> setStatusLine
    void setStatusCode(int) -> setStatusCode
    void setReasonPhrase(java.lang.String) -> setReasonPhrase
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    java.util.Locale getLocale() -> getLocale
    void setLocale(java.util.Locale) -> setLocale
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    boolean containsHeader(java.lang.String) -> containsHeader
    org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
    org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    void addHeader(org.apache.http.Header) -> addHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setHeader(org.apache.http.Header) -> setHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setHeaders(org.apache.http.Header[]) -> setHeaders
    void removeHeader(org.apache.http.Header) -> removeHeader
    void removeHeaders(java.lang.String) -> removeHeaders
    org.apache.http.HeaderIterator headerIterator() -> headerIterator
    org.apache.http.HeaderIterator headerIterator(java.lang.String) -> headerIterator
    org.apache.http.params.HttpParams getParams() -> getParams
    void setParams(org.apache.http.params.HttpParams) -> setParams
    java.lang.String toString() -> toString
org.apache.http.impl.execchain.MainClientExec -> org.apache.http.impl.execchain.MainClientExec:
    org.apache.commons.logging.Log log -> log
    org.apache.http.protocol.HttpRequestExecutor requestExecutor -> requestExecutor
    org.apache.http.conn.HttpClientConnectionManager connManager -> connManager
    org.apache.http.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy -> keepAliveStrategy
    org.apache.http.protocol.HttpProcessor proxyHttpProcessor -> proxyHttpProcessor
    org.apache.http.client.AuthenticationStrategy targetAuthStrategy -> targetAuthStrategy
    org.apache.http.client.AuthenticationStrategy proxyAuthStrategy -> proxyAuthStrategy
    org.apache.http.impl.auth.HttpAuthenticator authenticator -> authenticator
    org.apache.http.client.UserTokenHandler userTokenHandler -> userTokenHandler
    org.apache.http.conn.routing.HttpRouteDirector routeDirector -> routeDirector
    org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware) -> execute
    void establishRoute(org.apache.http.auth.AuthState,org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,org.apache.http.HttpRequest,org.apache.http.client.protocol.HttpClientContext) -> establishRoute
    boolean createTunnelToTarget(org.apache.http.auth.AuthState,org.apache.http.HttpClientConnection,org.apache.http.conn.routing.HttpRoute,org.apache.http.HttpRequest,org.apache.http.client.protocol.HttpClientContext) -> createTunnelToTarget
    boolean createTunnelToProxy(org.apache.http.conn.routing.HttpRoute,int,org.apache.http.client.protocol.HttpClientContext) -> createTunnelToProxy
    boolean needAuthentication(org.apache.http.auth.AuthState,org.apache.http.auth.AuthState,org.apache.http.conn.routing.HttpRoute,org.apache.http.HttpResponse,org.apache.http.client.protocol.HttpClientContext) -> needAuthentication
org.apache.http.impl.execchain.MinimalClientExec -> org.apache.http.impl.execchain.MinimalClientExec:
    org.apache.commons.logging.Log log -> log
    org.apache.http.protocol.HttpRequestExecutor requestExecutor -> requestExecutor
    org.apache.http.conn.HttpClientConnectionManager connManager -> connManager
    org.apache.http.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy -> keepAliveStrategy
    org.apache.http.protocol.HttpProcessor httpProcessor -> httpProcessor
    void rewriteRequestURI(org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.conn.routing.HttpRoute) -> rewriteRequestURI
    org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware) -> execute
org.apache.http.impl.execchain.ProtocolExec -> org.apache.http.impl.execchain.ProtocolExec:
    org.apache.commons.logging.Log log -> log
    org.apache.http.impl.execchain.ClientExecChain requestExecutor -> requestExecutor
    org.apache.http.protocol.HttpProcessor httpProcessor -> httpProcessor
    void rewriteRequestURI(org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.conn.routing.HttpRoute) -> rewriteRequestURI
    org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware) -> execute
org.apache.http.impl.execchain.RedirectExec -> org.apache.http.impl.execchain.RedirectExec:
    org.apache.commons.logging.Log log -> log
    org.apache.http.impl.execchain.ClientExecChain requestExecutor -> requestExecutor
    org.apache.http.client.RedirectStrategy redirectStrategy -> redirectStrategy
    org.apache.http.conn.routing.HttpRoutePlanner routePlanner -> routePlanner
    org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware) -> execute
org.apache.http.impl.execchain.RequestAbortedException -> org.apache.http.impl.execchain.RequestAbortedException:
    long serialVersionUID -> serialVersionUID
org.apache.http.impl.execchain.RequestEntityProxy -> org.apache.http.impl.execchain.RequestEntityProxy:
    org.apache.http.HttpEntity original -> original
    boolean consumed -> consumed
    void enhance(org.apache.http.HttpEntityEnclosingRequest) -> enhance
    boolean isEnhanced(org.apache.http.HttpEntity) -> isEnhanced
    boolean isRepeatable(org.apache.http.HttpRequest) -> isRepeatable
    org.apache.http.HttpEntity getOriginal() -> getOriginal
    boolean isConsumed() -> isConsumed
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    void consumeContent() -> consumeContent
    java.lang.String toString() -> toString
org.apache.http.impl.execchain.ResponseEntityProxy -> org.apache.http.impl.execchain.ResponseEntityProxy:
    org.apache.http.impl.execchain.ConnectionHolder connHolder -> connHolder
    void enchance(org.apache.http.HttpResponse,org.apache.http.impl.execchain.ConnectionHolder) -> enchance
    void cleanup() -> cleanup
    void releaseConnection() -> releaseConnection
    boolean isRepeatable() -> isRepeatable
    java.io.InputStream getContent() -> getContent
    void consumeContent() -> consumeContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean eofDetected(java.io.InputStream) -> eofDetected
    boolean streamClosed(java.io.InputStream) -> streamClosed
    boolean streamAbort(java.io.InputStream) -> streamAbort
    java.lang.String toString() -> toString
org.apache.http.impl.execchain.RetryExec -> org.apache.http.impl.execchain.RetryExec:
    org.apache.commons.logging.Log log -> log
    org.apache.http.impl.execchain.ClientExecChain requestExecutor -> requestExecutor
    org.apache.http.client.HttpRequestRetryHandler retryHandler -> retryHandler
    org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware) -> execute
org.apache.http.impl.execchain.ServiceUnavailableRetryExec -> org.apache.http.impl.execchain.ServiceUnavailableRetryExec:
    org.apache.commons.logging.Log log -> log
    org.apache.http.impl.execchain.ClientExecChain requestExecutor -> requestExecutor
    org.apache.http.client.ServiceUnavailableRetryStrategy retryStrategy -> retryStrategy
    org.apache.http.client.methods.CloseableHttpResponse execute(org.apache.http.conn.routing.HttpRoute,org.apache.http.client.methods.HttpRequestWrapper,org.apache.http.client.protocol.HttpClientContext,org.apache.http.client.methods.HttpExecutionAware) -> execute
org.apache.http.impl.execchain.TunnelRefusedException -> org.apache.http.impl.execchain.TunnelRefusedException:
    long serialVersionUID -> serialVersionUID
    org.apache.http.HttpResponse response -> response
    org.apache.http.HttpResponse getResponse() -> getResponse
org.apache.http.impl.io.AbstractMessageParser -> org.apache.http.impl.io.AbstractMessageParser:
    int HEAD_LINE -> HEAD_LINE
    int HEADERS -> HEADERS
    org.apache.http.io.SessionInputBuffer sessionBuffer -> sessionBuffer
    org.apache.http.config.MessageConstraints messageConstraints -> messageConstraints
    java.util.List headerLines -> headerLines
    org.apache.http.message.LineParser lineParser -> lineParser
    int state -> state
    org.apache.http.HttpMessage message -> message
    org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser) -> parseHeaders
    org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser,java.util.List) -> parseHeaders
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
    org.apache.http.HttpMessage parse() -> parse
org.apache.http.impl.io.AbstractMessageWriter -> org.apache.http.impl.io.AbstractMessageWriter:
    org.apache.http.io.SessionOutputBuffer sessionBuffer -> sessionBuffer
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    org.apache.http.message.LineFormatter lineFormatter -> lineFormatter
    void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
    void write(org.apache.http.HttpMessage) -> write
org.apache.http.impl.io.AbstractSessionInputBuffer -> org.apache.http.impl.io.AbstractSessionInputBuffer:
    java.io.InputStream instream -> instream
    byte[] buffer -> buffer
    org.apache.http.util.ByteArrayBuffer linebuffer -> linebuffer
    java.nio.charset.Charset charset -> charset
    boolean ascii -> ascii
    int maxLineLen -> maxLineLen
    int minChunkLimit -> minChunkLimit
    org.apache.http.impl.io.HttpTransportMetricsImpl metrics -> metrics
    java.nio.charset.CodingErrorAction onMalformedCharAction -> onMalformedCharAction
    java.nio.charset.CodingErrorAction onUnmappableCharAction -> onUnmappableCharAction
    int bufferpos -> bufferpos
    int bufferlen -> bufferlen
    java.nio.charset.CharsetDecoder decoder -> decoder
    java.nio.CharBuffer cbuf -> cbuf
    void init(java.io.InputStream,int,org.apache.http.params.HttpParams) -> init
    org.apache.http.impl.io.HttpTransportMetricsImpl createTransportMetrics() -> createTransportMetrics
    int capacity() -> capacity
    int length() -> length
    int available() -> available
    int fillBuffer() -> fillBuffer
    boolean hasBufferedData() -> hasBufferedData
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int locateLF() -> locateLF
    int readLine(org.apache.http.util.CharArrayBuffer) -> readLine
    int lineFromLineBuffer(org.apache.http.util.CharArrayBuffer) -> lineFromLineBuffer
    int lineFromReadBuffer(org.apache.http.util.CharArrayBuffer,int) -> lineFromReadBuffer
    int appendDecoded(org.apache.http.util.CharArrayBuffer,java.nio.ByteBuffer) -> appendDecoded
    int handleDecodingResult(java.nio.charset.CoderResult,org.apache.http.util.CharArrayBuffer,java.nio.ByteBuffer) -> handleDecodingResult
    java.lang.String readLine() -> readLine
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.io.AbstractSessionOutputBuffer -> org.apache.http.impl.io.AbstractSessionOutputBuffer:
    byte[] CRLF -> CRLF
    java.io.OutputStream outstream -> outstream
    org.apache.http.util.ByteArrayBuffer buffer -> buffer
    java.nio.charset.Charset charset -> charset
    boolean ascii -> ascii
    int minChunkLimit -> minChunkLimit
    org.apache.http.impl.io.HttpTransportMetricsImpl metrics -> metrics
    java.nio.charset.CodingErrorAction onMalformedCharAction -> onMalformedCharAction
    java.nio.charset.CodingErrorAction onUnmappableCharAction -> onUnmappableCharAction
    java.nio.charset.CharsetEncoder encoder -> encoder
    java.nio.ByteBuffer bbuf -> bbuf
    void init(java.io.OutputStream,int,org.apache.http.params.HttpParams) -> init
    org.apache.http.impl.io.HttpTransportMetricsImpl createTransportMetrics() -> createTransportMetrics
    int capacity() -> capacity
    int length() -> length
    int available() -> available
    void flushBuffer() -> flushBuffer
    void flush() -> flush
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void writeLine(java.lang.String) -> writeLine
    void writeLine(org.apache.http.util.CharArrayBuffer) -> writeLine
    void writeEncoded(java.nio.CharBuffer) -> writeEncoded
    void handleEncodingResult(java.nio.charset.CoderResult) -> handleEncodingResult
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.io.ChunkedInputStream -> org.apache.http.impl.io.ChunkedInputStream:
    int CHUNK_LEN -> CHUNK_LEN
    int CHUNK_DATA -> CHUNK_DATA
    int CHUNK_CRLF -> CHUNK_CRLF
    int BUFFER_SIZE -> BUFFER_SIZE
    org.apache.http.io.SessionInputBuffer in -> in
    org.apache.http.util.CharArrayBuffer buffer -> buffer
    int state -> state
    int chunkSize -> chunkSize
    int pos -> pos
    boolean eof -> eof
    boolean closed -> closed
    org.apache.http.Header[] footers -> footers
    int available() -> available
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    void nextChunk() -> nextChunk
    int getChunkSize() -> getChunkSize
    void parseTrailerHeaders() -> parseTrailerHeaders
    void close() -> close
    org.apache.http.Header[] getFooters() -> getFooters
org.apache.http.impl.io.ChunkedOutputStream -> org.apache.http.impl.io.ChunkedOutputStream:
    org.apache.http.io.SessionOutputBuffer out -> out
    byte[] cache -> cache
    int cachePosition -> cachePosition
    boolean wroteLastChunk -> wroteLastChunk
    boolean closed -> closed
    void flushCache() -> flushCache
    void flushCacheWithAppend(byte[],int,int) -> flushCacheWithAppend
    void writeClosingChunk() -> writeClosingChunk
    void finish() -> finish
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
org.apache.http.impl.io.ContentLengthInputStream -> org.apache.http.impl.io.ContentLengthInputStream:
    int BUFFER_SIZE -> BUFFER_SIZE
    long contentLength -> contentLength
    long pos -> pos
    boolean closed -> closed
    org.apache.http.io.SessionInputBuffer in -> in
    void close() -> close
    int available() -> available
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    long skip(long) -> skip
org.apache.http.impl.io.ContentLengthOutputStream -> org.apache.http.impl.io.ContentLengthOutputStream:
    org.apache.http.io.SessionOutputBuffer out -> out
    long contentLength -> contentLength
    long total -> total
    boolean closed -> closed
    void close() -> close
    void flush() -> flush
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
org.apache.http.impl.io.DefaultHttpRequestParser -> org.apache.http.impl.io.DefaultHttpRequestParser:
    org.apache.http.HttpRequestFactory requestFactory -> requestFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    org.apache.http.HttpRequest parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.io.DefaultHttpRequestParserFactory -> org.apache.http.impl.io.DefaultHttpRequestParserFactory:
    org.apache.http.impl.io.DefaultHttpRequestParserFactory INSTANCE -> INSTANCE
    org.apache.http.message.LineParser lineParser -> lineParser
    org.apache.http.HttpRequestFactory requestFactory -> requestFactory
    org.apache.http.io.HttpMessageParser create(org.apache.http.io.SessionInputBuffer,org.apache.http.config.MessageConstraints) -> create
org.apache.http.impl.io.DefaultHttpRequestWriter -> org.apache.http.impl.io.DefaultHttpRequestWriter:
    void writeHeadLine(org.apache.http.HttpRequest) -> writeHeadLine
    void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
org.apache.http.impl.io.DefaultHttpRequestWriterFactory -> org.apache.http.impl.io.DefaultHttpRequestWriterFactory:
    org.apache.http.impl.io.DefaultHttpRequestWriterFactory INSTANCE -> INSTANCE
    org.apache.http.message.LineFormatter lineFormatter -> lineFormatter
    org.apache.http.io.HttpMessageWriter create(org.apache.http.io.SessionOutputBuffer) -> create
org.apache.http.impl.io.DefaultHttpResponseParser -> org.apache.http.impl.io.DefaultHttpResponseParser:
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    org.apache.http.HttpResponse parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.io.DefaultHttpResponseParserFactory -> org.apache.http.impl.io.DefaultHttpResponseParserFactory:
    org.apache.http.impl.io.DefaultHttpResponseParserFactory INSTANCE -> INSTANCE
    org.apache.http.message.LineParser lineParser -> lineParser
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    org.apache.http.io.HttpMessageParser create(org.apache.http.io.SessionInputBuffer,org.apache.http.config.MessageConstraints) -> create
org.apache.http.impl.io.DefaultHttpResponseWriter -> org.apache.http.impl.io.DefaultHttpResponseWriter:
    void writeHeadLine(org.apache.http.HttpResponse) -> writeHeadLine
    void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
org.apache.http.impl.io.DefaultHttpResponseWriterFactory -> org.apache.http.impl.io.DefaultHttpResponseWriterFactory:
    org.apache.http.impl.io.DefaultHttpResponseWriterFactory INSTANCE -> INSTANCE
    org.apache.http.message.LineFormatter lineFormatter -> lineFormatter
    org.apache.http.io.HttpMessageWriter create(org.apache.http.io.SessionOutputBuffer) -> create
org.apache.http.impl.io.HttpRequestParser -> org.apache.http.impl.io.HttpRequestParser:
    org.apache.http.HttpRequestFactory requestFactory -> requestFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.io.HttpRequestWriter -> org.apache.http.impl.io.HttpRequestWriter:
    void writeHeadLine(org.apache.http.HttpRequest) -> writeHeadLine
    void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
org.apache.http.impl.io.HttpResponseParser -> org.apache.http.impl.io.HttpResponseParser:
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.io.HttpResponseWriter -> org.apache.http.impl.io.HttpResponseWriter:
    void writeHeadLine(org.apache.http.HttpResponse) -> writeHeadLine
    void writeHeadLine(org.apache.http.HttpMessage) -> writeHeadLine
org.apache.http.impl.io.HttpTransportMetricsImpl -> org.apache.http.impl.io.HttpTransportMetricsImpl:
    long bytesTransferred -> bytesTransferred
    long getBytesTransferred() -> getBytesTransferred
    void setBytesTransferred(long) -> setBytesTransferred
    void incrementBytesTransferred(long) -> incrementBytesTransferred
    void reset() -> reset
org.apache.http.impl.io.IdentityInputStream -> org.apache.http.impl.io.IdentityInputStream:
    org.apache.http.io.SessionInputBuffer in -> in
    boolean closed -> closed
    int available() -> available
    void close() -> close
    int read() -> read
    int read(byte[],int,int) -> read
org.apache.http.impl.io.IdentityOutputStream -> org.apache.http.impl.io.IdentityOutputStream:
    org.apache.http.io.SessionOutputBuffer out -> out
    boolean closed -> closed
    void close() -> close
    void flush() -> flush
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
org.apache.http.impl.io.SessionInputBufferImpl -> org.apache.http.impl.io.SessionInputBufferImpl:
    org.apache.http.impl.io.HttpTransportMetricsImpl metrics -> metrics
    byte[] buffer -> buffer
    org.apache.http.util.ByteArrayBuffer linebuffer -> linebuffer
    int minChunkLimit -> minChunkLimit
    org.apache.http.config.MessageConstraints constraints -> constraints
    java.nio.charset.CharsetDecoder decoder -> decoder
    java.io.InputStream instream -> instream
    int bufferpos -> bufferpos
    int bufferlen -> bufferlen
    java.nio.CharBuffer cbuf -> cbuf
    void bind(java.io.InputStream) -> bind
    boolean isBound() -> isBound
    int capacity() -> capacity
    int length() -> length
    int available() -> available
    int streamRead(byte[],int,int) -> streamRead
    int fillBuffer() -> fillBuffer
    boolean hasBufferedData() -> hasBufferedData
    void clear() -> clear
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int locateLF() -> locateLF
    int readLine(org.apache.http.util.CharArrayBuffer) -> readLine
    int lineFromLineBuffer(org.apache.http.util.CharArrayBuffer) -> lineFromLineBuffer
    int lineFromReadBuffer(org.apache.http.util.CharArrayBuffer,int) -> lineFromReadBuffer
    int appendDecoded(org.apache.http.util.CharArrayBuffer,java.nio.ByteBuffer) -> appendDecoded
    int handleDecodingResult(java.nio.charset.CoderResult,org.apache.http.util.CharArrayBuffer,java.nio.ByteBuffer) -> handleDecodingResult
    java.lang.String readLine() -> readLine
    boolean isDataAvailable(int) -> isDataAvailable
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.io.SessionOutputBufferImpl -> org.apache.http.impl.io.SessionOutputBufferImpl:
    byte[] CRLF -> CRLF
    org.apache.http.impl.io.HttpTransportMetricsImpl metrics -> metrics
    org.apache.http.util.ByteArrayBuffer buffer -> buffer
    int fragementSizeHint -> fragementSizeHint
    java.nio.charset.CharsetEncoder encoder -> encoder
    java.io.OutputStream outstream -> outstream
    java.nio.ByteBuffer bbuf -> bbuf
    void bind(java.io.OutputStream) -> bind
    boolean isBound() -> isBound
    int capacity() -> capacity
    int length() -> length
    int available() -> available
    void streamWrite(byte[],int,int) -> streamWrite
    void flushStream() -> flushStream
    void flushBuffer() -> flushBuffer
    void flush() -> flush
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void writeLine(java.lang.String) -> writeLine
    void writeLine(org.apache.http.util.CharArrayBuffer) -> writeLine
    void writeEncoded(java.nio.CharBuffer) -> writeEncoded
    void handleEncodingResult(java.nio.charset.CoderResult) -> handleEncodingResult
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.io.SocketInputBuffer -> org.apache.http.impl.io.SocketInputBuffer:
    java.net.Socket socket -> socket
    boolean eof -> eof
    int fillBuffer() -> fillBuffer
    boolean isDataAvailable(int) -> isDataAvailable
    boolean isEof() -> isEof
org.apache.http.impl.io.SocketOutputBuffer -> org.apache.http.impl.io.SocketOutputBuffer:
org.apache.http.impl.pool.BasicConnFactory -> org.apache.http.impl.pool.BasicConnFactory:
    javax.net.SocketFactory plainfactory -> plainfactory
    javax.net.ssl.SSLSocketFactory sslfactory -> sslfactory
    int connectTimeout -> connectTimeout
    org.apache.http.config.SocketConfig sconfig -> sconfig
    org.apache.http.HttpConnectionFactory connFactory -> connFactory
    org.apache.http.HttpClientConnection create(java.net.Socket,org.apache.http.params.HttpParams) -> create
    org.apache.http.HttpClientConnection create(org.apache.http.HttpHost) -> create
    java.lang.Object create(java.lang.Object) -> create
org.apache.http.impl.pool.BasicConnPool -> org.apache.http.impl.pool.BasicConnPool:
    java.util.concurrent.atomic.AtomicLong COUNTER -> COUNTER
    org.apache.http.impl.pool.BasicPoolEntry createEntry(org.apache.http.HttpHost,org.apache.http.HttpClientConnection) -> createEntry
    org.apache.http.pool.PoolEntry createEntry(java.lang.Object,java.lang.Object) -> createEntry
org.apache.http.impl.pool.BasicPoolEntry -> org.apache.http.impl.pool.BasicPoolEntry:
    void close() -> close
    boolean isClosed() -> isClosed
org.apache.http.io.BufferInfo -> org.apache.http.io.BufferInfo:
    int length() -> length
    int capacity() -> capacity
    int available() -> available
org.apache.http.io.EofSensor -> org.apache.http.io.EofSensor:
    boolean isEof() -> isEof
org.apache.http.io.HttpMessageParser -> org.apache.http.io.HttpMessageParser:
    org.apache.http.HttpMessage parse() -> parse
org.apache.http.io.HttpMessageParserFactory -> org.apache.http.io.HttpMessageParserFactory:
    org.apache.http.io.HttpMessageParser create(org.apache.http.io.SessionInputBuffer,org.apache.http.config.MessageConstraints) -> create
org.apache.http.io.HttpMessageWriter -> org.apache.http.io.HttpMessageWriter:
    void write(org.apache.http.HttpMessage) -> write
org.apache.http.io.HttpMessageWriterFactory -> org.apache.http.io.HttpMessageWriterFactory:
    org.apache.http.io.HttpMessageWriter create(org.apache.http.io.SessionOutputBuffer) -> create
org.apache.http.io.HttpTransportMetrics -> org.apache.http.io.HttpTransportMetrics:
    long getBytesTransferred() -> getBytesTransferred
    void reset() -> reset
org.apache.http.io.SessionInputBuffer -> org.apache.http.io.SessionInputBuffer:
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int read() -> read
    int readLine(org.apache.http.util.CharArrayBuffer) -> readLine
    java.lang.String readLine() -> readLine
    boolean isDataAvailable(int) -> isDataAvailable
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.io.SessionOutputBuffer -> org.apache.http.io.SessionOutputBuffer:
    void write(byte[],int,int) -> write
    void write(byte[]) -> write
    void write(int) -> write
    void writeLine(java.lang.String) -> writeLine
    void writeLine(org.apache.http.util.CharArrayBuffer) -> writeLine
    void flush() -> flush
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.message.AbstractHttpMessage -> org.apache.http.message.AbstractHttpMessage:
    org.apache.http.message.HeaderGroup headergroup -> headergroup
    org.apache.http.params.HttpParams params -> params
    boolean containsHeader(java.lang.String) -> containsHeader
    org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
    org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    void addHeader(org.apache.http.Header) -> addHeader
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setHeader(org.apache.http.Header) -> setHeader
    void setHeader(java.lang.String,java.lang.String) -> setHeader
    void setHeaders(org.apache.http.Header[]) -> setHeaders
    void removeHeader(org.apache.http.Header) -> removeHeader
    void removeHeaders(java.lang.String) -> removeHeaders
    org.apache.http.HeaderIterator headerIterator() -> headerIterator
    org.apache.http.HeaderIterator headerIterator(java.lang.String) -> headerIterator
    org.apache.http.params.HttpParams getParams() -> getParams
    void setParams(org.apache.http.params.HttpParams) -> setParams
org.apache.http.message.BasicHeader -> org.apache.http.message.BasicHeader:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String toString() -> toString
    org.apache.http.HeaderElement[] getElements() -> getElements
    java.lang.Object clone() -> clone
org.apache.http.message.BasicHeaderElement -> org.apache.http.message.BasicHeaderElement:
    java.lang.String name -> name
    java.lang.String value -> value
    org.apache.http.NameValuePair[] parameters -> parameters
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    org.apache.http.NameValuePair[] getParameters() -> getParameters
    int getParameterCount() -> getParameterCount
    org.apache.http.NameValuePair getParameter(int) -> getParameter
    org.apache.http.NameValuePair getParameterByName(java.lang.String) -> getParameterByName
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.message.BasicHeaderElementIterator -> org.apache.http.message.BasicHeaderElementIterator:
    org.apache.http.HeaderIterator headerIt -> headerIt
    org.apache.http.message.HeaderValueParser parser -> parser
    org.apache.http.HeaderElement currentElement -> currentElement
    org.apache.http.util.CharArrayBuffer buffer -> buffer
    org.apache.http.message.ParserCursor cursor -> cursor
    void bufferHeaderValue() -> bufferHeaderValue
    void parseNextElement() -> parseNextElement
    boolean hasNext() -> hasNext
    org.apache.http.HeaderElement nextElement() -> nextElement
    java.lang.Object next() -> next
    void remove() -> remove
org.apache.http.message.BasicHeaderIterator -> org.apache.http.message.BasicHeaderIterator:
    org.apache.http.Header[] allHeaders -> allHeaders
    int currentIndex -> currentIndex
    java.lang.String headerName -> headerName
    int findNext(int) -> findNext
    boolean filterHeader(int) -> filterHeader
    boolean hasNext() -> hasNext
    org.apache.http.Header nextHeader() -> nextHeader
    java.lang.Object next() -> next
    void remove() -> remove
org.apache.http.message.BasicHeaderValueFormatter -> org.apache.http.message.BasicHeaderValueFormatter:
    org.apache.http.message.BasicHeaderValueFormatter DEFAULT -> DEFAULT
    org.apache.http.message.BasicHeaderValueFormatter INSTANCE -> INSTANCE
    java.lang.String SEPARATORS -> SEPARATORS
    java.lang.String UNSAFE_CHARS -> UNSAFE_CHARS
    java.lang.String formatElements(org.apache.http.HeaderElement[],boolean,org.apache.http.message.HeaderValueFormatter) -> formatElements
    org.apache.http.util.CharArrayBuffer formatElements(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement[],boolean) -> formatElements
    int estimateElementsLen(org.apache.http.HeaderElement[]) -> estimateElementsLen
    java.lang.String formatHeaderElement(org.apache.http.HeaderElement,boolean,org.apache.http.message.HeaderValueFormatter) -> formatHeaderElement
    org.apache.http.util.CharArrayBuffer formatHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement,boolean) -> formatHeaderElement
    int estimateHeaderElementLen(org.apache.http.HeaderElement) -> estimateHeaderElementLen
    java.lang.String formatParameters(org.apache.http.NameValuePair[],boolean,org.apache.http.message.HeaderValueFormatter) -> formatParameters
    org.apache.http.util.CharArrayBuffer formatParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair[],boolean) -> formatParameters
    int estimateParametersLen(org.apache.http.NameValuePair[]) -> estimateParametersLen
    java.lang.String formatNameValuePair(org.apache.http.NameValuePair,boolean,org.apache.http.message.HeaderValueFormatter) -> formatNameValuePair
    org.apache.http.util.CharArrayBuffer formatNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair,boolean) -> formatNameValuePair
    int estimateNameValuePairLen(org.apache.http.NameValuePair) -> estimateNameValuePairLen
    void doFormatValue(org.apache.http.util.CharArrayBuffer,java.lang.String,boolean) -> doFormatValue
    boolean isSeparator(char) -> isSeparator
    boolean isUnsafe(char) -> isUnsafe
org.apache.http.message.BasicHeaderValueParser -> org.apache.http.message.BasicHeaderValueParser:
    org.apache.http.message.BasicHeaderValueParser DEFAULT -> DEFAULT
    org.apache.http.message.BasicHeaderValueParser INSTANCE -> INSTANCE
    char PARAM_DELIMITER -> PARAM_DELIMITER
    char ELEM_DELIMITER -> ELEM_DELIMITER
    char[] ALL_DELIMITERS -> ALL_DELIMITERS
    org.apache.http.HeaderElement[] parseElements(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseElements
    org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseElements
    org.apache.http.HeaderElement parseHeaderElement(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseHeaderElement
    org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseHeaderElement
    org.apache.http.HeaderElement createHeaderElement(java.lang.String,java.lang.String,org.apache.http.NameValuePair[]) -> createHeaderElement
    org.apache.http.NameValuePair[] parseParameters(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseParameters
    org.apache.http.NameValuePair[] parseParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseParameters
    org.apache.http.NameValuePair parseNameValuePair(java.lang.String,org.apache.http.message.HeaderValueParser) -> parseNameValuePair
    org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseNameValuePair
    boolean isOneOf(char,char[]) -> isOneOf
    org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor,char[]) -> parseNameValuePair
    org.apache.http.NameValuePair createNameValuePair(java.lang.String,java.lang.String) -> createNameValuePair
org.apache.http.message.BasicHttpEntityEnclosingRequest -> org.apache.http.message.BasicHttpEntityEnclosingRequest:
    org.apache.http.HttpEntity entity -> entity
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
org.apache.http.message.BasicHttpRequest -> org.apache.http.message.BasicHttpRequest:
    java.lang.String method -> method
    java.lang.String uri -> uri
    org.apache.http.RequestLine requestline -> requestline
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    org.apache.http.RequestLine getRequestLine() -> getRequestLine
    java.lang.String toString() -> toString
org.apache.http.message.BasicHttpResponse -> org.apache.http.message.BasicHttpResponse:
    org.apache.http.StatusLine statusline -> statusline
    org.apache.http.ProtocolVersion ver -> ver
    int code -> code
    java.lang.String reasonPhrase -> reasonPhrase
    org.apache.http.HttpEntity entity -> entity
    org.apache.http.ReasonPhraseCatalog reasonCatalog -> reasonCatalog
    java.util.Locale locale -> locale
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    org.apache.http.StatusLine getStatusLine() -> getStatusLine
    org.apache.http.HttpEntity getEntity() -> getEntity
    java.util.Locale getLocale() -> getLocale
    void setStatusLine(org.apache.http.StatusLine) -> setStatusLine
    void setStatusLine(org.apache.http.ProtocolVersion,int) -> setStatusLine
    void setStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String) -> setStatusLine
    void setStatusCode(int) -> setStatusCode
    void setReasonPhrase(java.lang.String) -> setReasonPhrase
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    void setLocale(java.util.Locale) -> setLocale
    java.lang.String getReason(int) -> getReason
    java.lang.String toString() -> toString
org.apache.http.message.BasicLineFormatter -> org.apache.http.message.BasicLineFormatter:
    org.apache.http.message.BasicLineFormatter DEFAULT -> DEFAULT
    org.apache.http.message.BasicLineFormatter INSTANCE -> INSTANCE
    org.apache.http.util.CharArrayBuffer initBuffer(org.apache.http.util.CharArrayBuffer) -> initBuffer
    java.lang.String formatProtocolVersion(org.apache.http.ProtocolVersion,org.apache.http.message.LineFormatter) -> formatProtocolVersion
    org.apache.http.util.CharArrayBuffer appendProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.ProtocolVersion) -> appendProtocolVersion
    int estimateProtocolVersionLen(org.apache.http.ProtocolVersion) -> estimateProtocolVersionLen
    java.lang.String formatRequestLine(org.apache.http.RequestLine,org.apache.http.message.LineFormatter) -> formatRequestLine
    org.apache.http.util.CharArrayBuffer formatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine) -> formatRequestLine
    void doFormatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine) -> doFormatRequestLine
    java.lang.String formatStatusLine(org.apache.http.StatusLine,org.apache.http.message.LineFormatter) -> formatStatusLine
    org.apache.http.util.CharArrayBuffer formatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine) -> formatStatusLine
    void doFormatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine) -> doFormatStatusLine
    java.lang.String formatHeader(org.apache.http.Header,org.apache.http.message.LineFormatter) -> formatHeader
    org.apache.http.util.CharArrayBuffer formatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header) -> formatHeader
    void doFormatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header) -> doFormatHeader
org.apache.http.message.BasicLineParser -> org.apache.http.message.BasicLineParser:
    org.apache.http.message.BasicLineParser DEFAULT -> DEFAULT
    org.apache.http.message.BasicLineParser INSTANCE -> INSTANCE
    org.apache.http.ProtocolVersion protocol -> protocol
    org.apache.http.ProtocolVersion parseProtocolVersion(java.lang.String,org.apache.http.message.LineParser) -> parseProtocolVersion
    org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseProtocolVersion
    org.apache.http.ProtocolVersion createProtocolVersion(int,int) -> createProtocolVersion
    boolean hasProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> hasProtocolVersion
    org.apache.http.RequestLine parseRequestLine(java.lang.String,org.apache.http.message.LineParser) -> parseRequestLine
    org.apache.http.RequestLine parseRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseRequestLine
    org.apache.http.RequestLine createRequestLine(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion) -> createRequestLine
    org.apache.http.StatusLine parseStatusLine(java.lang.String,org.apache.http.message.LineParser) -> parseStatusLine
    org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseStatusLine
    org.apache.http.StatusLine createStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String) -> createStatusLine
    org.apache.http.Header parseHeader(java.lang.String,org.apache.http.message.LineParser) -> parseHeader
    org.apache.http.Header parseHeader(org.apache.http.util.CharArrayBuffer) -> parseHeader
    void skipWhitespace(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> skipWhitespace
org.apache.http.message.BasicListHeaderIterator -> org.apache.http.message.BasicListHeaderIterator:
    java.util.List allHeaders -> allHeaders
    int currentIndex -> currentIndex
    int lastIndex -> lastIndex
    java.lang.String headerName -> headerName
    int findNext(int) -> findNext
    boolean filterHeader(int) -> filterHeader
    boolean hasNext() -> hasNext
    org.apache.http.Header nextHeader() -> nextHeader
    java.lang.Object next() -> next
    void remove() -> remove
org.apache.http.message.BasicNameValuePair -> org.apache.http.message.BasicNameValuePair:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object clone() -> clone
org.apache.http.message.BasicRequestLine -> org.apache.http.message.BasicRequestLine:
    long serialVersionUID -> serialVersionUID
    org.apache.http.ProtocolVersion protoversion -> protoversion
    java.lang.String method -> method
    java.lang.String uri -> uri
    java.lang.String getMethod() -> getMethod
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.lang.String getUri() -> getUri
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.message.BasicStatusLine -> org.apache.http.message.BasicStatusLine:
    long serialVersionUID -> serialVersionUID
    org.apache.http.ProtocolVersion protoVersion -> protoVersion
    int statusCode -> statusCode
    java.lang.String reasonPhrase -> reasonPhrase
    int getStatusCode() -> getStatusCode
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.message.BasicTokenIterator -> org.apache.http.message.BasicTokenIterator:
    java.lang.String HTTP_SEPARATORS -> HTTP_SEPARATORS
    org.apache.http.HeaderIterator headerIt -> headerIt
    java.lang.String currentHeader -> currentHeader
    java.lang.String currentToken -> currentToken
    int searchPos -> searchPos
    boolean hasNext() -> hasNext
    java.lang.String nextToken() -> nextToken
    java.lang.Object next() -> next
    void remove() -> remove
    int findNext(int) -> findNext
    java.lang.String createToken(java.lang.String,int,int) -> createToken
    int findTokenStart(int) -> findTokenStart
    int findTokenSeparator(int) -> findTokenSeparator
    int findTokenEnd(int) -> findTokenEnd
    boolean isTokenSeparator(char) -> isTokenSeparator
    boolean isWhitespace(char) -> isWhitespace
    boolean isTokenChar(char) -> isTokenChar
    boolean isHttpSeparator(char) -> isHttpSeparator
org.apache.http.message.BufferedHeader -> org.apache.http.message.BufferedHeader:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    org.apache.http.util.CharArrayBuffer buffer -> buffer
    int valuePos -> valuePos
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    org.apache.http.HeaderElement[] getElements() -> getElements
    int getValuePos() -> getValuePos
    org.apache.http.util.CharArrayBuffer getBuffer() -> getBuffer
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.message.HeaderGroup -> org.apache.http.message.HeaderGroup:
    long serialVersionUID -> serialVersionUID
    java.util.List headers -> headers
    void clear() -> clear
    void addHeader(org.apache.http.Header) -> addHeader
    void removeHeader(org.apache.http.Header) -> removeHeader
    void updateHeader(org.apache.http.Header) -> updateHeader
    void setHeaders(org.apache.http.Header[]) -> setHeaders
    org.apache.http.Header getCondensedHeader(java.lang.String) -> getCondensedHeader
    org.apache.http.Header[] getHeaders(java.lang.String) -> getHeaders
    org.apache.http.Header getFirstHeader(java.lang.String) -> getFirstHeader
    org.apache.http.Header getLastHeader(java.lang.String) -> getLastHeader
    org.apache.http.Header[] getAllHeaders() -> getAllHeaders
    boolean containsHeader(java.lang.String) -> containsHeader
    org.apache.http.HeaderIterator iterator() -> iterator
    org.apache.http.HeaderIterator iterator(java.lang.String) -> iterator
    org.apache.http.message.HeaderGroup copy() -> copy
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
org.apache.http.message.HeaderValueFormatter -> org.apache.http.message.HeaderValueFormatter:
    org.apache.http.util.CharArrayBuffer formatElements(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement[],boolean) -> formatElements
    org.apache.http.util.CharArrayBuffer formatHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.HeaderElement,boolean) -> formatHeaderElement
    org.apache.http.util.CharArrayBuffer formatParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair[],boolean) -> formatParameters
    org.apache.http.util.CharArrayBuffer formatNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair,boolean) -> formatNameValuePair
org.apache.http.message.HeaderValueParser -> org.apache.http.message.HeaderValueParser:
    org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseElements
    org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseHeaderElement
    org.apache.http.NameValuePair[] parseParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseParameters
    org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseNameValuePair
org.apache.http.message.LineFormatter -> org.apache.http.message.LineFormatter:
    org.apache.http.util.CharArrayBuffer appendProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.ProtocolVersion) -> appendProtocolVersion
    org.apache.http.util.CharArrayBuffer formatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine) -> formatRequestLine
    org.apache.http.util.CharArrayBuffer formatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine) -> formatStatusLine
    org.apache.http.util.CharArrayBuffer formatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header) -> formatHeader
org.apache.http.message.LineParser -> org.apache.http.message.LineParser:
    org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseProtocolVersion
    boolean hasProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> hasProtocolVersion
    org.apache.http.RequestLine parseRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseRequestLine
    org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseStatusLine
    org.apache.http.Header parseHeader(org.apache.http.util.CharArrayBuffer) -> parseHeader
org.apache.http.message.ParserCursor -> org.apache.http.message.ParserCursor:
    int lowerBound -> lowerBound
    int upperBound -> upperBound
    int pos -> pos
    int getLowerBound() -> getLowerBound
    int getUpperBound() -> getUpperBound
    int getPos() -> getPos
    void updatePos(int) -> updatePos
    boolean atEnd() -> atEnd
    java.lang.String toString() -> toString
org.apache.http.params.AbstractHttpParams -> org.apache.http.params.AbstractHttpParams:
    long getLongParameter(java.lang.String,long) -> getLongParameter
    org.apache.http.params.HttpParams setLongParameter(java.lang.String,long) -> setLongParameter
    int getIntParameter(java.lang.String,int) -> getIntParameter
    org.apache.http.params.HttpParams setIntParameter(java.lang.String,int) -> setIntParameter
    double getDoubleParameter(java.lang.String,double) -> getDoubleParameter
    org.apache.http.params.HttpParams setDoubleParameter(java.lang.String,double) -> setDoubleParameter
    boolean getBooleanParameter(java.lang.String,boolean) -> getBooleanParameter
    org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean) -> setBooleanParameter
    boolean isParameterTrue(java.lang.String) -> isParameterTrue
    boolean isParameterFalse(java.lang.String) -> isParameterFalse
    java.util.Set getNames() -> getNames
org.apache.http.params.BasicHttpParams -> org.apache.http.params.BasicHttpParams:
    long serialVersionUID -> serialVersionUID
    java.util.Map parameters -> parameters
    java.lang.Object getParameter(java.lang.String) -> getParameter
    org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    boolean removeParameter(java.lang.String) -> removeParameter
    void setParameters(java.lang.String[],java.lang.Object) -> setParameters
    boolean isParameterSet(java.lang.String) -> isParameterSet
    boolean isParameterSetLocally(java.lang.String) -> isParameterSetLocally
    void clear() -> clear
    org.apache.http.params.HttpParams copy() -> copy
    java.lang.Object clone() -> clone
    void copyParams(org.apache.http.params.HttpParams) -> copyParams
    java.util.Set getNames() -> getNames
org.apache.http.params.CoreConnectionPNames -> org.apache.http.params.CoreConnectionPNames:
    java.lang.String SO_TIMEOUT -> SO_TIMEOUT
    java.lang.String TCP_NODELAY -> TCP_NODELAY
    java.lang.String SOCKET_BUFFER_SIZE -> SOCKET_BUFFER_SIZE
    java.lang.String SO_LINGER -> SO_LINGER
    java.lang.String SO_REUSEADDR -> SO_REUSEADDR
    java.lang.String CONNECTION_TIMEOUT -> CONNECTION_TIMEOUT
    java.lang.String STALE_CONNECTION_CHECK -> STALE_CONNECTION_CHECK
    java.lang.String MAX_LINE_LENGTH -> MAX_LINE_LENGTH
    java.lang.String MAX_HEADER_COUNT -> MAX_HEADER_COUNT
    java.lang.String MIN_CHUNK_LIMIT -> MIN_CHUNK_LIMIT
    java.lang.String SO_KEEPALIVE -> SO_KEEPALIVE
org.apache.http.params.CoreProtocolPNames -> org.apache.http.params.CoreProtocolPNames:
    java.lang.String PROTOCOL_VERSION -> PROTOCOL_VERSION
    java.lang.String HTTP_ELEMENT_CHARSET -> HTTP_ELEMENT_CHARSET
    java.lang.String HTTP_CONTENT_CHARSET -> HTTP_CONTENT_CHARSET
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String ORIGIN_SERVER -> ORIGIN_SERVER
    java.lang.String STRICT_TRANSFER_ENCODING -> STRICT_TRANSFER_ENCODING
    java.lang.String USE_EXPECT_CONTINUE -> USE_EXPECT_CONTINUE
    java.lang.String WAIT_FOR_CONTINUE -> WAIT_FOR_CONTINUE
    java.lang.String HTTP_MALFORMED_INPUT_ACTION -> HTTP_MALFORMED_INPUT_ACTION
    java.lang.String HTTP_UNMAPPABLE_INPUT_ACTION -> HTTP_UNMAPPABLE_INPUT_ACTION
org.apache.http.params.DefaultedHttpParams -> org.apache.http.params.DefaultedHttpParams:
    org.apache.http.params.HttpParams local -> local
    org.apache.http.params.HttpParams defaults -> defaults
    org.apache.http.params.HttpParams copy() -> copy
    java.lang.Object getParameter(java.lang.String) -> getParameter
    boolean removeParameter(java.lang.String) -> removeParameter
    org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    org.apache.http.params.HttpParams getDefaults() -> getDefaults
    java.util.Set getNames() -> getNames
    java.util.Set getDefaultNames() -> getDefaultNames
    java.util.Set getLocalNames() -> getLocalNames
    java.util.Set getNames(org.apache.http.params.HttpParams) -> getNames
org.apache.http.params.HttpAbstractParamBean -> org.apache.http.params.HttpAbstractParamBean:
    org.apache.http.params.HttpParams params -> params
org.apache.http.params.HttpConnectionParamBean -> org.apache.http.params.HttpConnectionParamBean:
    void setSoTimeout(int) -> setSoTimeout
    void setTcpNoDelay(boolean) -> setTcpNoDelay
    void setSocketBufferSize(int) -> setSocketBufferSize
    void setLinger(int) -> setLinger
    void setConnectionTimeout(int) -> setConnectionTimeout
    void setStaleCheckingEnabled(boolean) -> setStaleCheckingEnabled
org.apache.http.params.HttpConnectionParams -> org.apache.http.params.HttpConnectionParams:
    int getSoTimeout(org.apache.http.params.HttpParams) -> getSoTimeout
    void setSoTimeout(org.apache.http.params.HttpParams,int) -> setSoTimeout
    boolean getSoReuseaddr(org.apache.http.params.HttpParams) -> getSoReuseaddr
    void setSoReuseaddr(org.apache.http.params.HttpParams,boolean) -> setSoReuseaddr
    boolean getTcpNoDelay(org.apache.http.params.HttpParams) -> getTcpNoDelay
    void setTcpNoDelay(org.apache.http.params.HttpParams,boolean) -> setTcpNoDelay
    int getSocketBufferSize(org.apache.http.params.HttpParams) -> getSocketBufferSize
    void setSocketBufferSize(org.apache.http.params.HttpParams,int) -> setSocketBufferSize
    int getLinger(org.apache.http.params.HttpParams) -> getLinger
    void setLinger(org.apache.http.params.HttpParams,int) -> setLinger
    int getConnectionTimeout(org.apache.http.params.HttpParams) -> getConnectionTimeout
    void setConnectionTimeout(org.apache.http.params.HttpParams,int) -> setConnectionTimeout
    boolean isStaleCheckingEnabled(org.apache.http.params.HttpParams) -> isStaleCheckingEnabled
    void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean) -> setStaleCheckingEnabled
    boolean getSoKeepalive(org.apache.http.params.HttpParams) -> getSoKeepalive
    void setSoKeepalive(org.apache.http.params.HttpParams,boolean) -> setSoKeepalive
org.apache.http.params.HttpParamConfig -> org.apache.http.params.HttpParamConfig:
    org.apache.http.config.SocketConfig getSocketConfig(org.apache.http.params.HttpParams) -> getSocketConfig
    org.apache.http.config.MessageConstraints getMessageConstraints(org.apache.http.params.HttpParams) -> getMessageConstraints
    org.apache.http.config.ConnectionConfig getConnectionConfig(org.apache.http.params.HttpParams) -> getConnectionConfig
org.apache.http.params.HttpParams -> org.apache.http.params.HttpParams:
    java.lang.Object getParameter(java.lang.String) -> getParameter
    org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    org.apache.http.params.HttpParams copy() -> copy
    boolean removeParameter(java.lang.String) -> removeParameter
    long getLongParameter(java.lang.String,long) -> getLongParameter
    org.apache.http.params.HttpParams setLongParameter(java.lang.String,long) -> setLongParameter
    int getIntParameter(java.lang.String,int) -> getIntParameter
    org.apache.http.params.HttpParams setIntParameter(java.lang.String,int) -> setIntParameter
    double getDoubleParameter(java.lang.String,double) -> getDoubleParameter
    org.apache.http.params.HttpParams setDoubleParameter(java.lang.String,double) -> setDoubleParameter
    boolean getBooleanParameter(java.lang.String,boolean) -> getBooleanParameter
    org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean) -> setBooleanParameter
    boolean isParameterTrue(java.lang.String) -> isParameterTrue
    boolean isParameterFalse(java.lang.String) -> isParameterFalse
org.apache.http.params.HttpParamsNames -> org.apache.http.params.HttpParamsNames:
    java.util.Set getNames() -> getNames
org.apache.http.params.HttpProtocolParamBean -> org.apache.http.params.HttpProtocolParamBean:
    void setHttpElementCharset(java.lang.String) -> setHttpElementCharset
    void setContentCharset(java.lang.String) -> setContentCharset
    void setVersion(org.apache.http.HttpVersion) -> setVersion
    void setUserAgent(java.lang.String) -> setUserAgent
    void setUseExpectContinue(boolean) -> setUseExpectContinue
org.apache.http.params.HttpProtocolParams -> org.apache.http.params.HttpProtocolParams:
    java.lang.String getHttpElementCharset(org.apache.http.params.HttpParams) -> getHttpElementCharset
    void setHttpElementCharset(org.apache.http.params.HttpParams,java.lang.String) -> setHttpElementCharset
    java.lang.String getContentCharset(org.apache.http.params.HttpParams) -> getContentCharset
    void setContentCharset(org.apache.http.params.HttpParams,java.lang.String) -> setContentCharset
    org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams) -> getVersion
    void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion) -> setVersion
    java.lang.String getUserAgent(org.apache.http.params.HttpParams) -> getUserAgent
    void setUserAgent(org.apache.http.params.HttpParams,java.lang.String) -> setUserAgent
    boolean useExpectContinue(org.apache.http.params.HttpParams) -> useExpectContinue
    void setUseExpectContinue(org.apache.http.params.HttpParams,boolean) -> setUseExpectContinue
    java.nio.charset.CodingErrorAction getMalformedInputAction(org.apache.http.params.HttpParams) -> getMalformedInputAction
    void setMalformedInputAction(org.apache.http.params.HttpParams,java.nio.charset.CodingErrorAction) -> setMalformedInputAction
    java.nio.charset.CodingErrorAction getUnmappableInputAction(org.apache.http.params.HttpParams) -> getUnmappableInputAction
    void setUnmappableInputAction(org.apache.http.params.HttpParams,java.nio.charset.CodingErrorAction) -> setUnmappableInputAction
org.apache.http.params.SyncBasicHttpParams -> org.apache.http.params.SyncBasicHttpParams:
    long serialVersionUID -> serialVersionUID
    boolean removeParameter(java.lang.String) -> removeParameter
    org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    java.lang.Object getParameter(java.lang.String) -> getParameter
    boolean isParameterSet(java.lang.String) -> isParameterSet
    boolean isParameterSetLocally(java.lang.String) -> isParameterSetLocally
    void setParameters(java.lang.String[],java.lang.Object) -> setParameters
    void clear() -> clear
    java.lang.Object clone() -> clone
org.apache.http.pool.AbstractConnPool -> org.apache.http.pool.AbstractConnPool:
    java.util.concurrent.locks.Lock lock -> lock
    org.apache.http.pool.ConnFactory connFactory -> connFactory
    java.util.Map routeToPool -> routeToPool
    java.util.Set leased -> leased
    java.util.LinkedList available -> available
    java.util.LinkedList pending -> pending
    java.util.Map maxPerRoute -> maxPerRoute
    boolean isShutDown -> isShutDown
    int defaultMaxPerRoute -> defaultMaxPerRoute
    int maxTotal -> maxTotal
    org.apache.http.pool.PoolEntry createEntry(java.lang.Object,java.lang.Object) -> createEntry
    void onLease(org.apache.http.pool.PoolEntry) -> onLease
    void onRelease(org.apache.http.pool.PoolEntry) -> onRelease
    boolean isShutdown() -> isShutdown
    void shutdown() -> shutdown
    org.apache.http.pool.RouteSpecificPool getPool(java.lang.Object) -> getPool
    java.util.concurrent.Future lease(java.lang.Object,java.lang.Object,org.apache.http.concurrent.FutureCallback) -> lease
    java.util.concurrent.Future lease(java.lang.Object,java.lang.Object) -> lease
    org.apache.http.pool.PoolEntry getPoolEntryBlocking(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.pool.PoolEntryFuture) -> getPoolEntryBlocking
    void release(org.apache.http.pool.PoolEntry,boolean) -> release
    int getMax(java.lang.Object) -> getMax
    void setMaxTotal(int) -> setMaxTotal
    int getMaxTotal() -> getMaxTotal
    void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    void setMaxPerRoute(java.lang.Object,int) -> setMaxPerRoute
    int getMaxPerRoute(java.lang.Object) -> getMaxPerRoute
    org.apache.http.pool.PoolStats getTotalStats() -> getTotalStats
    org.apache.http.pool.PoolStats getStats(java.lang.Object) -> getStats
    void enumAvailable(org.apache.http.pool.PoolEntryCallback) -> enumAvailable
    void enumLeased(org.apache.http.pool.PoolEntryCallback) -> enumLeased
    void purgePoolMap() -> purgePoolMap
    void closeIdle(long,java.util.concurrent.TimeUnit) -> closeIdle
    void closeExpired() -> closeExpired
    java.lang.String toString() -> toString
    void release(java.lang.Object,boolean) -> release
    org.apache.http.pool.PoolEntry access$000(org.apache.http.pool.AbstractConnPool,java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.pool.PoolEntryFuture) -> access$000
org.apache.http.pool.AbstractConnPool$1 -> org.apache.http.pool.AbstractConnPool$1:
    java.lang.Object val$route -> val$route
    org.apache.http.pool.AbstractConnPool this$0 -> this$0
    org.apache.http.pool.PoolEntry createEntry(java.lang.Object) -> createEntry
org.apache.http.pool.AbstractConnPool$2 -> org.apache.http.pool.AbstractConnPool$2:
    java.lang.Object val$route -> val$route
    java.lang.Object val$state -> val$state
    org.apache.http.pool.AbstractConnPool this$0 -> this$0
    org.apache.http.pool.PoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
    java.lang.Object getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
org.apache.http.pool.AbstractConnPool$3 -> org.apache.http.pool.AbstractConnPool$3:
    long val$deadline -> val$deadline
    org.apache.http.pool.AbstractConnPool this$0 -> this$0
    void process(org.apache.http.pool.PoolEntry) -> process
org.apache.http.pool.AbstractConnPool$4 -> org.apache.http.pool.AbstractConnPool$4:
    long val$now -> val$now
    org.apache.http.pool.AbstractConnPool this$0 -> this$0
    void process(org.apache.http.pool.PoolEntry) -> process
org.apache.http.pool.ConnFactory -> org.apache.http.pool.ConnFactory:
    java.lang.Object create(java.lang.Object) -> create
org.apache.http.pool.ConnPool -> org.apache.http.pool.ConnPool:
    java.util.concurrent.Future lease(java.lang.Object,java.lang.Object,org.apache.http.concurrent.FutureCallback) -> lease
    void release(java.lang.Object,boolean) -> release
org.apache.http.pool.ConnPoolControl -> org.apache.http.pool.ConnPoolControl:
    void setMaxTotal(int) -> setMaxTotal
    int getMaxTotal() -> getMaxTotal
    void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    void setMaxPerRoute(java.lang.Object,int) -> setMaxPerRoute
    int getMaxPerRoute(java.lang.Object) -> getMaxPerRoute
    org.apache.http.pool.PoolStats getTotalStats() -> getTotalStats
    org.apache.http.pool.PoolStats getStats(java.lang.Object) -> getStats
org.apache.http.pool.PoolEntry -> org.apache.http.pool.PoolEntry:
    java.lang.String id -> id
    java.lang.Object route -> route
    java.lang.Object conn -> conn
    long created -> created
    long validUnit -> validUnit
    long updated -> updated
    long expiry -> expiry
    java.lang.Object state -> state
    java.lang.String getId() -> getId
    java.lang.Object getRoute() -> getRoute
    java.lang.Object getConnection() -> getConnection
    long getCreated() -> getCreated
    long getValidUnit() -> getValidUnit
    java.lang.Object getState() -> getState
    void setState(java.lang.Object) -> setState
    long getUpdated() -> getUpdated
    long getExpiry() -> getExpiry
    void updateExpiry(long,java.util.concurrent.TimeUnit) -> updateExpiry
    boolean isExpired(long) -> isExpired
    void close() -> close
    boolean isClosed() -> isClosed
    java.lang.String toString() -> toString
org.apache.http.pool.PoolEntryCallback -> org.apache.http.pool.PoolEntryCallback:
    void process(org.apache.http.pool.PoolEntry) -> process
org.apache.http.pool.PoolEntryFuture -> org.apache.http.pool.PoolEntryFuture:
    java.util.concurrent.locks.Lock lock -> lock
    org.apache.http.concurrent.FutureCallback callback -> callback
    java.util.concurrent.locks.Condition condition -> condition
    boolean cancelled -> cancelled
    boolean completed -> completed
    java.lang.Object result -> result
    boolean cancel(boolean) -> cancel
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    java.lang.Object getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
    boolean await(java.util.Date) -> await
    void wakeup() -> wakeup
org.apache.http.pool.PoolStats -> org.apache.http.pool.PoolStats:
    int leased -> leased
    int pending -> pending
    int available -> available
    int max -> max
    int getLeased() -> getLeased
    int getPending() -> getPending
    int getAvailable() -> getAvailable
    int getMax() -> getMax
    java.lang.String toString() -> toString
org.apache.http.pool.RouteSpecificPool -> org.apache.http.pool.RouteSpecificPool:
    java.lang.Object route -> route
    java.util.Set leased -> leased
    java.util.LinkedList available -> available
    java.util.LinkedList pending -> pending
    org.apache.http.pool.PoolEntry createEntry(java.lang.Object) -> createEntry
    java.lang.Object getRoute() -> getRoute
    int getLeasedCount() -> getLeasedCount
    int getPendingCount() -> getPendingCount
    int getAvailableCount() -> getAvailableCount
    int getAllocatedCount() -> getAllocatedCount
    org.apache.http.pool.PoolEntry getFree(java.lang.Object) -> getFree
    org.apache.http.pool.PoolEntry getLastUsed() -> getLastUsed
    boolean remove(org.apache.http.pool.PoolEntry) -> remove
    void free(org.apache.http.pool.PoolEntry,boolean) -> free
    org.apache.http.pool.PoolEntry add(java.lang.Object) -> add
    void queue(org.apache.http.pool.PoolEntryFuture) -> queue
    org.apache.http.pool.PoolEntryFuture nextPending() -> nextPending
    void unqueue(org.apache.http.pool.PoolEntryFuture) -> unqueue
    void shutdown() -> shutdown
    java.lang.String toString() -> toString
org.apache.http.protocol.BasicHttpContext -> org.apache.http.protocol.BasicHttpContext:
    org.apache.http.protocol.HttpContext parentContext -> parentContext
    java.util.Map map -> map
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void clear() -> clear
    java.lang.String toString() -> toString
org.apache.http.protocol.BasicHttpProcessor -> org.apache.http.protocol.BasicHttpProcessor:
    java.util.List requestInterceptors -> requestInterceptors
    java.util.List responseInterceptors -> responseInterceptors
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor) -> addRequestInterceptor
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addRequestInterceptor
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addResponseInterceptor
    void removeRequestInterceptorByClass(java.lang.Class) -> removeRequestInterceptorByClass
    void removeResponseInterceptorByClass(java.lang.Class) -> removeResponseInterceptorByClass
    void addInterceptor(org.apache.http.HttpRequestInterceptor) -> addInterceptor
    void addInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addInterceptor
    int getRequestInterceptorCount() -> getRequestInterceptorCount
    org.apache.http.HttpRequestInterceptor getRequestInterceptor(int) -> getRequestInterceptor
    void clearRequestInterceptors() -> clearRequestInterceptors
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor) -> addResponseInterceptor
    void addInterceptor(org.apache.http.HttpResponseInterceptor) -> addInterceptor
    void addInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addInterceptor
    int getResponseInterceptorCount() -> getResponseInterceptorCount
    org.apache.http.HttpResponseInterceptor getResponseInterceptor(int) -> getResponseInterceptor
    void clearResponseInterceptors() -> clearResponseInterceptors
    void setInterceptors(java.util.List) -> setInterceptors
    void clearInterceptors() -> clearInterceptors
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
    void copyInterceptors(org.apache.http.protocol.BasicHttpProcessor) -> copyInterceptors
    org.apache.http.protocol.BasicHttpProcessor copy() -> copy
    java.lang.Object clone() -> clone
org.apache.http.protocol.ChainBuilder -> org.apache.http.protocol.ChainBuilder:
    java.util.LinkedList list -> list
    java.util.Map uniqueClasses -> uniqueClasses
    void ensureUnique(java.lang.Object) -> ensureUnique
    org.apache.http.protocol.ChainBuilder addFirst(java.lang.Object) -> addFirst
    org.apache.http.protocol.ChainBuilder addLast(java.lang.Object) -> addLast
    org.apache.http.protocol.ChainBuilder addAllFirst(java.util.Collection) -> addAllFirst
    org.apache.http.protocol.ChainBuilder addAllFirst(java.lang.Object[]) -> addAllFirst
    org.apache.http.protocol.ChainBuilder addAllLast(java.util.Collection) -> addAllLast
    org.apache.http.protocol.ChainBuilder addAllLast(java.lang.Object[]) -> addAllLast
    java.util.LinkedList build() -> build
org.apache.http.protocol.DefaultedHttpContext -> org.apache.http.protocol.DefaultedHttpContext:
    org.apache.http.protocol.HttpContext local -> local
    org.apache.http.protocol.HttpContext defaults -> defaults
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    org.apache.http.protocol.HttpContext getDefaults() -> getDefaults
    java.lang.String toString() -> toString
org.apache.http.protocol.ExecutionContext -> org.apache.http.protocol.ExecutionContext:
    java.lang.String HTTP_CONNECTION -> HTTP_CONNECTION
    java.lang.String HTTP_REQUEST -> HTTP_REQUEST
    java.lang.String HTTP_RESPONSE -> HTTP_RESPONSE
    java.lang.String HTTP_TARGET_HOST -> HTTP_TARGET_HOST
    java.lang.String HTTP_PROXY_HOST -> HTTP_PROXY_HOST
    java.lang.String HTTP_REQ_SENT -> HTTP_REQ_SENT
org.apache.http.protocol.HTTP -> org.apache.http.protocol.HTTP:
    int CR -> CR
    int LF -> LF
    int SP -> SP
    int HT -> HT
    java.lang.String TRANSFER_ENCODING -> TRANSFER_ENCODING
    java.lang.String CONTENT_LEN -> CONTENT_LEN
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.String EXPECT_DIRECTIVE -> EXPECT_DIRECTIVE
    java.lang.String CONN_DIRECTIVE -> CONN_DIRECTIVE
    java.lang.String TARGET_HOST -> TARGET_HOST
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String DATE_HEADER -> DATE_HEADER
    java.lang.String SERVER_HEADER -> SERVER_HEADER
    java.lang.String EXPECT_CONTINUE -> EXPECT_CONTINUE
    java.lang.String CONN_CLOSE -> CONN_CLOSE
    java.lang.String CONN_KEEP_ALIVE -> CONN_KEEP_ALIVE
    java.lang.String CHUNK_CODING -> CHUNK_CODING
    java.lang.String IDENTITY_CODING -> IDENTITY_CODING
    java.nio.charset.Charset DEF_CONTENT_CHARSET -> DEF_CONTENT_CHARSET
    java.nio.charset.Charset DEF_PROTOCOL_CHARSET -> DEF_PROTOCOL_CHARSET
    java.lang.String UTF_8 -> UTF_8
    java.lang.String UTF_16 -> UTF_16
    java.lang.String US_ASCII -> US_ASCII
    java.lang.String ASCII -> ASCII
    java.lang.String ISO_8859_1 -> ISO_8859_1
    java.lang.String DEFAULT_CONTENT_CHARSET -> DEFAULT_CONTENT_CHARSET
    java.lang.String DEFAULT_PROTOCOL_CHARSET -> DEFAULT_PROTOCOL_CHARSET
    java.lang.String OCTET_STREAM_TYPE -> OCTET_STREAM_TYPE
    java.lang.String PLAIN_TEXT_TYPE -> PLAIN_TEXT_TYPE
    java.lang.String CHARSET_PARAM -> CHARSET_PARAM
    java.lang.String DEFAULT_CONTENT_TYPE -> DEFAULT_CONTENT_TYPE
    boolean isWhitespace(char) -> isWhitespace
org.apache.http.protocol.HttpContext -> org.apache.http.protocol.HttpContext:
    java.lang.String RESERVED_PREFIX -> RESERVED_PREFIX
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
org.apache.http.protocol.HttpCoreContext -> org.apache.http.protocol.HttpCoreContext:
    java.lang.String HTTP_CONNECTION -> HTTP_CONNECTION
    java.lang.String HTTP_REQUEST -> HTTP_REQUEST
    java.lang.String HTTP_RESPONSE -> HTTP_RESPONSE
    java.lang.String HTTP_TARGET_HOST -> HTTP_TARGET_HOST
    java.lang.String HTTP_REQ_SENT -> HTTP_REQ_SENT
    org.apache.http.protocol.HttpContext context -> context
    org.apache.http.protocol.HttpCoreContext create() -> create
    org.apache.http.protocol.HttpCoreContext adapt(org.apache.http.protocol.HttpContext) -> adapt
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    java.lang.Object getAttribute(java.lang.String,java.lang.Class) -> getAttribute
    org.apache.http.HttpConnection getConnection(java.lang.Class) -> getConnection
    org.apache.http.HttpConnection getConnection() -> getConnection
    org.apache.http.HttpRequest getRequest() -> getRequest
    boolean isRequestSent() -> isRequestSent
    org.apache.http.HttpResponse getResponse() -> getResponse
    void setTargetHost(org.apache.http.HttpHost) -> setTargetHost
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
org.apache.http.protocol.HttpDateGenerator -> org.apache.http.protocol.HttpDateGenerator:
    java.lang.String PATTERN_RFC1123 -> PATTERN_RFC1123
    java.util.TimeZone GMT -> GMT
    java.text.DateFormat dateformat -> dateformat
    long dateAsLong -> dateAsLong
    java.lang.String dateAsText -> dateAsText
    java.lang.String getCurrentDate() -> getCurrentDate
org.apache.http.protocol.HttpExpectationVerifier -> org.apache.http.protocol.HttpExpectationVerifier:
    void verify(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> verify
org.apache.http.protocol.HttpProcessor -> org.apache.http.protocol.HttpProcessor:
org.apache.http.protocol.HttpProcessorBuilder -> org.apache.http.protocol.HttpProcessorBuilder:
    org.apache.http.protocol.ChainBuilder requestChainBuilder -> requestChainBuilder
    org.apache.http.protocol.ChainBuilder responseChainBuilder -> responseChainBuilder
    org.apache.http.protocol.HttpProcessorBuilder create() -> create
    org.apache.http.protocol.ChainBuilder getRequestChainBuilder() -> getRequestChainBuilder
    org.apache.http.protocol.ChainBuilder getResponseChainBuilder() -> getResponseChainBuilder
    org.apache.http.protocol.HttpProcessorBuilder addFirst(org.apache.http.HttpRequestInterceptor) -> addFirst
    org.apache.http.protocol.HttpProcessorBuilder addLast(org.apache.http.HttpRequestInterceptor) -> addLast
    org.apache.http.protocol.HttpProcessorBuilder add(org.apache.http.HttpRequestInterceptor) -> add
    org.apache.http.protocol.HttpProcessorBuilder addAllFirst(org.apache.http.HttpRequestInterceptor[]) -> addAllFirst
    org.apache.http.protocol.HttpProcessorBuilder addAllLast(org.apache.http.HttpRequestInterceptor[]) -> addAllLast
    org.apache.http.protocol.HttpProcessorBuilder addAll(org.apache.http.HttpRequestInterceptor[]) -> addAll
    org.apache.http.protocol.HttpProcessorBuilder addFirst(org.apache.http.HttpResponseInterceptor) -> addFirst
    org.apache.http.protocol.HttpProcessorBuilder addLast(org.apache.http.HttpResponseInterceptor) -> addLast
    org.apache.http.protocol.HttpProcessorBuilder add(org.apache.http.HttpResponseInterceptor) -> add
    org.apache.http.protocol.HttpProcessorBuilder addAllFirst(org.apache.http.HttpResponseInterceptor[]) -> addAllFirst
    org.apache.http.protocol.HttpProcessorBuilder addAllLast(org.apache.http.HttpResponseInterceptor[]) -> addAllLast
    org.apache.http.protocol.HttpProcessorBuilder addAll(org.apache.http.HttpResponseInterceptor[]) -> addAll
    org.apache.http.protocol.HttpProcessor build() -> build
org.apache.http.protocol.HttpRequestExecutor -> org.apache.http.protocol.HttpRequestExecutor:
    int DEFAULT_WAIT_FOR_CONTINUE -> DEFAULT_WAIT_FOR_CONTINUE
    int waitForContinue -> waitForContinue
    boolean canResponseHaveBody(org.apache.http.HttpRequest,org.apache.http.HttpResponse) -> canResponseHaveBody
    org.apache.http.HttpResponse execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext) -> execute
    void closeConnection(org.apache.http.HttpClientConnection) -> closeConnection
    void preProcess(org.apache.http.HttpRequest,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext) -> preProcess
    org.apache.http.HttpResponse doSendRequest(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext) -> doSendRequest
    org.apache.http.HttpResponse doReceiveResponse(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext) -> doReceiveResponse
    void postProcess(org.apache.http.HttpResponse,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext) -> postProcess
org.apache.http.protocol.HttpRequestHandler -> org.apache.http.protocol.HttpRequestHandler:
    void handle(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> handle
org.apache.http.protocol.HttpRequestHandlerMapper -> org.apache.http.protocol.HttpRequestHandlerMapper:
    org.apache.http.protocol.HttpRequestHandler lookup(org.apache.http.HttpRequest) -> lookup
org.apache.http.protocol.HttpRequestHandlerRegistry -> org.apache.http.protocol.HttpRequestHandlerRegistry:
    org.apache.http.protocol.UriPatternMatcher matcher -> matcher
    void register(java.lang.String,org.apache.http.protocol.HttpRequestHandler) -> register
    void unregister(java.lang.String) -> unregister
    void setHandlers(java.util.Map) -> setHandlers
    java.util.Map getHandlers() -> getHandlers
    org.apache.http.protocol.HttpRequestHandler lookup(java.lang.String) -> lookup
org.apache.http.protocol.HttpRequestHandlerResolver -> org.apache.http.protocol.HttpRequestHandlerResolver:
    org.apache.http.protocol.HttpRequestHandler lookup(java.lang.String) -> lookup
org.apache.http.protocol.HttpRequestInterceptorList -> org.apache.http.protocol.HttpRequestInterceptorList:
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor) -> addRequestInterceptor
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addRequestInterceptor
    int getRequestInterceptorCount() -> getRequestInterceptorCount
    org.apache.http.HttpRequestInterceptor getRequestInterceptor(int) -> getRequestInterceptor
    void clearRequestInterceptors() -> clearRequestInterceptors
    void removeRequestInterceptorByClass(java.lang.Class) -> removeRequestInterceptorByClass
    void setInterceptors(java.util.List) -> setInterceptors
org.apache.http.protocol.HttpResponseInterceptorList -> org.apache.http.protocol.HttpResponseInterceptorList:
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor) -> addResponseInterceptor
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addResponseInterceptor
    int getResponseInterceptorCount() -> getResponseInterceptorCount
    org.apache.http.HttpResponseInterceptor getResponseInterceptor(int) -> getResponseInterceptor
    void clearResponseInterceptors() -> clearResponseInterceptors
    void removeResponseInterceptorByClass(java.lang.Class) -> removeResponseInterceptorByClass
    void setInterceptors(java.util.List) -> setInterceptors
org.apache.http.protocol.HttpService -> org.apache.http.protocol.HttpService:
    org.apache.http.params.HttpParams params -> params
    org.apache.http.protocol.HttpProcessor processor -> processor
    org.apache.http.protocol.HttpRequestHandlerMapper handlerMapper -> handlerMapper
    org.apache.http.ConnectionReuseStrategy connStrategy -> connStrategy
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    org.apache.http.protocol.HttpExpectationVerifier expectationVerifier -> expectationVerifier
    void setHttpProcessor(org.apache.http.protocol.HttpProcessor) -> setHttpProcessor
    void setConnReuseStrategy(org.apache.http.ConnectionReuseStrategy) -> setConnReuseStrategy
    void setResponseFactory(org.apache.http.HttpResponseFactory) -> setResponseFactory
    void setParams(org.apache.http.params.HttpParams) -> setParams
    void setHandlerResolver(org.apache.http.protocol.HttpRequestHandlerResolver) -> setHandlerResolver
    void setExpectationVerifier(org.apache.http.protocol.HttpExpectationVerifier) -> setExpectationVerifier
    org.apache.http.params.HttpParams getParams() -> getParams
    void handleRequest(org.apache.http.HttpServerConnection,org.apache.http.protocol.HttpContext) -> handleRequest
    void handleException(org.apache.http.HttpException,org.apache.http.HttpResponse) -> handleException
    void doService(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> doService
org.apache.http.protocol.HttpService$HttpRequestHandlerResolverAdapter -> org.apache.http.protocol.HttpService$HttpRequestHandlerResolverAdapter:
    org.apache.http.protocol.HttpRequestHandlerResolver resolver -> resolver
    org.apache.http.protocol.HttpRequestHandler lookup(org.apache.http.HttpRequest) -> lookup
org.apache.http.protocol.ImmutableHttpProcessor -> org.apache.http.protocol.ImmutableHttpProcessor:
    org.apache.http.HttpRequestInterceptor[] requestInterceptors -> requestInterceptors
    org.apache.http.HttpResponseInterceptor[] responseInterceptors -> responseInterceptors
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestConnControl -> org.apache.http.protocol.RequestConnControl:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestContent -> org.apache.http.protocol.RequestContent:
    boolean overwrite -> overwrite
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestDate -> org.apache.http.protocol.RequestDate:
    org.apache.http.protocol.HttpDateGenerator DATE_GENERATOR -> DATE_GENERATOR
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestExpectContinue -> org.apache.http.protocol.RequestExpectContinue:
    boolean activeByDefault -> activeByDefault
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestTargetHost -> org.apache.http.protocol.RequestTargetHost:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.RequestUserAgent -> org.apache.http.protocol.RequestUserAgent:
    java.lang.String userAgent -> userAgent
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseConnControl -> org.apache.http.protocol.ResponseConnControl:
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseContent -> org.apache.http.protocol.ResponseContent:
    boolean overwrite -> overwrite
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseDate -> org.apache.http.protocol.ResponseDate:
    org.apache.http.protocol.HttpDateGenerator DATE_GENERATOR -> DATE_GENERATOR
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.ResponseServer -> org.apache.http.protocol.ResponseServer:
    java.lang.String originServer -> originServer
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.protocol.SyncBasicHttpContext -> org.apache.http.protocol.SyncBasicHttpContext:
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void clear() -> clear
org.apache.http.protocol.UriHttpRequestHandlerMapper -> org.apache.http.protocol.UriHttpRequestHandlerMapper:
    org.apache.http.protocol.UriPatternMatcher matcher -> matcher
    void register(java.lang.String,org.apache.http.protocol.HttpRequestHandler) -> register
    void unregister(java.lang.String) -> unregister
    java.lang.String getRequestPath(org.apache.http.HttpRequest) -> getRequestPath
    org.apache.http.protocol.HttpRequestHandler lookup(org.apache.http.HttpRequest) -> lookup
org.apache.http.protocol.UriPatternMatcher -> org.apache.http.protocol.UriPatternMatcher:
    java.util.Map map -> map
    void register(java.lang.String,java.lang.Object) -> register
    void unregister(java.lang.String) -> unregister
    void setHandlers(java.util.Map) -> setHandlers
    void setObjects(java.util.Map) -> setObjects
    java.util.Map getObjects() -> getObjects
    java.lang.Object lookup(java.lang.String) -> lookup
    boolean matchUriRequestPattern(java.lang.String,java.lang.String) -> matchUriRequestPattern
    java.lang.String toString() -> toString
org.apache.http.util.Args -> org.apache.http.util.Args:
    void check(boolean,java.lang.String) -> check
    void check(boolean,java.lang.String,java.lang.Object[]) -> check
    java.lang.Object notNull(java.lang.Object,java.lang.String) -> notNull
    java.lang.CharSequence notEmpty(java.lang.CharSequence,java.lang.String) -> notEmpty
    java.lang.CharSequence notBlank(java.lang.CharSequence,java.lang.String) -> notBlank
    java.util.Collection notEmpty(java.util.Collection,java.lang.String) -> notEmpty
    int positive(int,java.lang.String) -> positive
    long positive(long,java.lang.String) -> positive
    int notNegative(int,java.lang.String) -> notNegative
    long notNegative(long,java.lang.String) -> notNegative
org.apache.http.util.Asserts -> org.apache.http.util.Asserts:
    void check(boolean,java.lang.String) -> check
    void check(boolean,java.lang.String,java.lang.Object[]) -> check
    void notNull(java.lang.Object,java.lang.String) -> notNull
    void notEmpty(java.lang.CharSequence,java.lang.String) -> notEmpty
    void notBlank(java.lang.CharSequence,java.lang.String) -> notBlank
org.apache.http.util.ByteArrayBuffer -> org.apache.http.util.ByteArrayBuffer:
    long serialVersionUID -> serialVersionUID
    byte[] buffer -> buffer
    int len -> len
    void expand(int) -> expand
    void append(byte[],int,int) -> append
    void append(int) -> append
    void append(char[],int,int) -> append
    void append(org.apache.http.util.CharArrayBuffer,int,int) -> append
    void clear() -> clear
    byte[] toByteArray() -> toByteArray
    int byteAt(int) -> byteAt
    int capacity() -> capacity
    int length() -> length
    void ensureCapacity(int) -> ensureCapacity
    byte[] buffer() -> buffer
    void setLength(int) -> setLength
    boolean isEmpty() -> isEmpty
    boolean isFull() -> isFull
    int indexOf(byte,int,int) -> indexOf
    int indexOf(byte) -> indexOf
org.apache.http.util.CharArrayBuffer -> org.apache.http.util.CharArrayBuffer:
    long serialVersionUID -> serialVersionUID
    char[] buffer -> buffer
    int len -> len
    void expand(int) -> expand
    void append(char[],int,int) -> append
    void append(java.lang.String) -> append
    void append(org.apache.http.util.CharArrayBuffer,int,int) -> append
    void append(org.apache.http.util.CharArrayBuffer) -> append
    void append(char) -> append
    void append(byte[],int,int) -> append
    void append(org.apache.http.util.ByteArrayBuffer,int,int) -> append
    void append(java.lang.Object) -> append
    void clear() -> clear
    char[] toCharArray() -> toCharArray
    char charAt(int) -> charAt
    char[] buffer() -> buffer
    int capacity() -> capacity
    int length() -> length
    void ensureCapacity(int) -> ensureCapacity
    void setLength(int) -> setLength
    boolean isEmpty() -> isEmpty
    boolean isFull() -> isFull
    int indexOf(int,int,int) -> indexOf
    int indexOf(int) -> indexOf
    java.lang.String substring(int,int) -> substring
    java.lang.String substringTrimmed(int,int) -> substringTrimmed
    java.lang.String toString() -> toString
org.apache.http.util.CharsetUtils -> org.apache.http.util.CharsetUtils:
    java.nio.charset.Charset lookup(java.lang.String) -> lookup
    java.nio.charset.Charset get(java.lang.String) -> get
org.apache.http.util.EncodingUtils -> org.apache.http.util.EncodingUtils:
    java.lang.String getString(byte[],int,int,java.lang.String) -> getString
    java.lang.String getString(byte[],java.lang.String) -> getString
    byte[] getBytes(java.lang.String,java.lang.String) -> getBytes
    byte[] getAsciiBytes(java.lang.String) -> getAsciiBytes
    java.lang.String getAsciiString(byte[],int,int) -> getAsciiString
    java.lang.String getAsciiString(byte[]) -> getAsciiString
org.apache.http.util.EntityUtils -> org.apache.http.util.EntityUtils:
    void consumeQuietly(org.apache.http.HttpEntity) -> consumeQuietly
    void consume(org.apache.http.HttpEntity) -> consume
    void updateEntity(org.apache.http.HttpResponse,org.apache.http.HttpEntity) -> updateEntity
    byte[] toByteArray(org.apache.http.HttpEntity) -> toByteArray
    java.lang.String getContentCharSet(org.apache.http.HttpEntity) -> getContentCharSet
    java.lang.String getContentMimeType(org.apache.http.HttpEntity) -> getContentMimeType
    java.lang.String toString(org.apache.http.HttpEntity,java.nio.charset.Charset) -> toString
    java.lang.String toString(org.apache.http.HttpEntity,java.lang.String) -> toString
    java.lang.String toString(org.apache.http.HttpEntity) -> toString
org.apache.http.util.ExceptionUtils -> org.apache.http.util.ExceptionUtils:
    java.lang.reflect.Method INIT_CAUSE_METHOD -> INIT_CAUSE_METHOD
    java.lang.reflect.Method getInitCauseMethod() -> getInitCauseMethod
    void initCause(java.lang.Throwable,java.lang.Throwable) -> initCause
org.apache.http.util.LangUtils -> org.apache.http.util.LangUtils:
    int HASH_SEED -> HASH_SEED
    int HASH_OFFSET -> HASH_OFFSET
    int hashCode(int,int) -> hashCode
    int hashCode(int,boolean) -> hashCode
    int hashCode(int,java.lang.Object) -> hashCode
    boolean equals(java.lang.Object,java.lang.Object) -> equals
    boolean equals(java.lang.Object[],java.lang.Object[]) -> equals
org.apache.http.util.NetUtils -> org.apache.http.util.NetUtils:
    void formatAddress(java.lang.StringBuilder,java.net.SocketAddress) -> formatAddress
org.apache.http.util.TextUtils -> org.apache.http.util.TextUtils:
    boolean isEmpty(java.lang.CharSequence) -> isEmpty
    boolean isBlank(java.lang.CharSequence) -> isBlank
org.apache.http.util.VersionInfo -> org.apache.http.util.VersionInfo:
    java.lang.String UNAVAILABLE -> UNAVAILABLE
    java.lang.String VERSION_PROPERTY_FILE -> VERSION_PROPERTY_FILE
    java.lang.String PROPERTY_MODULE -> PROPERTY_MODULE
    java.lang.String PROPERTY_RELEASE -> PROPERTY_RELEASE
    java.lang.String PROPERTY_TIMESTAMP -> PROPERTY_TIMESTAMP
    java.lang.String infoPackage -> infoPackage
    java.lang.String infoModule -> infoModule
    java.lang.String infoRelease -> infoRelease
    java.lang.String infoTimestamp -> infoTimestamp
    java.lang.String infoClassloader -> infoClassloader
    java.lang.String getPackage() -> getPackage
    java.lang.String getModule() -> getModule
    java.lang.String getRelease() -> getRelease
    java.lang.String getTimestamp() -> getTimestamp
    java.lang.String getClassloader() -> getClassloader
    java.lang.String toString() -> toString
    org.apache.http.util.VersionInfo[] loadVersionInfo(java.lang.String[],java.lang.ClassLoader) -> loadVersionInfo
    org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader) -> loadVersionInfo
    org.apache.http.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader) -> fromMap
    java.lang.String getUserAgent(java.lang.String,java.lang.String,java.lang.Class) -> getUserAgent
org.xclcharts.chart.ArcLineChart -> org.xclcharts.chart.ArcLineChart:
    java.lang.String TAG -> TAG
    int OFFSET_ANGLE -> OFFSET_ANGLE
    android.graphics.Paint mPaintLabel -> mPaintLabel
    android.graphics.Paint mPaintLine -> mPaintLine
    java.util.List mDataset -> mDataset
    float mBarInnerMargin -> mBarInnerMargin
    float mLabelOffsetX -> mLabelOffsetX
    android.graphics.Paint mPaintFill -> mPaintFill
    float mRadius -> mRadius
    float mInnerRaius -> mInnerRaius
    org.xclcharts.renderer.plot.PlotAttrInfoRender plotAttrInfoRender -> plotAttrInfoRender
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void calcPlotRange() -> calcPlotRange
    float getRadius() -> getRadius
    void setLabelOffsetX(float) -> setLabelOffsetX
    android.graphics.Paint getLabelPaint() -> getLabelPaint
    android.graphics.Paint getLinePaint() -> getLinePaint
    android.graphics.Paint getInnerPaint() -> getInnerPaint
    void setDataSource(java.util.List) -> setDataSource
    java.util.List getDataSource() -> getDataSource
    org.xclcharts.renderer.plot.PlotAttrInfo getPlotAttrInfo() -> getPlotAttrInfo
    boolean setBarInnerMargin(float) -> setBarInnerMargin
    float getInnerMargin() -> getInnerMargin
    void setInnerRaius(float) -> setInnerRaius
    boolean validateAngle(float) -> validateAngle
    boolean renderCap(android.graphics.Canvas,float,android.graphics.PointF[],int[]) -> renderCap
    boolean renderLabels(android.graphics.Canvas,float,android.graphics.PointF[]) -> renderLabels
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
    boolean postRender(android.graphics.Canvas) -> postRender
    boolean render(android.graphics.Canvas) -> render
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode
org.xclcharts.chart.ArcLineData -> org.xclcharts.chart.ArcLineData:
    java.lang.String TAG -> TAG
    java.lang.String mKey -> mKey
    java.lang.String mLabel -> mLabel
    double mValue -> mValue
    int mColor -> mColor
    void setKey(java.lang.String) -> setKey
    java.lang.String getKey() -> getKey
    void setLabel(java.lang.String) -> setLabel
    void setPercentage(double) -> setPercentage
    void setBarColor(int) -> setBarColor
    java.lang.String getLabel() -> getLabel
    double getPercentage() -> getPercentage
    int getBarColor() -> getBarColor
    float getSliceAngle() -> getSliceAngle
org.xclcharts.chart.AreaChart -> org.xclcharts.chart.AreaChart:
    java.lang.String TAG -> TAG
    android.graphics.Paint mPaintAreaFill -> mPaintAreaFill
    java.util.List mDataSet -> mDataSet
    int mAreaAlpha -> mAreaAlpha
    java.util.List mLstPathPoints -> mLstPathPoints
    android.graphics.Path mPathArea -> mPathArea
    android.graphics.PointF[] mBezierControls -> mBezierControls
    java.util.List mLstKey -> mLstKey
    java.util.List mLstPoints -> mLstPoints
    java.util.List mLstDotInfo -> mLstDotInfo
    org.xclcharts.renderer.XEnum$CrurveLineStyle mCrurveLineStyle -> mCrurveLineStyle
    int Y_MIN -> Y_MIN
    int Y_MAX -> Y_MAX
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$CrurveLineStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$CrurveLineStyle
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void initPaint() -> initPaint
    void categoryAxisDefaultSetting() -> categoryAxisDefaultSetting
    void dataAxisDefaultSetting() -> dataAxisDefaultSetting
    void setCategories(java.util.List) -> setCategories
    void setDataSource(java.util.List) -> setDataSource
    java.util.List getDataSource() -> getDataSource
    void setAreaAlpha(int) -> setAreaAlpha
    void setCrurveLineStyle(org.xclcharts.renderer.XEnum$CrurveLineStyle) -> setCrurveLineStyle
    org.xclcharts.renderer.XEnum$CrurveLineStyle getCrurveLineStyle() -> getCrurveLineStyle
    boolean calcAllPoints(org.xclcharts.chart.AreaData,java.util.List,java.util.List,java.util.List) -> calcAllPoints
    boolean renderBezierArea(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,org.xclcharts.chart.AreaData,java.util.List) -> renderBezierArea
    boolean renderArea(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,org.xclcharts.chart.AreaData,java.util.List) -> renderArea
    boolean renderLine(android.graphics.Canvas,org.xclcharts.chart.AreaData,java.util.List) -> renderLine
    boolean renderBezierCurveLine(android.graphics.Canvas,android.graphics.Path,org.xclcharts.chart.AreaData,java.util.List) -> renderBezierCurveLine
    boolean renderDotAndLabel(android.graphics.Canvas,org.xclcharts.chart.AreaData,int,java.util.List) -> renderDotAndLabel
    float getLineMaxMinY(int,java.util.List) -> getLineMaxMinY
    boolean renderVerticalPlot(android.graphics.Canvas) -> renderVerticalPlot
    void drawClipPlot(android.graphics.Canvas) -> drawClipPlot
    void drawClipLegend(android.graphics.Canvas) -> drawClipLegend
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$CrurveLineStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$CrurveLineStyle
org.xclcharts.chart.AreaData -> org.xclcharts.chart.AreaData:
    int mAreaFillColor -> mAreaFillColor
    boolean mApplayGradient -> mApplayGradient
    int mAreaBeginColor -> mAreaBeginColor
    int mAreaEndColor -> mAreaEndColor
    android.graphics.Shader$TileMode mTileMode -> mTileMode
    org.xclcharts.renderer.XEnum$Direction mDirection -> mDirection
    void setAreaFillColor(int) -> setAreaFillColor
    int getAreaFillColor() -> getAreaFillColor
    void setApplayGradient(boolean) -> setApplayGradient
    boolean getApplayGradient() -> getApplayGradient
    void setGradientDirection(org.xclcharts.renderer.XEnum$Direction) -> setGradientDirection
    org.xclcharts.renderer.XEnum$Direction getGradientDirection() -> getGradientDirection
    void setGradientMode(android.graphics.Shader$TileMode) -> setGradientMode
    android.graphics.Shader$TileMode getGradientMode() -> getGradientMode
    void setAreaBeginColor(int) -> setAreaBeginColor
    void setAreaEndColor(int) -> setAreaEndColor
    int getAreaBeginColor() -> getAreaBeginColor
    int getAreaEndColor() -> getAreaEndColor
org.xclcharts.chart.BarChart -> org.xclcharts.chart.BarChart:
    java.lang.String TAG -> TAG
    org.xclcharts.renderer.bar.FlatBar mFlatBar -> mFlatBar
    java.util.List mDataSet -> mDataSet
    org.xclcharts.renderer.line.PlotCustomLine mCustomLine -> mCustomLine
    java.util.List mAnchorSet -> mAnchorSet
    boolean mEqualAxisMin -> mEqualAxisMin
    org.xclcharts.renderer.XEnum$BarCenterStyle mBarCenterStyle -> mBarCenterStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void setBarCenterStyle(org.xclcharts.renderer.XEnum$BarCenterStyle) -> setBarCenterStyle
    org.xclcharts.renderer.XEnum$BarCenterStyle getBarCenterStyle() -> getBarCenterStyle
    org.xclcharts.renderer.bar.Bar getBar() -> getBar
    void hideBarEqualAxisMin() -> hideBarEqualAxisMin
    void showBarEqualAxisMin() -> showBarEqualAxisMin
    void setCustomLines(java.util.List) -> setCustomLines
    void setCategories(java.util.List) -> setCategories
    void setAnchorDataPoint(java.util.List) -> setAnchorDataPoint
    java.util.List getAnchorDataPoint() -> getAnchorDataPoint
    void setDataSource(java.util.List) -> setDataSource
    java.util.List getDataSource() -> getDataSource
    void setChartDirection(org.xclcharts.renderer.XEnum$Direction) -> setChartDirection
    org.xclcharts.renderer.XEnum$Direction getChartDirection() -> getChartDirection
    void defaultAxisSetting() -> defaultAxisSetting
    void categoryAxisDefaultSetting() -> categoryAxisDefaultSetting
    void dataAxisDefaultSetting() -> dataAxisDefaultSetting
    int getDataAxisDetailSetMaxSize() -> getDataAxisDetailSetMaxSize
    int getDataTickCount() -> getDataTickCount
    int getCateTickCount() -> getCateTickCount
    void drawClipDataAxisGridlines(android.graphics.Canvas) -> drawClipDataAxisGridlines
    void drawClipCategoryAxisGridlines(android.graphics.Canvas) -> drawClipCategoryAxisGridlines
    float get3DOffsetX() -> get3DOffsetX
    float get3DBaseOffsetX() -> get3DBaseOffsetX
    float get3DBaseOffsetY() -> get3DBaseOffsetY
    boolean renderHorizontalBar(android.graphics.Canvas) -> renderHorizontalBar
    float getHPValPosition(double) -> getHPValPosition
    float getHPDataAxisStdX() -> getHPDataAxisStdX
    float getVPDataAxisStdY() -> getVPDataAxisStdY
    float getVPValPosition(double) -> getVPValPosition
    float getAxisXPos(org.xclcharts.renderer.XEnum$AxisLocation) -> getAxisXPos
    float getAxisYPos(org.xclcharts.renderer.XEnum$AxisLocation) -> getAxisYPos
    void drawClipCategoryAxisLine(android.graphics.Canvas) -> drawClipCategoryAxisLine
    boolean renderVerticalBar(android.graphics.Canvas) -> renderVerticalBar
    void drawClipPlot(android.graphics.Canvas) -> drawClipPlot
    void drawClipLegend(android.graphics.Canvas) -> drawClipLegend
    int getDatasetSize(java.util.List) -> getDatasetSize
    void setBarDataColor(android.graphics.Paint,java.util.List,int,int) -> setBarDataColor
    org.xclcharts.event.click.BarPosition getPositionRecord(float,float) -> getPositionRecord
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation
org.xclcharts.chart.BarChart3D -> org.xclcharts.chart.BarChart3D:
    java.lang.String TAG -> TAG
    org.xclcharts.renderer.bar.Bar3D mBar3D -> mBar3D
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void setAxis3DBaseThickness(int) -> setAxis3DBaseThickness
    double getAxis3DBaseThickness() -> getAxis3DBaseThickness
    void setBarThickness(int) -> setBarThickness
    double getBarThickness() -> getBarThickness
    void setBarAngle(int) -> setBarAngle
    int getBarAngle() -> getBarAngle
    void setBarAlpha(int) -> setBarAlpha
    void setAxis3DBaseColor(int) -> setAxis3DBaseColor
    org.xclcharts.renderer.bar.Bar getBar() -> getBar
    boolean renderHorizontalBar(android.graphics.Canvas) -> renderHorizontalBar
    float get3DOffsetX() -> get3DOffsetX
    float get3DBaseOffsetX() -> get3DBaseOffsetX
    float get3DBaseOffsetY() -> get3DBaseOffsetY
    boolean renderVerticalBar(android.graphics.Canvas) -> renderVerticalBar
    void drawClipAxisLine(android.graphics.Canvas) -> drawClipAxisLine
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
org.xclcharts.chart.BarData -> org.xclcharts.chart.BarData:
    java.util.List mDataSet -> mDataSet
    java.util.List mDataColor -> mDataColor
    java.lang.String mKey -> mKey
    java.lang.Integer mColor -> mColor
    void setDataColor(java.util.List) -> setDataColor
    java.util.List getDataColor() -> getDataColor
    void setDataSet(java.util.List) -> setDataSet
    void setKey(java.lang.String) -> setKey
    void setColor(java.lang.Integer) -> setColor
    java.util.List getDataSet() -> getDataSet
    java.lang.String getKey() -> getKey
    java.lang.Integer getColor() -> getColor
org.xclcharts.chart.BubbleChart -> org.xclcharts.chart.BubbleChart:
    java.lang.String TAG -> TAG
    java.util.List mDataset -> mDataset
    double mMaxValue -> mMaxValue
    double mMinValue -> mMinValue
    org.xclcharts.common.IFormatterTextCallBack mLabelFormatter -> mLabelFormatter
    float mBubbleMaxSize -> mBubbleMaxSize
    float mBubbleMinSize -> mBubbleMinSize
    float mBubbleScaleMax -> mBubbleScaleMax
    float mBubbleScaleMin -> mBubbleScaleMin
    android.graphics.Paint mPaintPoint -> mPaintPoint
    org.xclcharts.renderer.line.PlotDot mPlotDot -> mPlotDot
    android.graphics.Paint mPaintBorderPoint -> mPaintBorderPoint
    org.xclcharts.renderer.plot.PlotQuadrantRender mPlotQuadrant -> mPlotQuadrant
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void initChart() -> initChart
    void categoryAxisDefaultSetting() -> categoryAxisDefaultSetting
    void dataAxisDefaultSetting() -> dataAxisDefaultSetting
    void setBubbleMaxSize(float) -> setBubbleMaxSize
    void setBubbleMinSize(float) -> setBubbleMinSize
    void setBubbleScaleMax(float) -> setBubbleScaleMax
    void setBubbleScaleMin(float) -> setBubbleScaleMin
    void setCategories(java.util.List) -> setCategories
    void setDataSource(java.util.List) -> setDataSource
    void setCategoryAxisMax(double) -> setCategoryAxisMax
    void setCategoryAxisMin(double) -> setCategoryAxisMin
    void setDotLabelFormatter(org.xclcharts.common.IFormatterTextCallBack) -> setDotLabelFormatter
    java.lang.String getFormatterDotLabel(java.lang.String) -> getFormatterDotLabel
    float calcRaidus(float,float,float) -> calcRaidus
    org.xclcharts.renderer.plot.PlotQuadrant getPlotQuadrant() -> getPlotQuadrant
    android.graphics.Paint getPointPaint() -> getPointPaint
    android.graphics.Paint getPointBorderPaint() -> getPointBorderPaint
    void drawQuadrant(android.graphics.Canvas) -> drawQuadrant
    void renderPoints(android.graphics.Canvas,org.xclcharts.chart.BubbleData,int) -> renderPoints
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
    void drawClipPlot(android.graphics.Canvas) -> drawClipPlot
    void drawClipLegend(android.graphics.Canvas) -> drawClipLegend
org.xclcharts.chart.BubbleData -> org.xclcharts.chart.BubbleData:
    java.util.List mPointMap -> mPointMap
    java.util.List mBubble -> mBubble
    android.graphics.Paint mLabelPaint -> mLabelPaint
    java.lang.String mLabel -> mLabel
    boolean mLabelVisible -> mLabelVisible
    int mColor -> mColor
    int mBorderColor -> mBorderColor
    float mItemLabelRotateAngle -> mItemLabelRotateAngle
    void setDataSet(java.util.List) -> setDataSet
    java.util.List getDataSet() -> getDataSet
    void setBubble(java.util.List) -> setBubble
    java.util.List getBubble() -> getBubble
    void setLabelVisible(boolean) -> setLabelVisible
    boolean getLabelVisible() -> getLabelVisible
    void setLabel(java.lang.String) -> setLabel
    java.lang.String getLabel() -> getLabel
    void setKey(java.lang.String) -> setKey
    java.lang.String getKey() -> getKey
    android.graphics.Paint getDotLabelPaint() -> getDotLabelPaint
    void setColor(int) -> setColor
    int getColor() -> getColor
    void setBorderColor(int) -> setBorderColor
    int getBorderColor() -> getBorderColor
    float getItemLabelRotateAngle() -> getItemLabelRotateAngle
    void setItemLabelRotateAngle(float) -> setItemLabelRotateAngle
org.xclcharts.chart.CircleChart -> org.xclcharts.chart.CircleChart:
    java.lang.String TAG -> TAG
    java.lang.String mDataInfo -> mDataInfo
    org.xclcharts.renderer.XEnum$CircleType mDisplayType -> mDisplayType
    android.graphics.Paint mPaintBgCircle -> mPaintBgCircle
    android.graphics.Paint mPaintFillCircle -> mPaintFillCircle
    android.graphics.Paint mPaintDataInfo -> mPaintDataInfo
    boolean mShowInnerFill -> mShowInnerFill
    boolean mShowInnerBG -> mShowInnerBG
    boolean mShowCap -> mShowCap
    java.util.List mDataSet -> mDataSet
    float moRadius -> moRadius
    float miRadius -> miRadius
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void initChart() -> initChart
    void setDataSource(java.util.List) -> setDataSource
    void setAttributeInfo(java.lang.String) -> setAttributeInfo
    void setCircleType(org.xclcharts.renderer.XEnum$CircleType) -> setCircleType
    android.graphics.Paint getFillCirclePaint() -> getFillCirclePaint
    android.graphics.Paint getBgCirclePaint() -> getBgCirclePaint
    android.graphics.Paint getDataInfoPaint() -> getDataInfoPaint
    void hideInnerFill() -> hideInnerFill
    void hideInnerBG() -> hideInnerBG
    void showInnerFill() -> showInnerFill
    boolean isShowInnerFill() -> isShowInnerFill
    void showInnerBG() -> showInnerBG
    boolean isShowInnerBG() -> isShowInnerBG
    void setORadius(float) -> setORadius
    void setIRadius(float) -> setIRadius
    boolean isShowCap() -> isShowCap
    void ShowCap() -> ShowCap
    void HideCap() -> HideCap
    void drawPercent(android.graphics.Canvas,android.graphics.Paint,float,float,float,float,float) -> drawPercent
    float getCirY(float,float) -> getCirY
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
    boolean postRender(android.graphics.Canvas) -> postRender
org.xclcharts.chart.CustomLineData -> org.xclcharts.chart.CustomLineData:
    java.lang.String mLabel -> mLabel
    java.lang.Double mDesireValue -> mDesireValue
    int mColor -> mColor
    int mLineStroke -> mLineStroke
    float mLabelRotateAngle -> mLabelRotateAngle
    android.graphics.Paint$Align mLabelAlign -> mLabelAlign
    org.xclcharts.renderer.XEnum$VerticalAlign mLabelPostion -> mLabelPostion
    org.xclcharts.renderer.XEnum$LineStyle mLineStyle -> mLineStyle
    org.xclcharts.renderer.XEnum$DotStyle mLineCap -> mLineCap
    int mLabelOffset -> mLabelOffset
    android.graphics.Paint mPaintCustomLine -> mPaintCustomLine
    android.graphics.Paint mPaintLineLabel -> mPaintLineLabel
    boolean mLineVisible -> mLineVisible
    java.lang.String getLabel() -> getLabel
    void setLabel(java.lang.String) -> setLabel
    java.lang.Double getValue() -> getValue
    void setValue(java.lang.Double) -> setValue
    int getColor() -> getColor
    void setColor(int) -> setColor
    int getLineStroke() -> getLineStroke
    void setLineStroke(int) -> setLineStroke
    boolean isSetLineStroke() -> isSetLineStroke
    void setCustomLineCap(org.xclcharts.renderer.XEnum$DotStyle) -> setCustomLineCap
    org.xclcharts.renderer.XEnum$DotStyle getCustomeLineCap() -> getCustomeLineCap
    void setLabelHorizontalPostion(android.graphics.Paint$Align) -> setLabelHorizontalPostion
    android.graphics.Paint$Align getLabelHorizontalPostion() -> getLabelHorizontalPostion
    void setLabelVerticalAlign(org.xclcharts.renderer.XEnum$VerticalAlign) -> setLabelVerticalAlign
    org.xclcharts.renderer.XEnum$VerticalAlign getLabelVerticalAlign() -> getLabelVerticalAlign
    void setLineStyle(org.xclcharts.renderer.XEnum$LineStyle) -> setLineStyle
    org.xclcharts.renderer.XEnum$LineStyle getLineStyle() -> getLineStyle
    float getLabelRotateAngle() -> getLabelRotateAngle
    void setLabelRotateAngle(float) -> setLabelRotateAngle
    void setLabelOffset(int) -> setLabelOffset
    int getLabelOffset() -> getLabelOffset
    android.graphics.Paint getCustomLinePaint() -> getCustomLinePaint
    android.graphics.Paint getLineLabelPaint() -> getLineLabelPaint
    boolean isShowLine() -> isShowLine
    void hideLine() -> hideLine
    void showLine() -> showLine
org.xclcharts.chart.DialChart -> org.xclcharts.chart.DialChart:
    java.lang.String TAG -> TAG
    int INIT_ANGLE -> INIT_ANGLE
    int FIX_TOTAL_ANGLE -> FIX_TOTAL_ANGLE
    float mStartAngle -> mStartAngle
    float mTotalAngle -> mTotalAngle
    java.util.List mRoundAxis -> mRoundAxis
    org.xclcharts.renderer.plot.PointerRender mPointer -> mPointer
    java.util.List mPointerSet -> mPointerSet
    org.xclcharts.renderer.plot.PlotAttrInfoRender plotAttrInfoRender -> plotAttrInfoRender
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void setStartAngle(float) -> setStartAngle
    void setTotalAngle(float) -> setTotalAngle
    java.util.List getPlotAxis() -> getPlotAxis
    java.util.List getPlotPointer() -> getPlotPointer
    org.xclcharts.renderer.plot.PlotAttrInfo getPlotAttrInfo() -> getPlotAttrInfo
    void addPointer() -> addPointer
    void clearPlotPointer() -> clearPlotPointer
    void clearPlotAxis() -> clearPlotAxis
    void clearAll() -> clearAll
    org.xclcharts.renderer.plot.Pointer getPointer() -> getPointer
    void renderPointerLine(android.graphics.Canvas) -> renderPointerLine
    void addInnerTicksAxis(float,java.util.List) -> addInnerTicksAxis
    void addOuterTicksAxis(float,java.util.List) -> addOuterTicksAxis
    void addTicksAxis(float,java.util.List,org.xclcharts.renderer.XEnum$RoundTickAxisType) -> addTicksAxis
    void addStrokeRingAxis(float,float,java.util.List,java.util.List) -> addStrokeRingAxis
    void addStrokeRingAxis(float,float,java.util.List,java.util.List,java.util.List) -> addStrokeRingAxis
    void addFillRingAxis(float,java.util.List,java.util.List) -> addFillRingAxis
    void addFillRingAxis(float,java.util.List,java.util.List,java.util.List) -> addFillRingAxis
    void addRingAxis(float,float,java.util.List,java.util.List,java.util.List) -> addRingAxis
    void addArcLineAxis(float) -> addArcLineAxis
    void addFillAxis(float,int) -> addFillAxis
    void addCircleAxis(float,int) -> addCircleAxis
    void addLineAxis(org.xclcharts.renderer.XEnum$Location,float) -> addLineAxis
    void renderPlot(android.graphics.Canvas) -> renderPlot
    boolean postRender(android.graphics.Canvas) -> postRender
org.xclcharts.chart.DountChart -> org.xclcharts.chart.DountChart:
    int mFillRadius -> mFillRadius
    float mInnerRadius -> mInnerRadius
    android.graphics.Paint mPaintFill -> mPaintFill
    android.graphics.Paint mPaintCenterText -> mPaintCenterText
    java.lang.String mCenterText -> mCenterText
    org.xclcharts.renderer.plot.PlotAttrInfoRender plotAttrInfoRender -> plotAttrInfoRender
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void initChart() -> initChart
    void initCenterTextPaint() -> initCenterTextPaint
    org.xclcharts.renderer.plot.PlotAttrInfo getPlotAttrInfo() -> getPlotAttrInfo
    android.graphics.Paint getInnerPaint() -> getInnerPaint
    void setInnerRadius(float) -> setInnerRadius
    float calcInnerRadius() -> calcInnerRadius
    android.graphics.Paint getCenterTextPaint() -> getCenterTextPaint
    void setCenterText(java.lang.String) -> setCenterText
    void renderCenterText(android.graphics.Canvas) -> renderCenterText
    android.graphics.PointF renderLabelInside(android.graphics.Canvas,java.lang.String,float,float,float,float,float,boolean) -> renderLabelInside
    void renderInnderCircle(android.graphics.Canvas) -> renderInnderCircle
    void renderDount(android.graphics.Canvas) -> renderDount
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
org.xclcharts.chart.FunnelChart -> org.xclcharts.chart.FunnelChart:
    java.lang.String TAG -> TAG
    java.util.List mDataSet -> mDataSet
    org.xclcharts.renderer.XEnum$SortType mSortType -> mSortType
    float mPlotWidthPercent -> mPlotWidthPercent
    android.graphics.Paint mPaint -> mPaint
    android.graphics.Paint mPaintFunnelLine -> mPaintFunnelLine
    boolean mFunnelLineVisible -> mFunnelLineVisible
    android.graphics.Paint mPaintLabel -> mPaintLabel
    android.graphics.Paint mPaintLabelLine -> mPaintLabelLine
    boolean mIsLabelLineSyncColor -> mIsLabelLineSyncColor
    boolean mIsLabelSyncColor -> mIsLabelSyncColor
    boolean mIsShowLabelLine -> mIsShowLabelLine
    org.xclcharts.renderer.XEnum$HorizontalAlign mLabelAlign -> mLabelAlign
    boolean mLabelVisible -> mLabelVisible
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$SortType -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$SortType
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    android.graphics.Paint getPaint() -> getPaint
    android.graphics.Paint getFunnelLinePaint() -> getFunnelLinePaint
    android.graphics.Paint getLabelPaint() -> getLabelPaint
    android.graphics.Paint getLabelLinePaint() -> getLabelLinePaint
    void setPlotWidthPercent(float) -> setPlotWidthPercent
    void setSortType(org.xclcharts.renderer.XEnum$SortType) -> setSortType
    void hideLabelLine() -> hideLabelLine
    void showLabelLine() -> showLabelLine
    boolean isShowLabelLine() -> isShowLabelLine
    void syncLabelLineColor() -> syncLabelLineColor
    void syncLabelColor() -> syncLabelColor
    void setFunnelLineVisible(boolean) -> setFunnelLineVisible
    boolean getFunnelLineVisible() -> getFunnelLineVisible
    void setLabelVisible(boolean) -> setLabelVisible
    boolean getLabelVisible() -> getLabelVisible
    void setLabelAlign(org.xclcharts.renderer.XEnum$HorizontalAlign) -> setLabelAlign
    org.xclcharts.renderer.XEnum$HorizontalAlign getLabelAlign() -> getLabelAlign
    java.util.List getDataSource() -> getDataSource
    void setDataSource(java.util.List) -> setDataSource
    boolean sortDataSet() -> sortDataSet
    void drawTriangle(android.graphics.Canvas,float,android.graphics.PointF,android.graphics.PointF) -> drawTriangle
    float getHalfWidth(float,float) -> getHalfWidth
    void renderPlotDesc(android.graphics.Canvas,float,float,float) -> renderPlotDesc
    void renderPlotAsc(android.graphics.Canvas,float,float,float) -> renderPlotAsc
    void renderPlotOne(android.graphics.Canvas,float,float,float) -> renderPlotOne
    void renderLabels(android.graphics.Canvas,java.lang.String,float,float,int) -> renderLabels
    void renderPlot(android.graphics.Canvas) -> renderPlot
    boolean postRender(android.graphics.Canvas) -> postRender
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$SortType() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$SortType
org.xclcharts.chart.FunnelData -> org.xclcharts.chart.FunnelData:
    java.lang.String mLabel -> mLabel
    float mData -> mData
    int mColor -> mColor
    int mAlpha -> mAlpha
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setData(float) -> setData
    void setLabel(java.lang.String) -> setLabel
    java.lang.String getLabel() -> getLabel
    void setColor(int) -> setColor
    int getColor() -> getColor
    float getData() -> getData
    int compareTo(org.xclcharts.chart.FunnelData) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
org.xclcharts.chart.GaugeChart -> org.xclcharts.chart.GaugeChart:
    java.lang.String TAG -> TAG
    double mTickSteps -> mTickSteps
    java.util.List mLabels -> mLabels
    android.graphics.Paint mPaintTick -> mPaintTick
    float mPointerAngle -> mPointerAngle
    android.graphics.Paint mPaintPointerLine -> mPaintPointerLine
    android.graphics.Paint mPaintPinterCircle -> mPaintPinterCircle
    android.graphics.Paint mPaintPartitionFill -> mPaintPartitionFill
    android.graphics.Paint mPaintDount -> mPaintDount
    java.util.List mPartitionDataset -> mPartitionDataset
    int mStartAngle -> mStartAngle
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void initPaint() -> initPaint
    android.graphics.Paint getTickPaint() -> getTickPaint
    android.graphics.Paint getPinterCirclePaint() -> getPinterCirclePaint
    android.graphics.Paint getPointerLinePaint() -> getPointerLinePaint
    android.graphics.Paint getPartitionFillPaint() -> getPartitionFillPaint
    android.graphics.Paint getDountPaint() -> getDountPaint
    void drawPercent(android.graphics.Canvas,android.graphics.Paint,float,float,float,float,float) -> drawPercent
    void setTickSteps(double) -> setTickSteps
    void setCategories(java.util.List) -> setCategories
    void setPartition(java.util.List) -> setPartition
    void setCurrentAngle(float) -> setCurrentAngle
    void renderLabels(android.graphics.Canvas) -> renderLabels
    void renderTicks(android.graphics.Canvas) -> renderTicks
    void renderPointerLine(android.graphics.Canvas) -> renderPointerLine
    void renderPinterCircle(android.graphics.Canvas) -> renderPinterCircle
    boolean renderPartitionFill(android.graphics.Canvas) -> renderPartitionFill
    float getCirY() -> getCirY
    float getRadius() -> getRadius
    void renderDount(android.graphics.Canvas) -> renderDount
    void renderPlot(android.graphics.Canvas) -> renderPlot
    boolean postRender(android.graphics.Canvas) -> postRender
org.xclcharts.chart.LineChart -> org.xclcharts.chart.LineChart:
    java.lang.String TAG -> TAG
    java.util.List mDataSet -> mDataSet
    boolean mLineAxisIntersectVisible -> mLineAxisIntersectVisible
    java.util.List mLstKey -> mLstKey
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void setCategories(java.util.List) -> setCategories
    void setDataSource(java.util.List) -> setDataSource
    java.util.List getDataSource() -> getDataSource
    void setLineAxisIntersectVisible(boolean) -> setLineAxisIntersectVisible
    boolean getLineAxisIntersectVisible() -> getLineAxisIntersectVisible
    void setBarCenterStyle(org.xclcharts.renderer.XEnum$BarCenterStyle) -> setBarCenterStyle
    org.xclcharts.renderer.XEnum$BarCenterStyle getBarCenterStyle() -> getBarCenterStyle
    void setXCoordFirstTickmarksBegin(boolean) -> setXCoordFirstTickmarksBegin
    boolean renderLine(android.graphics.Canvas,org.xclcharts.chart.LineData,java.lang.String,int) -> renderLine
    boolean renderVerticalPlot(android.graphics.Canvas) -> renderVerticalPlot
    void drawClipPlot(android.graphics.Canvas) -> drawClipPlot
    void drawClipLegend(android.graphics.Canvas) -> drawClipLegend
org.xclcharts.chart.LineData -> org.xclcharts.chart.LineData:
    java.util.List mLinePoint -> mLinePoint
    float mItemLabelRotateAngle -> mItemLabelRotateAngle
    void setDataSet(java.util.List) -> setDataSet
    java.util.List getLinePoint() -> getLinePoint
    float getItemLabelRotateAngle() -> getItemLabelRotateAngle
    void setItemLabelRotateAngle(float) -> setItemLabelRotateAngle
org.xclcharts.chart.LnData -> org.xclcharts.chart.LnData:
    java.lang.String mLabel -> mLabel
    boolean mLabelVisible -> mLabelVisible
    org.xclcharts.renderer.line.PlotLine mPlotLine -> mPlotLine
    org.xclcharts.renderer.XEnum$LineStyle mLineStyle -> mLineStyle
    org.xclcharts.renderer.plot.PlotLabelRender mPlotLabel -> mPlotLabel
    void setLabelVisible(boolean) -> setLabelVisible
    boolean getLabelVisible() -> getLabelVisible
    void setLabel(java.lang.String) -> setLabel
    java.lang.String getLabel() -> getLabel
    org.xclcharts.renderer.line.PlotLine getPlotLine() -> getPlotLine
    void setLineColor(int) -> setLineColor
    int getLineColor() -> getLineColor
    void setDotStyle(org.xclcharts.renderer.XEnum$DotStyle) -> setDotStyle
    org.xclcharts.renderer.XEnum$DotStyle getDotStyle() -> getDotStyle
    void setLineKey(java.lang.String) -> setLineKey
    java.lang.String getLineKey() -> getLineKey
    android.graphics.Paint getDotLabelPaint() -> getDotLabelPaint
    android.graphics.Paint getLinePaint() -> getLinePaint
    android.graphics.Paint getDotPaint() -> getDotPaint
    void setDotRadius(int) -> setDotRadius
    org.xclcharts.renderer.XEnum$LineStyle getLineStyle() -> getLineStyle
    void setLineStyle(org.xclcharts.renderer.XEnum$LineStyle) -> setLineStyle
    org.xclcharts.renderer.plot.PlotLabel getLabelOptions() -> getLabelOptions
org.xclcharts.chart.PieChart -> org.xclcharts.chart.PieChart:
    java.lang.String TAG -> TAG
    boolean mGradient -> mGradient
    float mSelectedOffset -> mSelectedOffset
    java.util.List mDataset -> mDataset
    android.graphics.Paint mPaintArc -> mPaintArc
    android.graphics.RectF mRectF -> mRectF
    android.graphics.Paint mPaintArcBorder -> mPaintArcBorder
    boolean mSaveLabelsPosition -> mSaveLabelsPosition
    org.xclcharts.renderer.XEnum$LabelSaveType mLabelSaveType -> mLabelSaveType
    java.util.ArrayList mLstLabels -> mLstLabels
    float mTotalAngle -> mTotalAngle
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    android.graphics.Paint geArcPaint() -> geArcPaint
    void setDataSource(java.util.List) -> setDataSource
    java.util.List getDataSource() -> getDataSource
    void setTotalAngle(float) -> setTotalAngle
    float getTotalAngle() -> getTotalAngle
    void saveLabelsPosition(org.xclcharts.renderer.XEnum$LabelSaveType) -> saveLabelsPosition
    java.util.ArrayList getLabelsPosition() -> getLabelsPosition
    android.graphics.Paint getArcBorderPaint() -> getArcBorderPaint
    void showGradient() -> showGradient
    void hideGradient() -> hideGradient
    boolean getGradient() -> getGradient
    void setSelectedOffset(float) -> setSelectedOffset
    float getSelectedOffset() -> getSelectedOffset
    android.graphics.RadialGradient renderRadialGradient(android.graphics.Paint,float,float,float) -> renderRadialGradient
    boolean validateAngle(float) -> validateAngle
    void renderArcBorder(android.graphics.Canvas,android.graphics.RectF,float,float) -> renderArcBorder
    void initRectF(float,float,float,float) -> initRectF
    boolean renderLabels(android.graphics.Canvas) -> renderLabels
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
    boolean validateParams() -> validateParams
    org.xclcharts.event.click.ArcPosition getPositionRecord(float,float) -> getPositionRecord
    boolean postRender(android.graphics.Canvas) -> postRender
org.xclcharts.chart.PieChart3D -> org.xclcharts.chart.PieChart3D:
    java.lang.String TAG -> TAG
    int mRender3DLevel -> mRender3DLevel
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    boolean render3D(android.graphics.Canvas,float,java.util.List,float,float,float) -> render3D
    boolean renderFlatArcAndLegend(android.graphics.Canvas,float,java.util.List,float,float,float) -> renderFlatArcAndLegend
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
org.xclcharts.chart.PieData -> org.xclcharts.chart.PieData:
    java.lang.String mPieKey -> mPieKey
    java.lang.String mPieLabel -> mPieLabel
    double mPieValue -> mPieValue
    int mPieColor -> mPieColor
    boolean mSelected -> mSelected
    float mItemLabelRotateAngle -> mItemLabelRotateAngle
    org.xclcharts.renderer.XEnum$SliceLabelStyle mLabelStyle -> mLabelStyle
    boolean mCustLabelStyle -> mCustLabelStyle
    int mCustLabelColor -> mCustLabelColor
    void setKey(java.lang.String) -> setKey
    java.lang.String getKey() -> getKey
    void setLabel(java.lang.String) -> setLabel
    void setPercentage(double) -> setPercentage
    void setSliceColor(int) -> setSliceColor
    void setSelected(boolean) -> setSelected
    java.lang.String getLabel() -> getLabel
    double getPercentage() -> getPercentage
    boolean getSelected() -> getSelected
    int getSliceColor() -> getSliceColor
    float getItemLabelRotateAngle() -> getItemLabelRotateAngle
    void setItemLabelRotateAngle(float) -> setItemLabelRotateAngle
    void setCustLabelStyle(org.xclcharts.renderer.XEnum$SliceLabelStyle,int) -> setCustLabelStyle
    org.xclcharts.renderer.XEnum$SliceLabelStyle getLabelStyle() -> getLabelStyle
    boolean getCustLabelStyleStatus() -> getCustLabelStyleStatus
    int getCustLabelColor() -> getCustLabelColor
org.xclcharts.chart.PointD -> org.xclcharts.chart.PointD:
    double x -> x
    double y -> y
org.xclcharts.chart.RadarChart -> org.xclcharts.chart.RadarChart:
    java.lang.String TAG -> TAG
    org.xclcharts.renderer.axis.DataAxisRender dataAxis -> dataAxis
    org.xclcharts.renderer.axis.CategoryAxisRender categoryAxis -> categoryAxis
    java.util.List mDataSet -> mDataSet
    java.lang.Float[][] mArrayDotX -> mArrayDotX
    java.lang.Float[][] mArrayDotY -> mArrayDotY
    java.lang.Float[][] mArrayLabelX -> mArrayLabelX
    java.lang.Float[][] mArrayLabelY -> mArrayLabelY
    java.lang.Float[] mArrayLabelAgent -> mArrayLabelAgent
    java.lang.Float[] mArrayRadius -> mArrayRadius
    int mLabelOffset -> mLabelOffset
    int mAreaAlpha -> mAreaAlpha
    android.graphics.Path mRdPath -> mRdPath
    org.xclcharts.renderer.XEnum$RadarChartType mRadarChartType -> mRadarChartType
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RadarChartType -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RadarChartType
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DataAreaStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DataAreaStyle
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void initChart() -> initChart
    void clearArray() -> clearArray
    void setChartType(org.xclcharts.renderer.XEnum$RadarChartType) -> setChartType
    org.xclcharts.renderer.axis.DataAxis getDataAxis() -> getDataAxis
    org.xclcharts.renderer.axis.CategoryAxis getCategoryAxis() -> getCategoryAxis
    void setCategories(java.util.List) -> setCategories
    void setDataSource(java.util.List) -> setDataSource
    java.util.List getDataSource() -> getDataSource
    void setAreaAlpha(int) -> setAreaAlpha
    boolean validateParams() -> validateParams
    void renderGridLines(android.graphics.Canvas) -> renderGridLines
    void renderGridLinesRadar(android.graphics.Canvas) -> renderGridLinesRadar
    void renderGridLinesRound(android.graphics.Canvas) -> renderGridLinesRound
    void renderAxisLines(android.graphics.Canvas) -> renderAxisLines
    void renderAxisLabels(android.graphics.Canvas) -> renderAxisLabels
    int getAxisTickCount() -> getAxisTickCount
    int getPlotAgentNumber() -> getPlotAgentNumber
    void setlabelOffset(int) -> setlabelOffset
    void calcAllPoints() -> calcAllPoints
    void renderDataArea(android.graphics.Canvas) -> renderDataArea
    void renderDataLine(android.graphics.Canvas,org.xclcharts.chart.RadarData,java.lang.Float[],java.lang.Float[],int) -> renderDataLine
    void drawDataPath(android.graphics.Canvas,org.xclcharts.chart.RadarData,java.lang.Float[],java.lang.Float[],int) -> drawDataPath
    void renderDotAndLabel(android.graphics.Canvas,org.xclcharts.chart.RadarData,float,float,int,int) -> renderDotAndLabel
    void renderPlot(android.graphics.Canvas) -> renderPlot
    boolean postRender(android.graphics.Canvas) -> postRender
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RadarChartType() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RadarChartType
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DataAreaStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DataAreaStyle
org.xclcharts.chart.RadarData -> org.xclcharts.chart.RadarData:
    org.xclcharts.renderer.XEnum$DataAreaStyle mAreaStyle -> mAreaStyle
    org.xclcharts.renderer.XEnum$LineStyle mLineStyle -> mLineStyle
    void setAreaStyle(org.xclcharts.renderer.XEnum$DataAreaStyle) -> setAreaStyle
    org.xclcharts.renderer.XEnum$DataAreaStyle getAreaStyle() -> getAreaStyle
    org.xclcharts.renderer.XEnum$LineStyle getLineStyle() -> getLineStyle
    void setLineStyle(org.xclcharts.renderer.XEnum$LineStyle) -> setLineStyle
org.xclcharts.chart.RangeBarChart -> org.xclcharts.chart.RangeBarChart:
    java.lang.String TAG -> TAG
    org.xclcharts.renderer.bar.FlatBar mFlatBar -> mFlatBar
    java.util.List mDataSet -> mDataSet
    java.lang.String mKey -> mKey
    float mBarWidth -> mBarWidth
    boolean mLabelVisible -> mLabelVisible
    double mMaxValue -> mMaxValue
    double mMinValue -> mMinValue
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    org.xclcharts.renderer.bar.Bar getBar() -> getBar
    void setCategories(java.util.List) -> setCategories
    void setDataSource(java.util.List) -> setDataSource
    java.util.List getDataSource() -> getDataSource
    void setBarWidth(float) -> setBarWidth
    float getBarWidth() -> getBarWidth
    void setKey(java.lang.String) -> setKey
    java.lang.String getKey() -> getKey
    void setLabelVisible(boolean) -> setLabelVisible
    boolean getLabelVisible() -> getLabelVisible
    void categoryAxisDefaultSetting() -> categoryAxisDefaultSetting
    void dataAxisDefaultSetting() -> dataAxisDefaultSetting
    float[] cataPosition(double,double) -> cataPosition
    void setCategoryAxisMax(double) -> setCategoryAxisMax
    void setCategoryAxisMin(double) -> setCategoryAxisMin
    boolean renderVerticalBar(android.graphics.Canvas) -> renderVerticalBar
    org.xclcharts.event.click.BarPosition getPositionRecord(float,float) -> getPositionRecord
    void drawClipDataAxisGridlines(android.graphics.Canvas) -> drawClipDataAxisGridlines
    void drawClipCategoryAxisGridlines(android.graphics.Canvas) -> drawClipCategoryAxisGridlines
    void drawClipPlot(android.graphics.Canvas) -> drawClipPlot
    void drawClipLegend(android.graphics.Canvas) -> drawClipLegend
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation
org.xclcharts.chart.RangeBarData -> org.xclcharts.chart.RangeBarData:
    double mMax -> mMax
    double mMin -> mMin
    double mX -> mX
    void setMax(double) -> setMax
    void setMin(double) -> setMin
    double getMax() -> getMax
    double getMin() -> getMin
    void setX(double) -> setX
    double getX() -> getX
org.xclcharts.chart.RoseChart -> org.xclcharts.chart.RoseChart:
    java.lang.String TAG -> TAG
    android.graphics.Paint mPaintInner -> mPaintInner
    boolean mShowInner -> mShowInner
    int mIntervalAngle -> mIntervalAngle
    android.graphics.Paint mPaintBg -> mPaintBg
    boolean mShowBgLines -> mShowBgLines
    boolean mShowBgCircle -> mShowBgCircle
    java.util.Map mListBgSeg -> mListBgSeg
    int mShowBgLineColor -> mShowBgLineColor
    boolean mShowOuterLabels -> mShowOuterLabels
    int mBgLines -> mBgLines
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void initChart() -> initChart
    android.graphics.Paint getInnerPaint() -> getInnerPaint
    void setIntervalAngle(int) -> setIntervalAngle
    void showInner() -> showInner
    void hideInner() -> hideInner
    void showOuterLabels() -> showOuterLabels
    void hideOuterLabels() -> hideOuterLabels
    android.graphics.Paint getBgPaint() -> getBgPaint
    void showBgLines(int) -> showBgLines
    void showBgCircle(java.util.Map) -> showBgCircle
    void hideBgLines() -> hideBgLines
    void hideBgCircle() -> hideBgCircle
    void setBgLines(int) -> setBgLines
    boolean validateParams() -> validateParams
    void drawBGCircle(android.graphics.Canvas) -> drawBGCircle
    void drawBGLines(android.graphics.Canvas) -> drawBGLines
    float getLabelRadius() -> getLabelRadius
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
org.xclcharts.chart.ScatterChart -> org.xclcharts.chart.ScatterChart:
    java.lang.String TAG -> TAG
    java.util.List mDataset -> mDataset
    double mMaxValue -> mMaxValue
    double mMinValue -> mMinValue
    org.xclcharts.common.IFormatterTextCallBack mLabelFormatter -> mLabelFormatter
    android.graphics.Paint mPaintPoint -> mPaintPoint
    org.xclcharts.renderer.plot.PlotQuadrantRender mPlotQuadrant -> mPlotQuadrant
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void categoryAxisDefaultSetting() -> categoryAxisDefaultSetting
    void dataAxisDefaultSetting() -> dataAxisDefaultSetting
    void setCategories(java.util.List) -> setCategories
    void setDataSource(java.util.List) -> setDataSource
    java.util.List getDataSource() -> getDataSource
    void setCategoryAxisMax(double) -> setCategoryAxisMax
    void setCategoryAxisMin(double) -> setCategoryAxisMin
    void setDotLabelFormatter(org.xclcharts.common.IFormatterTextCallBack) -> setDotLabelFormatter
    java.lang.String getFormatterDotLabel(java.lang.String) -> getFormatterDotLabel
    org.xclcharts.renderer.plot.PlotQuadrant getPlotQuadrant() -> getPlotQuadrant
    android.graphics.Paint getPointPaint() -> getPointPaint
    void drawQuadrant(android.graphics.Canvas) -> drawQuadrant
    void renderPoints(android.graphics.Canvas,org.xclcharts.chart.ScatterData,int) -> renderPoints
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
    void drawClipPlot(android.graphics.Canvas) -> drawClipPlot
    void drawClipLegend(android.graphics.Canvas) -> drawClipLegend
org.xclcharts.chart.ScatterData -> org.xclcharts.chart.ScatterData:
    java.lang.String mLabel -> mLabel
    boolean mLabelVisible -> mLabelVisible
    java.util.List mPointMap -> mPointMap
    android.graphics.Paint mLabelPaint -> mLabelPaint
    org.xclcharts.renderer.line.PlotDot mPlotDot -> mPlotDot
    float mItemLabelRotateAngle -> mItemLabelRotateAngle
    void setDataSet(java.util.List) -> setDataSet
    java.util.List getDataSet() -> getDataSet
    void setLabelVisible(boolean) -> setLabelVisible
    boolean getLabelVisible() -> getLabelVisible
    void setLabel(java.lang.String) -> setLabel
    java.lang.String getLabel() -> getLabel
    void setKey(java.lang.String) -> setKey
    java.lang.String getKey() -> getKey
    android.graphics.Paint getDotLabelPaint() -> getDotLabelPaint
    org.xclcharts.renderer.line.PlotDot getPlotDot() -> getPlotDot
    void setDotStyle(org.xclcharts.renderer.XEnum$DotStyle) -> setDotStyle
    org.xclcharts.renderer.XEnum$DotStyle getDotStyle() -> getDotStyle
    float getItemLabelRotateAngle() -> getItemLabelRotateAngle
    void setItemLabelRotateAngle(float) -> setItemLabelRotateAngle
org.xclcharts.chart.SplineChart -> org.xclcharts.chart.SplineChart:
    java.lang.String TAG -> TAG
    java.util.List mDataSet -> mDataSet
    double mMaxValue -> mMaxValue
    double mMinValue -> mMinValue
    org.xclcharts.common.IFormatterTextCallBack mLabelFormatter -> mLabelFormatter
    java.util.List mLstPoints -> mLstPoints
    android.graphics.Path mBezierPath -> mBezierPath
    java.util.List mLstKey -> mLstKey
    java.util.List mLstDotInfo -> mLstDotInfo
    org.xclcharts.renderer.XEnum$CrurveLineStyle mCrurveLineStyle -> mCrurveLineStyle
    org.xclcharts.renderer.line.PlotCustomLine mXAxisCustomLine -> mXAxisCustomLine
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$CrurveLineStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$CrurveLineStyle
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void categoryAxisDefaultSetting() -> categoryAxisDefaultSetting
    void dataAxisDefaultSetting() -> dataAxisDefaultSetting
    void setCategories(java.util.List) -> setCategories
    void setDataSource(java.util.List) -> setDataSource
    java.util.List getDataSource() -> getDataSource
    void setCategoryAxisMax(double) -> setCategoryAxisMax
    void setCategoryAxisMin(double) -> setCategoryAxisMin
    void setCategoryAxisCustomLines(java.util.List) -> setCategoryAxisCustomLines
    void setDotLabelFormatter(org.xclcharts.common.IFormatterTextCallBack) -> setDotLabelFormatter
    java.lang.String getFormatterDotLabel(java.lang.String) -> getFormatterDotLabel
    void setCrurveLineStyle(org.xclcharts.renderer.XEnum$CrurveLineStyle) -> setCrurveLineStyle
    org.xclcharts.renderer.XEnum$CrurveLineStyle getCrurveLineStyle() -> getCrurveLineStyle
    void calcAllPoints(org.xclcharts.chart.SplineData,java.util.List,java.util.List) -> calcAllPoints
    boolean renderLine(android.graphics.Canvas,org.xclcharts.chart.SplineData,java.util.List) -> renderLine
    boolean renderBezierCurveLine(android.graphics.Canvas,android.graphics.Path,org.xclcharts.chart.SplineData,java.util.List) -> renderBezierCurveLine
    boolean renderDotAndLabel(android.graphics.Canvas,org.xclcharts.chart.SplineData,int,java.util.List) -> renderDotAndLabel
    boolean renderPlot(android.graphics.Canvas) -> renderPlot
    void drawClipPlot(android.graphics.Canvas) -> drawClipPlot
    void drawClipLegend(android.graphics.Canvas) -> drawClipLegend
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$CrurveLineStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$CrurveLineStyle
org.xclcharts.chart.SplineData -> org.xclcharts.chart.SplineData:
    java.util.List mLinePointMap -> mLinePointMap
    float mItemLabelRotateAngle -> mItemLabelRotateAngle
    void setLineDataSet(java.util.List) -> setLineDataSet
    java.util.List getLineDataSet() -> getLineDataSet
    float getItemLabelRotateAngle() -> getItemLabelRotateAngle
    void setItemLabelRotateAngle(float) -> setItemLabelRotateAngle
org.xclcharts.chart.StackBarChart -> org.xclcharts.chart.StackBarChart:
    org.xclcharts.renderer.bar.FlatBar flatBar -> flatBar
    boolean mTotalLabelVisible -> mTotalLabelVisible
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    void setTotalLabelVisible(boolean) -> setTotalLabelVisible
    org.xclcharts.renderer.bar.Bar getBar() -> getBar
    float getHBarHeight(float) -> getHBarHeight
    boolean renderHorizontalBar(android.graphics.Canvas) -> renderHorizontalBar
    float getVBarWidth(float) -> getVBarWidth
    boolean renderVerticalBar(android.graphics.Canvas) -> renderVerticalBar
org.xclcharts.common.CurveHelper -> org.xclcharts.common.CurveHelper:
    void curve3(android.graphics.PointF,android.graphics.PointF,android.graphics.PointF,android.graphics.PointF,android.graphics.PointF[]) -> curve3
org.xclcharts.common.DensityUtil -> org.xclcharts.common.DensityUtil:
    float getDensity(android.content.Context) -> getDensity
    int dip2px(android.content.Context,float) -> dip2px
    int px2dip(android.content.Context,float) -> px2dip
    int getScreenWidth(android.content.Context) -> getScreenWidth
    int getScreenHeight(android.content.Context) -> getScreenHeight
    int getWidth(android.view.View) -> getWidth
    int getHeight(android.view.View) -> getHeight
org.xclcharts.common.DrawHelper -> org.xclcharts.common.DrawHelper:
    org.xclcharts.common.DrawHelper instance -> instance
    android.graphics.RectF mRectF -> mRectF
    android.graphics.Path mPath -> mPath
    android.graphics.Paint mPaint -> mPaint
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$TriangleDirection -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$TriangleDirection
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$TriangleStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$TriangleStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LineStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LineStyle
    org.xclcharts.common.DrawHelper getInstance() -> getInstance
    void initRectF() -> initRectF
    void initPath() -> initPath
    void initPaint() -> initPaint
    int randomColor() -> randomColor
    int getLightColor(int,int) -> getLightColor
    int getDarkerColor(int) -> getDarkerColor
    float getPaintFontHeight(android.graphics.Paint) -> getPaintFontHeight
    float getTextWidth(android.graphics.Paint,java.lang.String) -> getTextWidth
    float calcTextHeight(android.graphics.Paint,java.lang.String) -> calcTextHeight
    void drawRotateText(java.lang.String,float,float,float,android.graphics.Canvas,android.graphics.Paint) -> drawRotateText
    void drawTrigangle(float,float,float,org.xclcharts.renderer.XEnum$TriangleDirection,org.xclcharts.renderer.XEnum$TriangleStyle,android.graphics.Canvas,android.graphics.Paint) -> drawTrigangle
    android.graphics.PathEffect getDotLineStyle() -> getDotLineStyle
    android.graphics.PathEffect getDashLineStyle() -> getDashLineStyle
    void drawDotLine(float,float,float,float,android.graphics.Canvas,android.graphics.Paint) -> drawDotLine
    void drawDashLine(float,float,float,float,android.graphics.Canvas,android.graphics.Paint) -> drawDashLine
    void drawLine(org.xclcharts.renderer.XEnum$LineStyle,float,float,float,float,android.graphics.Canvas,android.graphics.Paint) -> drawLine
    void drawPercent(android.graphics.Canvas,android.graphics.Paint,float,float,float,float,float,boolean) -> drawPercent
    void drawPathArc(android.graphics.Canvas,android.graphics.Paint,float,float,float,float,float) -> drawPathArc
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$TriangleDirection() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$TriangleDirection
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$TriangleStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$TriangleStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LineStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LineStyle
org.xclcharts.common.IFormatterDoubleCallBack -> org.xclcharts.common.IFormatterDoubleCallBack:
    java.lang.String doubleFormatter(java.lang.Double) -> doubleFormatter
org.xclcharts.common.IFormatterTextCallBack -> org.xclcharts.common.IFormatterTextCallBack:
    java.lang.String textFormatter(java.lang.String) -> textFormatter
org.xclcharts.common.MathHelper -> org.xclcharts.common.MathHelper:
    org.xclcharts.common.MathHelper instance -> instance
    float mPosX -> mPosX
    float mPosY -> mPosY
    android.graphics.PointF mPointF -> mPointF
    int DEFAULT_DIV_SCALE -> DEFAULT_DIV_SCALE
    boolean mHighPrecision -> mHighPrecision
    org.xclcharts.common.MathHelper getInstance() -> getInstance
    void resetEndPointXY() -> resetEndPointXY
    android.graphics.PointF calcArcEndPointXY(float,float,float,float) -> calcArcEndPointXY
    android.graphics.PointF calcStartPointXY(float,float,float,float) -> calcStartPointXY
    android.graphics.PointF getArcEndPointF() -> getArcEndPointF
    float getPosX() -> getPosX
    float getPosY() -> getPosY
    double getDegree(float,float,float,float) -> getDegree
    double getDistance(float,float,float,float) -> getDistance
    float getSliceAngle(float,float) -> getSliceAngle
    float getLnPlotXValPosition(float,float,double,double,double) -> getLnPlotXValPosition
    float getLnXValPosition(float,float,double,double,double) -> getLnXValPosition
    void disableHighPrecision() -> disableHighPrecision
    void enabledHighPrecision() -> enabledHighPrecision
    float add(float,float) -> add
    float sub(float,float) -> sub
    float mul(float,float) -> mul
    float div(float,float) -> div
    float div(float,float,int) -> div
    float round(float,int) -> round
    double add(double,double) -> add
    double sub(double,double) -> sub
    double div(double,double) -> div
    double div(double,double,int) -> div
    double mul(double,double) -> mul
    double round(double,int) -> round
org.xclcharts.common.PointHelper -> org.xclcharts.common.PointHelper:
    android.graphics.PointF center(android.graphics.PointF,android.graphics.PointF) -> center
    float distance(android.graphics.PointF,android.graphics.PointF) -> distance
    android.graphics.PointF translate(android.graphics.PointF,float,float) -> translate
    android.graphics.PointF percent(android.graphics.PointF,android.graphics.PointF,float) -> percent
    android.graphics.PointF percent(android.graphics.PointF,float,android.graphics.PointF,float) -> percent
org.xclcharts.common.SysinfoHelper -> org.xclcharts.common.SysinfoHelper:
    org.xclcharts.common.SysinfoHelper instance -> instance
    org.xclcharts.common.SysinfoHelper getInstance() -> getInstance
    boolean supportHardwareAccelerated() -> supportHardwareAccelerated
org.xclcharts.event.click.ArcPosition -> org.xclcharts.event.click.ArcPosition:
    float mOffsetAngle -> mOffsetAngle
    float mCurrentAngle -> mCurrentAngle
    float mRadius -> mRadius
    float mSelectedOffset -> mSelectedOffset
    float mInitAngle -> mInitAngle
    android.graphics.PointF mCirXY -> mCirXY
    float getAngle() -> getAngle
    void saveInitialAngle(float) -> saveInitialAngle
    float getRadius() -> getRadius
    android.graphics.PointF getPointF() -> getPointF
    float getStartAngle() -> getStartAngle
    float getSweepAngle() -> getSweepAngle
    float getSelectedOffset() -> getSelectedOffset
    boolean compareRange(float,float) -> compareRange
    boolean compareRadius(float,float) -> compareRadius
org.xclcharts.event.click.BarPosition -> org.xclcharts.event.click.BarPosition:
org.xclcharts.event.click.ChartArcListener -> org.xclcharts.event.click.ChartArcListener:
    void onClick(android.graphics.PointF,org.xclcharts.event.click.ArcPosition) -> onClick
org.xclcharts.event.click.ChartBarListener -> org.xclcharts.event.click.ChartBarListener:
    void onClick(android.graphics.PointF,org.xclcharts.event.click.BarPosition) -> onClick
org.xclcharts.event.click.ChartPointListener -> org.xclcharts.event.click.ChartPointListener:
    void onClick(android.graphics.PointF,org.xclcharts.event.click.PointPosition) -> onClick
org.xclcharts.event.click.PlotArcPosition -> org.xclcharts.event.click.PlotArcPosition:
    void saveAngle(float,float,float,float) -> saveAngle
    void savePlotDataID(int) -> savePlotDataID
    void savePlotDataChildID(int) -> savePlotDataChildID
    void savePlotCirXY(float,float) -> savePlotCirXY
    boolean compareF(float,float) -> compareF
org.xclcharts.event.click.PlotBarPosition -> org.xclcharts.event.click.PlotBarPosition:
    void savePlotDataID(int) -> savePlotDataID
    void savePlotDataChildID(int) -> savePlotDataChildID
    void savePlotRectF(float,float,float,float) -> savePlotRectF
    void savePlotRectF(android.graphics.RectF) -> savePlotRectF
    boolean compareF(float,float) -> compareF
org.xclcharts.event.click.PlotPointPosition -> org.xclcharts.event.click.PlotPointPosition:
    void savePlotDataID(int) -> savePlotDataID
    void savePlotDataChildID(int) -> savePlotDataChildID
    void savePlotPosition(float,float) -> savePlotPosition
    void savePlotRectF(float,float,float,float) -> savePlotRectF
    void savePlotRectF(android.graphics.RectF) -> savePlotRectF
    boolean compareF(float,float) -> compareF
org.xclcharts.event.click.PointPosition -> org.xclcharts.event.click.PointPosition:
    android.graphics.PointF mPoint -> mPoint
    android.graphics.PointF getPosition() -> getPosition
    java.lang.String getPointInfo() -> getPointInfo
org.xclcharts.event.click.PositionListener -> org.xclcharts.event.click.PositionListener:
    void onClick(android.graphics.PointF,org.xclcharts.event.click.PositionRecord) -> onClick
org.xclcharts.event.click.PositionRecord -> org.xclcharts.event.click.PositionRecord:
    int mDataID -> mDataID
    int mDataChildID -> mDataChildID
    boolean compareRange(float,float) -> compareRange
    int getDataID() -> getDataID
    int getDataChildID() -> getDataChildID
    int getRecordID() -> getRecordID
    void saveDataID(int) -> saveDataID
    void saveDataChildID(int) -> saveDataChildID
org.xclcharts.event.click.RectPosition -> org.xclcharts.event.click.RectPosition:
    android.graphics.RectF mRectF -> mRectF
    android.graphics.RectF mRectFRange -> mRectFRange
    int mExtValue -> mExtValue
    void extPointClickRange(int) -> extPointClickRange
    void saveRectF(float,float,float,float) -> saveRectF
    void saveRectF(android.graphics.RectF) -> saveRectF
    float getRadius() -> getRadius
    java.lang.String getRectInfo() -> getRectInfo
    android.graphics.RectF getRectF() -> getRectF
    boolean compareRange(float,float) -> compareRange
org.xclcharts.event.touch.ChartTouch -> org.xclcharts.event.touch.ChartTouch:
    android.view.View mView -> mView
    org.xclcharts.renderer.XChart mChart -> mChart
    float oldX -> oldX
    float oldY -> oldY
    float oldDist -> oldDist
    float newDist -> newDist
    float halfDist -> halfDist
    float scaleRate -> scaleRate
    int action -> action
    float newX -> newX
    float newY -> newY
    float FIXED_RANGE -> FIXED_RANGE
    void handleTouch(android.view.MotionEvent) -> handleTouch
    void handleTouch_Scale(android.view.MotionEvent) -> handleTouch_Scale
    void handleTouch_PanMode(android.view.MotionEvent) -> handleTouch_PanMode
    void setLocation(float,float,float,float) -> setLocation
    float spacing(android.view.MotionEvent) -> spacing
org.xclcharts.event.touch.IChartTouch -> org.xclcharts.event.touch.IChartTouch:
    void handleTouch(android.view.MotionEvent) -> handleTouch
org.xclcharts.renderer.AxesChart -> org.xclcharts.renderer.AxesChart:
    org.xclcharts.renderer.axis.DataAxisRender dataAxis -> dataAxis
    org.xclcharts.renderer.axis.CategoryAxisRender categoryAxis -> categoryAxis
    org.xclcharts.renderer.plot.AxisTitleRender axisTitle -> axisTitle
    org.xclcharts.common.IFormatterDoubleCallBack mItemLabelFormatter -> mItemLabelFormatter
    org.xclcharts.renderer.XEnum$Direction mDirection -> mDirection
    float mMoveX -> mMoveX
    float mMoveY -> mMoveY
    org.xclcharts.renderer.XEnum$AxisLocation mDataAxisLocation -> mDataAxisLocation
    org.xclcharts.renderer.XEnum$AxisLocation mCategoryAxisLocation -> mCategoryAxisLocation
    boolean mAxesClosed -> mAxesClosed
    float myMargin -> myMargin
    float mxMargin -> mxMargin
    java.util.ArrayList mLstDataTick -> mLstDataTick
    java.util.ArrayList mLstCateTick -> mLstCateTick
    org.xclcharts.renderer.AxesChart$ClipExt mClipExt -> mClipExt
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode
    void initChart() -> initChart
    org.xclcharts.renderer.axis.DataAxis getDataAxis() -> getDataAxis
    org.xclcharts.renderer.axis.CategoryAxis getCategoryAxis() -> getCategoryAxis
    void initCategoryAxis() -> initCategoryAxis
    void initDataAxis() -> initDataAxis
    void drawCategoryAxisLabels(android.graphics.Canvas,java.util.ArrayList) -> drawCategoryAxisLabels
    void drawDataAxisLabels(android.graphics.Canvas,java.util.ArrayList) -> drawDataAxisLabels
    org.xclcharts.renderer.plot.AxisTitle getAxisTitle() -> getAxisTitle
    float getAxisScreenWidth() -> getAxisScreenWidth
    float getPlotScreenWidth() -> getPlotScreenWidth
    float getPlotScreenHeight() -> getPlotScreenHeight
    float getAxisScreenHeight() -> getAxisScreenHeight
    float getVerticalYSteps(int) -> getVerticalYSteps
    float getVerticalXSteps(int) -> getVerticalXSteps
    void setItemLabelFormatter(org.xclcharts.common.IFormatterDoubleCallBack) -> setItemLabelFormatter
    java.lang.String getFormatterItemLabel(double) -> getFormatterItemLabel
    boolean isDrawYAxisTickMarks(float,float) -> isDrawYAxisTickMarks
    boolean isDrawXAxisTickMarks(float,float) -> isDrawXAxisTickMarks
    void drawHorizontalGridLines(android.graphics.Canvas,float,float,int,int,float,float) -> drawHorizontalGridLines
    void drawVerticalGridLines(android.graphics.Canvas,float,float,int,int,float,float) -> drawVerticalGridLines
    void setDataAxisLocation(org.xclcharts.renderer.XEnum$AxisLocation) -> setDataAxisLocation
    org.xclcharts.renderer.XEnum$AxisLocation getDataAxisLocation() -> getDataAxisLocation
    void setCategoryAxisLocation(org.xclcharts.renderer.XEnum$AxisLocation) -> setCategoryAxisLocation
    org.xclcharts.renderer.XEnum$AxisLocation getCategoryAxisLocation() -> getCategoryAxisLocation
    float getAxisXPos(org.xclcharts.renderer.XEnum$AxisLocation) -> getAxisXPos
    float getAxisYPos(org.xclcharts.renderer.XEnum$AxisLocation) -> getAxisYPos
    void categoryAxisDefaultSetting() -> categoryAxisDefaultSetting
    void dataAxisDefaultSetting() -> dataAxisDefaultSetting
    void setAxesClosed(boolean) -> setAxesClosed
    boolean getAxesClosedStatus() -> getAxesClosedStatus
    void initMoveXY() -> initMoveXY
    void drawClipCategoryAxisGridlines(android.graphics.Canvas) -> drawClipCategoryAxisGridlines
    void drawClipDataAxisGridlines(android.graphics.Canvas) -> drawClipDataAxisGridlines
    void drawClipPlot(android.graphics.Canvas) -> drawClipPlot
    void drawClipAxisClosed(android.graphics.Canvas) -> drawClipAxisClosed
    void drawClipDataAxisLine(android.graphics.Canvas) -> drawClipDataAxisLine
    void drawClipCategoryAxisLine(android.graphics.Canvas) -> drawClipCategoryAxisLine
    void drawClipAxisLine(android.graphics.Canvas) -> drawClipAxisLine
    void drawClipDataAxisTickMarks(android.graphics.Canvas) -> drawClipDataAxisTickMarks
    void drawClipCategoryAxisTickMarks(android.graphics.Canvas) -> drawClipCategoryAxisTickMarks
    void drawClipLegend(android.graphics.Canvas) -> drawClipLegend
    boolean drawFixedPlot(android.graphics.Canvas) -> drawFixedPlot
    void setXTickMarksOffsetMargin(float) -> setXTickMarksOffsetMargin
    void setYTickMarksOffsetMargin(float) -> setYTickMarksOffsetMargin
    float getClipYMargin() -> getClipYMargin
    float getClipXMargin() -> getClipXMargin
    org.xclcharts.renderer.AxesChart$ClipExt getClipExt() -> getClipExt
    boolean drawClipVerticalPlot(android.graphics.Canvas) -> drawClipVerticalPlot
    boolean drawClipHorizontalPlot(android.graphics.Canvas) -> drawClipHorizontalPlot
    boolean postRender(android.graphics.Canvas) -> postRender
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode
org.xclcharts.renderer.AxesChart$ClipExt -> org.xclcharts.renderer.AxesChart$ClipExt:
    float mClipExtLeft -> mClipExtLeft
    float mClipExtTop -> mClipExtTop
    float mClipExtRight -> mClipExtRight
    float mClipExtBottom -> mClipExtBottom
    float clipExtLeft -> clipExtLeft
    float clipExtTop -> clipExtTop
    float clipExtRight -> clipExtRight
    float clipExtBottom -> clipExtBottom
    org.xclcharts.renderer.AxesChart this$0 -> this$0
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$ChartType -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$ChartType
    void setExtLeft(float) -> setExtLeft
    void setExtTop(float) -> setExtTop
    void setExtRight(float) -> setExtRight
    void setExtBottom(float) -> setExtBottom
    void calc(org.xclcharts.renderer.XEnum$ChartType) -> calc
    float getExtLeft() -> getExtLeft
    float getExtTop() -> getExtTop
    float getExtRight() -> getExtRight
    float getExtBottom() -> getExtBottom
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$ChartType() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$ChartType
org.xclcharts.renderer.CirChart -> org.xclcharts.renderer.CirChart:
    java.lang.String TAG -> TAG
    float mRadius -> mRadius
    org.xclcharts.renderer.XEnum$SliceLabelStyle mLabelStyle -> mLabelStyle
    android.graphics.Paint mPaintLabel -> mPaintLabel
    float mOffsetAngle -> mOffsetAngle
    float mInitOffsetAngle -> mInitOffsetAngle
    org.xclcharts.renderer.plot.LabelBrokenLineRender mLabelLine -> mLabelLine
    boolean mIsLabelLineSyncColor -> mIsLabelLineSyncColor
    boolean mIsLabelPointSyncColor -> mIsLabelPointSyncColor
    boolean mIsLabelSyncColor -> mIsLabelSyncColor
    org.xclcharts.renderer.plot.PlotLabelRender mPlotLabel -> mPlotLabel
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$SliceLabelStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$SliceLabelStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode
    void calcPlotRange() -> calcPlotRange
    float getRadius() -> getRadius
    void setInitialAngle(float) -> setInitialAngle
    float getInitialAngle() -> getInitialAngle
    float getOffsetAngle() -> getOffsetAngle
    void setLabelStyle(org.xclcharts.renderer.XEnum$SliceLabelStyle) -> setLabelStyle
    org.xclcharts.renderer.XEnum$SliceLabelStyle getLabelStyle() -> getLabelStyle
    android.graphics.Paint getLabelPaint() -> getLabelPaint
    org.xclcharts.renderer.plot.LabelBrokenLine getLabelBrokenLine() -> getLabelBrokenLine
    android.graphics.PointF renderLabelInside(android.graphics.Canvas,java.lang.String,float,float,float,float,float,boolean) -> renderLabelInside
    android.graphics.PointF renderLabelOutside(android.graphics.Canvas,java.lang.String,float,float,float,float,float,boolean) -> renderLabelOutside
    android.graphics.PointF renderLabelLine(android.graphics.Canvas,org.xclcharts.chart.PieData,float,float,float,float,boolean) -> renderLabelLine
    void syncLabelLineColor() -> syncLabelLineColor
    void syncLabelPointColor() -> syncLabelPointColor
    void syncLabelColor() -> syncLabelColor
    org.xclcharts.renderer.plot.PlotLabel getPlotLabel() -> getPlotLabel
    boolean renderLabel(android.graphics.Canvas,org.xclcharts.chart.PieData,org.xclcharts.renderer.info.PlotArcLabelInfo,boolean,boolean) -> renderLabel
    boolean postRender(android.graphics.Canvas) -> postRender
    boolean render(android.graphics.Canvas) -> render
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$SliceLabelStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$SliceLabelStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode
org.xclcharts.renderer.EventChart -> org.xclcharts.renderer.EventChart:
    java.lang.String TAG -> TAG
    boolean mListenClick -> mListenClick
    int mClickRangeExtValue -> mClickRangeExtValue
    java.util.ArrayList mRecordset -> mRecordset
    int mSelectID -> mSelectID
    int mSelectDataID -> mSelectDataID
    int mSelectDataChildID -> mSelectDataChildID
    boolean mShowClikedFocus -> mShowClikedFocus
    android.graphics.Paint mFocusPaint -> mFocusPaint
    android.graphics.PointF mFocusPoint -> mFocusPoint
    float mFocusRadius -> mFocusRadius
    android.graphics.RectF mFocusRect -> mFocusRect
    org.xclcharts.event.click.ArcPosition mFocusArcPosition -> mFocusArcPosition
    boolean mFocusArcSelect -> mFocusArcSelect
    org.xclcharts.renderer.info.ToolTipRender mToolTip -> mToolTip
    void ActiveListenItemClick() -> ActiveListenItemClick
    void DeactiveListenItemClick() -> DeactiveListenItemClick
    boolean getListenItemClickStatus() -> getListenItemClickStatus
    java.util.ArrayList getPositionRecordset() -> getPositionRecordset
    void showClikedFocus() -> showClikedFocus
    void clearSelected() -> clearSelected
    void saveSelected(int,int,int) -> saveSelected
    int getSelected() -> getSelected
    void savePointRecord(int,int,float,float,android.graphics.RectF) -> savePointRecord
    void savePointRecord(int,int,float,float,float,float,float,float) -> savePointRecord
    void saveBarRectFRecord(int,int,float,float,float,float) -> saveBarRectFRecord
    void saveBarRecord(int,int,float,float,android.graphics.RectF) -> saveBarRecord
    void saveArcRecord(int,float,float,float,float,float,float,float) -> saveArcRecord
    void extPointClickRange(int) -> extPointClickRange
    boolean isPlotClickArea(float,float) -> isPlotClickArea
    org.xclcharts.event.click.ArcPosition getArcRecord(float,float) -> getArcRecord
    org.xclcharts.event.click.BarPosition getBarRecord(float,float) -> getBarRecord
    org.xclcharts.event.click.PointPosition getPointRecord(float,float) -> getPointRecord
    void initPositionRecord() -> initPositionRecord
    android.graphics.Paint getFocusPaint() -> getFocusPaint
    void showFocusPointF(android.graphics.PointF,float) -> showFocusPointF
    void showFocusRectF(android.graphics.RectF) -> showFocusRectF
    void showFocusArc(org.xclcharts.event.click.ArcPosition) -> showFocusArc
    void showFocusArc(org.xclcharts.event.click.ArcPosition,boolean) -> showFocusArc
    org.xclcharts.renderer.info.ToolTip getToolTip() -> getToolTip
    void renderToolTip(android.graphics.Canvas) -> renderToolTip
    boolean drawFocusRect(android.graphics.Canvas,int,int,float,float,float,float) -> drawFocusRect
    boolean renderFocusShape(android.graphics.Canvas) -> renderFocusShape
    boolean postRender(android.graphics.Canvas) -> postRender
org.xclcharts.renderer.IRender -> org.xclcharts.renderer.IRender:
    boolean render(android.graphics.Canvas) -> render
org.xclcharts.renderer.LnChart -> org.xclcharts.renderer.LnChart:
    java.lang.String TAG -> TAG
    android.graphics.PointF[] BezierControls -> BezierControls
    java.util.List mAnchorSet -> mAnchorSet
    org.xclcharts.renderer.line.PlotCustomLine mCustomLine -> mCustomLine
    boolean mXCoordFirstTickmarksBegin -> mXCoordFirstTickmarksBegin
    org.xclcharts.renderer.XEnum$BarCenterStyle mBarCenterStyle -> mBarCenterStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation
    float getVPValPosition(double) -> getVPValPosition
    float getLnXValPosition(double,double,double) -> getLnXValPosition
    float getVPDataAxisStdY() -> getVPDataAxisStdY
    float getAxisYPos(org.xclcharts.renderer.XEnum$AxisLocation) -> getAxisYPos
    void setCustomLines(java.util.List) -> setCustomLines
    void drawClipDataAxisGridlines(android.graphics.Canvas) -> drawClipDataAxisGridlines
    int getCategoryAxisCount() -> getCategoryAxisCount
    void drawClipCategoryAxisGridlines(android.graphics.Canvas) -> drawClipCategoryAxisGridlines
    boolean isPlotClickArea(float,float) -> isPlotClickArea
    org.xclcharts.event.click.PointPosition getPositionRecord(float,float) -> getPositionRecord
    void renderBezierCurveLine(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,java.util.List) -> renderBezierCurveLine
    void renderBezierCurvePath(android.graphics.Canvas,android.graphics.Paint,android.graphics.Path,android.graphics.PointF,android.graphics.PointF,android.graphics.PointF[]) -> renderBezierCurvePath
    void bezierCurvePathAxisMinValue(android.graphics.Path,android.graphics.PointF,android.graphics.PointF,android.graphics.PointF[]) -> bezierCurvePathAxisMinValue
    void setAnchorDataPoint(java.util.List) -> setAnchorDataPoint
    java.util.List getAnchorDataPoint() -> getAnchorDataPoint
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AxisLocation
org.xclcharts.renderer.RdChart -> org.xclcharts.renderer.RdChart:
    java.lang.String TAG -> TAG
    float mRadius -> mRadius
    int mOffsetAngle -> mOffsetAngle
    org.xclcharts.common.IFormatterDoubleCallBack mDotLabelFormatter -> mDotLabelFormatter
    android.graphics.Paint mPaintLabel -> mPaintLabel
    android.graphics.Paint mPaintLine -> mPaintLine
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode
    void calcPlotRange() -> calcPlotRange
    org.xclcharts.event.click.PointPosition getPositionRecord(float,float) -> getPositionRecord
    float getRadius() -> getRadius
    void setInitialAngle(int) -> setInitialAngle
    int getInitialAngle() -> getInitialAngle
    void setDotLabelFormatter(org.xclcharts.common.IFormatterDoubleCallBack) -> setDotLabelFormatter
    java.lang.String getFormatterDotLabel(double) -> getFormatterDotLabel
    android.graphics.Paint getLabelPaint() -> getLabelPaint
    android.graphics.Paint getLinePaint() -> getLinePaint
    boolean render(android.graphics.Canvas) -> render
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PanMode
org.xclcharts.renderer.XChart -> org.xclcharts.renderer.XChart:
    org.xclcharts.renderer.plot.PlotAreaRender plotArea -> plotArea
    org.xclcharts.renderer.plot.PlotGridRender plotGrid -> plotGrid
    org.xclcharts.renderer.plot.PlotTitleRender plotTitle -> plotTitle
    float mLeft -> mLeft
    float mTop -> mTop
    float mRight -> mRight
    float mBottom -> mBottom
    float mWidth -> mWidth
    float mHeight -> mHeight
    float mPaddingTop -> mPaddingTop
    float mPaddingBottom -> mPaddingBottom
    float mPaddingLeft -> mPaddingLeft
    float mPaddingRight -> mPaddingRight
    boolean mBackgroundColorVisible -> mBackgroundColorVisible
    float[] mTranslateXY -> mTranslateXY
    boolean mShowBorder -> mShowBorder
    org.xclcharts.renderer.plot.BorderRender mBorder -> mBorder
    org.xclcharts.renderer.plot.PlotLegendRender plotLegend -> plotLegend
    org.xclcharts.renderer.info.LegendRender mDyLegend -> mDyLegend
    boolean mEnableScale -> mEnableScale
    float mXScale -> mXScale
    float mYScale -> mYScale
    float mCenterX -> mCenterX
    float mCenterY -> mCenterY
    boolean mDyLineVisible -> mDyLineVisible
    org.xclcharts.renderer.info.DyLineRender mDyLine -> mDyLine
    boolean mEnablePanMode -> mEnablePanMode
    org.xclcharts.renderer.XEnum$PanMode mPlotPanMode -> mPlotPanMode
    boolean mControlPanRange -> mControlPanRange
    void initChart() -> initChart
    org.xclcharts.renderer.XEnum$ChartType getType() -> getType
    org.xclcharts.renderer.plot.PlotLegend getPlotLegend() -> getPlotLegend
    void setPadding(float,float,float,float) -> setPadding
    org.xclcharts.renderer.plot.PlotArea getPlotArea() -> getPlotArea
    org.xclcharts.renderer.plot.PlotGrid getPlotGrid() -> getPlotGrid
    org.xclcharts.renderer.plot.PlotTitle getPlotTitle() -> getPlotTitle
    void setChartRange(float,float) -> setChartRange
    void setChartRange(float,float,float,float) -> setChartRange
    void setTitle(java.lang.String) -> setTitle
    void addSubtitle(java.lang.String) -> addSubtitle
    void setTitleVerticalAlign(org.xclcharts.renderer.XEnum$VerticalAlign) -> setTitleVerticalAlign
    void setTitleAlign(org.xclcharts.renderer.XEnum$HorizontalAlign) -> setTitleAlign
    float getLeft() -> getLeft
    float getTop() -> getTop
    float getRight() -> getRight
    float getBottom() -> getBottom
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    float getPaddingTop() -> getPaddingTop
    float getPaddingBottom() -> getPaddingBottom
    float getPaddingLeft() -> getPaddingLeft
    float getPaddingRight() -> getPaddingRight
    android.graphics.PointF getCenterXY() -> getCenterXY
    void setTranslateXY(float,float) -> setTranslateXY
    float[] getTranslateXY() -> getTranslateXY
    void calcPlotRange() -> calcPlotRange
    void renderTitle(android.graphics.Canvas) -> renderTitle
    boolean drawAnchor(java.util.List,int,int,android.graphics.Canvas,float,float,float) -> drawAnchor
    void setApplyBackgroundColor(boolean) -> setApplyBackgroundColor
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundColor(org.xclcharts.renderer.XEnum$Direction,int,int) -> setBackgroundColor
    android.graphics.Paint getBackgroundPaint() -> getBackgroundPaint
    void showBorder() -> showBorder
    void showRoundBorder() -> showRoundBorder
    void hideBorder() -> hideBorder
    org.xclcharts.renderer.plot.Border getBorder() -> getBorder
    boolean isShowBorder() -> isShowBorder
    int getBorderWidth() -> getBorderWidth
    void setBorderWidth(int) -> setBorderWidth
    void renderBorder(android.graphics.Canvas) -> renderBorder
    void renderChartBackground(android.graphics.Canvas) -> renderChartBackground
    void setScale(float,float,float,float) -> setScale
    boolean getClikedScaleStatus() -> getClikedScaleStatus
    void scaleChart(android.graphics.Canvas) -> scaleChart
    void enableScale() -> enableScale
    void disableScale() -> disableScale
    boolean getScaleStatus() -> getScaleStatus
    void setPlotPanMode(org.xclcharts.renderer.XEnum$PanMode) -> setPlotPanMode
    org.xclcharts.renderer.XEnum$PanMode getPlotPanMode() -> getPlotPanMode
    void enablePanMode() -> enablePanMode
    void disablePanMode() -> disablePanMode
    void enabledCtlPanRange() -> enabledCtlPanRange
    void disabledCtlPanRange() -> disabledCtlPanRange
    boolean getCtlPanRangeStatus() -> getCtlPanRangeStatus
    boolean getPanModeStatus() -> getPanModeStatus
    org.xclcharts.renderer.info.Legend getDyLegend() -> getDyLegend
    void showDyLine() -> showDyLine
    void hideDyLine() -> hideDyLine
    boolean getDyLineVisible() -> getDyLineVisible
    org.xclcharts.renderer.info.DyLine getDyLine() -> getDyLine
    void drawDyLine(android.graphics.Canvas) -> drawDyLine
    void drawDyLegend(android.graphics.Canvas) -> drawDyLegend
    boolean postRender(android.graphics.Canvas) -> postRender
    boolean render(android.graphics.Canvas) -> render
    void disableHighPrecision() -> disableHighPrecision
    void enabledHighPrecision() -> enabledHighPrecision
    float add(float,float) -> add
    float sub(float,float) -> sub
    float mul(float,float) -> mul
    float div(float,float) -> div
org.xclcharts.renderer.XEnum -> org.xclcharts.renderer.XEnum:
org.xclcharts.renderer.XEnum$AnchorStyle -> org.xclcharts.renderer.XEnum$AnchorStyle:
    org.xclcharts.renderer.XEnum$AnchorStyle RECT -> RECT
    org.xclcharts.renderer.XEnum$AnchorStyle CAPRECT -> CAPRECT
    org.xclcharts.renderer.XEnum$AnchorStyle ROUNDRECT -> ROUNDRECT
    org.xclcharts.renderer.XEnum$AnchorStyle CAPROUNDRECT -> CAPROUNDRECT
    org.xclcharts.renderer.XEnum$AnchorStyle CIRCLE -> CIRCLE
    org.xclcharts.renderer.XEnum$AnchorStyle VLINE -> VLINE
    org.xclcharts.renderer.XEnum$AnchorStyle HLINE -> HLINE
    org.xclcharts.renderer.XEnum$AnchorStyle TOBOTTOM -> TOBOTTOM
    org.xclcharts.renderer.XEnum$AnchorStyle TOTOP -> TOTOP
    org.xclcharts.renderer.XEnum$AnchorStyle TOLEFT -> TOLEFT
    org.xclcharts.renderer.XEnum$AnchorStyle TORIGHT -> TORIGHT
    org.xclcharts.renderer.XEnum$AnchorStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$AnchorStyle[] values() -> values
    org.xclcharts.renderer.XEnum$AnchorStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$AxisLineStyle -> org.xclcharts.renderer.XEnum$AxisLineStyle:
    org.xclcharts.renderer.XEnum$AxisLineStyle NONE -> NONE
    org.xclcharts.renderer.XEnum$AxisLineStyle CAP -> CAP
    org.xclcharts.renderer.XEnum$AxisLineStyle FILLCAP -> FILLCAP
    org.xclcharts.renderer.XEnum$AxisLineStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$AxisLineStyle[] values() -> values
    org.xclcharts.renderer.XEnum$AxisLineStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$AxisLocation -> org.xclcharts.renderer.XEnum$AxisLocation:
    org.xclcharts.renderer.XEnum$AxisLocation TOP -> TOP
    org.xclcharts.renderer.XEnum$AxisLocation BOTTOM -> BOTTOM
    org.xclcharts.renderer.XEnum$AxisLocation LEFT -> LEFT
    org.xclcharts.renderer.XEnum$AxisLocation RIGHT -> RIGHT
    org.xclcharts.renderer.XEnum$AxisLocation HORIZONTAL_CENTER -> HORIZONTAL_CENTER
    org.xclcharts.renderer.XEnum$AxisLocation VERTICAL_CENTER -> VERTICAL_CENTER
    org.xclcharts.renderer.XEnum$AxisLocation[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$AxisLocation[] values() -> values
    org.xclcharts.renderer.XEnum$AxisLocation valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$AxisTitleStyle -> org.xclcharts.renderer.XEnum$AxisTitleStyle:
    org.xclcharts.renderer.XEnum$AxisTitleStyle NORMAL -> NORMAL
    org.xclcharts.renderer.XEnum$AxisTitleStyle ENDPOINT -> ENDPOINT
    org.xclcharts.renderer.XEnum$AxisTitleStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$AxisTitleStyle[] values() -> values
    org.xclcharts.renderer.XEnum$AxisTitleStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$BarCenterStyle -> org.xclcharts.renderer.XEnum$BarCenterStyle:
    org.xclcharts.renderer.XEnum$BarCenterStyle TICKMARKS -> TICKMARKS
    org.xclcharts.renderer.XEnum$BarCenterStyle SPACE -> SPACE
    org.xclcharts.renderer.XEnum$BarCenterStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$BarCenterStyle[] values() -> values
    org.xclcharts.renderer.XEnum$BarCenterStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$BarStyle -> org.xclcharts.renderer.XEnum$BarStyle:
    org.xclcharts.renderer.XEnum$BarStyle GRADIENT -> GRADIENT
    org.xclcharts.renderer.XEnum$BarStyle FILL -> FILL
    org.xclcharts.renderer.XEnum$BarStyle STROKE -> STROKE
    org.xclcharts.renderer.XEnum$BarStyle OUTLINE -> OUTLINE
    org.xclcharts.renderer.XEnum$BarStyle TRIANGLE -> TRIANGLE
    org.xclcharts.renderer.XEnum$BarStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$BarStyle[] values() -> values
    org.xclcharts.renderer.XEnum$BarStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$ChartType -> org.xclcharts.renderer.XEnum$ChartType:
    org.xclcharts.renderer.XEnum$ChartType NONE -> NONE
    org.xclcharts.renderer.XEnum$ChartType BAR -> BAR
    org.xclcharts.renderer.XEnum$ChartType BAR3D -> BAR3D
    org.xclcharts.renderer.XEnum$ChartType STACKBAR -> STACKBAR
    org.xclcharts.renderer.XEnum$ChartType PIE -> PIE
    org.xclcharts.renderer.XEnum$ChartType PIE3D -> PIE3D
    org.xclcharts.renderer.XEnum$ChartType DOUNT -> DOUNT
    org.xclcharts.renderer.XEnum$ChartType LINE -> LINE
    org.xclcharts.renderer.XEnum$ChartType SPLINE -> SPLINE
    org.xclcharts.renderer.XEnum$ChartType AREA -> AREA
    org.xclcharts.renderer.XEnum$ChartType ROSE -> ROSE
    org.xclcharts.renderer.XEnum$ChartType RADAR -> RADAR
    org.xclcharts.renderer.XEnum$ChartType DIAL -> DIAL
    org.xclcharts.renderer.XEnum$ChartType RANGEBAR -> RANGEBAR
    org.xclcharts.renderer.XEnum$ChartType ARCLINE -> ARCLINE
    org.xclcharts.renderer.XEnum$ChartType CIRCLE -> CIRCLE
    org.xclcharts.renderer.XEnum$ChartType SCATTER -> SCATTER
    org.xclcharts.renderer.XEnum$ChartType BUBBLE -> BUBBLE
    org.xclcharts.renderer.XEnum$ChartType GAUGE -> GAUGE
    org.xclcharts.renderer.XEnum$ChartType FUNNEL -> FUNNEL
    org.xclcharts.renderer.XEnum$ChartType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$ChartType[] values() -> values
    org.xclcharts.renderer.XEnum$ChartType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$CircleType -> org.xclcharts.renderer.XEnum$CircleType:
    org.xclcharts.renderer.XEnum$CircleType FULL -> FULL
    org.xclcharts.renderer.XEnum$CircleType HALF -> HALF
    org.xclcharts.renderer.XEnum$CircleType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$CircleType[] values() -> values
    org.xclcharts.renderer.XEnum$CircleType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$CrurveLineStyle -> org.xclcharts.renderer.XEnum$CrurveLineStyle:
    org.xclcharts.renderer.XEnum$CrurveLineStyle BEELINE -> BEELINE
    org.xclcharts.renderer.XEnum$CrurveLineStyle BEZIERCURVE -> BEZIERCURVE
    org.xclcharts.renderer.XEnum$CrurveLineStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$CrurveLineStyle[] values() -> values
    org.xclcharts.renderer.XEnum$CrurveLineStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$DataAreaStyle -> org.xclcharts.renderer.XEnum$DataAreaStyle:
    org.xclcharts.renderer.XEnum$DataAreaStyle FILL -> FILL
    org.xclcharts.renderer.XEnum$DataAreaStyle STROKE -> STROKE
    org.xclcharts.renderer.XEnum$DataAreaStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$DataAreaStyle[] values() -> values
    org.xclcharts.renderer.XEnum$DataAreaStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$Direction -> org.xclcharts.renderer.XEnum$Direction:
    org.xclcharts.renderer.XEnum$Direction HORIZONTAL -> HORIZONTAL
    org.xclcharts.renderer.XEnum$Direction VERTICAL -> VERTICAL
    org.xclcharts.renderer.XEnum$Direction[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$Direction[] values() -> values
    org.xclcharts.renderer.XEnum$Direction valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$DotStyle -> org.xclcharts.renderer.XEnum$DotStyle:
    org.xclcharts.renderer.XEnum$DotStyle HIDE -> HIDE
    org.xclcharts.renderer.XEnum$DotStyle TRIANGLE -> TRIANGLE
    org.xclcharts.renderer.XEnum$DotStyle RECT -> RECT
    org.xclcharts.renderer.XEnum$DotStyle DOT -> DOT
    org.xclcharts.renderer.XEnum$DotStyle RING -> RING
    org.xclcharts.renderer.XEnum$DotStyle PRISMATIC -> PRISMATIC
    org.xclcharts.renderer.XEnum$DotStyle X -> X
    org.xclcharts.renderer.XEnum$DotStyle CROSS -> CROSS
    org.xclcharts.renderer.XEnum$DotStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$DotStyle[] values() -> values
    org.xclcharts.renderer.XEnum$DotStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$DyInfoStyle -> org.xclcharts.renderer.XEnum$DyInfoStyle:
    org.xclcharts.renderer.XEnum$DyInfoStyle RECT -> RECT
    org.xclcharts.renderer.XEnum$DyInfoStyle ROUNDRECT -> ROUNDRECT
    org.xclcharts.renderer.XEnum$DyInfoStyle CAPRECT -> CAPRECT
    org.xclcharts.renderer.XEnum$DyInfoStyle CIRCLE -> CIRCLE
    org.xclcharts.renderer.XEnum$DyInfoStyle CAPROUNDRECT -> CAPROUNDRECT
    org.xclcharts.renderer.XEnum$DyInfoStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$DyInfoStyle[] values() -> values
    org.xclcharts.renderer.XEnum$DyInfoStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$DyLineStyle -> org.xclcharts.renderer.XEnum$DyLineStyle:
    org.xclcharts.renderer.XEnum$DyLineStyle Cross -> Cross
    org.xclcharts.renderer.XEnum$DyLineStyle BackwardDiagonal -> BackwardDiagonal
    org.xclcharts.renderer.XEnum$DyLineStyle Vertical -> Vertical
    org.xclcharts.renderer.XEnum$DyLineStyle Horizontal -> Horizontal
    org.xclcharts.renderer.XEnum$DyLineStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$DyLineStyle[] values() -> values
    org.xclcharts.renderer.XEnum$DyLineStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$HorizontalAlign -> org.xclcharts.renderer.XEnum$HorizontalAlign:
    org.xclcharts.renderer.XEnum$HorizontalAlign LEFT -> LEFT
    org.xclcharts.renderer.XEnum$HorizontalAlign CENTER -> CENTER
    org.xclcharts.renderer.XEnum$HorizontalAlign RIGHT -> RIGHT
    org.xclcharts.renderer.XEnum$HorizontalAlign[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$HorizontalAlign[] values() -> values
    org.xclcharts.renderer.XEnum$HorizontalAlign valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$LabelBoxStyle -> org.xclcharts.renderer.XEnum$LabelBoxStyle:
    org.xclcharts.renderer.XEnum$LabelBoxStyle TEXT -> TEXT
    org.xclcharts.renderer.XEnum$LabelBoxStyle RECT -> RECT
    org.xclcharts.renderer.XEnum$LabelBoxStyle CIRCLE -> CIRCLE
    org.xclcharts.renderer.XEnum$LabelBoxStyle CAPRECT -> CAPRECT
    org.xclcharts.renderer.XEnum$LabelBoxStyle ROUNDRECT -> ROUNDRECT
    org.xclcharts.renderer.XEnum$LabelBoxStyle CAPROUNDRECT -> CAPROUNDRECT
    org.xclcharts.renderer.XEnum$LabelBoxStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$LabelBoxStyle[] values() -> values
    org.xclcharts.renderer.XEnum$LabelBoxStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$LabelLinePoint -> org.xclcharts.renderer.XEnum$LabelLinePoint:
    org.xclcharts.renderer.XEnum$LabelLinePoint NONE -> NONE
    org.xclcharts.renderer.XEnum$LabelLinePoint BEGIN -> BEGIN
    org.xclcharts.renderer.XEnum$LabelLinePoint END -> END
    org.xclcharts.renderer.XEnum$LabelLinePoint ALL -> ALL
    org.xclcharts.renderer.XEnum$LabelLinePoint[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$LabelLinePoint[] values() -> values
    org.xclcharts.renderer.XEnum$LabelLinePoint valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$LabelSaveType -> org.xclcharts.renderer.XEnum$LabelSaveType:
    org.xclcharts.renderer.XEnum$LabelSaveType NONE -> NONE
    org.xclcharts.renderer.XEnum$LabelSaveType ONLYPOSITION -> ONLYPOSITION
    org.xclcharts.renderer.XEnum$LabelSaveType ALL -> ALL
    org.xclcharts.renderer.XEnum$LabelSaveType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$LabelSaveType[] values() -> values
    org.xclcharts.renderer.XEnum$LabelSaveType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$LegendType -> org.xclcharts.renderer.XEnum$LegendType:
    org.xclcharts.renderer.XEnum$LegendType COLUMN -> COLUMN
    org.xclcharts.renderer.XEnum$LegendType ROW -> ROW
    org.xclcharts.renderer.XEnum$LegendType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$LegendType[] values() -> values
    org.xclcharts.renderer.XEnum$LegendType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$LineStyle -> org.xclcharts.renderer.XEnum$LineStyle:
    org.xclcharts.renderer.XEnum$LineStyle SOLID -> SOLID
    org.xclcharts.renderer.XEnum$LineStyle DOT -> DOT
    org.xclcharts.renderer.XEnum$LineStyle DASH -> DASH
    org.xclcharts.renderer.XEnum$LineStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$LineStyle[] values() -> values
    org.xclcharts.renderer.XEnum$LineStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$Location -> org.xclcharts.renderer.XEnum$Location:
    org.xclcharts.renderer.XEnum$Location TOP -> TOP
    org.xclcharts.renderer.XEnum$Location BOTTOM -> BOTTOM
    org.xclcharts.renderer.XEnum$Location LEFT -> LEFT
    org.xclcharts.renderer.XEnum$Location RIGHT -> RIGHT
    org.xclcharts.renderer.XEnum$Location[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$Location[] values() -> values
    org.xclcharts.renderer.XEnum$Location valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$PanMode -> org.xclcharts.renderer.XEnum$PanMode:
    org.xclcharts.renderer.XEnum$PanMode HORIZONTAL -> HORIZONTAL
    org.xclcharts.renderer.XEnum$PanMode VERTICAL -> VERTICAL
    org.xclcharts.renderer.XEnum$PanMode FREE -> FREE
    org.xclcharts.renderer.XEnum$PanMode[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$PanMode[] values() -> values
    org.xclcharts.renderer.XEnum$PanMode valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$PointerStyle -> org.xclcharts.renderer.XEnum$PointerStyle:
    org.xclcharts.renderer.XEnum$PointerStyle TRIANGLE -> TRIANGLE
    org.xclcharts.renderer.XEnum$PointerStyle LINE -> LINE
    org.xclcharts.renderer.XEnum$PointerStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$PointerStyle[] values() -> values
    org.xclcharts.renderer.XEnum$PointerStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$RadarChartType -> org.xclcharts.renderer.XEnum$RadarChartType:
    org.xclcharts.renderer.XEnum$RadarChartType RADAR -> RADAR
    org.xclcharts.renderer.XEnum$RadarChartType ROUND -> ROUND
    org.xclcharts.renderer.XEnum$RadarChartType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$RadarChartType[] values() -> values
    org.xclcharts.renderer.XEnum$RadarChartType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$RectType -> org.xclcharts.renderer.XEnum$RectType:
    org.xclcharts.renderer.XEnum$RectType RECT -> RECT
    org.xclcharts.renderer.XEnum$RectType ROUNDRECT -> ROUNDRECT
    org.xclcharts.renderer.XEnum$RectType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$RectType[] values() -> values
    org.xclcharts.renderer.XEnum$RectType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$RoundAxisType -> org.xclcharts.renderer.XEnum$RoundAxisType:
    org.xclcharts.renderer.XEnum$RoundAxisType TICKAXIS -> TICKAXIS
    org.xclcharts.renderer.XEnum$RoundAxisType RINGAXIS -> RINGAXIS
    org.xclcharts.renderer.XEnum$RoundAxisType ARCLINEAXIS -> ARCLINEAXIS
    org.xclcharts.renderer.XEnum$RoundAxisType FILLAXIS -> FILLAXIS
    org.xclcharts.renderer.XEnum$RoundAxisType CIRCLEAXIS -> CIRCLEAXIS
    org.xclcharts.renderer.XEnum$RoundAxisType LINEAXIS -> LINEAXIS
    org.xclcharts.renderer.XEnum$RoundAxisType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$RoundAxisType[] values() -> values
    org.xclcharts.renderer.XEnum$RoundAxisType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$RoundTickAxisType -> org.xclcharts.renderer.XEnum$RoundTickAxisType:
    org.xclcharts.renderer.XEnum$RoundTickAxisType INNER_TICKAXIS -> INNER_TICKAXIS
    org.xclcharts.renderer.XEnum$RoundTickAxisType OUTER_TICKAXIS -> OUTER_TICKAXIS
    org.xclcharts.renderer.XEnum$RoundTickAxisType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$RoundTickAxisType[] values() -> values
    org.xclcharts.renderer.XEnum$RoundTickAxisType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$SliceLabelStyle -> org.xclcharts.renderer.XEnum$SliceLabelStyle:
    org.xclcharts.renderer.XEnum$SliceLabelStyle HIDE -> HIDE
    org.xclcharts.renderer.XEnum$SliceLabelStyle INSIDE -> INSIDE
    org.xclcharts.renderer.XEnum$SliceLabelStyle OUTSIDE -> OUTSIDE
    org.xclcharts.renderer.XEnum$SliceLabelStyle BROKENLINE -> BROKENLINE
    org.xclcharts.renderer.XEnum$SliceLabelStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$SliceLabelStyle[] values() -> values
    org.xclcharts.renderer.XEnum$SliceLabelStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$SortType -> org.xclcharts.renderer.XEnum$SortType:
    org.xclcharts.renderer.XEnum$SortType NORMAL -> NORMAL
    org.xclcharts.renderer.XEnum$SortType ASC -> ASC
    org.xclcharts.renderer.XEnum$SortType DESC -> DESC
    org.xclcharts.renderer.XEnum$SortType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$SortType[] values() -> values
    org.xclcharts.renderer.XEnum$SortType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$TickType -> org.xclcharts.renderer.XEnum$TickType:
    org.xclcharts.renderer.XEnum$TickType MARKS -> MARKS
    org.xclcharts.renderer.XEnum$TickType LABELS -> LABELS
    org.xclcharts.renderer.XEnum$TickType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$TickType[] values() -> values
    org.xclcharts.renderer.XEnum$TickType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$TriangleDirection -> org.xclcharts.renderer.XEnum$TriangleDirection:
    org.xclcharts.renderer.XEnum$TriangleDirection UP -> UP
    org.xclcharts.renderer.XEnum$TriangleDirection DOWN -> DOWN
    org.xclcharts.renderer.XEnum$TriangleDirection LEFT -> LEFT
    org.xclcharts.renderer.XEnum$TriangleDirection RIGHT -> RIGHT
    org.xclcharts.renderer.XEnum$TriangleDirection[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$TriangleDirection[] values() -> values
    org.xclcharts.renderer.XEnum$TriangleDirection valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$TriangleStyle -> org.xclcharts.renderer.XEnum$TriangleStyle:
    org.xclcharts.renderer.XEnum$TriangleStyle OUTLINE -> OUTLINE
    org.xclcharts.renderer.XEnum$TriangleStyle FILL -> FILL
    org.xclcharts.renderer.XEnum$TriangleStyle[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$TriangleStyle[] values() -> values
    org.xclcharts.renderer.XEnum$TriangleStyle valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.XEnum$VerticalAlign -> org.xclcharts.renderer.XEnum$VerticalAlign:
    org.xclcharts.renderer.XEnum$VerticalAlign TOP -> TOP
    org.xclcharts.renderer.XEnum$VerticalAlign MIDDLE -> MIDDLE
    org.xclcharts.renderer.XEnum$VerticalAlign BOTTOM -> BOTTOM
    org.xclcharts.renderer.XEnum$VerticalAlign[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.XEnum$VerticalAlign[] values() -> values
    org.xclcharts.renderer.XEnum$VerticalAlign valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.axis.Axis -> org.xclcharts.renderer.axis.Axis:
    android.graphics.Paint mPaintAxis -> mPaintAxis
    boolean mAxisLineVisible -> mAxisLineVisible
    android.graphics.Paint mPaintTickMarks -> mPaintTickMarks
    android.graphics.Paint mPaintTickLabels -> mPaintTickLabels
    boolean mTickMarksVisible -> mTickMarksVisible
    boolean mAxisLabelsVisible -> mAxisLabelsVisible
    float mTickLabelRotateAngle -> mTickLabelRotateAngle
    boolean mAxisVisible -> mAxisVisible
    void initAxisPaint() -> initAxisPaint
    void initTickMarksPaint() -> initTickMarksPaint
    void initTickLabelPaint() -> initTickLabelPaint
    void show() -> show
    void hide() -> hide
    boolean isShow() -> isShow
    void showAxisLine() -> showAxisLine
    void hideAxisLine() -> hideAxisLine
    boolean isShowAxisLine() -> isShowAxisLine
    android.graphics.Paint getAxisPaint() -> getAxisPaint
    android.graphics.Paint getTickMarksPaint() -> getTickMarksPaint
    android.graphics.Paint getTickLabelPaint() -> getTickLabelPaint
    void showTickMarks() -> showTickMarks
    void hideTickMarks() -> hideTickMarks
    boolean isShowTickMarks() -> isShowTickMarks
    void showAxisLabels() -> showAxisLabels
    void hideAxisLabels() -> hideAxisLabels
    boolean isShowAxisLabels() -> isShowAxisLabels
    float getTickLabelRotateAngle() -> getTickLabelRotateAngle
    void setTickLabelRotateAngle(float) -> setTickLabelRotateAngle
org.xclcharts.renderer.axis.CategoryAxis -> org.xclcharts.renderer.axis.CategoryAxis:
    double mAxisSteps -> mAxisSteps
    boolean mAxisBindStd -> mAxisBindStd
    void setAxisSteps(double) -> setAxisSteps
    double getAxisSteps() -> getAxisSteps
    void setAxisBuildStd(boolean) -> setAxisBuildStd
    boolean getAxisBuildStdStatus() -> getAxisBuildStdStatus
org.xclcharts.renderer.axis.CategoryAxisRender -> org.xclcharts.renderer.axis.CategoryAxisRender:
    java.util.List getDataSet() -> getDataSet
    void renderAxisHorizontalTick(org.xclcharts.renderer.XChart,android.graphics.Canvas,float,float,java.lang.String,float,float,boolean) -> renderAxisHorizontalTick
    void renderAxisVerticalTick(android.graphics.Canvas,float,float,java.lang.String,float,float,boolean) -> renderAxisVerticalTick
    void renderAxis(android.graphics.Canvas,float,float,float,float) -> renderAxis
    void renderAxisLine(android.graphics.Canvas,float,float,float,float) -> renderAxisLine
    void setDataBuilding(java.util.List) -> setDataBuilding
org.xclcharts.renderer.axis.DataAxis -> org.xclcharts.renderer.axis.DataAxis:
    double mDataAxisMin -> mDataAxisMin
    double mDataAxisMax -> mDataAxisMax
    double mDataAxisSteps -> mDataAxisSteps
    double mDetailModeSteps -> mDetailModeSteps
    boolean mShowFirstTick -> mShowFirstTick
    float mDataAxisStd -> mDataAxisStd
    boolean mAxisStdStatus -> mAxisStdStatus
    void enabledAxisStd() -> enabledAxisStd
    void disableddAxisStd() -> disableddAxisStd
    void setAxisStd(float) -> setAxisStd
    boolean getAxisStdStatus() -> getAxisStdStatus
    float getAxisStd() -> getAxisStd
    void setAxisMin(double) -> setAxisMin
    void setAxisMax(double) -> setAxisMax
    void setAxisSteps(double) -> setAxisSteps
    void setDetailModeSteps(double) -> setDetailModeSteps
    float getAxisMin() -> getAxisMin
    float getAxisMax() -> getAxisMax
    double getAxisSteps() -> getAxisSteps
    double getDetailModeSteps() -> getDetailModeSteps
    boolean isDetailMode() -> isDetailMode
    void showFirstTick() -> showFirstTick
    void hideFirstTick() -> hideFirstTick
org.xclcharts.renderer.axis.DataAxisRender -> org.xclcharts.renderer.axis.DataAxisRender:
    int mCurrentId -> mCurrentId
    float getAxisRange() -> getAxisRange
    int getAixTickCount() -> getAixTickCount
    void setAxisTickCurrentID(int) -> setAxisTickCurrentID
    boolean isPrimaryTick() -> isPrimaryTick
    boolean isPrimaryTick(int) -> isPrimaryTick
    int getTickMarksLength() -> getTickMarksLength
    boolean isShowAxisLabels() -> isShowAxisLabels
    void renderAxisHorizontalTick(org.xclcharts.renderer.XChart,android.graphics.Canvas,float,float,java.lang.String,boolean) -> renderAxisHorizontalTick
    void renderAxisVerticalTick(android.graphics.Canvas,float,float,java.lang.String,boolean) -> renderAxisVerticalTick
    void renderAxis(android.graphics.Canvas,float,float,float,float) -> renderAxis
    void renderAxisLine(android.graphics.Canvas,float,float,float,float) -> renderAxisLine
org.xclcharts.renderer.axis.RoundAxis -> org.xclcharts.renderer.axis.RoundAxis:
    float mCirX -> mCirX
    float mCirY -> mCirY
    float mOrgRadius -> mOrgRadius
    float mRadius -> mRadius
    int mDetailModeSteps -> mDetailModeSteps
    float mRadiusPercentage -> mRadiusPercentage
    float mInnerRadiusPercentage -> mInnerRadiusPercentage
    float mTickInnerRadiusPercentage -> mTickInnerRadiusPercentage
    float mTickOuterRadiusPercentage -> mTickOuterRadiusPercentage
    org.xclcharts.common.IFormatterTextCallBack mLabelFormatter -> mLabelFormatter
    float mTotalAngle -> mTotalAngle
    float mInitAngle -> mInitAngle
    org.xclcharts.renderer.XEnum$RoundAxisType mAxisType -> mAxisType
    java.util.List mPercentage -> mPercentage
    java.util.List mColor -> mColor
    java.util.List mLabels -> mLabels
    android.graphics.Paint mPaintFillAxis -> mPaintFillAxis
    boolean mLongTickfakeBold -> mLongTickfakeBold
    org.xclcharts.renderer.XEnum$RoundTickAxisType mRoundTickAxisType -> mRoundTickAxisType
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RoundAxisType -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RoundAxisType
    void setTickInnerRadiusPercentage(float) -> setTickInnerRadiusPercentage
    void setTickOuterRadiusPercentage(float) -> setTickOuterRadiusPercentage
    void setRoundAxisType(org.xclcharts.renderer.XEnum$RoundAxisType) -> setRoundAxisType
    void setDetailModeSteps(int) -> setDetailModeSteps
    void setDetailModeSteps(int,boolean) -> setDetailModeSteps
    float getRadius() -> getRadius
    void setRoundTickAxisType(org.xclcharts.renderer.XEnum$RoundTickAxisType) -> setRoundTickAxisType
    void setRadiusPercentage(float) -> setRadiusPercentage
    void setRingInnerRadiusPercentage(float) -> setRingInnerRadiusPercentage
    android.graphics.Paint getFillAxisPaint() -> getFillAxisPaint
    void initFillAxisPaint() -> initFillAxisPaint
    void setLabelFormatter(org.xclcharts.common.IFormatterTextCallBack) -> setLabelFormatter
    java.lang.String getFormatterLabel(java.lang.String) -> getFormatterLabel
    org.xclcharts.renderer.XEnum$RoundAxisType getAxisType() -> getAxisType
    float getOuterRadiusPercentage() -> getOuterRadiusPercentage
    float getRingInnerRadiusPercentage() -> getRingInnerRadiusPercentage
    float getOuterRadius() -> getOuterRadius
    float getRingInnerRadius() -> getRingInnerRadius
    android.graphics.PointF getCenterXY() -> getCenterXY
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RoundAxisType() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RoundAxisType
org.xclcharts.renderer.axis.RoundAxisRender -> org.xclcharts.renderer.axis.RoundAxisRender:
    java.lang.String TAG -> TAG
    org.xclcharts.renderer.XEnum$Location mLocation -> mLocation
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RoundAxisType -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RoundAxisType
    void setAxisPercentage(java.util.List) -> setAxisPercentage
    void setAxisColor(java.util.List) -> setAxisColor
    void setAxisLabels(java.util.List) -> setAxisLabels
    void setLineAxisLocation(org.xclcharts.renderer.XEnum$Location) -> setLineAxisLocation
    boolean renderTicks(android.graphics.Canvas,java.util.List) -> renderTicks
    android.graphics.PointF getLabelXY(java.lang.String,float,float,float,float,float,float) -> getLabelXY
    boolean renderFillAxis(android.graphics.Canvas) -> renderFillAxis
    boolean renderTickAxis(android.graphics.Canvas) -> renderTickAxis
    boolean renderArcLineAxis(android.graphics.Canvas) -> renderArcLineAxis
    void renderArcLineDiscontinuitiesLabel(android.graphics.Canvas,java.util.List) -> renderArcLineDiscontinuitiesLabel
    boolean renderCircleAxis(android.graphics.Canvas) -> renderCircleAxis
    boolean renderRingAxis(android.graphics.Canvas) -> renderRingAxis
    boolean renderPartitions(android.graphics.Canvas,float,float,int,java.lang.String) -> renderPartitions
    boolean renderLineAxis(android.graphics.Canvas) -> renderLineAxis
    void setCenterXY(float,float) -> setCenterXY
    void setOrgRadius(float) -> setOrgRadius
    void setAngleInfo(float,float) -> setAngleInfo
    boolean render(android.graphics.Canvas) -> render
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RoundAxisType() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RoundAxisType
org.xclcharts.renderer.axis.XYAxis -> org.xclcharts.renderer.axis.XYAxis:
    java.util.List mDataSet -> mDataSet
    org.xclcharts.common.IFormatterTextCallBack mLabelFormatter -> mLabelFormatter
    android.graphics.Paint$Align mTickMarksAlign -> mTickMarksAlign
    org.xclcharts.renderer.XEnum$VerticalAlign mTickMarksPosition -> mTickMarksPosition
    int mTickMarksLength -> mTickMarksLength
    int mTickLabelMargin -> mTickLabelMargin
    boolean mShowAxisLineStyle -> mShowAxisLineStyle
    org.xclcharts.renderer.XEnum$AxisLineStyle mAxisLineStyle -> mAxisLineStyle
    float mAxisLineStyleWidth -> mAxisLineStyleWidth
    float mAxisLineStyleHeight -> mAxisLineStyleHeight
    int[] $SWITCH_TABLE$android$graphics$Paint$Align -> $SWITCH_TABLE$android$graphics$Paint$Align
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign
    void setVerticalTickPosition(org.xclcharts.renderer.XEnum$VerticalAlign) -> setVerticalTickPosition
    org.xclcharts.renderer.XEnum$VerticalAlign getVerticalTickPosition() -> getVerticalTickPosition
    void setHorizontalTickAlign(android.graphics.Paint$Align) -> setHorizontalTickAlign
    android.graphics.Paint$Align getHorizontalTickAlign() -> getHorizontalTickAlign
    void setLabelFormatter(org.xclcharts.common.IFormatterTextCallBack) -> setLabelFormatter
    java.lang.String getFormatterLabel(java.lang.String) -> getFormatterLabel
    void renderHorizontalTick(org.xclcharts.renderer.XChart,android.graphics.Canvas,float,float,java.lang.String,float,float,boolean) -> renderHorizontalTick
    void renderVerticalTick(android.graphics.Canvas,float,float,java.lang.String,float,float,boolean) -> renderVerticalTick
    void renderLeftAxisTickMaskLabel(android.graphics.Canvas,float,float,java.lang.String,float) -> renderLeftAxisTickMaskLabel
    int getTickMarksLength() -> getTickMarksLength
    void setTickLabelMargin(int) -> setTickLabelMargin
    int getTickLabelMargin() -> getTickLabelMargin
    void setAxisLinxCapWH(float,float) -> setAxisLinxCapWH
    void setAxisLineStyle(org.xclcharts.renderer.XEnum$AxisLineStyle) -> setAxisLineStyle
    void drawAxisLine(android.graphics.Canvas,float,float,float,float) -> drawAxisLine
    int[] $SWITCH_TABLE$android$graphics$Paint$Align() -> $SWITCH_TABLE$android$graphics$Paint$Align
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign
org.xclcharts.renderer.bar.Bar -> org.xclcharts.renderer.bar.Bar:
    java.lang.String TAG -> TAG
    org.xclcharts.renderer.XEnum$Direction mBarDirection -> mBarDirection
    android.graphics.Paint mPaintBar -> mPaintBar
    android.graphics.Paint mPaintItemLabel -> mPaintItemLabel
    int mItemLabelAnchorOffset -> mItemLabelAnchorOffset
    float mItemLabelRotateAngle -> mItemLabelRotateAngle
    boolean mShowItemLabel -> mShowItemLabel
    double mBarInnerMargin -> mBarInnerMargin
    org.xclcharts.renderer.XEnum$BarStyle mBarStyle -> mBarStyle
    float mBarTickSpacePercent -> mBarTickSpacePercent
    float mBarMaxPxWidth -> mBarMaxPxWidth
    float mBarMaxPxHeight -> mBarMaxPxHeight
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    org.xclcharts.renderer.XEnum$Direction getBarDirection() -> getBarDirection
    void setBarDirection(org.xclcharts.renderer.XEnum$Direction) -> setBarDirection
    android.graphics.Paint getBarPaint() -> getBarPaint
    android.graphics.Paint getItemLabelPaint() -> getItemLabelPaint
    int getItemLabelAnchorOffset() -> getItemLabelAnchorOffset
    void setItemLabelAnchorOffset(int) -> setItemLabelAnchorOffset
    float getItemLabelRotateAngle() -> getItemLabelRotateAngle
    void setItemLabelRotateAngle(float) -> setItemLabelRotateAngle
    void setItemLabelVisible(boolean) -> setItemLabelVisible
    boolean setBarTickSpacePercent(float) -> setBarTickSpacePercent
    boolean setBarInnerMargin(float) -> setBarInnerMargin
    double getInnerMargin() -> getInnerMargin
    boolean getItemLabelsVisible() -> getItemLabelsVisible
    void setBarMaxPxWidth(float) -> setBarMaxPxWidth
    float getBarMaxPxWidth() -> getBarMaxPxWidth
    void setBarMaxPxHeight(float) -> setBarMaxPxHeight
    float getBarMaxPxHeight() -> getBarMaxPxHeight
    float[] calcBarHeightAndMargin(float,int) -> calcBarHeightAndMargin
    float[] calcBarWidthAndMargin(float,int) -> calcBarWidthAndMargin
    void drawBarItemLabel(java.lang.String,float,float,android.graphics.Canvas) -> drawBarItemLabel
    void setBarStyle(org.xclcharts.renderer.XEnum$BarStyle) -> setBarStyle
    org.xclcharts.renderer.XEnum$BarStyle getBarStyle() -> getBarStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
org.xclcharts.renderer.bar.Bar3D -> org.xclcharts.renderer.bar.Bar3D:
    int mThickness -> mThickness
    int mAngle -> mAngle
    int mAlpha -> mAlpha
    android.graphics.Paint mPaint3D -> mPaint3D
    android.graphics.Paint mPaintBase -> mPaintBase
    android.graphics.Paint mPaintBase3D -> mPaintBase3D
    int mAxisBaseThickness -> mAxisBaseThickness
    int mAxisBaseColor -> mAxisBaseColor
    android.graphics.Path mPathRectangle2D -> mPathRectangle2D
    android.graphics.Paint mPaintLine -> mPaintLine
    double getOffsetX(double,double) -> getOffsetX
    double getOffsetY(double,double) -> getOffsetY
    double getOffsetX() -> getOffsetX
    double getOffsetY() -> getOffsetY
    float[] getBarHeightAndMargin(float,int) -> getBarHeightAndMargin
    float[] getBarWidthAndMargin(float,int) -> getBarWidthAndMargin
    void renderVertical3DBar(float,float,float,float,int,android.graphics.Canvas) -> renderVertical3DBar
    void render3DXAxis(float,float,float,float,android.graphics.Canvas) -> render3DXAxis
    void renderHorizontal3DBar(float,float,float,float,int,android.graphics.Canvas) -> renderHorizontal3DBar
    void render3DYAxis(float,float,float,float,android.graphics.Canvas) -> render3DYAxis
    int getThickness() -> getThickness
    void setThickness(int) -> setThickness
    int getAngle() -> getAngle
    void setAngle(int) -> setAngle
    int getAlpha() -> getAlpha
    void setAlpha(int) -> setAlpha
    int getAxis3DBaseThickness() -> getAxis3DBaseThickness
    void setAxis3DBaseThickness(int) -> setAxis3DBaseThickness
    void renderBarItemLabel(java.lang.String,float,float,android.graphics.Canvas) -> renderBarItemLabel
    void setAxis3DBaseColor(int) -> setAxis3DBaseColor
    int getAxis3DBaseColor() -> getAxis3DBaseColor
org.xclcharts.renderer.bar.FlatBar -> org.xclcharts.renderer.bar.FlatBar:
    java.lang.String TAG -> TAG
    int mFillAlpha -> mFillAlpha
    android.graphics.LinearGradient linearGradient -> linearGradient
    android.graphics.Path mPath -> mPath
    int radius -> radius
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$BarStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$BarStyle
    int getFillAlpha() -> getFillAlpha
    void setFillAlpha(int) -> setFillAlpha
    float[] getBarHeightAndMargin(float,int) -> getBarHeightAndMargin
    float[] getBarWidthAndMargin(float,int) -> getBarWidthAndMargin
    void setBarGradient(float,float,float,float) -> setBarGradient
    boolean renderBar(float,float,float,float,android.graphics.Canvas) -> renderBar
    void renderBarItemLabel(java.lang.String,float,float,android.graphics.Canvas) -> renderBarItemLabel
    void drawPathBar(float,float,float,float,android.graphics.Canvas) -> drawPathBar
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Direction
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$BarStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$BarStyle
org.xclcharts.renderer.info.AnchorDataPoint -> org.xclcharts.renderer.info.AnchorDataPoint:
    int mDataSeriesID -> mDataSeriesID
    int mDataChildID -> mDataChildID
    org.xclcharts.renderer.XEnum$AnchorStyle mAnchorStyle -> mAnchorStyle
    java.lang.String mAnchor -> mAnchor
    int mAnchorTextSize -> mAnchorTextSize
    int mAnchorTextColor -> mAnchorTextColor
    int mBgColor -> mBgColor
    int mAlpha -> mAlpha
    org.xclcharts.renderer.XEnum$DataAreaStyle mDataAreaStyle -> mDataAreaStyle
    float mRadius -> mRadius
    float mRoundRaidus -> mRoundRaidus
    int mLineWidth -> mLineWidth
    float mCapRectW -> mCapRectW
    float mCapRectH -> mCapRectH
    float mCapRectHeight -> mCapRectHeight
    org.xclcharts.renderer.XEnum$AnchorStyle getAnchorStyle() -> getAnchorStyle
    void setAnchorStyle(org.xclcharts.renderer.XEnum$AnchorStyle) -> setAnchorStyle
    int getDataSeriesID() -> getDataSeriesID
    void setDataSeriesID(int) -> setDataSeriesID
    int getDataChildID() -> getDataChildID
    void setDataChildID(int) -> setDataChildID
    void setAnchor(java.lang.String) -> setAnchor
    java.lang.String getAnchor() -> getAnchor
    void setRadius(float) -> setRadius
    float getRadius() -> getRadius
    void setTextSize(int) -> setTextSize
    float getTextSize() -> getTextSize
    void setTextColor(int) -> setTextColor
    int getTextColor() -> getTextColor
    void setLineWidth(int) -> setLineWidth
    int getLineWidth() -> getLineWidth
    void setAlpha(int) -> setAlpha
    int getAlpha() -> getAlpha
    void setBgColor(int) -> setBgColor
    int getBgColor() -> getBgColor
    void setAreaStyle(org.xclcharts.renderer.XEnum$DataAreaStyle) -> setAreaStyle
    org.xclcharts.renderer.XEnum$DataAreaStyle getAreaStyle() -> getAreaStyle
    void setCapRectAngleWH(float,float) -> setCapRectAngleWH
    void setCapRectHeight(float) -> setCapRectHeight
    float getCapRectW() -> getCapRectW
    float getCapRectH() -> getCapRectH
    float getCapRectHeight() -> getCapRectHeight
    void setRoundRadius(int) -> setRoundRadius
    float getRoundRadius() -> getRoundRadius
org.xclcharts.renderer.info.AnchorRender -> org.xclcharts.renderer.info.AnchorRender:
    org.xclcharts.renderer.info.AnchorRender instance -> instance
    android.graphics.RectF mRect -> mRect
    android.graphics.Paint mPaintText -> mPaintText
    android.graphics.Paint mPaintBg -> mPaintBg
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DataAreaStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DataAreaStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AnchorStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AnchorStyle
    org.xclcharts.renderer.info.AnchorRender getInstance() -> getInstance
    void renderAnchor(android.graphics.Canvas,org.xclcharts.renderer.info.AnchorDataPoint,float,float,float,float,float,float,float) -> renderAnchor
    void renderRoundRect(android.graphics.Canvas,org.xclcharts.renderer.info.AnchorDataPoint,float,float,float) -> renderRoundRect
    void renderCapRound(android.graphics.Canvas,org.xclcharts.renderer.info.AnchorDataPoint,float,float,float,float,float,float,float) -> renderCapRound
    void renderCapRect(android.graphics.Canvas,org.xclcharts.renderer.info.AnchorDataPoint,float,float,float,float,float,float,float) -> renderCapRect
    void renderRound(android.graphics.Canvas,org.xclcharts.renderer.info.AnchorDataPoint,float,float,float,float,float,float,float) -> renderRound
    void renderCap(android.graphics.Canvas,org.xclcharts.renderer.info.AnchorDataPoint,float,float,float,float,float,float,float) -> renderCap
    void renderRect(android.graphics.Canvas,android.graphics.Paint,float,float,float) -> renderRect
    android.graphics.Paint getTextPaint() -> getTextPaint
    android.graphics.Paint getBgPaint() -> getBgPaint
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DataAreaStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DataAreaStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AnchorStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$AnchorStyle
org.xclcharts.renderer.info.DyInfo -> org.xclcharts.renderer.info.DyInfo:
    java.lang.String TAG -> TAG
    android.graphics.Paint mPaintBorder -> mPaintBorder
    android.graphics.Paint mPaintBackground -> mPaintBackground
    android.graphics.RectF mRect -> mRect
    float mRowSpan -> mRowSpan
    float mColSpan -> mColSpan
    float mMargin -> mMargin
    org.xclcharts.renderer.XEnum$DyInfoStyle mStyle -> mStyle
    float mRoundRectX -> mRoundRectX
    float mRoundRectY -> mRoundRectY
    java.util.ArrayList mClickedDotStyle -> mClickedDotStyle
    java.util.ArrayList mClickedText -> mClickedText
    java.util.ArrayList mClickedPaint -> mClickedPaint
    android.graphics.PointF mCenterXY -> mCenterXY
    android.graphics.Paint$Align mPositionAlign -> mPositionAlign
    float mRectWidth -> mRectWidth
    float mRectHeight -> mRectHeight
    float mScale -> mScale
    float mRadius -> mRadius
    boolean mShowBoxBorder -> mShowBoxBorder
    boolean mShowBackground -> mShowBackground
    int[] $SWITCH_TABLE$android$graphics$Paint$Align -> $SWITCH_TABLE$android$graphics$Paint$Align
    android.graphics.Paint getBorderPaint() -> getBorderPaint
    android.graphics.Paint getBackgroundPaint() -> getBackgroundPaint
    boolean validateParams() -> validateParams
    void getContentRect() -> getContentRect
    void setRowSpan(float) -> setRowSpan
    void setColSpan(float) -> setColSpan
    void setMargin(float) -> setMargin
    void setRoundRectX(float) -> setRoundRectX
    void setRoundRectY(float) -> setRoundRectY
    void setCenterXY(float,float) -> setCenterXY
    void setStyle(org.xclcharts.renderer.XEnum$DyInfoStyle) -> setStyle
    void addInfo(java.lang.String,android.graphics.Paint) -> addInfo
    void addInfo(org.xclcharts.renderer.line.PlotDot,java.lang.String,android.graphics.Paint) -> addInfo
    void drawInfo(android.graphics.Canvas) -> drawInfo
    void setCapBoxAngleHeight(float) -> setCapBoxAngleHeight
    void renderCapRect(android.graphics.Canvas,android.graphics.RectF) -> renderCapRect
    void renderCapRound(android.graphics.Canvas,android.graphics.RectF) -> renderCapRound
    void setCircleBoxRadius(float) -> setCircleBoxRadius
    void renderCircle(android.graphics.Canvas,android.graphics.RectF) -> renderCircle
    void clear() -> clear
    void getInfoRect() -> getInfoRect
    void hideBorder() -> hideBorder
    void hideBackground() -> hideBackground
    void showBorder() -> showBorder
    void showBackground() -> showBackground
    int[] $SWITCH_TABLE$android$graphics$Paint$Align() -> $SWITCH_TABLE$android$graphics$Paint$Align
org.xclcharts.renderer.info.DyLine -> org.xclcharts.renderer.info.DyLine:
    android.graphics.Paint mPaintLine -> mPaintLine
    android.graphics.PointF mCenterXY -> mCenterXY
    org.xclcharts.renderer.XEnum$DyLineStyle mDyLineStyle -> mDyLineStyle
    org.xclcharts.renderer.XEnum$LineStyle mLineDrawStyle -> mLineDrawStyle
    float mOldX -> mOldX
    float mOldY -> mOldY
    android.graphics.Paint getLinePaint() -> getLinePaint
    void setCurrentXY(float,float) -> setCurrentXY
    boolean isInvalidate() -> isInvalidate
    void setDyLineStyle(org.xclcharts.renderer.XEnum$DyLineStyle) -> setDyLineStyle
    org.xclcharts.renderer.XEnum$DyLineStyle getDyLineStyle() -> getDyLineStyle
    void setLineDrawStyle(org.xclcharts.renderer.XEnum$LineStyle) -> setLineDrawStyle
    org.xclcharts.renderer.XEnum$LineStyle getLineDrawStyle() -> getLineDrawStyle
org.xclcharts.renderer.info.DyLineRender -> org.xclcharts.renderer.info.DyLineRender:
    float mLeft -> mLeft
    float mTop -> mTop
    float mRight -> mRight
    float mBottom -> mBottom
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DyLineStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DyLineStyle
    void drawCross(android.graphics.Canvas) -> drawCross
    void drawBackwardDiagonal(android.graphics.Canvas) -> drawBackwardDiagonal
    void drawVertical(android.graphics.Canvas) -> drawVertical
    void drawHorizontal(android.graphics.Canvas) -> drawHorizontal
    void renderLine(android.graphics.Canvas,float,float,float,float) -> renderLine
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DyLineStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DyLineStyle
org.xclcharts.renderer.info.Legend -> org.xclcharts.renderer.info.Legend:
    float mXPercentage -> mXPercentage
    float mYPercentage -> mYPercentage
    void setPosition(float,float) -> setPosition
    void addLegend(java.lang.String,android.graphics.Paint) -> addLegend
    void addLegend(org.xclcharts.renderer.line.PlotDot,java.lang.String,android.graphics.Paint) -> addLegend
org.xclcharts.renderer.info.LegendRender -> org.xclcharts.renderer.info.LegendRender:
    void setPlotWH(float,float) -> setPlotWH
    void renderInfo(android.graphics.Canvas) -> renderInfo
org.xclcharts.renderer.info.PlotArcLabelInfo -> org.xclcharts.renderer.info.PlotArcLabelInfo:
    float Radius -> Radius
    float OffsetAngle -> OffsetAngle
    float CurrentAngle -> CurrentAngle
    android.graphics.PointF mLabelPointF -> mLabelPointF
    float getRadius() -> getRadius
    void setRadius(float) -> setRadius
    float getOffsetAngle() -> getOffsetAngle
    void setOffsetAngle(float) -> setOffsetAngle
    float getCurrentAngle() -> getCurrentAngle
    void setCurrentAngle(float) -> setCurrentAngle
    android.graphics.PointF getLabelPointF() -> getLabelPointF
    void setLabelPointF(android.graphics.PointF) -> setLabelPointF
org.xclcharts.renderer.info.PlotAxisTick -> org.xclcharts.renderer.info.PlotAxisTick:
    boolean mShowTickMarks -> mShowTickMarks
    float getLabelX() -> getLabelX
    void setLabelX(float) -> setLabelX
    float getLabelY() -> getLabelY
    void setLabelY(float) -> setLabelY
    boolean isShowTickMarks() -> isShowTickMarks
org.xclcharts.renderer.info.PlotDataInfo -> org.xclcharts.renderer.info.PlotDataInfo:
    float X -> X
    float Y -> Y
    java.lang.String Label -> Label
    int ID -> ID
    float labelX -> labelX
    float labelY -> labelY
    float getX() -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
    java.lang.String getLabel() -> getLabel
    void setLabel(java.lang.String) -> setLabel
    int getID() -> getID
    void setID(int) -> setID
org.xclcharts.renderer.info.ToolTip -> org.xclcharts.renderer.info.ToolTip:
    void setInfoStyle(org.xclcharts.renderer.XEnum$DyInfoStyle) -> setInfoStyle
    void setRoundRadius(float,float) -> setRoundRadius
    void setAlign(android.graphics.Paint$Align) -> setAlign
    void setCurrentXY(float,float) -> setCurrentXY
    void addToolTip(java.lang.String,android.graphics.Paint) -> addToolTip
    void addToolTip(org.xclcharts.renderer.line.PlotDot,java.lang.String,android.graphics.Paint) -> addToolTip
org.xclcharts.renderer.info.ToolTipRender -> org.xclcharts.renderer.info.ToolTipRender:
    void renderInfo(android.graphics.Canvas) -> renderInfo
org.xclcharts.renderer.line.DotInfo -> org.xclcharts.renderer.line.DotInfo:
    java.lang.Double mValue -> mValue
    java.lang.Double mXValue -> mXValue
    java.lang.Double mYValue -> mYValue
    float mX -> mX
    float mY -> mY
    java.lang.String getLabel() -> getLabel
org.xclcharts.renderer.line.PlotCustomLine -> org.xclcharts.renderer.line.PlotCustomLine:
    java.lang.String TAG -> TAG
    java.util.List mCustomLineDataset -> mCustomLineDataset
    org.xclcharts.renderer.axis.DataAxisRender mDataAxis -> mDataAxis
    org.xclcharts.renderer.plot.PlotAreaRender mPlotArea -> mPlotArea
    float mAxisScreenHeight -> mAxisScreenHeight
    float mAxisScreenWidth -> mAxisScreenWidth
    int CAPSIZE -> CAPSIZE
    org.xclcharts.renderer.line.PlotDot mDot -> mDot
    int[] $SWITCH_TABLE$android$graphics$Paint$Align -> $SWITCH_TABLE$android$graphics$Paint$Align
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign
    void setVerticalPlot(org.xclcharts.renderer.axis.DataAxisRender,org.xclcharts.renderer.plot.PlotAreaRender,float) -> setVerticalPlot
    void setHorizontalPlot(org.xclcharts.renderer.axis.DataAxisRender,org.xclcharts.renderer.plot.PlotAreaRender,float) -> setHorizontalPlot
    boolean validateParams() -> validateParams
    boolean renderVerticalCustomlinesDataAxis(android.graphics.Canvas) -> renderVerticalCustomlinesDataAxis
    void renderCapLabelVerticalPlot(android.graphics.Canvas,org.xclcharts.chart.CustomLineData,float) -> renderCapLabelVerticalPlot
    void renderLabel(android.graphics.Canvas,org.xclcharts.chart.CustomLineData,float,float) -> renderLabel
    boolean renderHorizontalCustomlinesDataAxis(android.graphics.Canvas) -> renderHorizontalCustomlinesDataAxis
    boolean renderCategoryAxisCustomlines(android.graphics.Canvas,float,org.xclcharts.renderer.plot.PlotAreaRender,double,double) -> renderCategoryAxisCustomlines
    void renderCapLabelHorizontalPlot(android.graphics.Canvas,org.xclcharts.chart.CustomLineData,double) -> renderCapLabelHorizontalPlot
    void renderLineCapHorizontalPlot(android.graphics.Canvas,org.xclcharts.chart.CustomLineData,float,float) -> renderLineCapHorizontalPlot
    void renderLineCapVerticalPlot(android.graphics.Canvas,org.xclcharts.chart.CustomLineData,float,float) -> renderLineCapVerticalPlot
    void renderLineCap(android.graphics.Canvas,org.xclcharts.chart.CustomLineData,float,float,float,float) -> renderLineCap
    void initPlotDot() -> initPlotDot
    void setCustomLines(java.util.List) -> setCustomLines
    void setDataAxis(org.xclcharts.renderer.axis.DataAxisRender) -> setDataAxis
    void setPlotArea(org.xclcharts.renderer.plot.PlotAreaRender) -> setPlotArea
    void setAxisScreenHeight(float) -> setAxisScreenHeight
    void setAxisScreenWidth(float) -> setAxisScreenWidth
    int[] $SWITCH_TABLE$android$graphics$Paint$Align() -> $SWITCH_TABLE$android$graphics$Paint$Align
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign
org.xclcharts.renderer.line.PlotDot -> org.xclcharts.renderer.line.PlotDot:
    int mColor -> mColor
    int mRingInnerColor -> mRingInnerColor
    org.xclcharts.renderer.XEnum$DotStyle mDotStyle -> mDotStyle
    float mRadius -> mRadius
    int mAlpha -> mAlpha
    void setColor(int) -> setColor
    int getColor() -> getColor
    void setRingInnerColor(int) -> setRingInnerColor
    int getRingInnerColor() -> getRingInnerColor
    void setDotStyle(org.xclcharts.renderer.XEnum$DotStyle) -> setDotStyle
    org.xclcharts.renderer.XEnum$DotStyle getDotStyle() -> getDotStyle
    void setDotRadius(float) -> setDotRadius
    float getDotRadius() -> getDotRadius
    void setAlpah(int) -> setAlpah
    int getAlpha() -> getAlpha
org.xclcharts.renderer.line.PlotDotRender -> org.xclcharts.renderer.line.PlotDotRender:
    org.xclcharts.renderer.line.PlotDotRender instance -> instance
    android.graphics.Paint mPaintFill -> mPaintFill
    android.graphics.Path mPath -> mPath
    android.graphics.RectF mRect -> mRect
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DotStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DotStyle
    org.xclcharts.renderer.line.PlotDotRender getInstance() -> getInstance
    void initPath() -> initPath
    android.graphics.Paint getInnerFillPaint() -> getInnerFillPaint
    android.graphics.RectF renderDot(android.graphics.Canvas,org.xclcharts.renderer.line.PlotDot,float,float,android.graphics.Paint) -> renderDot
    void renderRing(android.graphics.Canvas,android.graphics.Paint,float,org.xclcharts.renderer.line.PlotDot,float,float) -> renderRing
    void renderTriangle(android.graphics.Canvas,android.graphics.Paint,float,float,float) -> renderTriangle
    void renderPrismatic(android.graphics.Canvas,android.graphics.Paint,float,float,float) -> renderPrismatic
    void renderRect(android.graphics.Canvas,android.graphics.Paint,float,float,float) -> renderRect
    void renderX(android.graphics.Canvas,android.graphics.Paint) -> renderX
    void renderCross(android.graphics.Canvas,android.graphics.Paint,float,float,float) -> renderCross
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DotStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$DotStyle
org.xclcharts.renderer.line.PlotLine -> org.xclcharts.renderer.line.PlotLine:
    android.graphics.Paint mPaintLine -> mPaintLine
    android.graphics.Paint mPaintLabel -> mPaintLabel
    android.graphics.Paint mPaintDot -> mPaintDot
    org.xclcharts.renderer.line.PlotDot mPlotDot -> mPlotDot
    void initLinePaint() -> initLinePaint
    void initLabelPaint() -> initLabelPaint
    android.graphics.Paint getLinePaint() -> getLinePaint
    android.graphics.Paint getDotLabelPaint() -> getDotLabelPaint
    android.graphics.Paint getDotPaint() -> getDotPaint
    org.xclcharts.renderer.line.PlotDot getPlotDot() -> getPlotDot
    void setDotStyle(org.xclcharts.renderer.XEnum$DotStyle) -> setDotStyle
    org.xclcharts.renderer.XEnum$DotStyle getDotStyle() -> getDotStyle
org.xclcharts.renderer.plot.AxisTitle -> org.xclcharts.renderer.plot.AxisTitle:
    android.graphics.Paint mPaintLeftAxisTitle -> mPaintLeftAxisTitle
    android.graphics.Paint mPaintLowerAxisTitle -> mPaintLowerAxisTitle
    android.graphics.Paint mPaintRightAxisTitle -> mPaintRightAxisTitle
    java.lang.String mLeftAxisTitle -> mLeftAxisTitle
    java.lang.String mLowerAxisTitle -> mLowerAxisTitle
    java.lang.String mRightAxisTitle -> mRightAxisTitle
    org.xclcharts.renderer.XEnum$AxisTitleStyle mAxisTitleStyle -> mAxisTitleStyle
    java.lang.String mCrossPointTitle -> mCrossPointTitle
    float mLeftAxisTitleOffsetX -> mLeftAxisTitleOffsetX
    float mRightAxisTitleOffsetX -> mRightAxisTitleOffsetX
    float mLowerAxisTitleOffsetY -> mLowerAxisTitleOffsetY
    void initLeftAxisTitlePaint() -> initLeftAxisTitlePaint
    void initLowerAxisTitlePaint() -> initLowerAxisTitlePaint
    void initRightAxisTitlePaint() -> initRightAxisTitlePaint
    android.graphics.Paint getLeftTitlePaint() -> getLeftTitlePaint
    android.graphics.Paint getLowerTitlePaint() -> getLowerTitlePaint
    android.graphics.Paint getRightTitlePaint() -> getRightTitlePaint
    void setLeftTitle(java.lang.String) -> setLeftTitle
    void setLowerTitle(java.lang.String) -> setLowerTitle
    void setRightTitle(java.lang.String) -> setRightTitle
    java.lang.String getLeftTitle() -> getLeftTitle
    java.lang.String getLowerTitle() -> getLowerTitle
    java.lang.String getRightTitle() -> getRightTitle
    void setTitleStyle(org.xclcharts.renderer.XEnum$AxisTitleStyle) -> setTitleStyle
    void setCrossPointTitle(java.lang.String) -> setCrossPointTitle
    void setLeftAxisTitleOffsetX(float) -> setLeftAxisTitleOffsetX
    void setRightAxisTitleOffsetX(float) -> setRightAxisTitleOffsetX
    void setLowerAxisTitleOffsetY(float) -> setLowerAxisTitleOffsetY
org.xclcharts.renderer.plot.AxisTitleRender -> org.xclcharts.renderer.plot.AxisTitleRender:
    org.xclcharts.renderer.XChart mChart -> mChart
    void setRange(org.xclcharts.renderer.XChart) -> setRange
    boolean render(android.graphics.Canvas) -> render
    void drawLeftAxisTitle(android.graphics.Canvas,java.lang.String,double,double,double,double) -> drawLeftAxisTitle
    void drawLowerAxisTitle(android.graphics.Canvas,java.lang.String,double,double,double,double) -> drawLowerAxisTitle
    void drawRightAxisTitle(android.graphics.Canvas,java.lang.String,double,double,double,double) -> drawRightAxisTitle
org.xclcharts.renderer.plot.Border -> org.xclcharts.renderer.plot.Border:
    android.graphics.Paint mPaintBorderLine -> mPaintBorderLine
    org.xclcharts.renderer.XEnum$LineStyle mLineStyle -> mLineStyle
    org.xclcharts.renderer.XEnum$RectType mRectType -> mRectType
    int mRaidus -> mRaidus
    int mBorderSpadding -> mBorderSpadding
    android.graphics.Paint mPaintBackground -> mPaintBackground
    android.graphics.Paint getLinePaint() -> getLinePaint
    void setBorderLineColor(int) -> setBorderLineColor
    void setBorderLineStyle(org.xclcharts.renderer.XEnum$LineStyle) -> setBorderLineStyle
    void setBorderRectType(org.xclcharts.renderer.XEnum$RectType) -> setBorderRectType
    org.xclcharts.renderer.XEnum$LineStyle getBorderLineStyle() -> getBorderLineStyle
    org.xclcharts.renderer.XEnum$RectType getBorderRectType() -> getBorderRectType
    void setRoundRadius(int) -> setRoundRadius
    int getRoundRadius() -> getRoundRadius
    int getBorderWidth() -> getBorderWidth
    android.graphics.Paint getBackgroundPaint() -> getBackgroundPaint
org.xclcharts.renderer.plot.BorderRender -> org.xclcharts.renderer.plot.BorderRender:
    android.graphics.RectF mRect -> mRect
    android.graphics.Path mPath -> mPath
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LineStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LineStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RectType -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RectType
    int getBorderSpadding() -> getBorderSpadding
    void setPaintLineStyle() -> setPaintLineStyle
    void renderRect(android.graphics.Canvas,android.graphics.RectF,boolean,boolean) -> renderRect
    void renderCapRect(android.graphics.Canvas,android.graphics.RectF,float,boolean,boolean) -> renderCapRect
    void renderCapRound(android.graphics.Canvas,android.graphics.RectF,float,boolean,boolean) -> renderCapRound
    void renderRound(android.graphics.Canvas,android.graphics.RectF,float,boolean,boolean) -> renderRound
    void renderBorder(java.lang.String,android.graphics.Canvas,float,float,float,float) -> renderBorder
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LineStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LineStyle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RectType() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$RectType
org.xclcharts.renderer.plot.LabelBrokenLine -> org.xclcharts.renderer.plot.LabelBrokenLine:
    java.lang.String TAG -> TAG
    org.xclcharts.renderer.XEnum$LabelLinePoint mLinePoint -> mLinePoint
    float mRadius -> mRadius
    android.graphics.Paint mPaintLabelLine -> mPaintLabelLine
    android.graphics.Paint mPaintPoint -> mPaintPoint
    float mLabelBrokenLineLength -> mLabelBrokenLineLength
    boolean mIsBZLine -> mIsBZLine
    float mBrokenStartPoint -> mBrokenStartPoint
    void isBZLine() -> isBZLine
    void isBeeLine() -> isBeeLine
    void setLinePointStyle(org.xclcharts.renderer.XEnum$LabelLinePoint) -> setLinePointStyle
    org.xclcharts.renderer.XEnum$LabelLinePoint getLinePointStyle() -> getLinePointStyle
    void setRadius(float) -> setRadius
    float getRadius() -> getRadius
    void setBrokenLine(float) -> setBrokenLine
    float getBrokenLine() -> getBrokenLine
    android.graphics.Paint getLabelLinePaint() -> getLabelLinePaint
    android.graphics.Paint getPointPaint() -> getPointPaint
    void setBrokenStartPoint(float) -> setBrokenStartPoint
org.xclcharts.renderer.plot.LabelBrokenLineRender -> org.xclcharts.renderer.plot.LabelBrokenLineRender:
    android.graphics.Path mBzLine -> mBzLine
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LabelLinePoint -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LabelLinePoint
    android.graphics.PointF renderLabelLine(java.lang.String,float,float,float,float,float,android.graphics.Canvas,android.graphics.Paint,boolean,org.xclcharts.renderer.plot.PlotLabelRender) -> renderLabelLine
    void drawBrokenLine(float,float,float,float,float,android.graphics.Canvas) -> drawBrokenLine
    void drawBZLine(float,float,float,float,float,android.graphics.Canvas) -> drawBZLine
    void drawPoint(float,float,float,float,float,float,android.graphics.Canvas) -> drawPoint
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LabelLinePoint() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LabelLinePoint
org.xclcharts.renderer.plot.PlotArea -> org.xclcharts.renderer.plot.PlotArea:
    float mLeft -> mLeft
    float mTop -> mTop
    float mRight -> mRight
    float mBottom -> mBottom
    float mWidth -> mWidth
    float mHeight -> mHeight
    android.graphics.Paint mBackgroundPaint -> mBackgroundPaint
    boolean mBackgroundColorVisible -> mBackgroundColorVisible
    float mExtWidth -> mExtWidth
    boolean mApplayGradient -> mApplayGradient
    int mBeginColor -> mBeginColor
    int mEndColor -> mEndColor
    android.graphics.Shader$TileMode mTileMode -> mTileMode
    org.xclcharts.renderer.XEnum$Direction mDirection -> mDirection
    void initBackgroundPaint() -> initBackgroundPaint
    android.graphics.Paint getBackgroundPaint() -> getBackgroundPaint
    void setBackgroundColorVisible(boolean) -> setBackgroundColorVisible
    boolean getBackgroundColorVisible() -> getBackgroundColorVisible
    void setBackgroundColor(boolean,int) -> setBackgroundColor
    float getLeft() -> getLeft
    float getPlotLeft() -> getPlotLeft
    float getTop() -> getTop
    float getPlotTop() -> getPlotTop
    float getBottom() -> getBottom
    float getPlotBottom() -> getPlotBottom
    float getRight() -> getRight
    float getPlotRight() -> getPlotRight
    float getWidth() -> getWidth
    float getPlotWidth() -> getPlotWidth
    float getHeight() -> getHeight
    float getPlotHeight() -> getPlotHeight
    void extWidth(float) -> extWidth
    float getExtWidth() -> getExtWidth
    void setApplayGradient(boolean) -> setApplayGradient
    boolean getApplayGradient() -> getApplayGradient
    void setGradientDirection(org.xclcharts.renderer.XEnum$Direction) -> setGradientDirection
    org.xclcharts.renderer.XEnum$Direction getGradientDirection() -> getGradientDirection
    void setGradientMode(android.graphics.Shader$TileMode) -> setGradientMode
    android.graphics.Shader$TileMode getGradientMode() -> getGradientMode
    void setBeginColor(int) -> setBeginColor
    void setEndColor(int) -> setEndColor
    int getBeginColor() -> getBeginColor
    int getEndColor() -> getEndColor
org.xclcharts.renderer.plot.PlotAreaRender -> org.xclcharts.renderer.plot.PlotAreaRender:
    void drawPlotBackground(android.graphics.Canvas) -> drawPlotBackground
    float getCenterX() -> getCenterX
    float getCenterY() -> getCenterY
    void setLeft(float) -> setLeft
    void setTop(float) -> setTop
    void setRight(float) -> setRight
    void setBottom(float) -> setBottom
    float getPlotRight() -> getPlotRight
    boolean render(android.graphics.Canvas) -> render
org.xclcharts.renderer.plot.PlotAttrInfo -> org.xclcharts.renderer.plot.PlotAttrInfo:
    java.util.List mAttrInfoLocation -> mAttrInfoLocation
    java.util.List mAttrInfo -> mAttrInfo
    java.util.List mAttrInfoPostion -> mAttrInfoPostion
    java.util.List mAttrInfoPaint -> mAttrInfoPaint
    java.util.List getPlotAttrInfo() -> getPlotAttrInfo
    java.util.List getPlotAttrInfoPostion() -> getPlotAttrInfoPostion
    java.util.List getPlotAttrInfoPaint() -> getPlotAttrInfoPaint
    void clearPlotAttrInfo() -> clearPlotAttrInfo
    void addAttributeInfo(org.xclcharts.renderer.XEnum$Location,java.lang.String,float,android.graphics.Paint) -> addAttributeInfo
org.xclcharts.renderer.plot.PlotAttrInfoRender -> org.xclcharts.renderer.plot.PlotAttrInfoRender:
    android.graphics.PointF mPosPintF -> mPosPintF
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location
    void renderAttrInfo(android.graphics.Canvas,float,float,float) -> renderAttrInfo
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$Location
org.xclcharts.renderer.plot.PlotGrid -> org.xclcharts.renderer.plot.PlotGrid:
    android.graphics.Paint mPaintGridLineHorizontal -> mPaintGridLineHorizontal
    android.graphics.Paint mPaintGridLineVertical -> mPaintGridLineVertical
    boolean mGridLinesHorizontalVisible -> mGridLinesHorizontalVisible
    boolean mGridLinesVerticalVisible -> mGridLinesVerticalVisible
    boolean mOddRowBgColorVisible -> mOddRowBgColorVisible
    boolean mEvenRowBgColorVisible -> mEvenRowBgColorVisible
    android.graphics.Paint mPaintOddBgColor -> mPaintOddBgColor
    android.graphics.Paint mPaintEvenBgColor -> mPaintEvenBgColor
    org.xclcharts.renderer.XEnum$LineStyle mHorizontalLineStyle -> mHorizontalLineStyle
    org.xclcharts.renderer.XEnum$LineStyle mVerticalLineStyle -> mVerticalLineStyle
    void initEvenBgColorPaint() -> initEvenBgColorPaint
    void initOddBgColorPaint() -> initOddBgColorPaint
    void initHorizontalLinePaint() -> initHorizontalLinePaint
    void initVerticalLinePaint() -> initVerticalLinePaint
    void setOddRowBackgroundColor(int) -> setOddRowBackgroundColor
    void setEvenRowBackgroundColor(int) -> setEvenRowBackgroundColor
    void showHorizontalLines() -> showHorizontalLines
    void hideHorizontalLines() -> hideHorizontalLines
    boolean isShowHorizontalLines() -> isShowHorizontalLines
    void showVerticalLines() -> showVerticalLines
    void hideVerticalLines() -> hideVerticalLines
    boolean isShowVerticalLines() -> isShowVerticalLines
    void showOddRowBgColor() -> showOddRowBgColor
    void hideOddRowBgColor() -> hideOddRowBgColor
    boolean isShowOddRowBgColor() -> isShowOddRowBgColor
    void showEvenRowBgColor() -> showEvenRowBgColor
    void hideEvenRowBgColor() -> hideEvenRowBgColor
    boolean isShowEvenRowBgColor() -> isShowEvenRowBgColor
    android.graphics.Paint getHorizontalLinePaint() -> getHorizontalLinePaint
    android.graphics.Paint getVerticalLinePaint() -> getVerticalLinePaint
    android.graphics.Paint getOddRowsBgColorPaint() -> getOddRowsBgColorPaint
    android.graphics.Paint getEvenRowsBgColorPaint() -> getEvenRowsBgColorPaint
    org.xclcharts.renderer.XEnum$LineStyle getVerticalLineStyle() -> getVerticalLineStyle
    void setVerticalLineStyle(org.xclcharts.renderer.XEnum$LineStyle) -> setVerticalLineStyle
    org.xclcharts.renderer.XEnum$LineStyle getHorizontalLineStyle() -> getHorizontalLineStyle
    void setHorizontalLineStyle(org.xclcharts.renderer.XEnum$LineStyle) -> setHorizontalLineStyle
org.xclcharts.renderer.plot.PlotGridRender -> org.xclcharts.renderer.plot.PlotGridRender:
    boolean mMajorTickLine -> mMajorTickLine
    int BLOB_WIDTH -> BLOB_WIDTH
    void setPrimaryTickLine(boolean) -> setPrimaryTickLine
    void renderOddRowsFill(android.graphics.Canvas,float,float,float,float) -> renderOddRowsFill
    void renderEvenRowsFill(android.graphics.Canvas,float,float,float,float) -> renderEvenRowsFill
    void renderGridLinesHorizontal(android.graphics.Canvas,float,float,float,float) -> renderGridLinesHorizontal
    void renderGridLinesVertical(android.graphics.Canvas,float,float,float,float) -> renderGridLinesVertical
org.xclcharts.renderer.plot.PlotLabel -> org.xclcharts.renderer.plot.PlotLabel:
    float mMargin -> mMargin
    org.xclcharts.renderer.plot.BorderRender mBorder -> mBorder
    boolean mShowBoxBorder -> mShowBoxBorder
    boolean mShowBackground -> mShowBackground
    float mOffsetX -> mOffsetX
    float mOffsetY -> mOffsetY
    int DEF_BOX_BG_ALPHA -> DEF_BOX_BG_ALPHA
    float mScale -> mScale
    float mRadius -> mRadius
    org.xclcharts.renderer.XEnum$LabelBoxStyle mLabelBoxStyle -> mLabelBoxStyle
    org.xclcharts.renderer.plot.Border getBox() -> getBox
    void initBox() -> initBox
    void hideBorder() -> hideBorder
    void hideBackground() -> hideBackground
    void showBorder() -> showBorder
    void showBackground() -> showBackground
    void setCapBoxAngleHeight(float) -> setCapBoxAngleHeight
    void setCircleBoxRadius(float) -> setCircleBoxRadius
    void setLabelBoxStyle(org.xclcharts.renderer.XEnum$LabelBoxStyle) -> setLabelBoxStyle
    void setOffsetX(float) -> setOffsetX
    void setOffsetY(float) -> setOffsetY
    void setMargin(float) -> setMargin
    float getMargin() -> getMargin
    boolean drawLabel(android.graphics.Canvas,android.graphics.Paint,java.lang.String,float,float,float) -> drawLabel
    boolean drawLabel(android.graphics.Canvas,android.graphics.Paint,java.lang.String,float,float,float,int) -> drawLabel
org.xclcharts.renderer.plot.PlotLabelRender -> org.xclcharts.renderer.plot.PlotLabelRender:
    android.graphics.RectF mRectBox -> mRectBox
    int mBorderColor -> mBorderColor
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LabelBoxStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LabelBoxStyle
    boolean drawLabel(android.graphics.Canvas,android.graphics.Paint,java.lang.String,float,float,float,int) -> drawLabel
    boolean drawLabel(android.graphics.Canvas,android.graphics.Paint,java.lang.String,float,float,float) -> drawLabel
    float getLabelWidth(android.graphics.Paint,java.lang.String) -> getLabelWidth
    float getLabelHeight(android.graphics.Paint) -> getLabelHeight
    void drawBox(android.graphics.Canvas) -> drawBox
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LabelBoxStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LabelBoxStyle
org.xclcharts.renderer.plot.PlotLegend -> org.xclcharts.renderer.plot.PlotLegend:
    float mMargin -> mMargin
    android.graphics.Paint mKeyPaint -> mKeyPaint
    boolean mVisible -> mVisible
    float mOffsetX -> mOffsetX
    float mOffsetY -> mOffsetY
    float mRowSpan -> mRowSpan
    float mColSpan -> mColSpan
    org.xclcharts.renderer.XEnum$LegendType mLegendType -> mLegendType
    org.xclcharts.renderer.XEnum$HorizontalAlign mHorizontalAlign -> mHorizontalAlign
    org.xclcharts.renderer.XEnum$VerticalAlign mVerticalAlign -> mVerticalAlign
    org.xclcharts.renderer.plot.BorderRender mBorder -> mBorder
    boolean mShowBox -> mShowBox
    boolean mShowBoxBorder -> mShowBoxBorder
    boolean mShowBackground -> mShowBackground
    void show() -> show
    void hide() -> hide
    boolean isShow() -> isShow
    void hideBox() -> hideBox
    void hideBorder() -> hideBorder
    void hideBackground() -> hideBackground
    void showBox() -> showBox
    void showBorder() -> showBorder
    void showBackground() -> showBackground
    android.graphics.Paint getPaint() -> getPaint
    void setLabelMargin(float) -> setLabelMargin
    void setRowSpan(float) -> setRowSpan
    void setColSpan(float) -> setColSpan
    float getLabelMargin() -> getLabelMargin
    void setOffsetX(float) -> setOffsetX
    void setOffsetY(float) -> setOffsetY
    void setType(org.xclcharts.renderer.XEnum$LegendType) -> setType
    org.xclcharts.renderer.XEnum$LegendType getType() -> getType
    void setHorizontalAlign(org.xclcharts.renderer.XEnum$HorizontalAlign) -> setHorizontalAlign
    org.xclcharts.renderer.XEnum$HorizontalAlign getHorizontalAlign() -> getHorizontalAlign
    void setVerticalAlign(org.xclcharts.renderer.XEnum$VerticalAlign) -> setVerticalAlign
    org.xclcharts.renderer.XEnum$VerticalAlign getVerticalAlign() -> getVerticalAlign
    org.xclcharts.renderer.plot.Border getBox() -> getBox
org.xclcharts.renderer.plot.PlotLegendRender -> org.xclcharts.renderer.plot.PlotLegendRender:
    org.xclcharts.renderer.plot.PlotArea mPlotArea -> mPlotArea
    org.xclcharts.renderer.XChart mXChart -> mXChart
    float mKeyLabelX -> mKeyLabelX
    float mKeyLabelY -> mKeyLabelY
    java.util.ArrayList mLstDotStyle -> mLstDotStyle
    java.util.ArrayList mLstKey -> mLstKey
    java.util.ArrayList mLstColor -> mLstColor
    float mRectWidth -> mRectWidth
    float mRectHeight -> mRectHeight
    java.util.LinkedHashMap mMapID -> mMapID
    boolean mIsLnChart -> mIsLnChart
    android.graphics.Paint mPaintLine -> mPaintLine
    org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType mType -> mType
    int BOX_LINE_SIZE -> BOX_LINE_SIZE
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LegendType -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LegendType
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign
    void setXChart(org.xclcharts.renderer.XChart) -> setXChart
    void initEnv() -> initEnv
    float getLabelTextWidth(java.lang.String) -> getLabelTextWidth
    float getLabelTextHeight() -> getLabelTextHeight
    boolean renderBarKey(android.graphics.Canvas,java.util.List) -> renderBarKey
    void renderLineKey(android.graphics.Canvas,java.util.List) -> renderLineKey
    void renderPieKey(android.graphics.Canvas,java.util.List) -> renderPieKey
    void renderRdKey(android.graphics.Canvas,java.util.List) -> renderRdKey
    void renderPointKey(android.graphics.Canvas,java.util.List) -> renderPointKey
    void renderBubbleKey(android.graphics.Canvas,java.util.List) -> renderBubbleKey
    void renderRoundBarKey(android.graphics.Canvas,java.util.List) -> renderRoundBarKey
    void renderRangeBarKey(android.graphics.Canvas,java.lang.String,int) -> renderRangeBarKey
    void setLnChartStatus() -> setLnChartStatus
    void render(android.graphics.Canvas) -> render
    float getRectWidth() -> getRectWidth
    void calcContentRect() -> calcContentRect
    void getStartXY() -> getStartXY
    void drawLegend(android.graphics.Canvas) -> drawLegend
    void clearLst() -> clearLst
    void drawBox(android.graphics.Canvas) -> drawBox
    void refreshLst() -> refreshLst
    void convertArrayLineKey(java.util.List) -> convertArrayLineKey
    void convertArrayBarKey(java.util.List) -> convertArrayBarKey
    void convertArrayPieKey(java.util.List) -> convertArrayPieKey
    void convertArrayRadarKey(java.util.List) -> convertArrayRadarKey
    void convertArrayPointKey(java.util.List) -> convertArrayPointKey
    void convertArrayBubbleKey(java.util.List) -> convertArrayBubbleKey
    void convertArrayArcLineKey(java.util.List) -> convertArrayArcLineKey
    boolean isDrawKey(java.lang.String) -> isDrawKey
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LegendType() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$LegendType
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign
org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType -> org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType:
    org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType AXIS -> AXIS
    org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType CIR -> CIR
    org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType LN -> LN
    org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType RD -> RD
    org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType[] ENUM$VALUES -> ENUM$VALUES
    org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType[] values() -> values
    org.xclcharts.renderer.plot.PlotLegendRender$EnumChartType valueOf(java.lang.String) -> valueOf
org.xclcharts.renderer.plot.PlotQuadrant -> org.xclcharts.renderer.plot.PlotQuadrant:
    int mFirstColor -> mFirstColor
    int mSecondColor -> mSecondColor
    int mThirdColor -> mThirdColor
    int mFourthColor -> mFourthColor
    boolean mShow -> mShow
    boolean mShowBgColor -> mShowBgColor
    boolean mShowVerticalLine -> mShowVerticalLine
    boolean mShowHorizontalLine -> mShowHorizontalLine
    android.graphics.Paint mPaintBgColor -> mPaintBgColor
    android.graphics.Paint mPaintVerticalLine -> mPaintVerticalLine
    android.graphics.Paint mPaintHorizontalLine -> mPaintHorizontalLine
    double mQuadrantXValue -> mQuadrantXValue
    double mQuadrantYValue -> mQuadrantYValue
    void show(double,double) -> show
    void hide() -> hide
    boolean isShow() -> isShow
    void showBgColor() -> showBgColor
    void hideBgColor() -> hideBgColor
    void showVerticalLine() -> showVerticalLine
    void hideVerticalLine() -> hideVerticalLine
    void showHorizontalLine() -> showHorizontalLine
    void hideHorizontalLine() -> hideHorizontalLine
    void setBgColor(int,int,int,int) -> setBgColor
    android.graphics.Paint getVerticalLinePaint() -> getVerticalLinePaint
    android.graphics.Paint getHorizontalLinePaint() -> getHorizontalLinePaint
    android.graphics.Paint getBgColorPaint() -> getBgColorPaint
    void setQuadrantXYValue(double,double) -> setQuadrantXYValue
    double getQuadrantXValue() -> getQuadrantXValue
    double getQuadrantYValue() -> getQuadrantYValue
org.xclcharts.renderer.plot.PlotQuadrantRender -> org.xclcharts.renderer.plot.PlotQuadrantRender:
    void drawQuadrant(android.graphics.Canvas,float,float,float,float,float,float) -> drawQuadrant
org.xclcharts.renderer.plot.PlotTitle -> org.xclcharts.renderer.plot.PlotTitle:
    java.lang.String mChartTitle -> mChartTitle
    java.lang.String mSubtitle -> mSubtitle
    android.graphics.Paint mPaintTitle -> mPaintTitle
    android.graphics.Paint mPaintSubtitle -> mPaintSubtitle
    org.xclcharts.renderer.XEnum$HorizontalAlign mChartTitleAlign -> mChartTitleAlign
    org.xclcharts.renderer.XEnum$VerticalAlign mTitlePosition -> mTitlePosition
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getTitle() -> getTitle
    void setSubtitle(java.lang.String) -> setSubtitle
    java.lang.String getSubtitle() -> getSubtitle
    android.graphics.Paint getTitlePaint() -> getTitlePaint
    android.graphics.Paint getSubtitlePaint() -> getSubtitlePaint
    void setTitleAlign(org.xclcharts.renderer.XEnum$HorizontalAlign) -> setTitleAlign
    org.xclcharts.renderer.XEnum$HorizontalAlign getTitleAlign() -> getTitleAlign
    void setVerticalAlign(org.xclcharts.renderer.XEnum$VerticalAlign) -> setVerticalAlign
    org.xclcharts.renderer.XEnum$VerticalAlign getVerticalAlign() -> getVerticalAlign
org.xclcharts.renderer.plot.PlotTitleRender -> org.xclcharts.renderer.plot.PlotTitleRender:
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign
    void renderTitle(float,float,float,float,float,android.graphics.Canvas) -> renderTitle
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$VerticalAlign
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$HorizontalAlign
org.xclcharts.renderer.plot.Pointer -> org.xclcharts.renderer.plot.Pointer:
    android.graphics.Paint mPaintPoint -> mPaintPoint
    android.graphics.Paint mPaintBaseCircle -> mPaintBaseCircle
    float mCenterX -> mCenterX
    float mCenterY -> mCenterY
    float mPercentage -> mPercentage
    float mPointerRadiusPercentage -> mPointerRadiusPercentage
    float mPointerTailRadiusPercentage -> mPointerTailRadiusPercentage
    float mBaseRadius -> mBaseRadius
    org.xclcharts.renderer.XEnum$PointerStyle mPointStyle -> mPointStyle
    boolean mShowBaseCircle -> mShowBaseCircle
    void setPointerStyle(org.xclcharts.renderer.XEnum$PointerStyle) -> setPointerStyle
    org.xclcharts.renderer.XEnum$PointerStyle getPointerStyle() -> getPointerStyle
    void setLength(float) -> setLength
    void setLength(float,float) -> setLength
    android.graphics.Paint getPointerPaint() -> getPointerPaint
    android.graphics.Paint getBaseCirclePaint() -> getBaseCirclePaint
    void setBaseRadius(float) -> setBaseRadius
    float getBaseRadius() -> getBaseRadius
    void hideBaseCircle() -> hideBaseCircle
    void showBaseCircle() -> showBaseCircle
    boolean isShowBaseCircle() -> isShowBaseCircle
    void setPercentage(float) -> setPercentage
    float getPercentage() -> getPercentage
org.xclcharts.renderer.plot.PointerRender -> org.xclcharts.renderer.plot.PointerRender:
    int FIX_ANGLE -> FIX_ANGLE
    float mStartAngle -> mStartAngle
    float mTotalAngle -> mTotalAngle
    float mPointerAngle -> mPointerAngle
    float mParentRadius -> mParentRadius
    float mPointerRadius -> mPointerRadius
    float mPointerTailRadius -> mPointerTailRadius
    float mEndX -> mEndX
    float mEndY -> mEndY
    float mTailX -> mTailX
    float mTailY -> mTailY
    android.graphics.Path mPath -> mPath
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PointerStyle -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PointerStyle
    void setStartXY(float,float) -> setStartXY
    void setCurrentAngle(float) -> setCurrentAngle
    void setStartAngle(float) -> setStartAngle
    void setTotalAngle(float) -> setTotalAngle
    void setParentRadius(float) -> setParentRadius
    void setPointEndXY(float,float) -> setPointEndXY
    float getCurrentPointerAngle() -> getCurrentPointerAngle
    void calcRadius() -> calcRadius
    void calcEndXY() -> calcEndXY
    void renerLine(android.graphics.Canvas) -> renerLine
    void renderTriangle(android.graphics.Canvas) -> renderTriangle
    void renderCircle(android.graphics.Canvas) -> renderCircle
    void render(android.graphics.Canvas) -> render
    int[] $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PointerStyle() -> $SWITCH_TABLE$org$xclcharts$renderer$XEnum$PointerStyle
org.xclcharts.view.ChartView -> org.xclcharts.view.ChartView:
    org.xclcharts.event.touch.ChartTouch[] mChartTouch -> mChartTouch
    void render(android.graphics.Canvas) -> render
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    java.util.List bindChart() -> bindChart
    int getTouchCharts() -> getTouchCharts
    boolean touchChart(android.view.MotionEvent) -> touchChart
org.xclcharts.view.GraphicalView -> org.xclcharts.view.GraphicalView:
    java.lang.String TAG -> TAG
    void initChartView() -> initChartView
    void refreshChart() -> refreshChart
    void render(android.graphics.Canvas) -> render
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onMeasure(int,int) -> onMeasure
    int measureWidth(int) -> measureWidth
    int measureHeight(int) -> measureHeight
    void disableHardwareAccelerated() -> disableHardwareAccelerated
