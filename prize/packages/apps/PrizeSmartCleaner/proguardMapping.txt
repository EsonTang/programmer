com.prize.smartcleaner.PrizeClearSystemService$1 -> com.prize.smartcleaner.p:
    com.prize.smartcleaner.PrizeClearSystemService this$0 -> cp
    void <init>(com.prize.smartcleaner.PrizeClearSystemService) -> <init>
    void run() -> run
com.prize.smartcleaner.utils.PrizeClearUtil -> com.prize.smartcleaner.a.a:
    java.util.List mProcessFilterList -> a
    java.util.List mProcessFilterList_Exp -> b
    java.util.List mPackageFilterList -> c
    java.util.List mPackageFilterList_Exp -> d
    java.util.List mDeepClearProcessList -> e
    java.util.List mDeepClearProcessList_Exp -> f
    java.util.List mLearnClearPkgList -> g
    java.util.List mLearnClearPkgList_Exp -> h
    java.util.List mOnlyKillPkgList -> i
    java.util.List mServiceFilterList -> j
    java.util.List mLocalProcessFilterList -> k
    java.util.List mServiceFilterList_Exp -> l
    boolean mIsAutoClearRunning -> m
    boolean mIsMorningCleanning -> n
    boolean mIsScreenOffCleanning -> o
    java.util.List mRedundentList -> p
    java.util.List mRemoveTaskFilterPkgList -> q
    java.util.List mRemoveTaskFilterPkgList_Exp -> r
    java.util.List mRestartPkgPro -> s
    java.util.List mRestartPkgPro_Exp -> t
    boolean mServiceRunning -> u
    void setMorningClearAlarm(android.content.Context) -> a
    boolean isManuClearTrashing(android.content.Context) -> b
    void sendBroadcastForTrashClean(android.content.Context,int) -> c
    boolean isServiceRunning() -> d
    void forceStopSelf(android.content.Context) -> e
    long getAvailMem() -> f
    void sendBroadcastFinishRemoveTask(android.content.Context) -> g
    long getThreshClearPersist(android.content.Context) -> h
    java.lang.String getTopActivityPackageName(android.app.ActivityManager) -> i
    java.util.ArrayList getLauncherList(android.content.Context) -> j
    java.util.ArrayList getKeyguard(android.content.Context) -> k
    java.util.ArrayList getDefInputMethodList(android.content.Context) -> l
    java.util.ArrayList getWallpaperInfo(android.content.Context) -> m
    java.util.ArrayList getForceStopFilterPkgList(android.content.Context) -> n
    java.util.ArrayList getLockedAppsList(android.content.Context) -> o
    boolean isPhoneInCall(android.content.Context) -> p
    boolean isRedundent(java.lang.String) -> q
    java.util.ArrayList getOrphanUidList(android.content.Context,java.util.ArrayList) -> r
    void killProcess(int,java.lang.String) -> s
    java.util.ArrayList getImportantProviderPkg(android.content.Context,java.lang.String) -> t
    java.lang.String getProcessName(android.content.Context,java.lang.String) -> u
    java.util.ArrayList getRunningAppProcesses(android.content.Context) -> v
    boolean isSystemApp(android.content.Context,java.lang.String) -> w
    boolean isSystemProviderPackage(android.content.Context,java.lang.String) -> x
    boolean isTrimMemoring(android.content.Context) -> y
    void setClearRunningAppServiceRunning(boolean) -> z
    java.lang.String formatCount(int) -> aa
    void <init>() -> <init>
    void cleanProcessPkgs(android.content.Context,android.app.ActivityManager$RunningAppProcessInfo) -> ab
    java.util.ArrayList getActiveAudioPackage(android.content.Context) -> ac
    int[] getActiveAudioPids(android.content.Context) -> ad
    java.util.ArrayList getActivityServicesList(java.lang.String) -> ae
    long getAvailMem(android.content.Context) -> af
    java.lang.String getDefaultInputMethod(android.content.Context) -> ag
    java.util.ArrayList getInUseLocationPkgList(android.content.Context) -> ah
    java.util.ArrayList getInfoFromXmlPullParser(java.io.File) -> ai
    android.content.Intent getIntent(android.content.Context,android.content.Intent) -> aj
    java.util.ArrayList getListFromXml(java.io.File,java.lang.String) -> ak
    java.util.ArrayList getLockedAppListFromFile() -> al
    java.util.ArrayList getLockedAppsPkgList(android.content.Context) -> am
    java.lang.String getLockedPkgName(java.lang.String) -> an
    int getMorningClearRandomHour(android.content.Context) -> ao
    int getMorningClearRandomMin(android.content.Context) -> ap
    long getNextDayTime(long,long) -> aq
    long getNextDayTime(java.util.Calendar,long,long) -> ar
    java.util.ArrayList getPerceptiblePkg(android.content.Context) -> as
    java.util.ArrayList getRecentTasks(android.content.Context) -> at
    java.util.ArrayList getRedundentList() -> au
    java.util.ArrayList getRemoveTaskFilterPkgList(android.content.Context) -> av
    java.util.ArrayList getRestartPkgList(android.content.Context) -> aw
    java.util.ArrayList getRestartPkgProList(android.content.Context) -> ax
    java.util.ArrayList getRmTaskFilterPkgList(android.content.Context) -> ay
    java.util.ArrayList getUsageStats(android.content.Context) -> az
    com.prize.smartcleaner.bean.UserIdPkg getUserIdInfo(java.lang.String) -> ba
    boolean isAutoClearRunning() -> bb
    boolean isInFilterList(java.util.List,java.lang.String[]) -> bc
    boolean isMorningCleanning() -> bd
    boolean isMorningClearTrashing(android.content.Context) -> be
    boolean isOrphan(java.lang.String,java.util.ArrayList) -> bf
    boolean isScreenOn(android.content.Context) -> bg
    boolean isTopPkgInRunningPkgList(java.lang.String[],java.lang.String) -> bh
    boolean isUserAMonkey() -> bi
    boolean restartTencentSwitch(android.content.Context) -> bj
    void setAutoClearFlag(boolean) -> bk
    void setMorningClearFlag(boolean) -> bl
    void setScreenOffClearFlag(boolean) -> bm
    void <clinit>() -> <clinit>
com.prize.smartcleaner.R$id -> com.prize.smartcleaner.R$id:
    int action_settings -> action_settings
    void <init>() -> <init>
com.prize.smartcleaner.PrizeClearProcessManager -> com.prize.smartcleaner.j:
    boolean mCameraRunning -> bm
    java.util.ArrayList mCleanedProcessList -> bn
    com.prize.smartcleaner.PrizeClearProcessManager mClearProcessManager -> bo
    com.prize.smartcleaner.PrizeClearProcessManager$ClearProcessThread mClearProcessThread -> bp
    android.content.Context mContext -> bq
    android.app.PendingIntent mPendingIntent -> br
    java.util.ArrayList mPendingPersistentInfos -> bs
    com.prize.smartcleaner.PrizeClearProcessManager$PrizeStorageEventListener mStorageEventListener -> bt
    android.os.storage.StorageManager mStorageMgr -> bu
    java.lang.String mStorageNewState -> bv
    java.lang.String mStorageOldState -> bw
    void <init>() -> <init>
    void addProcessToCleanedList(android.app.ActivityManager$RunningAppProcessInfo) -> dz
    void clear() -> ea
    void clearProcessDelay() -> eb
    void finishCleanProcess(int) -> ec
    com.prize.smartcleaner.PrizeClearProcessManager getInstance() -> ed
    void init(android.content.Context) -> ee
    boolean isInCleanedList(android.app.ActivityManager$RunningAppProcessInfo) -> ef
    boolean isInTimeRange() -> eg
    boolean isPersistentProcess(android.app.ActivityManager$RunningAppProcessInfo) -> eh
    void prepareToKillProcess() -> ei
    void startClearProcess() -> ej
    void unregisterListener() -> ek
    void <clinit>() -> <clinit>
    boolean -get0(com.prize.smartcleaner.PrizeClearProcessManager) -> el
    java.util.ArrayList -get1(com.prize.smartcleaner.PrizeClearProcessManager) -> em
    boolean -set0(com.prize.smartcleaner.PrizeClearProcessManager,boolean) -> en
    java.lang.String -set1(java.lang.String) -> eo
    java.lang.String -set2(java.lang.String) -> ep
    boolean -wrap0(com.prize.smartcleaner.PrizeClearProcessManager,android.app.ActivityManager$RunningAppProcessInfo) -> eq
    boolean -wrap1(com.prize.smartcleaner.PrizeClearProcessManager,android.app.ActivityManager$RunningAppProcessInfo) -> er
    void -wrap2(com.prize.smartcleaner.PrizeClearProcessManager,android.app.ActivityManager$RunningAppProcessInfo) -> es
    void -wrap3(com.prize.smartcleaner.PrizeClearProcessManager) -> et
    void -wrap4(com.prize.smartcleaner.PrizeClearProcessManager,int) -> eu
com.prize.smartcleaner.R$style -> com.prize.smartcleaner.R$style:
    int AppBaseTheme -> AppBaseTheme
    int AppTheme -> AppTheme
    void <init>() -> <init>
com.prize.smartcleaner.PrizeClearRunningManager$PrizeClearHandler -> com.prize.smartcleaner.f:
    com.prize.smartcleaner.PrizeClearRunningManager this$0 -> bj
    void <init>(com.prize.smartcleaner.PrizeClearRunningManager) -> <init>
    void handleMessage(android.os.Message) -> handleMessage
com.prize.smartcleaner.BootCompleteReceiver -> com.prize.smartcleaner.BootCompleteReceiver:
    android.content.Context mContext -> v
    void <init>() -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void startClearSystemService() -> br
    android.content.Context -get0(com.prize.smartcleaner.BootCompleteReceiver) -> bs
com.prize.smartcleaner.BootCompleteReceiver$initFilterDataRunnable -> com.prize.smartcleaner.a:
    com.prize.smartcleaner.BootCompleteReceiver this$0 -> w
    void <init>(com.prize.smartcleaner.BootCompleteReceiver) -> <init>
    void run() -> run
com.prize.smartcleaner.PrizeAutoClearService$LaunchCountComparator -> com.prize.smartcleaner.m:
    com.prize.smartcleaner.PrizeAutoClearService this$0 -> cg
    void <init>(com.prize.smartcleaner.PrizeAutoClearService) -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
    int compareByLaunchCount(android.app.usage.UsageStats,android.app.usage.UsageStats) -> fd
com.prize.smartcleaner.TrafficUtil -> com.prize.smartcleaner.i:
    void <init>() -> <init>
    android.net.NetworkStats getNetworkStatsInfo(android.content.Context,int) -> dw
    java.util.ArrayList getUseNetPackages(android.content.Context,android.net.NetworkStats,android.net.NetworkStats,int) -> dx
    java.util.ArrayList getUsingNetPackages(android.content.Context) -> dy
com.prize.smartcleaner.PrizeClearProcessManager$ClearProcessThread -> com.prize.smartcleaner.k:
    android.app.ActivityManager mActMgr -> bx
    com.prize.smartcleaner.PrizeClearProcessManager mClearProcessManager -> by
    android.content.Context mContext -> bz
    com.prize.smartcleaner.PrizeClearProcessManager this$0 -> ca
    void <init>(com.prize.smartcleaner.PrizeClearProcessManager,android.content.Context,com.prize.smartcleaner.PrizeClearProcessManager) -> <init>
    void run() -> run
com.prize.smartcleaner.bean.ServiceInfo -> com.prize.smartcleaner.bean.ServiceInfo:
    int killType -> killType
    java.lang.String pkg -> pkg
    java.util.ArrayList serviceList -> serviceList
    void <init>(java.lang.String,java.util.ArrayList,int) -> <init>
com.prize.smartcleaner.PrizeClearFilterManager -> com.prize.smartcleaner.c:
    boolean isExp -> x
    com.prize.smartcleaner.PrizeClearFilterManager mClearFilterMgr -> y
    java.util.ArrayList mServiceList -> z
    com.prize.smartcleaner.PrizeClearFilterManager getInstance() -> bt
    void initSysClearAppFilterList(android.content.Context) -> bu
    void <init>() -> <init>
    void editSharedPreferences(android.content.Context,java.util.ArrayList,java.lang.String,int) -> bv
    java.util.ArrayList getFilterList(int) -> bw
    java.util.ArrayList getFilterListFromSP(android.content.Context,int) -> bx
    android.content.SharedPreferences getFilterListSP(android.content.Context,int) -> by
    int getKillType(android.content.Context,java.lang.String,java.lang.String,boolean) -> bz
    java.util.ArrayList getLocalServiceList(android.content.Context) -> ca
    void initPreference(android.content.Context,com.prize.smartcleaner.PrizeClearFilterManager$FilterList) -> cb
    boolean isFilterService(android.content.Context,java.lang.String) -> cc
    void <clinit>() -> <clinit>
com.prize.smartcleaner.bean.UserIdPkg -> com.prize.smartcleaner.bean.UserIdPkg:
    java.lang.String pkgName -> pkgName
    int uid -> uid
    int userId -> userId
    void <init>(int,int,java.lang.String) -> <init>
    boolean equals(java.lang.Object) -> equals
com.prize.smartcleaner.R$menu -> com.prize.smartcleaner.R$menu:
    int main -> main
    void <init>() -> <init>
com.prize.smartcleaner.R$drawable -> com.prize.smartcleaner.R$drawable:
    int ic_launcher -> ic_launcher
    void <init>() -> <init>
com.prize.smartcleaner.MyFileFilter -> com.prize.smartcleaner.b:
    void <init>() -> <init>
    boolean accept(java.io.File) -> accept
com.prize.smartcleaner.PrizeAutoClearService -> com.prize.smartcleaner.PrizeAutoClearService:
    int MAX_SAVE_RECENT_NUM -> cc
    android.content.Context mContext -> cd
    java.util.ArrayList mFilterAppList -> ce
    android.os.PowerManager mPowerMgr -> cf
    void <init>() -> <init>
    java.util.ArrayList filterComparatorAlgorithm(java.util.ArrayList,java.util.ArrayList) -> ev
    java.util.ArrayList getFilterAppList() -> ew
    java.util.ArrayList getRecentTaskSortList(java.util.ArrayList) -> ex
    java.util.ArrayList getUsageStatsList(java.util.ArrayList) -> ey
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    int -get0(com.prize.smartcleaner.PrizeAutoClearService) -> ez
    android.content.Context -get1(com.prize.smartcleaner.PrizeAutoClearService) -> fa
    java.util.ArrayList -get2(com.prize.smartcleaner.PrizeAutoClearService) -> fb
    java.util.ArrayList -set0(com.prize.smartcleaner.PrizeAutoClearService,java.util.ArrayList) -> fc
com.prize.smartcleaner.R$string -> com.prize.smartcleaner.R$string:
    int mounting_internal_storage -> mounting_internal_storage
    int memery_clean_result -> memery_clean_result
    int memery_clean_empty_result -> memery_clean_empty_result
    int memery_clean_data_empty_result -> memery_clean_data_empty_result
    int memery_clean_result_notify_reboot -> memery_clean_result_notify_reboot
    int action_settings -> action_settings
    int app_name -> app_name
    int hello_world -> hello_world
    void <init>() -> <init>
com.prize.smartcleaner.PrizeAutoClearService$AutoClearRunnable -> com.prize.smartcleaner.o:
    com.prize.smartcleaner.PrizeAutoClearService this$0 -> ci
    void <init>(com.prize.smartcleaner.PrizeAutoClearService) -> <init>
    void run() -> run
com.prize.smartcleaner.PrizeClearRunningManager -> com.prize.smartcleaner.e:
    android.os.Handler H -> aj
    android.app.ActivityManager mActivityMgr -> ak
    boolean mCameraRunning -> al
    boolean mCleanRunning -> am
    boolean mCleanTrash -> an
    boolean mClearFront -> ao
    boolean mClearLock -> ap
    com.prize.smartcleaner.PrizeClearRunningManager mClearRunningManager -> aq
    boolean mClearSystem -> ar
    boolean mClearTask -> as
    boolean mClearThreadRunning -> at
    android.content.Context mContext -> au
    java.util.ArrayList mFilterApplist -> av
    boolean mHasForcetrim -> aw
    boolean mHasTrashclean -> ax
    boolean mIsLearningClearing -> ay
    java.lang.String mKillAppFilterActivityName -> az
    android.content.pm.PackageManager mPackageMgr -> ba
    android.os.storage.StorageEventListener mPrizeStorageEventListener -> bb
    boolean mScreenOnLowMemClear -> bc
    boolean mShowCleanFinishToast -> bd
    boolean mShowRebootToast -> be
    android.os.storage.StorageManager mStorageMgr -> bf
    java.lang.String mStorageNewState -> bg
    java.lang.String mStorageOldState -> bh
    com.prize.smartcleaner.bean.UserIdPkg mUserIdPkg -> bi
    void <init>() -> <init>
    void clearAllRunningFinish() -> cd
    void forceStopPackageAsUser(java.lang.String,int) -> ce
    com.prize.smartcleaner.PrizeClearRunningManager getInstance() -> cf
    java.util.ArrayList getPersistendIdList() -> cg
    java.util.ArrayList getRecentTaskList() -> ch
    java.lang.String getTopPackageName() -> ci
    void initDataFromBundle(android.content.Context,android.os.Bundle,com.prize.smartcleaner.bean.UserIdPkg,java.util.ArrayList) -> cj
    void sendResultToastMsg(int,long) -> ck
    void sendStartClearMsg() -> cl
    void showCleanResultToast(int,long) -> cm
    void showMountingToast() -> cn
    void unregisterStorageEventListener() -> co
    void <clinit>() -> <clinit>
    android.os.Handler -get0(com.prize.smartcleaner.PrizeClearRunningManager) -> cp
    android.app.ActivityManager -get1(com.prize.smartcleaner.PrizeClearRunningManager) -> cq
    boolean -get2(com.prize.smartcleaner.PrizeClearRunningManager) -> cr
    boolean -get3(com.prize.smartcleaner.PrizeClearRunningManager) -> cs
    boolean -get4(com.prize.smartcleaner.PrizeClearRunningManager) -> ct
    boolean -get5(com.prize.smartcleaner.PrizeClearRunningManager) -> cu
    boolean -get6(com.prize.smartcleaner.PrizeClearRunningManager) -> cv
    boolean -get7(com.prize.smartcleaner.PrizeClearRunningManager) -> cw
    android.content.Context -get8(com.prize.smartcleaner.PrizeClearRunningManager) -> cx
    java.util.ArrayList -get9(com.prize.smartcleaner.PrizeClearRunningManager) -> cy
    boolean -get10(com.prize.smartcleaner.PrizeClearRunningManager) -> cz
    boolean -get11(com.prize.smartcleaner.PrizeClearRunningManager) -> da
    boolean -get12(com.prize.smartcleaner.PrizeClearRunningManager) -> db
    java.lang.String -get13(com.prize.smartcleaner.PrizeClearRunningManager) -> dc
    android.content.pm.PackageManager -get14(com.prize.smartcleaner.PrizeClearRunningManager) -> dd
    boolean -get15(com.prize.smartcleaner.PrizeClearRunningManager) -> de
    boolean -get16(com.prize.smartcleaner.PrizeClearRunningManager) -> df
    java.lang.String -get17() -> dg
    java.lang.String -get18() -> dh
    com.prize.smartcleaner.bean.UserIdPkg -get19(com.prize.smartcleaner.PrizeClearRunningManager) -> di
    boolean -set0(com.prize.smartcleaner.PrizeClearRunningManager,boolean) -> dj
    boolean -set1(com.prize.smartcleaner.PrizeClearRunningManager,boolean) -> dk
    boolean -set2(com.prize.smartcleaner.PrizeClearRunningManager,boolean) -> dl
    java.lang.String -set3(java.lang.String) -> dm
    java.lang.String -set4(java.lang.String) -> dn
    java.lang.String -wrap0(com.prize.smartcleaner.PrizeClearRunningManager) -> do
    java.util.ArrayList -wrap1(com.prize.smartcleaner.PrizeClearRunningManager) -> dp
    java.util.ArrayList -wrap2(com.prize.smartcleaner.PrizeClearRunningManager) -> dq
    void -wrap3(com.prize.smartcleaner.PrizeClearRunningManager) -> dr
    void -wrap4(com.prize.smartcleaner.PrizeClearRunningManager,java.lang.String,int) -> ds
    void -wrap5(com.prize.smartcleaner.PrizeClearRunningManager,int,long) -> dt
    void -wrap6(com.prize.smartcleaner.PrizeClearRunningManager,int,long) -> du
    void -wrap7(com.prize.smartcleaner.PrizeClearRunningManager) -> dv
com.prize.smartcleaner.R$dimen -> com.prize.smartcleaner.R$dimen:
    int activity_horizontal_margin -> activity_horizontal_margin
    int activity_vertical_margin -> activity_vertical_margin
    void <init>() -> <init>
com.prize.smartcleaner.PrizeClearFilterManager$FilterList -> com.prize.smartcleaner.d:
    java.util.ArrayList deepClearProcessList -> aa
    java.util.ArrayList filterProcessList -> ab
    java.util.ArrayList learnClearPkgList -> ac
    java.util.ArrayList onlyKillPkgList -> ad
    java.util.ArrayList packageFilterList -> ae
    java.util.ArrayList processFilterList -> af
    java.util.ArrayList regionPackagesListExp -> ag
    java.util.ArrayList regionProcessListExp -> ah
    com.prize.smartcleaner.PrizeClearFilterManager this$0 -> ai
    void <init>(com.prize.smartcleaner.PrizeClearFilterManager) -> <init>
com.prize.smartcleaner.PrizeClearSystemService -> com.prize.smartcleaner.PrizeClearSystemService:
    boolean mSupportMorningClean -> cj
    com.prize.smartcleaner.PrizeClearProcessManager mClearProcessMgr -> ck
    com.prize.smartcleaner.PrizeClearRunningManager mClearRunningMgr -> cl
    android.content.Context mContext -> cm
    android.os.PowerManager mPowerMgr -> cn
    boolean mSupportScreenOffClean -> co
    void <init>() -> <init>
    void init() -> ff
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void <clinit>() -> <clinit>
    android.content.Context -get0(com.prize.smartcleaner.PrizeClearSystemService) -> fg
com.prize.smartcleaner.PrizeClearRunningManager$ClearRunningThread -> com.prize.smartcleaner.g:
    com.prize.smartcleaner.PrizeClearRunningManager this$0 -> bk
    void <init>(com.prize.smartcleaner.PrizeClearRunningManager) -> <init>
    void run() -> run
com.prize.smartcleaner.PrizeClearRunningManager$PrizeStorageEventListener -> com.prize.smartcleaner.h:
    com.prize.smartcleaner.PrizeClearRunningManager this$0 -> bl
    void <init>(com.prize.smartcleaner.PrizeClearRunningManager) -> <init>
    void onStorageStateChanged(java.lang.String,java.lang.String,java.lang.String) -> onStorageStateChanged
com.prize.smartcleaner.PrizeAutoClearService$AddSortComparator -> com.prize.smartcleaner.n:
    com.prize.smartcleaner.PrizeAutoClearService this$0 -> ch
    void <init>(com.prize.smartcleaner.PrizeAutoClearService) -> <init>
    int compare(java.lang.Object,java.lang.Object) -> compare
    int compareByAddSort(java.util.HashMap,java.util.HashMap) -> fe
com.prize.smartcleaner.PrizeClearProcessManager$PrizeStorageEventListener -> com.prize.smartcleaner.l:
    com.prize.smartcleaner.PrizeClearProcessManager this$0 -> cb
    void <init>(com.prize.smartcleaner.PrizeClearProcessManager) -> <init>
    void onStorageStateChanged(java.lang.String,java.lang.String,java.lang.String) -> onStorageStateChanged
com.prize.smartcleaner.R$attr -> com.prize.smartcleaner.R$attr:
    void <init>() -> <init>
com.prize.smartcleaner.utils.LogUtils -> com.prize.smartcleaner.a.b:
    void d(java.lang.String,java.lang.String) -> bn
    void w(java.lang.String,java.lang.String) -> bo
    void e(java.lang.String,java.lang.String) -> bp
    void i(java.lang.String,java.lang.String) -> bq
    void <init>() -> <init>
